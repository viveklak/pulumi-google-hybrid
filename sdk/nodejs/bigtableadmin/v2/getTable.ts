// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets metadata information about the specified table.
 */
export function getTable(args: GetTableArgs, opts?: pulumi.InvokeOptions): Promise<GetTableResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:bigtableadmin/v2:getTable", {
        "instanceId": args.instanceId,
        "project": args.project,
        "tableId": args.tableId,
        "view": args.view,
    }, opts);
}

export interface GetTableArgs {
    instanceId: string;
    project?: string;
    tableId: string;
    view?: string;
}

export interface GetTableResult {
    /**
     * Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
     */
    readonly clusterStates: {[key: string]: string};
    /**
     * The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`
     */
    readonly columnFamilies: {[key: string]: string};
    /**
     * Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
     */
    readonly granularity: string;
    /**
     * The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`
     */
    readonly name: string;
    /**
     * If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore.
     */
    readonly restoreInfo: outputs.bigtableadmin.v2.RestoreInfoResponse;
}

export function getTableOutput(args: GetTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTableResult> {
    return pulumi.output(args).apply(a => getTable(a, opts))
}

export interface GetTableOutputArgs {
    instanceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    tableId: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}
