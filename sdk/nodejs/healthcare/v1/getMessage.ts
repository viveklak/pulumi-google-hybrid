// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets an HL7v2 message.
 */
export function getMessage(args: GetMessageArgs, opts?: pulumi.InvokeOptions): Promise<GetMessageResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:healthcare/v1:getMessage", {
        "datasetId": args.datasetId,
        "hl7V2StoreId": args.hl7V2StoreId,
        "location": args.location,
        "messageId": args.messageId,
        "project": args.project,
        "view": args.view,
    }, opts);
}

export interface GetMessageArgs {
    datasetId: string;
    hl7V2StoreId: string;
    location: string;
    messageId: string;
    project?: string;
    view?: string;
}

export interface GetMessageResult {
    /**
     * The datetime when the message was created. Set by the server.
     */
    readonly createTime: string;
    /**
     * Raw message bytes.
     */
    readonly data: string;
    /**
     * User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
     */
    readonly labels: {[key: string]: string};
    /**
     * The message type for this message. MSH-9.1.
     */
    readonly messageType: string;
    /**
     * Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
     */
    readonly name: string;
    /**
     * The parsed version of the raw message data.
     */
    readonly parsedData: outputs.healthcare.v1.ParsedDataResponse;
    /**
     * All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
     */
    readonly patientIds: outputs.healthcare.v1.PatientIdResponse[];
    /**
     * The parsed version of the raw message data schematized according to this store's schemas and type definitions.
     */
    readonly schematizedData: outputs.healthcare.v1.SchematizedDataResponse;
    /**
     * The hospital that this message came from. MSH-4.
     */
    readonly sendFacility: string;
    /**
     * The datetime the sending application sent this message. MSH-7.
     */
    readonly sendTime: string;
}

export function getMessageOutput(args: GetMessageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMessageResult> {
    return pulumi.output(args).apply(a => getMessage(a, opts))
}

export interface GetMessageOutputArgs {
    datasetId: pulumi.Input<string>;
    hl7V2StoreId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    messageId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}
