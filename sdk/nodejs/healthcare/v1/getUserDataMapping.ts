// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets the specified User data mapping.
 */
export function getUserDataMapping(args: GetUserDataMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetUserDataMappingResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:healthcare/v1:getUserDataMapping", {
        "consentStoreId": args.consentStoreId,
        "datasetId": args.datasetId,
        "location": args.location,
        "project": args.project,
        "userDataMappingId": args.userDataMappingId,
    }, opts);
}

export interface GetUserDataMappingArgs {
    consentStoreId: string;
    datasetId: string;
    location: string;
    project?: string;
    userDataMappingId: string;
}

export interface GetUserDataMappingResult {
    /**
     * Indicates the time when this mapping was archived.
     */
    readonly archiveTime: string;
    /**
     * Indicates whether this mapping is archived.
     */
    readonly archived: boolean;
    /**
     * A unique identifier for the mapped resource.
     */
    readonly dataId: string;
    /**
     * Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.
     */
    readonly name: string;
    /**
     * Attributes of the resource. Only explicitly set attributes are displayed here. Attribute definitions with defaults set implicitly apply to these User data mappings. Attributes listed here must be single valued, that is, exactly one value is specified for the field "values" in each Attribute.
     */
    readonly resourceAttributes: outputs.healthcare.v1.AttributeResponse[];
    /**
     * User's UUID provided by the client.
     */
    readonly userId: string;
}

export function getUserDataMappingOutput(args: GetUserDataMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserDataMappingResult> {
    return pulumi.output(args).apply(a => getUserDataMapping(a, opts))
}

export interface GetUserDataMappingOutputArgs {
    consentStoreId: pulumi.Input<string>;
    datasetId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    userDataMappingId: pulumi.Input<string>;
}
