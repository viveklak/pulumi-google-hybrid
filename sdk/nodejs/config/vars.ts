// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("google-hybrid");

/**
 * Additional user-agent string to append to the default one (<prod_name>/<ver>).
 */
export declare const appendUserAgent: string | undefined;
Object.defineProperty(exports, "appendUserAgent", {
    get() {
        return __config.get("appendUserAgent");
    },
    enumerable: true,
});

/**
 * This will disable the Pulumi Partner Name which is used if a custom `partnerName` isn't specified.
 */
export declare const disablePartnerName: boolean | undefined;
Object.defineProperty(exports, "disablePartnerName", {
    get() {
        return __config.getObject<boolean>("disablePartnerName");
    },
    enumerable: true,
});

/**
 * A Google Partner Name to facilitate partner resource usage attribution.
 */
export declare const partnerName: string | undefined;
Object.defineProperty(exports, "partnerName", {
    get() {
        return __config.get("partnerName");
    },
    enumerable: true,
});

/**
 * The default project to manage resources in. If another project is specified on a resource, it will take precedence.
 */
export declare const project: string | undefined;
Object.defineProperty(exports, "project", {
    get() {
        return __config.get("project");
    },
    enumerable: true,
});

/**
 * The default region to manage resources in. If another region is specified on a regional resource, it will take precedence.
 */
export declare const region: string | undefined;
Object.defineProperty(exports, "region", {
    get() {
        return __config.get("region");
    },
    enumerable: true,
});

/**
 * The default zone to manage resources in. Generally, this zone should be within the default region you specified. If another zone is specified on a zonal resource, it will take precedence.
 */
export declare const zone: string | undefined;
Object.defineProperty(exports, "zone", {
    get() {
        return __config.get("zone");
    },
    enumerable: true,
});

