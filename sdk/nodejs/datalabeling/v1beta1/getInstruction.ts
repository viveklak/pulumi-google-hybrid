// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets an instruction by resource name.
 */
export function getInstruction(args: GetInstructionArgs, opts?: pulumi.InvokeOptions): Promise<GetInstructionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:datalabeling/v1beta1:getInstruction", {
        "instructionId": args.instructionId,
        "project": args.project,
    }, opts);
}

export interface GetInstructionArgs {
    instructionId: string;
    project?: string;
}

export interface GetInstructionResult {
    /**
     * The names of any related resources that are blocking changes to the instruction.
     */
    readonly blockingResources: string[];
    /**
     * Creation time of instruction.
     */
    readonly createTime: string;
    /**
     * Deprecated: this instruction format is not supported any more. Instruction from a CSV file, such as for classification task. The CSV file should have exact two columns, in the following format: * The first column is labeled data, such as an image reference, text. * The second column is comma separated labels associated with data.
     *
     * @deprecated Deprecated: this instruction format is not supported any more. Instruction from a CSV file, such as for classification task. The CSV file should have exact two columns, in the following format: * The first column is labeled data, such as an image reference, text. * The second column is comma separated labels associated with data.
     */
    readonly csvInstruction: outputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1CsvInstructionResponse;
    /**
     * The data type of this instruction.
     */
    readonly dataType: string;
    /**
     * Optional. User-provided description of the instruction. The description can be up to 10000 characters long.
     */
    readonly description: string;
    /**
     * The display name of the instruction. Maximum of 64 characters.
     */
    readonly displayName: string;
    /**
     * Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}
     */
    readonly name: string;
    /**
     * Instruction from a PDF document. The PDF should be in a Cloud Storage bucket.
     */
    readonly pdfInstruction: outputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1PdfInstructionResponse;
    /**
     * Last update time of instruction.
     */
    readonly updateTime: string;
}

export function getInstructionOutput(args: GetInstructionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstructionResult> {
    return pulumi.output(args).apply(a => getInstruction(a, opts))
}

export interface GetInstructionOutputArgs {
    instructionId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
