// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates an annotation spec set by providing a set of labels.
 * Auto-naming is currently not supported for this resource.
 */
export class AnnotationSpecSet extends pulumi.CustomResource {
    /**
     * Get an existing AnnotationSpecSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AnnotationSpecSet {
        return new AnnotationSpecSet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:datalabeling/v1beta1:AnnotationSpecSet';

    /**
     * Returns true if the given object is an instance of AnnotationSpecSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnnotationSpecSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnnotationSpecSet.__pulumiType;
    }

    /**
     * The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
     */
    public readonly annotationSpecs!: pulumi.Output<outputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1AnnotationSpecResponse[]>;
    /**
     * The names of any related resources that are blocking changes to the annotation spec set.
     */
    public /*out*/ readonly blockingResources!: pulumi.Output<string[]>;
    /**
     * Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The AnnotationSpecSet resource name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
     */
    public /*out*/ readonly name!: pulumi.Output<string>;

    /**
     * Create a AnnotationSpecSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnnotationSpecSetArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.annotationSpecs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'annotationSpecs'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["annotationSpecs"] = args ? args.annotationSpecs : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["blockingResources"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        } else {
            resourceInputs["annotationSpecs"] = undefined /*out*/;
            resourceInputs["blockingResources"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AnnotationSpecSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AnnotationSpecSet resource.
 */
export interface AnnotationSpecSetArgs {
    /**
     * The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
     */
    annotationSpecs: pulumi.Input<pulumi.Input<inputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1AnnotationSpecArgs>[]>;
    /**
     * Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
     */
    displayName: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
