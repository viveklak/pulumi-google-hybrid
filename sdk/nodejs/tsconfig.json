{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accesscontextmanager/index.ts",
        "accesscontextmanager/v1/accessLevel.ts",
        "accesscontextmanager/v1/accessPolicy.ts",
        "accesscontextmanager/v1/accessPolicyIamPolicy.ts",
        "accesscontextmanager/v1/gcpUserAccessBinding.ts",
        "accesscontextmanager/v1/getAccessLevel.ts",
        "accesscontextmanager/v1/getAccessPolicy.ts",
        "accesscontextmanager/v1/getAccessPolicyIamPolicy.ts",
        "accesscontextmanager/v1/getGcpUserAccessBinding.ts",
        "accesscontextmanager/v1/getServicePerimeter.ts",
        "accesscontextmanager/v1/index.ts",
        "accesscontextmanager/v1/servicePerimeter.ts",
        "accesscontextmanager/v1beta/accessLevel.ts",
        "accesscontextmanager/v1beta/accessPolicy.ts",
        "accesscontextmanager/v1beta/getAccessLevel.ts",
        "accesscontextmanager/v1beta/getAccessPolicy.ts",
        "accesscontextmanager/v1beta/getServicePerimeter.ts",
        "accesscontextmanager/v1beta/index.ts",
        "accesscontextmanager/v1beta/servicePerimeter.ts",
        "apigateway/index.ts",
        "apigateway/v1/api.ts",
        "apigateway/v1/apiConfigIamPolicy.ts",
        "apigateway/v1/apiIamPolicy.ts",
        "apigateway/v1/config.ts",
        "apigateway/v1/gateway.ts",
        "apigateway/v1/gatewayIamPolicy.ts",
        "apigateway/v1/getApi.ts",
        "apigateway/v1/getApiConfigIamPolicy.ts",
        "apigateway/v1/getApiIamPolicy.ts",
        "apigateway/v1/getConfig.ts",
        "apigateway/v1/getGateway.ts",
        "apigateway/v1/getGatewayIamPolicy.ts",
        "apigateway/v1/index.ts",
        "apigateway/v1beta/api.ts",
        "apigateway/v1beta/apiConfigIamPolicy.ts",
        "apigateway/v1beta/apiIamPolicy.ts",
        "apigateway/v1beta/config.ts",
        "apigateway/v1beta/gateway.ts",
        "apigateway/v1beta/gatewayIamPolicy.ts",
        "apigateway/v1beta/getApi.ts",
        "apigateway/v1beta/getApiConfigIamPolicy.ts",
        "apigateway/v1beta/getApiIamPolicy.ts",
        "apigateway/v1beta/getConfig.ts",
        "apigateway/v1beta/getGateway.ts",
        "apigateway/v1beta/getGatewayIamPolicy.ts",
        "apigateway/v1beta/index.ts",
        "apigee/index.ts",
        "apigee/v1/alias.ts",
        "apigee/v1/api.ts",
        "apigee/v1/apiProduct.ts",
        "apigee/v1/app.ts",
        "apigee/v1/archiveDeployment.ts",
        "apigee/v1/canaryEvaluation.ts",
        "apigee/v1/dataCollector.ts",
        "apigee/v1/datastore.ts",
        "apigee/v1/debugSession.ts",
        "apigee/v1/developer.ts",
        "apigee/v1/endpointAttachment.ts",
        "apigee/v1/envgroup.ts",
        "apigee/v1/envgroupAttachment.ts",
        "apigee/v1/environment.ts",
        "apigee/v1/export.ts",
        "apigee/v1/getAlias.ts",
        "apigee/v1/getApi.ts",
        "apigee/v1/getApiProduct.ts",
        "apigee/v1/getApicategory.ts",
        "apigee/v1/getApp.ts",
        "apigee/v1/getArchiveDeployment.ts",
        "apigee/v1/getCanaryEvaluation.ts",
        "apigee/v1/getDataCollector.ts",
        "apigee/v1/getDatastore.ts",
        "apigee/v1/getDebugSession.ts",
        "apigee/v1/getDeveloper.ts",
        "apigee/v1/getEndpointAttachment.ts",
        "apigee/v1/getEnvgroup.ts",
        "apigee/v1/getEnvgroupAttachment.ts",
        "apigee/v1/getEnvironment.ts",
        "apigee/v1/getExport.ts",
        "apigee/v1/getHostQuery.ts",
        "apigee/v1/getInstance.ts",
        "apigee/v1/getInstanceAttachment.ts",
        "apigee/v1/getKey.ts",
        "apigee/v1/getKeystore.ts",
        "apigee/v1/getNatAddress.ts",
        "apigee/v1/getOrganization.ts",
        "apigee/v1/getOrganizationEnvironmentIamPolicy.ts",
        "apigee/v1/getOverride.ts",
        "apigee/v1/getQuery.ts",
        "apigee/v1/getRatePlan.ts",
        "apigee/v1/getReference.ts",
        "apigee/v1/getReport.ts",
        "apigee/v1/getResourcefile.ts",
        "apigee/v1/getSharedflow.ts",
        "apigee/v1/getSubscription.ts",
        "apigee/v1/getTargetServer.ts",
        "apigee/v1/hostQuery.ts",
        "apigee/v1/index.ts",
        "apigee/v1/instance.ts",
        "apigee/v1/instanceAttachment.ts",
        "apigee/v1/keystore.ts",
        "apigee/v1/natAddress.ts",
        "apigee/v1/organization.ts",
        "apigee/v1/organizationEnvironmentIamPolicy.ts",
        "apigee/v1/override.ts",
        "apigee/v1/query.ts",
        "apigee/v1/ratePlan.ts",
        "apigee/v1/reference.ts",
        "apigee/v1/report.ts",
        "apigee/v1/resourcefile.ts",
        "apigee/v1/sharedflow.ts",
        "apigee/v1/subscription.ts",
        "apigee/v1/targetServer.ts",
        "apikeys/index.ts",
        "apikeys/v2/getKey.ts",
        "apikeys/v2/index.ts",
        "apikeys/v2/key.ts",
        "appengine/index.ts",
        "appengine/v1/app.ts",
        "appengine/v1/authorizedCertificate.ts",
        "appengine/v1/domainMapping.ts",
        "appengine/v1/getApp.ts",
        "appengine/v1/getAuthorizedCertificate.ts",
        "appengine/v1/getDomainMapping.ts",
        "appengine/v1/getIngressRule.ts",
        "appengine/v1/getVersion.ts",
        "appengine/v1/index.ts",
        "appengine/v1/ingressRule.ts",
        "appengine/v1/version.ts",
        "appengine/v1alpha/authorizedCertificate.ts",
        "appengine/v1alpha/domainMapping.ts",
        "appengine/v1alpha/getAuthorizedCertificate.ts",
        "appengine/v1alpha/getDomainMapping.ts",
        "appengine/v1alpha/index.ts",
        "appengine/v1beta/app.ts",
        "appengine/v1beta/authorizedCertificate.ts",
        "appengine/v1beta/domainMapping.ts",
        "appengine/v1beta/getApp.ts",
        "appengine/v1beta/getAuthorizedCertificate.ts",
        "appengine/v1beta/getDomainMapping.ts",
        "appengine/v1beta/getIngressRule.ts",
        "appengine/v1beta/getVersion.ts",
        "appengine/v1beta/index.ts",
        "appengine/v1beta/ingressRule.ts",
        "appengine/v1beta/version.ts",
        "artifactregistry/index.ts",
        "artifactregistry/v1/getRepository.ts",
        "artifactregistry/v1/getRepositoryIamPolicy.ts",
        "artifactregistry/v1/getTag.ts",
        "artifactregistry/v1/index.ts",
        "artifactregistry/v1/repository.ts",
        "artifactregistry/v1/repositoryIamPolicy.ts",
        "artifactregistry/v1/tag.ts",
        "artifactregistry/v1beta1/getRepository.ts",
        "artifactregistry/v1beta1/getRepositoryIamPolicy.ts",
        "artifactregistry/v1beta1/getTag.ts",
        "artifactregistry/v1beta1/index.ts",
        "artifactregistry/v1beta1/repository.ts",
        "artifactregistry/v1beta1/repositoryIamPolicy.ts",
        "artifactregistry/v1beta1/tag.ts",
        "artifactregistry/v1beta2/getRepository.ts",
        "artifactregistry/v1beta2/getRepositoryIamPolicy.ts",
        "artifactregistry/v1beta2/getTag.ts",
        "artifactregistry/v1beta2/index.ts",
        "artifactregistry/v1beta2/repository.ts",
        "artifactregistry/v1beta2/repositoryIamPolicy.ts",
        "artifactregistry/v1beta2/tag.ts",
        "assuredworkloads/index.ts",
        "assuredworkloads/v1/getWorkload.ts",
        "assuredworkloads/v1/index.ts",
        "assuredworkloads/v1/workload.ts",
        "baremetalsolution/index.ts",
        "baremetalsolution/v2/getProvisioningConfig.ts",
        "baremetalsolution/v2/getSnapshot.ts",
        "baremetalsolution/v2/getSnapshotSchedulePolicy.ts",
        "baremetalsolution/v2/index.ts",
        "baremetalsolution/v2/provisioningConfig.ts",
        "baremetalsolution/v2/snapshot.ts",
        "baremetalsolution/v2/snapshotSchedulePolicy.ts",
        "bigquery/index.ts",
        "bigquery/v2/dataset.ts",
        "bigquery/v2/getDataset.ts",
        "bigquery/v2/getJob.ts",
        "bigquery/v2/getRoutine.ts",
        "bigquery/v2/getRowAccessPolicyIamPolicy.ts",
        "bigquery/v2/getTable.ts",
        "bigquery/v2/getTableIamPolicy.ts",
        "bigquery/v2/index.ts",
        "bigquery/v2/job.ts",
        "bigquery/v2/routine.ts",
        "bigquery/v2/rowAccessPolicyIamPolicy.ts",
        "bigquery/v2/table.ts",
        "bigquery/v2/tableIamPolicy.ts",
        "bigqueryconnection/index.ts",
        "bigqueryconnection/v1beta1/connection.ts",
        "bigqueryconnection/v1beta1/connectionIamPolicy.ts",
        "bigqueryconnection/v1beta1/getConnection.ts",
        "bigqueryconnection/v1beta1/getConnectionIamPolicy.ts",
        "bigqueryconnection/v1beta1/index.ts",
        "bigquerydatatransfer/index.ts",
        "bigquerydatatransfer/v1/getTransferConfig.ts",
        "bigquerydatatransfer/v1/index.ts",
        "bigquerydatatransfer/v1/transferConfig.ts",
        "bigqueryreservation/index.ts",
        "bigqueryreservation/v1/capacityCommitment.ts",
        "bigqueryreservation/v1/getCapacityCommitment.ts",
        "bigqueryreservation/v1/getReservation.ts",
        "bigqueryreservation/v1/index.ts",
        "bigqueryreservation/v1/reservation.ts",
        "bigqueryreservation/v1beta1/capacityCommitment.ts",
        "bigqueryreservation/v1beta1/getCapacityCommitment.ts",
        "bigqueryreservation/v1beta1/getReservation.ts",
        "bigqueryreservation/v1beta1/index.ts",
        "bigqueryreservation/v1beta1/reservation.ts",
        "bigtableadmin/index.ts",
        "bigtableadmin/v2/appProfile.ts",
        "bigtableadmin/v2/backup.ts",
        "bigtableadmin/v2/cluster.ts",
        "bigtableadmin/v2/getAppProfile.ts",
        "bigtableadmin/v2/getBackup.ts",
        "bigtableadmin/v2/getCluster.ts",
        "bigtableadmin/v2/getInstance.ts",
        "bigtableadmin/v2/getInstanceClusterBackupIamPolicy.ts",
        "bigtableadmin/v2/getInstanceIamPolicy.ts",
        "bigtableadmin/v2/getInstanceTableIamPolicy.ts",
        "bigtableadmin/v2/getTable.ts",
        "bigtableadmin/v2/index.ts",
        "bigtableadmin/v2/instance.ts",
        "bigtableadmin/v2/instanceClusterBackupIamPolicy.ts",
        "bigtableadmin/v2/instanceIamPolicy.ts",
        "bigtableadmin/v2/instanceTableIamPolicy.ts",
        "bigtableadmin/v2/table.ts",
        "billingbudgets/index.ts",
        "billingbudgets/v1/budget.ts",
        "billingbudgets/v1/getBudget.ts",
        "billingbudgets/v1/index.ts",
        "billingbudgets/v1beta1/budget.ts",
        "billingbudgets/v1beta1/getBudget.ts",
        "billingbudgets/v1beta1/index.ts",
        "binaryauthorization/index.ts",
        "binaryauthorization/v1/attestor.ts",
        "binaryauthorization/v1/attestorIamPolicy.ts",
        "binaryauthorization/v1/getAttestor.ts",
        "binaryauthorization/v1/getAttestorIamPolicy.ts",
        "binaryauthorization/v1/getPolicyIamPolicy.ts",
        "binaryauthorization/v1/index.ts",
        "binaryauthorization/v1/policyIamPolicy.ts",
        "binaryauthorization/v1beta1/attestor.ts",
        "binaryauthorization/v1beta1/attestorIamPolicy.ts",
        "binaryauthorization/v1beta1/getAttestor.ts",
        "binaryauthorization/v1beta1/getAttestorIamPolicy.ts",
        "binaryauthorization/v1beta1/getPolicyIamPolicy.ts",
        "binaryauthorization/v1beta1/index.ts",
        "binaryauthorization/v1beta1/policyIamPolicy.ts",
        "certificatemanager/index.ts",
        "certificatemanager/v1/certificate.ts",
        "certificatemanager/v1/certificateMap.ts",
        "certificatemanager/v1/certificateMapEntry.ts",
        "certificatemanager/v1/dnsAuthorization.ts",
        "certificatemanager/v1/getCertificate.ts",
        "certificatemanager/v1/getCertificateMap.ts",
        "certificatemanager/v1/getCertificateMapEntry.ts",
        "certificatemanager/v1/getDnsAuthorization.ts",
        "certificatemanager/v1/index.ts",
        "cloudasset/index.ts",
        "cloudasset/v1/feed.ts",
        "cloudasset/v1/getFeed.ts",
        "cloudasset/v1/getSavedQuery.ts",
        "cloudasset/v1/index.ts",
        "cloudasset/v1/savedQuery.ts",
        "cloudbilling/index.ts",
        "cloudbilling/v1/billingAccount.ts",
        "cloudbilling/v1/billingAccountIamPolicy.ts",
        "cloudbilling/v1/getBillingAccount.ts",
        "cloudbilling/v1/getBillingAccountIamPolicy.ts",
        "cloudbilling/v1/index.ts",
        "cloudbuild/index.ts",
        "cloudbuild/v1/bitbucketServerConfig.ts",
        "cloudbuild/v1/build.ts",
        "cloudbuild/v1/getBitbucketServerConfig.ts",
        "cloudbuild/v1/getBuild.ts",
        "cloudbuild/v1/getGithubEnterpriseConfig.ts",
        "cloudbuild/v1/getTrigger.ts",
        "cloudbuild/v1/getWorkerPool.ts",
        "cloudbuild/v1/githubEnterpriseConfig.ts",
        "cloudbuild/v1/index.ts",
        "cloudbuild/v1/trigger.ts",
        "cloudbuild/v1/workerPool.ts",
        "cloudbuild/v1alpha1/getWorkerPool.ts",
        "cloudbuild/v1alpha1/index.ts",
        "cloudbuild/v1alpha1/workerPool.ts",
        "cloudbuild/v1alpha2/getWorkerPool.ts",
        "cloudbuild/v1alpha2/index.ts",
        "cloudbuild/v1alpha2/workerPool.ts",
        "cloudbuild/v1beta1/getWorkerPool.ts",
        "cloudbuild/v1beta1/index.ts",
        "cloudbuild/v1beta1/workerPool.ts",
        "cloudchannel/index.ts",
        "cloudchannel/v1/channelPartnerLink.ts",
        "cloudchannel/v1/customer.ts",
        "cloudchannel/v1/entitlement.ts",
        "cloudchannel/v1/getChannelPartnerLink.ts",
        "cloudchannel/v1/getCustomer.ts",
        "cloudchannel/v1/getEntitlement.ts",
        "cloudchannel/v1/index.ts",
        "clouddeploy/index.ts",
        "clouddeploy/v1/deliveryPipeline.ts",
        "clouddeploy/v1/deliveryPipelineIamPolicy.ts",
        "clouddeploy/v1/getDeliveryPipeline.ts",
        "clouddeploy/v1/getDeliveryPipelineIamPolicy.ts",
        "clouddeploy/v1/getRelease.ts",
        "clouddeploy/v1/getRollout.ts",
        "clouddeploy/v1/getTarget.ts",
        "clouddeploy/v1/getTargetIamPolicy.ts",
        "clouddeploy/v1/index.ts",
        "clouddeploy/v1/release.ts",
        "clouddeploy/v1/rollout.ts",
        "clouddeploy/v1/target.ts",
        "clouddeploy/v1/targetIamPolicy.ts",
        "cloudfunctions/index.ts",
        "cloudfunctions/v1/function.ts",
        "cloudfunctions/v1/functionIamPolicy.ts",
        "cloudfunctions/v1/getFunction.ts",
        "cloudfunctions/v1/getFunctionIamPolicy.ts",
        "cloudfunctions/v1/index.ts",
        "cloudfunctions/v2alpha/function.ts",
        "cloudfunctions/v2alpha/functionIamPolicy.ts",
        "cloudfunctions/v2alpha/getFunction.ts",
        "cloudfunctions/v2alpha/getFunctionIamPolicy.ts",
        "cloudfunctions/v2alpha/index.ts",
        "cloudfunctions/v2beta/function.ts",
        "cloudfunctions/v2beta/functionIamPolicy.ts",
        "cloudfunctions/v2beta/getFunction.ts",
        "cloudfunctions/v2beta/getFunctionIamPolicy.ts",
        "cloudfunctions/v2beta/index.ts",
        "cloudidentity/index.ts",
        "cloudidentity/v1/device.ts",
        "cloudidentity/v1/getDevice.ts",
        "cloudidentity/v1/getGroup.ts",
        "cloudidentity/v1/getMembership.ts",
        "cloudidentity/v1/group.ts",
        "cloudidentity/v1/index.ts",
        "cloudidentity/v1/membership.ts",
        "cloudidentity/v1beta1/device.ts",
        "cloudidentity/v1beta1/getDevice.ts",
        "cloudidentity/v1beta1/getGroup.ts",
        "cloudidentity/v1beta1/getMembership.ts",
        "cloudidentity/v1beta1/group.ts",
        "cloudidentity/v1beta1/index.ts",
        "cloudidentity/v1beta1/membership.ts",
        "cloudiot/index.ts",
        "cloudiot/v1/device.ts",
        "cloudiot/v1/getDevice.ts",
        "cloudiot/v1/getRegistry.ts",
        "cloudiot/v1/getRegistryGroupIamPolicy.ts",
        "cloudiot/v1/getRegistryIamPolicy.ts",
        "cloudiot/v1/index.ts",
        "cloudiot/v1/registry.ts",
        "cloudiot/v1/registryGroupIamPolicy.ts",
        "cloudiot/v1/registryIamPolicy.ts",
        "cloudkms/index.ts",
        "cloudkms/v1/cryptoKey.ts",
        "cloudkms/v1/cryptoKeyVersion.ts",
        "cloudkms/v1/ekmConnection.ts",
        "cloudkms/v1/ekmConnectionIamPolicy.ts",
        "cloudkms/v1/getCryptoKey.ts",
        "cloudkms/v1/getCryptoKeyVersion.ts",
        "cloudkms/v1/getEkmConnection.ts",
        "cloudkms/v1/getEkmConnectionIamPolicy.ts",
        "cloudkms/v1/getImportJob.ts",
        "cloudkms/v1/getKeyRing.ts",
        "cloudkms/v1/getKeyRingCryptoKeyIamPolicy.ts",
        "cloudkms/v1/getKeyRingIamPolicy.ts",
        "cloudkms/v1/getKeyRingImportJobIamPolicy.ts",
        "cloudkms/v1/importJob.ts",
        "cloudkms/v1/index.ts",
        "cloudkms/v1/keyRing.ts",
        "cloudkms/v1/keyRingCryptoKeyIamPolicy.ts",
        "cloudkms/v1/keyRingIamPolicy.ts",
        "cloudkms/v1/keyRingImportJobIamPolicy.ts",
        "cloudresourcemanager/index.ts",
        "cloudresourcemanager/v1/getLien.ts",
        "cloudresourcemanager/v1/getOrganizationIamPolicy.ts",
        "cloudresourcemanager/v1/getProject.ts",
        "cloudresourcemanager/v1/getProjectIamPolicy.ts",
        "cloudresourcemanager/v1/index.ts",
        "cloudresourcemanager/v1/lien.ts",
        "cloudresourcemanager/v1/organizationIamPolicy.ts",
        "cloudresourcemanager/v1/project.ts",
        "cloudresourcemanager/v1/projectIamPolicy.ts",
        "cloudresourcemanager/v1beta1/getOrganizationIamPolicy.ts",
        "cloudresourcemanager/v1beta1/getProject.ts",
        "cloudresourcemanager/v1beta1/getProjectIamPolicy.ts",
        "cloudresourcemanager/v1beta1/index.ts",
        "cloudresourcemanager/v1beta1/organizationIamPolicy.ts",
        "cloudresourcemanager/v1beta1/project.ts",
        "cloudresourcemanager/v1beta1/projectIamPolicy.ts",
        "cloudresourcemanager/v2/folder.ts",
        "cloudresourcemanager/v2/folderIamPolicy.ts",
        "cloudresourcemanager/v2/getFolder.ts",
        "cloudresourcemanager/v2/getFolderIamPolicy.ts",
        "cloudresourcemanager/v2/index.ts",
        "cloudresourcemanager/v2beta1/folder.ts",
        "cloudresourcemanager/v2beta1/folderIamPolicy.ts",
        "cloudresourcemanager/v2beta1/getFolder.ts",
        "cloudresourcemanager/v2beta1/getFolderIamPolicy.ts",
        "cloudresourcemanager/v2beta1/index.ts",
        "cloudresourcemanager/v3/folder.ts",
        "cloudresourcemanager/v3/folderIamPolicy.ts",
        "cloudresourcemanager/v3/getFolder.ts",
        "cloudresourcemanager/v3/getFolderIamPolicy.ts",
        "cloudresourcemanager/v3/getLien.ts",
        "cloudresourcemanager/v3/getOrganizationIamPolicy.ts",
        "cloudresourcemanager/v3/getProject.ts",
        "cloudresourcemanager/v3/getProjectIamPolicy.ts",
        "cloudresourcemanager/v3/getTagKey.ts",
        "cloudresourcemanager/v3/getTagKeyIamPolicy.ts",
        "cloudresourcemanager/v3/getTagValue.ts",
        "cloudresourcemanager/v3/getTagValueIamPolicy.ts",
        "cloudresourcemanager/v3/index.ts",
        "cloudresourcemanager/v3/lien.ts",
        "cloudresourcemanager/v3/organizationIamPolicy.ts",
        "cloudresourcemanager/v3/project.ts",
        "cloudresourcemanager/v3/projectIamPolicy.ts",
        "cloudresourcemanager/v3/tagKey.ts",
        "cloudresourcemanager/v3/tagKeyIamPolicy.ts",
        "cloudresourcemanager/v3/tagValue.ts",
        "cloudresourcemanager/v3/tagValueIamPolicy.ts",
        "cloudscheduler/index.ts",
        "cloudscheduler/v1/getJob.ts",
        "cloudscheduler/v1/index.ts",
        "cloudscheduler/v1/job.ts",
        "cloudscheduler/v1beta1/getJob.ts",
        "cloudscheduler/v1beta1/index.ts",
        "cloudscheduler/v1beta1/job.ts",
        "cloudsearch/index.ts",
        "cloudsearch/v1/dataSource.ts",
        "cloudsearch/v1/getDataSource.ts",
        "cloudsearch/v1/getSearchApplication.ts",
        "cloudsearch/v1/index.ts",
        "cloudsearch/v1/searchApplication.ts",
        "cloudsupport/index.ts",
        "cloudsupport/v2beta/case.ts",
        "cloudsupport/v2beta/getCase.ts",
        "cloudsupport/v2beta/index.ts",
        "cloudtasks/index.ts",
        "cloudtasks/v2/getQueue.ts",
        "cloudtasks/v2/getQueueIamPolicy.ts",
        "cloudtasks/v2/getTask.ts",
        "cloudtasks/v2/index.ts",
        "cloudtasks/v2/queue.ts",
        "cloudtasks/v2/queueIamPolicy.ts",
        "cloudtasks/v2/task.ts",
        "cloudtasks/v2beta2/getQueue.ts",
        "cloudtasks/v2beta2/getQueueIamPolicy.ts",
        "cloudtasks/v2beta2/getTask.ts",
        "cloudtasks/v2beta2/index.ts",
        "cloudtasks/v2beta2/queue.ts",
        "cloudtasks/v2beta2/queueIamPolicy.ts",
        "cloudtasks/v2beta2/task.ts",
        "cloudtasks/v2beta3/getQueue.ts",
        "cloudtasks/v2beta3/getQueueIamPolicy.ts",
        "cloudtasks/v2beta3/getTask.ts",
        "cloudtasks/v2beta3/index.ts",
        "cloudtasks/v2beta3/queue.ts",
        "cloudtasks/v2beta3/queueIamPolicy.ts",
        "cloudtasks/v2beta3/task.ts",
        "cloudtrace/index.ts",
        "cloudtrace/v2beta1/getTraceSink.ts",
        "cloudtrace/v2beta1/index.ts",
        "cloudtrace/v2beta1/traceSink.ts",
        "composer/index.ts",
        "composer/v1/environment.ts",
        "composer/v1/getEnvironment.ts",
        "composer/v1/index.ts",
        "composer/v1beta1/environment.ts",
        "composer/v1beta1/getEnvironment.ts",
        "composer/v1beta1/index.ts",
        "compute/alpha/address.ts",
        "compute/alpha/autoscaler.ts",
        "compute/alpha/backendBucket.ts",
        "compute/alpha/backendBucketIamPolicy.ts",
        "compute/alpha/backendService.ts",
        "compute/alpha/backendServiceIamPolicy.ts",
        "compute/alpha/disk.ts",
        "compute/alpha/diskIamPolicy.ts",
        "compute/alpha/externalVpnGateway.ts",
        "compute/alpha/firewall.ts",
        "compute/alpha/firewallPolicy.ts",
        "compute/alpha/firewallPolicyIamPolicy.ts",
        "compute/alpha/forwardingRule.ts",
        "compute/alpha/futureReservation.ts",
        "compute/alpha/getAddress.ts",
        "compute/alpha/getAutoscaler.ts",
        "compute/alpha/getBackendBucket.ts",
        "compute/alpha/getBackendBucketIamPolicy.ts",
        "compute/alpha/getBackendService.ts",
        "compute/alpha/getBackendServiceIamPolicy.ts",
        "compute/alpha/getDisk.ts",
        "compute/alpha/getDiskIamPolicy.ts",
        "compute/alpha/getExternalVpnGateway.ts",
        "compute/alpha/getFirewall.ts",
        "compute/alpha/getFirewallPolicy.ts",
        "compute/alpha/getFirewallPolicyIamPolicy.ts",
        "compute/alpha/getForwardingRule.ts",
        "compute/alpha/getFutureReservation.ts",
        "compute/alpha/getGlobalAddress.ts",
        "compute/alpha/getGlobalForwardingRule.ts",
        "compute/alpha/getGlobalNetworkEndpointGroup.ts",
        "compute/alpha/getGlobalPublicDelegatedPrefix.ts",
        "compute/alpha/getHealthCheck.ts",
        "compute/alpha/getHttpHealthCheck.ts",
        "compute/alpha/getHttpsHealthCheck.ts",
        "compute/alpha/getImage.ts",
        "compute/alpha/getImageIamPolicy.ts",
        "compute/alpha/getInstance.ts",
        "compute/alpha/getInstanceGroup.ts",
        "compute/alpha/getInstanceGroupManager.ts",
        "compute/alpha/getInstanceIamPolicy.ts",
        "compute/alpha/getInstanceTemplate.ts",
        "compute/alpha/getInstanceTemplateIamPolicy.ts",
        "compute/alpha/getInstantSnapshot.ts",
        "compute/alpha/getInstantSnapshotIamPolicy.ts",
        "compute/alpha/getInterconnect.ts",
        "compute/alpha/getInterconnectAttachment.ts",
        "compute/alpha/getInterconnectAttachmentIamPolicy.ts",
        "compute/alpha/getInterconnectIamPolicy.ts",
        "compute/alpha/getLicense.ts",
        "compute/alpha/getLicenseCodeIamPolicy.ts",
        "compute/alpha/getLicenseIamPolicy.ts",
        "compute/alpha/getMachineImage.ts",
        "compute/alpha/getMachineImageIamPolicy.ts",
        "compute/alpha/getNetwork.ts",
        "compute/alpha/getNetworkEdgeSecurityService.ts",
        "compute/alpha/getNetworkEndpointGroup.ts",
        "compute/alpha/getNetworkFirewallPolicy.ts",
        "compute/alpha/getNetworkFirewallPolicyIamPolicy.ts",
        "compute/alpha/getNodeGroup.ts",
        "compute/alpha/getNodeGroupIamPolicy.ts",
        "compute/alpha/getNodeTemplate.ts",
        "compute/alpha/getNodeTemplateIamPolicy.ts",
        "compute/alpha/getOrganizationSecurityPolicy.ts",
        "compute/alpha/getPacketMirroring.ts",
        "compute/alpha/getPublicAdvertisedPrefix.ts",
        "compute/alpha/getPublicDelegatedPrefix.ts",
        "compute/alpha/getRegionAutoscaler.ts",
        "compute/alpha/getRegionBackendService.ts",
        "compute/alpha/getRegionBackendServiceIamPolicy.ts",
        "compute/alpha/getRegionCommitment.ts",
        "compute/alpha/getRegionDisk.ts",
        "compute/alpha/getRegionDiskIamPolicy.ts",
        "compute/alpha/getRegionHealthCheck.ts",
        "compute/alpha/getRegionHealthCheckService.ts",
        "compute/alpha/getRegionInstanceGroupManager.ts",
        "compute/alpha/getRegionInstantSnapshot.ts",
        "compute/alpha/getRegionInstantSnapshotIamPolicy.ts",
        "compute/alpha/getRegionNetwork.ts",
        "compute/alpha/getRegionNetworkEndpointGroup.ts",
        "compute/alpha/getRegionNetworkFirewallPolicy.ts",
        "compute/alpha/getRegionNetworkFirewallPolicyIamPolicy.ts",
        "compute/alpha/getRegionNetworkIamPolicy.ts",
        "compute/alpha/getRegionNotificationEndpoint.ts",
        "compute/alpha/getRegionSecurityPolicy.ts",
        "compute/alpha/getRegionSslCertificate.ts",
        "compute/alpha/getRegionSslPolicy.ts",
        "compute/alpha/getRegionTargetHttpProxy.ts",
        "compute/alpha/getRegionTargetHttpsProxy.ts",
        "compute/alpha/getRegionTargetTcpProxy.ts",
        "compute/alpha/getRegionUrlMap.ts",
        "compute/alpha/getReservation.ts",
        "compute/alpha/getReservationIamPolicy.ts",
        "compute/alpha/getResourcePolicy.ts",
        "compute/alpha/getResourcePolicyIamPolicy.ts",
        "compute/alpha/getRoute.ts",
        "compute/alpha/getRouter.ts",
        "compute/alpha/getSecurityPolicy.ts",
        "compute/alpha/getServiceAttachment.ts",
        "compute/alpha/getServiceAttachmentIamPolicy.ts",
        "compute/alpha/getSnapshot.ts",
        "compute/alpha/getSnapshotIamPolicy.ts",
        "compute/alpha/getSslCertificate.ts",
        "compute/alpha/getSslPolicy.ts",
        "compute/alpha/getSubnetwork.ts",
        "compute/alpha/getSubnetworkIamPolicy.ts",
        "compute/alpha/getTargetGrpcProxy.ts",
        "compute/alpha/getTargetHttpProxy.ts",
        "compute/alpha/getTargetHttpsProxy.ts",
        "compute/alpha/getTargetInstance.ts",
        "compute/alpha/getTargetPool.ts",
        "compute/alpha/getTargetSslProxy.ts",
        "compute/alpha/getTargetTcpProxy.ts",
        "compute/alpha/getTargetVpnGateway.ts",
        "compute/alpha/getUrlMap.ts",
        "compute/alpha/getVpnGateway.ts",
        "compute/alpha/getVpnTunnel.ts",
        "compute/alpha/globalAddress.ts",
        "compute/alpha/globalForwardingRule.ts",
        "compute/alpha/globalNetworkEndpointGroup.ts",
        "compute/alpha/globalPublicDelegatedPrefix.ts",
        "compute/alpha/healthCheck.ts",
        "compute/alpha/httpHealthCheck.ts",
        "compute/alpha/httpsHealthCheck.ts",
        "compute/alpha/image.ts",
        "compute/alpha/imageIamPolicy.ts",
        "compute/alpha/index.ts",
        "compute/alpha/instance.ts",
        "compute/alpha/instanceGroup.ts",
        "compute/alpha/instanceGroupManager.ts",
        "compute/alpha/instanceIamPolicy.ts",
        "compute/alpha/instanceTemplate.ts",
        "compute/alpha/instanceTemplateIamPolicy.ts",
        "compute/alpha/instantSnapshot.ts",
        "compute/alpha/instantSnapshotIamPolicy.ts",
        "compute/alpha/interconnect.ts",
        "compute/alpha/interconnectAttachment.ts",
        "compute/alpha/interconnectAttachmentIamPolicy.ts",
        "compute/alpha/interconnectIamPolicy.ts",
        "compute/alpha/license.ts",
        "compute/alpha/licenseCodeIamPolicy.ts",
        "compute/alpha/licenseIamPolicy.ts",
        "compute/alpha/machineImage.ts",
        "compute/alpha/machineImageIamPolicy.ts",
        "compute/alpha/network.ts",
        "compute/alpha/networkEdgeSecurityService.ts",
        "compute/alpha/networkEndpointGroup.ts",
        "compute/alpha/networkFirewallPolicy.ts",
        "compute/alpha/networkFirewallPolicyIamPolicy.ts",
        "compute/alpha/nodeGroup.ts",
        "compute/alpha/nodeGroupIamPolicy.ts",
        "compute/alpha/nodeTemplate.ts",
        "compute/alpha/nodeTemplateIamPolicy.ts",
        "compute/alpha/organizationSecurityPolicy.ts",
        "compute/alpha/packetMirroring.ts",
        "compute/alpha/publicAdvertisedPrefix.ts",
        "compute/alpha/publicDelegatedPrefix.ts",
        "compute/alpha/regionAutoscaler.ts",
        "compute/alpha/regionBackendService.ts",
        "compute/alpha/regionBackendServiceIamPolicy.ts",
        "compute/alpha/regionCommitment.ts",
        "compute/alpha/regionDisk.ts",
        "compute/alpha/regionDiskIamPolicy.ts",
        "compute/alpha/regionHealthCheck.ts",
        "compute/alpha/regionHealthCheckService.ts",
        "compute/alpha/regionInstanceGroupManager.ts",
        "compute/alpha/regionInstantSnapshot.ts",
        "compute/alpha/regionInstantSnapshotIamPolicy.ts",
        "compute/alpha/regionNetwork.ts",
        "compute/alpha/regionNetworkEndpointGroup.ts",
        "compute/alpha/regionNetworkFirewallPolicy.ts",
        "compute/alpha/regionNetworkFirewallPolicyIamPolicy.ts",
        "compute/alpha/regionNetworkIamPolicy.ts",
        "compute/alpha/regionNotificationEndpoint.ts",
        "compute/alpha/regionSecurityPolicy.ts",
        "compute/alpha/regionSslCertificate.ts",
        "compute/alpha/regionSslPolicy.ts",
        "compute/alpha/regionTargetHttpProxy.ts",
        "compute/alpha/regionTargetHttpsProxy.ts",
        "compute/alpha/regionTargetTcpProxy.ts",
        "compute/alpha/regionUrlMap.ts",
        "compute/alpha/reservation.ts",
        "compute/alpha/reservationIamPolicy.ts",
        "compute/alpha/resourcePolicy.ts",
        "compute/alpha/resourcePolicyIamPolicy.ts",
        "compute/alpha/route.ts",
        "compute/alpha/router.ts",
        "compute/alpha/securityPolicy.ts",
        "compute/alpha/serviceAttachment.ts",
        "compute/alpha/serviceAttachmentIamPolicy.ts",
        "compute/alpha/snapshot.ts",
        "compute/alpha/snapshotIamPolicy.ts",
        "compute/alpha/sslCertificate.ts",
        "compute/alpha/sslPolicy.ts",
        "compute/alpha/subnetwork.ts",
        "compute/alpha/subnetworkIamPolicy.ts",
        "compute/alpha/targetGrpcProxy.ts",
        "compute/alpha/targetHttpProxy.ts",
        "compute/alpha/targetHttpsProxy.ts",
        "compute/alpha/targetInstance.ts",
        "compute/alpha/targetPool.ts",
        "compute/alpha/targetSslProxy.ts",
        "compute/alpha/targetTcpProxy.ts",
        "compute/alpha/targetVpnGateway.ts",
        "compute/alpha/urlMap.ts",
        "compute/alpha/vpnGateway.ts",
        "compute/alpha/vpnTunnel.ts",
        "compute/beta/address.ts",
        "compute/beta/autoscaler.ts",
        "compute/beta/backendBucket.ts",
        "compute/beta/backendBucketIamPolicy.ts",
        "compute/beta/backendService.ts",
        "compute/beta/backendServiceIamPolicy.ts",
        "compute/beta/disk.ts",
        "compute/beta/diskIamPolicy.ts",
        "compute/beta/externalVpnGateway.ts",
        "compute/beta/firewall.ts",
        "compute/beta/firewallPolicy.ts",
        "compute/beta/firewallPolicyIamPolicy.ts",
        "compute/beta/forwardingRule.ts",
        "compute/beta/getAddress.ts",
        "compute/beta/getAutoscaler.ts",
        "compute/beta/getBackendBucket.ts",
        "compute/beta/getBackendBucketIamPolicy.ts",
        "compute/beta/getBackendService.ts",
        "compute/beta/getBackendServiceIamPolicy.ts",
        "compute/beta/getDisk.ts",
        "compute/beta/getDiskIamPolicy.ts",
        "compute/beta/getExternalVpnGateway.ts",
        "compute/beta/getFirewall.ts",
        "compute/beta/getFirewallPolicy.ts",
        "compute/beta/getFirewallPolicyIamPolicy.ts",
        "compute/beta/getForwardingRule.ts",
        "compute/beta/getGlobalAddress.ts",
        "compute/beta/getGlobalForwardingRule.ts",
        "compute/beta/getGlobalNetworkEndpointGroup.ts",
        "compute/beta/getGlobalPublicDelegatedPrefix.ts",
        "compute/beta/getHealthCheck.ts",
        "compute/beta/getHttpHealthCheck.ts",
        "compute/beta/getHttpsHealthCheck.ts",
        "compute/beta/getImage.ts",
        "compute/beta/getImageIamPolicy.ts",
        "compute/beta/getInstance.ts",
        "compute/beta/getInstanceGroup.ts",
        "compute/beta/getInstanceGroupManager.ts",
        "compute/beta/getInstanceIamPolicy.ts",
        "compute/beta/getInstanceTemplate.ts",
        "compute/beta/getInstanceTemplateIamPolicy.ts",
        "compute/beta/getInterconnect.ts",
        "compute/beta/getInterconnectAttachment.ts",
        "compute/beta/getLicense.ts",
        "compute/beta/getLicenseIamPolicy.ts",
        "compute/beta/getMachineImage.ts",
        "compute/beta/getMachineImageIamPolicy.ts",
        "compute/beta/getNetwork.ts",
        "compute/beta/getNetworkEdgeSecurityService.ts",
        "compute/beta/getNetworkEndpointGroup.ts",
        "compute/beta/getNetworkFirewallPolicy.ts",
        "compute/beta/getNetworkFirewallPolicyIamPolicy.ts",
        "compute/beta/getNodeGroup.ts",
        "compute/beta/getNodeGroupIamPolicy.ts",
        "compute/beta/getNodeTemplate.ts",
        "compute/beta/getNodeTemplateIamPolicy.ts",
        "compute/beta/getOrganizationSecurityPolicy.ts",
        "compute/beta/getPacketMirroring.ts",
        "compute/beta/getPublicAdvertisedPrefix.ts",
        "compute/beta/getPublicDelegatedPrefix.ts",
        "compute/beta/getRegionAutoscaler.ts",
        "compute/beta/getRegionBackendService.ts",
        "compute/beta/getRegionBackendServiceIamPolicy.ts",
        "compute/beta/getRegionCommitment.ts",
        "compute/beta/getRegionDisk.ts",
        "compute/beta/getRegionDiskIamPolicy.ts",
        "compute/beta/getRegionHealthCheck.ts",
        "compute/beta/getRegionHealthCheckService.ts",
        "compute/beta/getRegionInstanceGroupManager.ts",
        "compute/beta/getRegionNetworkEndpointGroup.ts",
        "compute/beta/getRegionNetworkFirewallPolicy.ts",
        "compute/beta/getRegionNetworkFirewallPolicyIamPolicy.ts",
        "compute/beta/getRegionNotificationEndpoint.ts",
        "compute/beta/getRegionSecurityPolicy.ts",
        "compute/beta/getRegionSslCertificate.ts",
        "compute/beta/getRegionTargetHttpProxy.ts",
        "compute/beta/getRegionTargetHttpsProxy.ts",
        "compute/beta/getRegionUrlMap.ts",
        "compute/beta/getReservation.ts",
        "compute/beta/getReservationIamPolicy.ts",
        "compute/beta/getResourcePolicy.ts",
        "compute/beta/getResourcePolicyIamPolicy.ts",
        "compute/beta/getRoute.ts",
        "compute/beta/getRouter.ts",
        "compute/beta/getSecurityPolicy.ts",
        "compute/beta/getServiceAttachment.ts",
        "compute/beta/getServiceAttachmentIamPolicy.ts",
        "compute/beta/getSnapshot.ts",
        "compute/beta/getSnapshotIamPolicy.ts",
        "compute/beta/getSslCertificate.ts",
        "compute/beta/getSslPolicy.ts",
        "compute/beta/getSubnetwork.ts",
        "compute/beta/getSubnetworkIamPolicy.ts",
        "compute/beta/getTargetGrpcProxy.ts",
        "compute/beta/getTargetHttpProxy.ts",
        "compute/beta/getTargetHttpsProxy.ts",
        "compute/beta/getTargetInstance.ts",
        "compute/beta/getTargetPool.ts",
        "compute/beta/getTargetSslProxy.ts",
        "compute/beta/getTargetTcpProxy.ts",
        "compute/beta/getTargetVpnGateway.ts",
        "compute/beta/getUrlMap.ts",
        "compute/beta/getVpnGateway.ts",
        "compute/beta/getVpnTunnel.ts",
        "compute/beta/globalAddress.ts",
        "compute/beta/globalForwardingRule.ts",
        "compute/beta/globalNetworkEndpointGroup.ts",
        "compute/beta/globalPublicDelegatedPrefix.ts",
        "compute/beta/healthCheck.ts",
        "compute/beta/httpHealthCheck.ts",
        "compute/beta/httpsHealthCheck.ts",
        "compute/beta/image.ts",
        "compute/beta/imageIamPolicy.ts",
        "compute/beta/index.ts",
        "compute/beta/instance.ts",
        "compute/beta/instanceGroup.ts",
        "compute/beta/instanceGroupManager.ts",
        "compute/beta/instanceIamPolicy.ts",
        "compute/beta/instanceTemplate.ts",
        "compute/beta/instanceTemplateIamPolicy.ts",
        "compute/beta/interconnect.ts",
        "compute/beta/interconnectAttachment.ts",
        "compute/beta/license.ts",
        "compute/beta/licenseIamPolicy.ts",
        "compute/beta/machineImage.ts",
        "compute/beta/machineImageIamPolicy.ts",
        "compute/beta/network.ts",
        "compute/beta/networkEdgeSecurityService.ts",
        "compute/beta/networkEndpointGroup.ts",
        "compute/beta/networkFirewallPolicy.ts",
        "compute/beta/networkFirewallPolicyIamPolicy.ts",
        "compute/beta/nodeGroup.ts",
        "compute/beta/nodeGroupIamPolicy.ts",
        "compute/beta/nodeTemplate.ts",
        "compute/beta/nodeTemplateIamPolicy.ts",
        "compute/beta/organizationSecurityPolicy.ts",
        "compute/beta/packetMirroring.ts",
        "compute/beta/publicAdvertisedPrefix.ts",
        "compute/beta/publicDelegatedPrefix.ts",
        "compute/beta/regionAutoscaler.ts",
        "compute/beta/regionBackendService.ts",
        "compute/beta/regionBackendServiceIamPolicy.ts",
        "compute/beta/regionCommitment.ts",
        "compute/beta/regionDisk.ts",
        "compute/beta/regionDiskIamPolicy.ts",
        "compute/beta/regionHealthCheck.ts",
        "compute/beta/regionHealthCheckService.ts",
        "compute/beta/regionInstanceGroupManager.ts",
        "compute/beta/regionNetworkEndpointGroup.ts",
        "compute/beta/regionNetworkFirewallPolicy.ts",
        "compute/beta/regionNetworkFirewallPolicyIamPolicy.ts",
        "compute/beta/regionNotificationEndpoint.ts",
        "compute/beta/regionSecurityPolicy.ts",
        "compute/beta/regionSslCertificate.ts",
        "compute/beta/regionTargetHttpProxy.ts",
        "compute/beta/regionTargetHttpsProxy.ts",
        "compute/beta/regionUrlMap.ts",
        "compute/beta/reservation.ts",
        "compute/beta/reservationIamPolicy.ts",
        "compute/beta/resourcePolicy.ts",
        "compute/beta/resourcePolicyIamPolicy.ts",
        "compute/beta/route.ts",
        "compute/beta/router.ts",
        "compute/beta/securityPolicy.ts",
        "compute/beta/serviceAttachment.ts",
        "compute/beta/serviceAttachmentIamPolicy.ts",
        "compute/beta/snapshot.ts",
        "compute/beta/snapshotIamPolicy.ts",
        "compute/beta/sslCertificate.ts",
        "compute/beta/sslPolicy.ts",
        "compute/beta/subnetwork.ts",
        "compute/beta/subnetworkIamPolicy.ts",
        "compute/beta/targetGrpcProxy.ts",
        "compute/beta/targetHttpProxy.ts",
        "compute/beta/targetHttpsProxy.ts",
        "compute/beta/targetInstance.ts",
        "compute/beta/targetPool.ts",
        "compute/beta/targetSslProxy.ts",
        "compute/beta/targetTcpProxy.ts",
        "compute/beta/targetVpnGateway.ts",
        "compute/beta/urlMap.ts",
        "compute/beta/vpnGateway.ts",
        "compute/beta/vpnTunnel.ts",
        "compute/classic/autoscalar.ts",
        "compute/classic/autoscaler.ts",
        "compute/classic/index.ts",
        "compute/classic/managedSslCertificate.ts",
        "compute/classic/mangedSslCertificate.ts",
        "compute/index.ts",
        "compute/v1/address.ts",
        "compute/v1/autoscaler.ts",
        "compute/v1/backendBucket.ts",
        "compute/v1/backendService.ts",
        "compute/v1/disk.ts",
        "compute/v1/diskIamPolicy.ts",
        "compute/v1/externalVpnGateway.ts",
        "compute/v1/firewall.ts",
        "compute/v1/firewallPolicy.ts",
        "compute/v1/firewallPolicyIamPolicy.ts",
        "compute/v1/forwardingRule.ts",
        "compute/v1/getAddress.ts",
        "compute/v1/getAutoscaler.ts",
        "compute/v1/getBackendBucket.ts",
        "compute/v1/getBackendService.ts",
        "compute/v1/getDisk.ts",
        "compute/v1/getDiskIamPolicy.ts",
        "compute/v1/getExternalVpnGateway.ts",
        "compute/v1/getFirewall.ts",
        "compute/v1/getFirewallPolicy.ts",
        "compute/v1/getFirewallPolicyIamPolicy.ts",
        "compute/v1/getForwardingRule.ts",
        "compute/v1/getGlobalAddress.ts",
        "compute/v1/getGlobalForwardingRule.ts",
        "compute/v1/getGlobalNetworkEndpointGroup.ts",
        "compute/v1/getGlobalPublicDelegatedPrefix.ts",
        "compute/v1/getHealthCheck.ts",
        "compute/v1/getHttpHealthCheck.ts",
        "compute/v1/getHttpsHealthCheck.ts",
        "compute/v1/getImage.ts",
        "compute/v1/getImageIamPolicy.ts",
        "compute/v1/getInstance.ts",
        "compute/v1/getInstanceGroup.ts",
        "compute/v1/getInstanceGroupManager.ts",
        "compute/v1/getInstanceIamPolicy.ts",
        "compute/v1/getInstanceTemplate.ts",
        "compute/v1/getInstanceTemplateIamPolicy.ts",
        "compute/v1/getInterconnect.ts",
        "compute/v1/getInterconnectAttachment.ts",
        "compute/v1/getLicense.ts",
        "compute/v1/getLicenseIamPolicy.ts",
        "compute/v1/getMachineImage.ts",
        "compute/v1/getMachineImageIamPolicy.ts",
        "compute/v1/getNetwork.ts",
        "compute/v1/getNetworkEdgeSecurityService.ts",
        "compute/v1/getNetworkEndpointGroup.ts",
        "compute/v1/getNetworkFirewallPolicy.ts",
        "compute/v1/getNetworkFirewallPolicyIamPolicy.ts",
        "compute/v1/getNodeGroup.ts",
        "compute/v1/getNodeGroupIamPolicy.ts",
        "compute/v1/getNodeTemplate.ts",
        "compute/v1/getNodeTemplateIamPolicy.ts",
        "compute/v1/getPacketMirroring.ts",
        "compute/v1/getPublicAdvertisedPrefix.ts",
        "compute/v1/getPublicDelegatedPrefix.ts",
        "compute/v1/getRegionAutoscaler.ts",
        "compute/v1/getRegionBackendService.ts",
        "compute/v1/getRegionCommitment.ts",
        "compute/v1/getRegionDisk.ts",
        "compute/v1/getRegionDiskIamPolicy.ts",
        "compute/v1/getRegionHealthCheck.ts",
        "compute/v1/getRegionHealthCheckService.ts",
        "compute/v1/getRegionInstanceGroupManager.ts",
        "compute/v1/getRegionNetworkEndpointGroup.ts",
        "compute/v1/getRegionNetworkFirewallPolicy.ts",
        "compute/v1/getRegionNetworkFirewallPolicyIamPolicy.ts",
        "compute/v1/getRegionNotificationEndpoint.ts",
        "compute/v1/getRegionSecurityPolicy.ts",
        "compute/v1/getRegionSslCertificate.ts",
        "compute/v1/getRegionTargetHttpProxy.ts",
        "compute/v1/getRegionTargetHttpsProxy.ts",
        "compute/v1/getRegionUrlMap.ts",
        "compute/v1/getReservation.ts",
        "compute/v1/getReservationIamPolicy.ts",
        "compute/v1/getResourcePolicy.ts",
        "compute/v1/getResourcePolicyIamPolicy.ts",
        "compute/v1/getRoute.ts",
        "compute/v1/getRouter.ts",
        "compute/v1/getSecurityPolicy.ts",
        "compute/v1/getServiceAttachment.ts",
        "compute/v1/getServiceAttachmentIamPolicy.ts",
        "compute/v1/getSnapshot.ts",
        "compute/v1/getSnapshotIamPolicy.ts",
        "compute/v1/getSslCertificate.ts",
        "compute/v1/getSslPolicy.ts",
        "compute/v1/getSubnetwork.ts",
        "compute/v1/getSubnetworkIamPolicy.ts",
        "compute/v1/getTargetGrpcProxy.ts",
        "compute/v1/getTargetHttpProxy.ts",
        "compute/v1/getTargetHttpsProxy.ts",
        "compute/v1/getTargetInstance.ts",
        "compute/v1/getTargetPool.ts",
        "compute/v1/getTargetSslProxy.ts",
        "compute/v1/getTargetTcpProxy.ts",
        "compute/v1/getTargetVpnGateway.ts",
        "compute/v1/getUrlMap.ts",
        "compute/v1/getVpnGateway.ts",
        "compute/v1/getVpnTunnel.ts",
        "compute/v1/globalAddress.ts",
        "compute/v1/globalForwardingRule.ts",
        "compute/v1/globalNetworkEndpointGroup.ts",
        "compute/v1/globalPublicDelegatedPrefix.ts",
        "compute/v1/healthCheck.ts",
        "compute/v1/httpHealthCheck.ts",
        "compute/v1/httpsHealthCheck.ts",
        "compute/v1/image.ts",
        "compute/v1/imageIamPolicy.ts",
        "compute/v1/index.ts",
        "compute/v1/instance.ts",
        "compute/v1/instanceGroup.ts",
        "compute/v1/instanceGroupManager.ts",
        "compute/v1/instanceIamPolicy.ts",
        "compute/v1/instanceTemplate.ts",
        "compute/v1/instanceTemplateIamPolicy.ts",
        "compute/v1/interconnect.ts",
        "compute/v1/interconnectAttachment.ts",
        "compute/v1/license.ts",
        "compute/v1/licenseIamPolicy.ts",
        "compute/v1/machineImage.ts",
        "compute/v1/machineImageIamPolicy.ts",
        "compute/v1/network.ts",
        "compute/v1/networkEdgeSecurityService.ts",
        "compute/v1/networkEndpointGroup.ts",
        "compute/v1/networkFirewallPolicy.ts",
        "compute/v1/networkFirewallPolicyIamPolicy.ts",
        "compute/v1/nodeGroup.ts",
        "compute/v1/nodeGroupIamPolicy.ts",
        "compute/v1/nodeTemplate.ts",
        "compute/v1/nodeTemplateIamPolicy.ts",
        "compute/v1/packetMirroring.ts",
        "compute/v1/publicAdvertisedPrefix.ts",
        "compute/v1/publicDelegatedPrefix.ts",
        "compute/v1/regionAutoscaler.ts",
        "compute/v1/regionBackendService.ts",
        "compute/v1/regionCommitment.ts",
        "compute/v1/regionDisk.ts",
        "compute/v1/regionDiskIamPolicy.ts",
        "compute/v1/regionHealthCheck.ts",
        "compute/v1/regionHealthCheckService.ts",
        "compute/v1/regionInstanceGroupManager.ts",
        "compute/v1/regionNetworkEndpointGroup.ts",
        "compute/v1/regionNetworkFirewallPolicy.ts",
        "compute/v1/regionNetworkFirewallPolicyIamPolicy.ts",
        "compute/v1/regionNotificationEndpoint.ts",
        "compute/v1/regionSecurityPolicy.ts",
        "compute/v1/regionSslCertificate.ts",
        "compute/v1/regionTargetHttpProxy.ts",
        "compute/v1/regionTargetHttpsProxy.ts",
        "compute/v1/regionUrlMap.ts",
        "compute/v1/reservation.ts",
        "compute/v1/reservationIamPolicy.ts",
        "compute/v1/resourcePolicy.ts",
        "compute/v1/resourcePolicyIamPolicy.ts",
        "compute/v1/route.ts",
        "compute/v1/router.ts",
        "compute/v1/securityPolicy.ts",
        "compute/v1/serviceAttachment.ts",
        "compute/v1/serviceAttachmentIamPolicy.ts",
        "compute/v1/snapshot.ts",
        "compute/v1/snapshotIamPolicy.ts",
        "compute/v1/sslCertificate.ts",
        "compute/v1/sslPolicy.ts",
        "compute/v1/subnetwork.ts",
        "compute/v1/subnetworkIamPolicy.ts",
        "compute/v1/targetGrpcProxy.ts",
        "compute/v1/targetHttpProxy.ts",
        "compute/v1/targetHttpsProxy.ts",
        "compute/v1/targetInstance.ts",
        "compute/v1/targetPool.ts",
        "compute/v1/targetSslProxy.ts",
        "compute/v1/targetTcpProxy.ts",
        "compute/v1/targetVpnGateway.ts",
        "compute/v1/urlMap.ts",
        "compute/v1/vpnGateway.ts",
        "compute/v1/vpnTunnel.ts",
        "config/index.ts",
        "config/vars.ts",
        "connectors/index.ts",
        "connectors/v1/connection.ts",
        "connectors/v1/connectionIamPolicy.ts",
        "connectors/v1/getConnection.ts",
        "connectors/v1/getConnectionIamPolicy.ts",
        "connectors/v1/getProviderIamPolicy.ts",
        "connectors/v1/index.ts",
        "connectors/v1/providerIamPolicy.ts",
        "contactcenterinsights/index.ts",
        "contactcenterinsights/v1/analysis.ts",
        "contactcenterinsights/v1/conversation.ts",
        "contactcenterinsights/v1/getAnalysis.ts",
        "contactcenterinsights/v1/getConversation.ts",
        "contactcenterinsights/v1/getIssueModel.ts",
        "contactcenterinsights/v1/getPhraseMatcher.ts",
        "contactcenterinsights/v1/getView.ts",
        "contactcenterinsights/v1/index.ts",
        "contactcenterinsights/v1/issueModel.ts",
        "contactcenterinsights/v1/phraseMatcher.ts",
        "contactcenterinsights/v1/view.ts",
        "container/classic/awsCluster.ts",
        "container/classic/awsNodePool.ts",
        "container/classic/azureClient.ts",
        "container/classic/azureCluster.ts",
        "container/classic/azureNodePool.ts",
        "container/classic/cluster.ts",
        "container/classic/getCluster.ts",
        "container/classic/getEngineVersions.ts",
        "container/classic/index.ts",
        "container/classic/nodePool.ts",
        "container/classic/registry.ts",
        "container/index.ts",
        "container/v1/cluster.ts",
        "container/v1/getCluster.ts",
        "container/v1/getNodePool.ts",
        "container/v1/index.ts",
        "container/v1/nodePool.ts",
        "container/v1beta1/cluster.ts",
        "container/v1beta1/getCluster.ts",
        "container/v1beta1/getNodePool.ts",
        "container/v1beta1/index.ts",
        "container/v1beta1/nodePool.ts",
        "containeranalysis/index.ts",
        "containeranalysis/v1/getNote.ts",
        "containeranalysis/v1/getNoteIamPolicy.ts",
        "containeranalysis/v1/getOccurrence.ts",
        "containeranalysis/v1/getOccurrenceIamPolicy.ts",
        "containeranalysis/v1/index.ts",
        "containeranalysis/v1/note.ts",
        "containeranalysis/v1/noteIamPolicy.ts",
        "containeranalysis/v1/occurrence.ts",
        "containeranalysis/v1/occurrenceIamPolicy.ts",
        "containeranalysis/v1alpha1/getNote.ts",
        "containeranalysis/v1alpha1/getNoteIamPolicy.ts",
        "containeranalysis/v1alpha1/getOccurrence.ts",
        "containeranalysis/v1alpha1/getOccurrenceIamPolicy.ts",
        "containeranalysis/v1alpha1/getProviderNoteIamPolicy.ts",
        "containeranalysis/v1alpha1/index.ts",
        "containeranalysis/v1alpha1/note.ts",
        "containeranalysis/v1alpha1/noteIamPolicy.ts",
        "containeranalysis/v1alpha1/occurrence.ts",
        "containeranalysis/v1alpha1/occurrenceIamPolicy.ts",
        "containeranalysis/v1alpha1/providerNoteIamPolicy.ts",
        "containeranalysis/v1beta1/getNote.ts",
        "containeranalysis/v1beta1/getNoteIamPolicy.ts",
        "containeranalysis/v1beta1/getOccurrence.ts",
        "containeranalysis/v1beta1/getOccurrenceIamPolicy.ts",
        "containeranalysis/v1beta1/index.ts",
        "containeranalysis/v1beta1/note.ts",
        "containeranalysis/v1beta1/noteIamPolicy.ts",
        "containeranalysis/v1beta1/occurrence.ts",
        "containeranalysis/v1beta1/occurrenceIamPolicy.ts",
        "datacatalog/index.ts",
        "datacatalog/v1/entry.ts",
        "datacatalog/v1/entryGroup.ts",
        "datacatalog/v1/entryGroupIamPolicy.ts",
        "datacatalog/v1/getEntry.ts",
        "datacatalog/v1/getEntryGroup.ts",
        "datacatalog/v1/getEntryGroupIamPolicy.ts",
        "datacatalog/v1/getPolicyTag.ts",
        "datacatalog/v1/getTagTemplate.ts",
        "datacatalog/v1/getTagTemplateIamPolicy.ts",
        "datacatalog/v1/getTaxonomy.ts",
        "datacatalog/v1/getTaxonomyIamPolicy.ts",
        "datacatalog/v1/getTaxonomyPolicyTagIamPolicy.ts",
        "datacatalog/v1/index.ts",
        "datacatalog/v1/policyTag.ts",
        "datacatalog/v1/tagTemplate.ts",
        "datacatalog/v1/tagTemplateIamPolicy.ts",
        "datacatalog/v1/taxonomy.ts",
        "datacatalog/v1/taxonomyIamPolicy.ts",
        "datacatalog/v1/taxonomyPolicyTagIamPolicy.ts",
        "datacatalog/v1beta1/entry.ts",
        "datacatalog/v1beta1/entryGroup.ts",
        "datacatalog/v1beta1/entryGroupIamPolicy.ts",
        "datacatalog/v1beta1/getEntry.ts",
        "datacatalog/v1beta1/getEntryGroup.ts",
        "datacatalog/v1beta1/getEntryGroupIamPolicy.ts",
        "datacatalog/v1beta1/getPolicyTag.ts",
        "datacatalog/v1beta1/getTagTemplate.ts",
        "datacatalog/v1beta1/getTagTemplateIamPolicy.ts",
        "datacatalog/v1beta1/getTaxonomy.ts",
        "datacatalog/v1beta1/getTaxonomyIamPolicy.ts",
        "datacatalog/v1beta1/getTaxonomyPolicyTagIamPolicy.ts",
        "datacatalog/v1beta1/index.ts",
        "datacatalog/v1beta1/policyTag.ts",
        "datacatalog/v1beta1/tagTemplate.ts",
        "datacatalog/v1beta1/tagTemplateIamPolicy.ts",
        "datacatalog/v1beta1/taxonomy.ts",
        "datacatalog/v1beta1/taxonomyIamPolicy.ts",
        "datacatalog/v1beta1/taxonomyPolicyTagIamPolicy.ts",
        "dataflow/index.ts",
        "dataflow/v1b3/getJob.ts",
        "dataflow/v1b3/getTemplate.ts",
        "dataflow/v1b3/index.ts",
        "dataflow/v1b3/job.ts",
        "dataflow/v1b3/template.ts",
        "datafusion/index.ts",
        "datafusion/v1/getInstance.ts",
        "datafusion/v1/getInstanceIamPolicy.ts",
        "datafusion/v1/index.ts",
        "datafusion/v1/instance.ts",
        "datafusion/v1/instanceIamPolicy.ts",
        "datafusion/v1beta1/getInstance.ts",
        "datafusion/v1beta1/getInstanceIamPolicy.ts",
        "datafusion/v1beta1/getInstanceNamespaceIamPolicy.ts",
        "datafusion/v1beta1/index.ts",
        "datafusion/v1beta1/instance.ts",
        "datafusion/v1beta1/instanceIamPolicy.ts",
        "datafusion/v1beta1/instanceNamespaceIamPolicy.ts",
        "datalabeling/index.ts",
        "datalabeling/v1beta1/annotationSpecSet.ts",
        "datalabeling/v1beta1/dataset.ts",
        "datalabeling/v1beta1/evaluationJob.ts",
        "datalabeling/v1beta1/feedbackMessage.ts",
        "datalabeling/v1beta1/getAnnotationSpecSet.ts",
        "datalabeling/v1beta1/getDataset.ts",
        "datalabeling/v1beta1/getEvaluationJob.ts",
        "datalabeling/v1beta1/getFeedbackMessage.ts",
        "datalabeling/v1beta1/getInstruction.ts",
        "datalabeling/v1beta1/index.ts",
        "datalabeling/v1beta1/instruction.ts",
        "datamigration/index.ts",
        "datamigration/v1/connectionProfile.ts",
        "datamigration/v1/connectionProfileIamPolicy.ts",
        "datamigration/v1/getConnectionProfile.ts",
        "datamigration/v1/getConnectionProfileIamPolicy.ts",
        "datamigration/v1/getMigrationJob.ts",
        "datamigration/v1/getMigrationJobIamPolicy.ts",
        "datamigration/v1/index.ts",
        "datamigration/v1/migrationJob.ts",
        "datamigration/v1/migrationJobIamPolicy.ts",
        "datamigration/v1beta1/connectionProfile.ts",
        "datamigration/v1beta1/connectionProfileIamPolicy.ts",
        "datamigration/v1beta1/getConnectionProfile.ts",
        "datamigration/v1beta1/getConnectionProfileIamPolicy.ts",
        "datamigration/v1beta1/getMigrationJob.ts",
        "datamigration/v1beta1/getMigrationJobIamPolicy.ts",
        "datamigration/v1beta1/index.ts",
        "datamigration/v1beta1/migrationJob.ts",
        "datamigration/v1beta1/migrationJobIamPolicy.ts",
        "datapipelines/index.ts",
        "datapipelines/v1/getPipeline.ts",
        "datapipelines/v1/index.ts",
        "datapipelines/v1/pipeline.ts",
        "dataplex/index.ts",
        "dataplex/v1/asset.ts",
        "dataplex/v1/contentitem.ts",
        "dataplex/v1/entity.ts",
        "dataplex/v1/environment.ts",
        "dataplex/v1/getAsset.ts",
        "dataplex/v1/getContentitem.ts",
        "dataplex/v1/getEntity.ts",
        "dataplex/v1/getEnvironment.ts",
        "dataplex/v1/getLake.ts",
        "dataplex/v1/getLakeAssetIamPolicy.ts",
        "dataplex/v1/getLakeContentIamPolicy.ts",
        "dataplex/v1/getLakeEnvironmentIamPolicy.ts",
        "dataplex/v1/getLakeIamPolicy.ts",
        "dataplex/v1/getLakeTaskIamPolicy.ts",
        "dataplex/v1/getLakeZoneIamPolicy.ts",
        "dataplex/v1/getPartition.ts",
        "dataplex/v1/getTask.ts",
        "dataplex/v1/getZone.ts",
        "dataplex/v1/index.ts",
        "dataplex/v1/lake.ts",
        "dataplex/v1/lakeAssetIamPolicy.ts",
        "dataplex/v1/lakeContentIamPolicy.ts",
        "dataplex/v1/lakeEnvironmentIamPolicy.ts",
        "dataplex/v1/lakeIamPolicy.ts",
        "dataplex/v1/lakeTaskIamPolicy.ts",
        "dataplex/v1/lakeZoneIamPolicy.ts",
        "dataplex/v1/partition.ts",
        "dataplex/v1/task.ts",
        "dataplex/v1/zone.ts",
        "dataproc/index.ts",
        "dataproc/v1/autoscalingPolicy.ts",
        "dataproc/v1/autoscalingPolicyIamPolicy.ts",
        "dataproc/v1/batch.ts",
        "dataproc/v1/cluster.ts",
        "dataproc/v1/getAutoscalingPolicy.ts",
        "dataproc/v1/getAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1/getBatch.ts",
        "dataproc/v1/getCluster.ts",
        "dataproc/v1/getJob.ts",
        "dataproc/v1/getRegionAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1/getRegionClusterIamPolicy.ts",
        "dataproc/v1/getRegionJobIamPolicy.ts",
        "dataproc/v1/getRegionOperationIamPolicy.ts",
        "dataproc/v1/getRegionWorkflowTemplateIamPolicy.ts",
        "dataproc/v1/getWorkflowTemplate.ts",
        "dataproc/v1/getWorkflowTemplateIamPolicy.ts",
        "dataproc/v1/index.ts",
        "dataproc/v1/job.ts",
        "dataproc/v1/regionAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1/regionClusterIamPolicy.ts",
        "dataproc/v1/regionJobIamPolicy.ts",
        "dataproc/v1/regionOperationIamPolicy.ts",
        "dataproc/v1/regionWorkflowTemplateIamPolicy.ts",
        "dataproc/v1/workflowTemplate.ts",
        "dataproc/v1/workflowTemplateIamPolicy.ts",
        "dataproc/v1beta2/autoscalingPolicy.ts",
        "dataproc/v1beta2/autoscalingPolicyIamPolicy.ts",
        "dataproc/v1beta2/cluster.ts",
        "dataproc/v1beta2/getAutoscalingPolicy.ts",
        "dataproc/v1beta2/getAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1beta2/getCluster.ts",
        "dataproc/v1beta2/getJob.ts",
        "dataproc/v1beta2/getRegionAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1beta2/getRegionClusterIamPolicy.ts",
        "dataproc/v1beta2/getRegionJobIamPolicy.ts",
        "dataproc/v1beta2/getRegionOperationIamPolicy.ts",
        "dataproc/v1beta2/getRegionWorkflowTemplateIamPolicy.ts",
        "dataproc/v1beta2/getWorkflowTemplate.ts",
        "dataproc/v1beta2/getWorkflowTemplateIamPolicy.ts",
        "dataproc/v1beta2/index.ts",
        "dataproc/v1beta2/job.ts",
        "dataproc/v1beta2/regionAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1beta2/regionClusterIamPolicy.ts",
        "dataproc/v1beta2/regionJobIamPolicy.ts",
        "dataproc/v1beta2/regionOperationIamPolicy.ts",
        "dataproc/v1beta2/regionWorkflowTemplateIamPolicy.ts",
        "dataproc/v1beta2/workflowTemplate.ts",
        "dataproc/v1beta2/workflowTemplateIamPolicy.ts",
        "datastore/index.ts",
        "datastore/v1/getIndex.ts",
        "datastore/v1/index.ts",
        "datastore/v1/index_.ts",
        "datastream/index.ts",
        "datastream/v1/connectionProfile.ts",
        "datastream/v1/getConnectionProfile.ts",
        "datastream/v1/getPrivateConnection.ts",
        "datastream/v1/getRoute.ts",
        "datastream/v1/getStream.ts",
        "datastream/v1/index.ts",
        "datastream/v1/privateConnection.ts",
        "datastream/v1/route.ts",
        "datastream/v1/stream.ts",
        "datastream/v1alpha1/connectionProfile.ts",
        "datastream/v1alpha1/getConnectionProfile.ts",
        "datastream/v1alpha1/getPrivateConnection.ts",
        "datastream/v1alpha1/getRoute.ts",
        "datastream/v1alpha1/getStream.ts",
        "datastream/v1alpha1/index.ts",
        "datastream/v1alpha1/privateConnection.ts",
        "datastream/v1alpha1/route.ts",
        "datastream/v1alpha1/stream.ts",
        "deploymentmanager/alpha/compositeType.ts",
        "deploymentmanager/alpha/deployment.ts",
        "deploymentmanager/alpha/deploymentIamPolicy.ts",
        "deploymentmanager/alpha/getCompositeType.ts",
        "deploymentmanager/alpha/getDeployment.ts",
        "deploymentmanager/alpha/getDeploymentIamPolicy.ts",
        "deploymentmanager/alpha/getTypeProvider.ts",
        "deploymentmanager/alpha/index.ts",
        "deploymentmanager/alpha/typeProvider.ts",
        "deploymentmanager/index.ts",
        "deploymentmanager/v2/deployment.ts",
        "deploymentmanager/v2/deploymentIamPolicy.ts",
        "deploymentmanager/v2/getDeployment.ts",
        "deploymentmanager/v2/getDeploymentIamPolicy.ts",
        "deploymentmanager/v2/index.ts",
        "deploymentmanager/v2beta/compositeType.ts",
        "deploymentmanager/v2beta/deployment.ts",
        "deploymentmanager/v2beta/deploymentIamPolicy.ts",
        "deploymentmanager/v2beta/getCompositeType.ts",
        "deploymentmanager/v2beta/getDeployment.ts",
        "deploymentmanager/v2beta/getDeploymentIamPolicy.ts",
        "deploymentmanager/v2beta/getTypeProvider.ts",
        "deploymentmanager/v2beta/index.ts",
        "deploymentmanager/v2beta/typeProvider.ts",
        "dialogflow/index.ts",
        "dialogflow/v2/context.ts",
        "dialogflow/v2/conversation.ts",
        "dialogflow/v2/conversationDataset.ts",
        "dialogflow/v2/conversationModel.ts",
        "dialogflow/v2/conversationProfile.ts",
        "dialogflow/v2/document.ts",
        "dialogflow/v2/entityType.ts",
        "dialogflow/v2/environment.ts",
        "dialogflow/v2/evaluation.ts",
        "dialogflow/v2/getContext.ts",
        "dialogflow/v2/getConversation.ts",
        "dialogflow/v2/getConversationDataset.ts",
        "dialogflow/v2/getConversationModel.ts",
        "dialogflow/v2/getConversationProfile.ts",
        "dialogflow/v2/getDocument.ts",
        "dialogflow/v2/getEntityType.ts",
        "dialogflow/v2/getEnvironment.ts",
        "dialogflow/v2/getEvaluation.ts",
        "dialogflow/v2/getIntent.ts",
        "dialogflow/v2/getKnowledgeBase.ts",
        "dialogflow/v2/getParticipant.ts",
        "dialogflow/v2/getSessionEntityType.ts",
        "dialogflow/v2/getVersion.ts",
        "dialogflow/v2/index.ts",
        "dialogflow/v2/intent.ts",
        "dialogflow/v2/knowledgeBase.ts",
        "dialogflow/v2/participant.ts",
        "dialogflow/v2/sessionEntityType.ts",
        "dialogflow/v2/version.ts",
        "dialogflow/v2beta1/context.ts",
        "dialogflow/v2beta1/conversation.ts",
        "dialogflow/v2beta1/conversationProfile.ts",
        "dialogflow/v2beta1/document.ts",
        "dialogflow/v2beta1/entityType.ts",
        "dialogflow/v2beta1/environment.ts",
        "dialogflow/v2beta1/getContext.ts",
        "dialogflow/v2beta1/getConversation.ts",
        "dialogflow/v2beta1/getConversationProfile.ts",
        "dialogflow/v2beta1/getDocument.ts",
        "dialogflow/v2beta1/getEntityType.ts",
        "dialogflow/v2beta1/getEnvironment.ts",
        "dialogflow/v2beta1/getIntent.ts",
        "dialogflow/v2beta1/getKnowledgeBase.ts",
        "dialogflow/v2beta1/getParticipant.ts",
        "dialogflow/v2beta1/getSessionEntityType.ts",
        "dialogflow/v2beta1/getVersion.ts",
        "dialogflow/v2beta1/index.ts",
        "dialogflow/v2beta1/intent.ts",
        "dialogflow/v2beta1/knowledgeBase.ts",
        "dialogflow/v2beta1/participant.ts",
        "dialogflow/v2beta1/sessionEntityType.ts",
        "dialogflow/v2beta1/version.ts",
        "dialogflow/v3/agent.ts",
        "dialogflow/v3/entityType.ts",
        "dialogflow/v3/environment.ts",
        "dialogflow/v3/experiment.ts",
        "dialogflow/v3/flow.ts",
        "dialogflow/v3/getAgent.ts",
        "dialogflow/v3/getEntityType.ts",
        "dialogflow/v3/getEnvironment.ts",
        "dialogflow/v3/getExperiment.ts",
        "dialogflow/v3/getFlow.ts",
        "dialogflow/v3/getIntent.ts",
        "dialogflow/v3/getPage.ts",
        "dialogflow/v3/getSecuritySetting.ts",
        "dialogflow/v3/getSessionEntityType.ts",
        "dialogflow/v3/getTestCase.ts",
        "dialogflow/v3/getTransitionRouteGroup.ts",
        "dialogflow/v3/getVersion.ts",
        "dialogflow/v3/getWebhook.ts",
        "dialogflow/v3/index.ts",
        "dialogflow/v3/intent.ts",
        "dialogflow/v3/page.ts",
        "dialogflow/v3/securitySetting.ts",
        "dialogflow/v3/sessionEntityType.ts",
        "dialogflow/v3/testCase.ts",
        "dialogflow/v3/transitionRouteGroup.ts",
        "dialogflow/v3/version.ts",
        "dialogflow/v3/webhook.ts",
        "dialogflow/v3beta1/agent.ts",
        "dialogflow/v3beta1/entityType.ts",
        "dialogflow/v3beta1/environment.ts",
        "dialogflow/v3beta1/experiment.ts",
        "dialogflow/v3beta1/flow.ts",
        "dialogflow/v3beta1/getAgent.ts",
        "dialogflow/v3beta1/getEntityType.ts",
        "dialogflow/v3beta1/getEnvironment.ts",
        "dialogflow/v3beta1/getExperiment.ts",
        "dialogflow/v3beta1/getFlow.ts",
        "dialogflow/v3beta1/getIntent.ts",
        "dialogflow/v3beta1/getPage.ts",
        "dialogflow/v3beta1/getSecuritySetting.ts",
        "dialogflow/v3beta1/getSessionEntityType.ts",
        "dialogflow/v3beta1/getTestCase.ts",
        "dialogflow/v3beta1/getTransitionRouteGroup.ts",
        "dialogflow/v3beta1/getVersion.ts",
        "dialogflow/v3beta1/getWebhook.ts",
        "dialogflow/v3beta1/index.ts",
        "dialogflow/v3beta1/intent.ts",
        "dialogflow/v3beta1/page.ts",
        "dialogflow/v3beta1/securitySetting.ts",
        "dialogflow/v3beta1/sessionEntityType.ts",
        "dialogflow/v3beta1/testCase.ts",
        "dialogflow/v3beta1/transitionRouteGroup.ts",
        "dialogflow/v3beta1/version.ts",
        "dialogflow/v3beta1/webhook.ts",
        "dlp/index.ts",
        "dlp/v2/deidentifyTemplate.ts",
        "dlp/v2/dlpJob.ts",
        "dlp/v2/getDeidentifyTemplate.ts",
        "dlp/v2/getDlpJob.ts",
        "dlp/v2/getInspectTemplate.ts",
        "dlp/v2/getJobTrigger.ts",
        "dlp/v2/getStoredInfoType.ts",
        "dlp/v2/index.ts",
        "dlp/v2/inspectTemplate.ts",
        "dlp/v2/jobTrigger.ts",
        "dlp/v2/storedInfoType.ts",
        "dns/index.ts",
        "dns/v1/change.ts",
        "dns/v1/getChange.ts",
        "dns/v1/getManagedZone.ts",
        "dns/v1/getPolicy.ts",
        "dns/v1/getResourceRecordSet.ts",
        "dns/v1/getResponsePolicy.ts",
        "dns/v1/getResponsePolicyRule.ts",
        "dns/v1/index.ts",
        "dns/v1/managedZone.ts",
        "dns/v1/policy.ts",
        "dns/v1/resourceRecordSet.ts",
        "dns/v1beta2/change.ts",
        "dns/v1beta2/getChange.ts",
        "dns/v1beta2/getManagedZone.ts",
        "dns/v1beta2/getPolicy.ts",
        "dns/v1beta2/getResourceRecordSet.ts",
        "dns/v1beta2/getResponsePolicy.ts",
        "dns/v1beta2/getResponsePolicyRule.ts",
        "dns/v1beta2/index.ts",
        "dns/v1beta2/managedZone.ts",
        "dns/v1beta2/policy.ts",
        "dns/v1beta2/resourceRecordSet.ts",
        "dns/v1beta2/responsePolicy.ts",
        "dns/v1beta2/responsePolicyRule.ts",
        "dns/v2/getChange.ts",
        "dns/v2/getManagedZone.ts",
        "dns/v2/getPolicy.ts",
        "dns/v2/getResourceRecordSet.ts",
        "dns/v2/getResponsePolicy.ts",
        "dns/v2/getResponsePolicyRule.ts",
        "dns/v2/index.ts",
        "dns/v2/managedZone.ts",
        "dns/v2/policy.ts",
        "dns/v2/resourceRecordSet.ts",
        "documentai/index.ts",
        "documentai/v1/getProcessor.ts",
        "documentai/v1/index.ts",
        "documentai/v1/processor.ts",
        "documentai/v1beta3/getProcessor.ts",
        "documentai/v1beta3/index.ts",
        "documentai/v1beta3/processor.ts",
        "domains/index.ts",
        "domains/v1/getRegistration.ts",
        "domains/v1/getRegistrationIamPolicy.ts",
        "domains/v1/index.ts",
        "domains/v1/registration.ts",
        "domains/v1/registrationIamPolicy.ts",
        "domains/v1alpha2/getRegistration.ts",
        "domains/v1alpha2/getRegistrationIamPolicy.ts",
        "domains/v1alpha2/index.ts",
        "domains/v1alpha2/registration.ts",
        "domains/v1alpha2/registrationIamPolicy.ts",
        "domains/v1beta1/getRegistration.ts",
        "domains/v1beta1/getRegistrationIamPolicy.ts",
        "domains/v1beta1/index.ts",
        "domains/v1beta1/registration.ts",
        "domains/v1beta1/registrationIamPolicy.ts",
        "essentialcontacts/index.ts",
        "essentialcontacts/v1/contact.ts",
        "essentialcontacts/v1/folderContact.ts",
        "essentialcontacts/v1/getContact.ts",
        "essentialcontacts/v1/getFolderContact.ts",
        "essentialcontacts/v1/getOrganizationContact.ts",
        "essentialcontacts/v1/index.ts",
        "essentialcontacts/v1/organizationContact.ts",
        "eventarc/index.ts",
        "eventarc/v1/channelConnectionIamPolicy.ts",
        "eventarc/v1/channelIamPolicy.ts",
        "eventarc/v1/getChannelConnectionIamPolicy.ts",
        "eventarc/v1/getChannelIamPolicy.ts",
        "eventarc/v1/getTrigger.ts",
        "eventarc/v1/getTriggerIamPolicy.ts",
        "eventarc/v1/index.ts",
        "eventarc/v1/trigger.ts",
        "eventarc/v1/triggerIamPolicy.ts",
        "eventarc/v1beta1/getTrigger.ts",
        "eventarc/v1beta1/getTriggerIamPolicy.ts",
        "eventarc/v1beta1/index.ts",
        "eventarc/v1beta1/trigger.ts",
        "eventarc/v1beta1/triggerIamPolicy.ts",
        "file/index.ts",
        "file/v1/backup.ts",
        "file/v1/getBackup.ts",
        "file/v1/getInstance.ts",
        "file/v1/getSnapshot.ts",
        "file/v1/index.ts",
        "file/v1/instance.ts",
        "file/v1/snapshot.ts",
        "file/v1beta1/backup.ts",
        "file/v1beta1/getBackup.ts",
        "file/v1beta1/getInstance.ts",
        "file/v1beta1/getSnapshot.ts",
        "file/v1beta1/index.ts",
        "file/v1beta1/instance.ts",
        "file/v1beta1/snapshot.ts",
        "firebase/index.ts",
        "firebase/v1beta1/androidApp.ts",
        "firebase/v1beta1/getAndroidApp.ts",
        "firebase/v1beta1/getIosApp.ts",
        "firebase/v1beta1/getWebApp.ts",
        "firebase/v1beta1/index.ts",
        "firebase/v1beta1/iosApp.ts",
        "firebase/v1beta1/webApp.ts",
        "firebaseappcheck/index.ts",
        "firebaseappcheck/v1beta/debugToken.ts",
        "firebaseappcheck/v1beta/getDebugToken.ts",
        "firebaseappcheck/v1beta/index.ts",
        "firebasedatabase/index.ts",
        "firebasedatabase/v1beta/getInstance.ts",
        "firebasedatabase/v1beta/index.ts",
        "firebasedatabase/v1beta/instance.ts",
        "firebasehosting/index.ts",
        "firebasehosting/v1beta1/channel.ts",
        "firebasehosting/v1beta1/domain.ts",
        "firebasehosting/v1beta1/getChannel.ts",
        "firebasehosting/v1beta1/getDomain.ts",
        "firebasehosting/v1beta1/getSite.ts",
        "firebasehosting/v1beta1/index.ts",
        "firebasehosting/v1beta1/site.ts",
        "firebaseml/index.ts",
        "firebaseml/v1beta2/getModel.ts",
        "firebaseml/v1beta2/index.ts",
        "firebaseml/v1beta2/model.ts",
        "firebaserules/index.ts",
        "firebaserules/v1/getRelease.ts",
        "firebaserules/v1/getRuleset.ts",
        "firebaserules/v1/index.ts",
        "firebaserules/v1/release.ts",
        "firebaserules/v1/ruleset.ts",
        "firestore/index.ts",
        "firestore/v1/getIndex.ts",
        "firestore/v1/index.ts",
        "firestore/v1/index_.ts",
        "firestore/v1beta1/getIndex.ts",
        "firestore/v1beta1/index.ts",
        "firestore/v1beta1/index_.ts",
        "firestore/v1beta2/getIndex.ts",
        "firestore/v1beta2/index.ts",
        "firestore/v1beta2/index_.ts",
        "gameservices/index.ts",
        "gameservices/v1/config.ts",
        "gameservices/v1/gameServerCluster.ts",
        "gameservices/v1/gameServerDeployment.ts",
        "gameservices/v1/gameServerDeploymentIamPolicy.ts",
        "gameservices/v1/getConfig.ts",
        "gameservices/v1/getGameServerCluster.ts",
        "gameservices/v1/getGameServerDeployment.ts",
        "gameservices/v1/getGameServerDeploymentIamPolicy.ts",
        "gameservices/v1/getRealm.ts",
        "gameservices/v1/index.ts",
        "gameservices/v1/realm.ts",
        "gameservices/v1beta/config.ts",
        "gameservices/v1beta/gameServerCluster.ts",
        "gameservices/v1beta/gameServerDeployment.ts",
        "gameservices/v1beta/gameServerDeploymentIamPolicy.ts",
        "gameservices/v1beta/getConfig.ts",
        "gameservices/v1beta/getGameServerCluster.ts",
        "gameservices/v1beta/getGameServerDeployment.ts",
        "gameservices/v1beta/getGameServerDeploymentIamPolicy.ts",
        "gameservices/v1beta/getRealm.ts",
        "gameservices/v1beta/index.ts",
        "gameservices/v1beta/realm.ts",
        "genomics/index.ts",
        "genomics/v1alpha2/getPipeline.ts",
        "genomics/v1alpha2/index.ts",
        "genomics/v1alpha2/pipeline.ts",
        "gkehub/index.ts",
        "gkehub/v1/feature.ts",
        "gkehub/v1/featureIamPolicy.ts",
        "gkehub/v1/getFeature.ts",
        "gkehub/v1/getFeatureIamPolicy.ts",
        "gkehub/v1/getMembership.ts",
        "gkehub/v1/getMembershipIamPolicy.ts",
        "gkehub/v1/index.ts",
        "gkehub/v1/membership.ts",
        "gkehub/v1/membershipIamPolicy.ts",
        "gkehub/v1alpha/feature.ts",
        "gkehub/v1alpha/featureIamPolicy.ts",
        "gkehub/v1alpha/fleet.ts",
        "gkehub/v1alpha/getFeature.ts",
        "gkehub/v1alpha/getFeatureIamPolicy.ts",
        "gkehub/v1alpha/getFleet.ts",
        "gkehub/v1alpha/getMembership.ts",
        "gkehub/v1alpha/getMembershipIamPolicy.ts",
        "gkehub/v1alpha/index.ts",
        "gkehub/v1alpha/membership.ts",
        "gkehub/v1alpha/membershipIamPolicy.ts",
        "gkehub/v1alpha2/getMembership.ts",
        "gkehub/v1alpha2/getMembershipIamPolicy.ts",
        "gkehub/v1alpha2/index.ts",
        "gkehub/v1alpha2/membership.ts",
        "gkehub/v1alpha2/membershipIamPolicy.ts",
        "gkehub/v1beta/feature.ts",
        "gkehub/v1beta/featureIamPolicy.ts",
        "gkehub/v1beta/getFeature.ts",
        "gkehub/v1beta/getFeatureIamPolicy.ts",
        "gkehub/v1beta/getMembershipIamPolicy.ts",
        "gkehub/v1beta/index.ts",
        "gkehub/v1beta/membershipIamPolicy.ts",
        "gkehub/v1beta1/getMembership.ts",
        "gkehub/v1beta1/getMembershipIamPolicy.ts",
        "gkehub/v1beta1/index.ts",
        "gkehub/v1beta1/membership.ts",
        "gkehub/v1beta1/membershipIamPolicy.ts",
        "healthcare/index.ts",
        "healthcare/v1/attributeDefinition.ts",
        "healthcare/v1/consent.ts",
        "healthcare/v1/consentArtifact.ts",
        "healthcare/v1/consentStore.ts",
        "healthcare/v1/dataset.ts",
        "healthcare/v1/datasetConsentStoreIamPolicy.ts",
        "healthcare/v1/datasetDicomStoreIamPolicy.ts",
        "healthcare/v1/datasetFhirStoreIamPolicy.ts",
        "healthcare/v1/datasetHl7V2StoreIamPolicy.ts",
        "healthcare/v1/datasetIamPolicy.ts",
        "healthcare/v1/dicomStore.ts",
        "healthcare/v1/fhirStore.ts",
        "healthcare/v1/getAttributeDefinition.ts",
        "healthcare/v1/getConsent.ts",
        "healthcare/v1/getConsentArtifact.ts",
        "healthcare/v1/getConsentStore.ts",
        "healthcare/v1/getDataset.ts",
        "healthcare/v1/getDatasetConsentStoreIamPolicy.ts",
        "healthcare/v1/getDatasetDicomStoreIamPolicy.ts",
        "healthcare/v1/getDatasetFhirStoreIamPolicy.ts",
        "healthcare/v1/getDatasetHl7V2StoreIamPolicy.ts",
        "healthcare/v1/getDatasetIamPolicy.ts",
        "healthcare/v1/getDicomStore.ts",
        "healthcare/v1/getFhir.ts",
        "healthcare/v1/getFhirStore.ts",
        "healthcare/v1/getHl7V2Store.ts",
        "healthcare/v1/getMessage.ts",
        "healthcare/v1/getUserDataMapping.ts",
        "healthcare/v1/hl7V2Store.ts",
        "healthcare/v1/index.ts",
        "healthcare/v1/message.ts",
        "healthcare/v1/userDataMapping.ts",
        "healthcare/v1beta1/annotation.ts",
        "healthcare/v1beta1/annotationStore.ts",
        "healthcare/v1beta1/attributeDefinition.ts",
        "healthcare/v1beta1/consent.ts",
        "healthcare/v1beta1/consentArtifact.ts",
        "healthcare/v1beta1/consentStore.ts",
        "healthcare/v1beta1/dataset.ts",
        "healthcare/v1beta1/datasetAnnotationStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetConsentStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetDicomStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetFhirStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetHl7V2StoreIamPolicy.ts",
        "healthcare/v1beta1/datasetIamPolicy.ts",
        "healthcare/v1beta1/dicomStore.ts",
        "healthcare/v1beta1/fhirStore.ts",
        "healthcare/v1beta1/getAnnotation.ts",
        "healthcare/v1beta1/getAnnotationStore.ts",
        "healthcare/v1beta1/getAttributeDefinition.ts",
        "healthcare/v1beta1/getConsent.ts",
        "healthcare/v1beta1/getConsentArtifact.ts",
        "healthcare/v1beta1/getConsentStore.ts",
        "healthcare/v1beta1/getDataset.ts",
        "healthcare/v1beta1/getDatasetAnnotationStoreIamPolicy.ts",
        "healthcare/v1beta1/getDatasetConsentStoreIamPolicy.ts",
        "healthcare/v1beta1/getDatasetDicomStoreIamPolicy.ts",
        "healthcare/v1beta1/getDatasetFhirStoreIamPolicy.ts",
        "healthcare/v1beta1/getDatasetHl7V2StoreIamPolicy.ts",
        "healthcare/v1beta1/getDatasetIamPolicy.ts",
        "healthcare/v1beta1/getDicomStore.ts",
        "healthcare/v1beta1/getFhir.ts",
        "healthcare/v1beta1/getFhirStore.ts",
        "healthcare/v1beta1/getHl7V2Store.ts",
        "healthcare/v1beta1/getMessage.ts",
        "healthcare/v1beta1/getUserDataMapping.ts",
        "healthcare/v1beta1/hl7V2Store.ts",
        "healthcare/v1beta1/index.ts",
        "healthcare/v1beta1/message.ts",
        "healthcare/v1beta1/userDataMapping.ts",
        "iam/index.ts",
        "iam/v1/getKey.ts",
        "iam/v1/getOrganizationRole.ts",
        "iam/v1/getProvider.ts",
        "iam/v1/getRole.ts",
        "iam/v1/getServiceAccount.ts",
        "iam/v1/getServiceAccountIamPolicy.ts",
        "iam/v1/getWorkloadIdentityPool.ts",
        "iam/v1/index.ts",
        "iam/v1/key.ts",
        "iam/v1/organizationRole.ts",
        "iam/v1/provider.ts",
        "iam/v1/role.ts",
        "iam/v1/serviceAccount.ts",
        "iam/v1/serviceAccountIamPolicy.ts",
        "iam/v1/workloadIdentityPool.ts",
        "iap/index.ts",
        "iap/v1/brand.ts",
        "iap/v1/destGroup.ts",
        "iap/v1/getBrand.ts",
        "iap/v1/getDestGroup.ts",
        "iap/v1/getIdentityAwareProxyClient.ts",
        "iap/v1/getV1IamPolicy.ts",
        "iap/v1/identityAwareProxyClient.ts",
        "iap/v1/index.ts",
        "iap/v1/v1iamPolicy.ts",
        "iap/v1beta1/getV1beta1IamPolicy.ts",
        "iap/v1beta1/index.ts",
        "iap/v1beta1/v1beta1IamPolicy.ts",
        "ids/index.ts",
        "ids/v1/endpoint.ts",
        "ids/v1/endpointIamPolicy.ts",
        "ids/v1/getEndpoint.ts",
        "ids/v1/getEndpointIamPolicy.ts",
        "ids/v1/index.ts",
        "index.ts",
        "iot/classic/index.ts",
        "iot/classic/registry.ts",
        "iot/index.ts",
        "jobs/index.ts",
        "jobs/v3/company.ts",
        "jobs/v3/getCompany.ts",
        "jobs/v3/getJob.ts",
        "jobs/v3/index.ts",
        "jobs/v3/job.ts",
        "jobs/v4/company.ts",
        "jobs/v4/getCompany.ts",
        "jobs/v4/getJob.ts",
        "jobs/v4/getTenant.ts",
        "jobs/v4/index.ts",
        "jobs/v4/job.ts",
        "jobs/v4/tenant.ts",
        "kms/classic/index.ts",
        "kms/classic/registry.ts",
        "kms/index.ts",
        "logging/index.ts",
        "logging/v2/billingAccountExclusion.ts",
        "logging/v2/billingAccountSink.ts",
        "logging/v2/getBillingAccountExclusion.ts",
        "logging/v2/getBillingAccountSink.ts",
        "logging/v2/index.ts",
        "managedidentities/index.ts",
        "managedidentities/v1/backup.ts",
        "managedidentities/v1/domain.ts",
        "managedidentities/v1/domainBackupIamPolicy.ts",
        "managedidentities/v1/domainIamPolicy.ts",
        "managedidentities/v1/getBackup.ts",
        "managedidentities/v1/getDomain.ts",
        "managedidentities/v1/getDomainBackupIamPolicy.ts",
        "managedidentities/v1/getDomainIamPolicy.ts",
        "managedidentities/v1/getPeering.ts",
        "managedidentities/v1/getPeeringIamPolicy.ts",
        "managedidentities/v1/index.ts",
        "managedidentities/v1/peering.ts",
        "managedidentities/v1/peeringIamPolicy.ts",
        "managedidentities/v1alpha1/backup.ts",
        "managedidentities/v1alpha1/domain.ts",
        "managedidentities/v1alpha1/domainBackupIamPolicy.ts",
        "managedidentities/v1alpha1/domainIamPolicy.ts",
        "managedidentities/v1alpha1/getBackup.ts",
        "managedidentities/v1alpha1/getDomain.ts",
        "managedidentities/v1alpha1/getDomainBackupIamPolicy.ts",
        "managedidentities/v1alpha1/getDomainIamPolicy.ts",
        "managedidentities/v1alpha1/getPeering.ts",
        "managedidentities/v1alpha1/getPeeringIamPolicy.ts",
        "managedidentities/v1alpha1/index.ts",
        "managedidentities/v1alpha1/peering.ts",
        "managedidentities/v1alpha1/peeringIamPolicy.ts",
        "managedidentities/v1beta1/backup.ts",
        "managedidentities/v1beta1/domain.ts",
        "managedidentities/v1beta1/domainBackupIamPolicy.ts",
        "managedidentities/v1beta1/domainIamPolicy.ts",
        "managedidentities/v1beta1/getBackup.ts",
        "managedidentities/v1beta1/getDomain.ts",
        "managedidentities/v1beta1/getDomainBackupIamPolicy.ts",
        "managedidentities/v1beta1/getDomainIamPolicy.ts",
        "managedidentities/v1beta1/getPeering.ts",
        "managedidentities/v1beta1/getPeeringIamPolicy.ts",
        "managedidentities/v1beta1/index.ts",
        "managedidentities/v1beta1/peering.ts",
        "managedidentities/v1beta1/peeringIamPolicy.ts",
        "memcache/index.ts",
        "memcache/v1/getInstance.ts",
        "memcache/v1/index.ts",
        "memcache/v1/instance.ts",
        "memcache/v1beta2/getInstance.ts",
        "memcache/v1beta2/index.ts",
        "memcache/v1beta2/instance.ts",
        "metastore/index.ts",
        "metastore/v1alpha/backup.ts",
        "metastore/v1alpha/getBackup.ts",
        "metastore/v1alpha/getMetadataImport.ts",
        "metastore/v1alpha/getService.ts",
        "metastore/v1alpha/getServiceBackupIamPolicy.ts",
        "metastore/v1alpha/getServiceDatabaseIamPolicy.ts",
        "metastore/v1alpha/getServiceDatabaseTableIamPolicy.ts",
        "metastore/v1alpha/getServiceIamPolicy.ts",
        "metastore/v1alpha/index.ts",
        "metastore/v1alpha/metadataImport.ts",
        "metastore/v1alpha/service.ts",
        "metastore/v1alpha/serviceBackupIamPolicy.ts",
        "metastore/v1alpha/serviceDatabaseIamPolicy.ts",
        "metastore/v1alpha/serviceDatabaseTableIamPolicy.ts",
        "metastore/v1alpha/serviceIamPolicy.ts",
        "metastore/v1beta/backup.ts",
        "metastore/v1beta/getBackup.ts",
        "metastore/v1beta/getMetadataImport.ts",
        "metastore/v1beta/getService.ts",
        "metastore/v1beta/getServiceBackupIamPolicy.ts",
        "metastore/v1beta/getServiceDatabaseIamPolicy.ts",
        "metastore/v1beta/getServiceDatabaseTableIamPolicy.ts",
        "metastore/v1beta/getServiceIamPolicy.ts",
        "metastore/v1beta/index.ts",
        "metastore/v1beta/metadataImport.ts",
        "metastore/v1beta/service.ts",
        "metastore/v1beta/serviceBackupIamPolicy.ts",
        "metastore/v1beta/serviceDatabaseIamPolicy.ts",
        "metastore/v1beta/serviceDatabaseTableIamPolicy.ts",
        "metastore/v1beta/serviceIamPolicy.ts",
        "ml/index.ts",
        "ml/v1/getJob.ts",
        "ml/v1/getJobIamPolicy.ts",
        "ml/v1/getModel.ts",
        "ml/v1/getModelIamPolicy.ts",
        "ml/v1/getStudy.ts",
        "ml/v1/getTrial.ts",
        "ml/v1/getVersion.ts",
        "ml/v1/index.ts",
        "ml/v1/job.ts",
        "ml/v1/jobIamPolicy.ts",
        "ml/v1/model.ts",
        "ml/v1/modelIamPolicy.ts",
        "ml/v1/study.ts",
        "ml/v1/trial.ts",
        "ml/v1/version.ts",
        "monitoring/classic/getSecretVersion.ts",
        "monitoring/classic/index.ts",
        "monitoring/index.ts",
        "monitoring/v1/dashboard.ts",
        "monitoring/v1/getDashboard.ts",
        "monitoring/v1/index.ts",
        "monitoring/v3/alertPolicy.ts",
        "monitoring/v3/getAlertPolicy.ts",
        "monitoring/v3/getGroup.ts",
        "monitoring/v3/getMetricDescriptor.ts",
        "monitoring/v3/getNotificationChannel.ts",
        "monitoring/v3/getService.ts",
        "monitoring/v3/getServiceLevelObjective.ts",
        "monitoring/v3/getUptimeCheckConfig.ts",
        "monitoring/v3/group.ts",
        "monitoring/v3/index.ts",
        "monitoring/v3/metricDescriptor.ts",
        "monitoring/v3/notificationChannel.ts",
        "monitoring/v3/service.ts",
        "monitoring/v3/serviceLevelObjective.ts",
        "monitoring/v3/uptimeCheckConfig.ts",
        "networkconnectivity/index.ts",
        "networkconnectivity/v1/getHub.ts",
        "networkconnectivity/v1/getHubIamPolicy.ts",
        "networkconnectivity/v1/getPolicyBasedRouteIamPolicy.ts",
        "networkconnectivity/v1/getSpoke.ts",
        "networkconnectivity/v1/getSpokeIamPolicy.ts",
        "networkconnectivity/v1/hub.ts",
        "networkconnectivity/v1/hubIamPolicy.ts",
        "networkconnectivity/v1/index.ts",
        "networkconnectivity/v1/policyBasedRouteIamPolicy.ts",
        "networkconnectivity/v1/spoke.ts",
        "networkconnectivity/v1/spokeIamPolicy.ts",
        "networkconnectivity/v1alpha1/getHub.ts",
        "networkconnectivity/v1alpha1/getHubIamPolicy.ts",
        "networkconnectivity/v1alpha1/getInternalRangeIamPolicy.ts",
        "networkconnectivity/v1alpha1/getSpoke.ts",
        "networkconnectivity/v1alpha1/getSpokeIamPolicy.ts",
        "networkconnectivity/v1alpha1/hub.ts",
        "networkconnectivity/v1alpha1/hubIamPolicy.ts",
        "networkconnectivity/v1alpha1/index.ts",
        "networkconnectivity/v1alpha1/internalRangeIamPolicy.ts",
        "networkconnectivity/v1alpha1/spoke.ts",
        "networkconnectivity/v1alpha1/spokeIamPolicy.ts",
        "networkmanagement/index.ts",
        "networkmanagement/v1/connectivityTest.ts",
        "networkmanagement/v1/connectivityTestIamPolicy.ts",
        "networkmanagement/v1/getConnectivityTest.ts",
        "networkmanagement/v1/getConnectivityTestIamPolicy.ts",
        "networkmanagement/v1/index.ts",
        "networkmanagement/v1beta1/connectivityTest.ts",
        "networkmanagement/v1beta1/connectivityTestIamPolicy.ts",
        "networkmanagement/v1beta1/getConnectivityTest.ts",
        "networkmanagement/v1beta1/getConnectivityTestIamPolicy.ts",
        "networkmanagement/v1beta1/index.ts",
        "networksecurity/index.ts",
        "networksecurity/v1/authorizationPolicy.ts",
        "networksecurity/v1/authorizationPolicyIamPolicy.ts",
        "networksecurity/v1/clientTlsPolicy.ts",
        "networksecurity/v1/clientTlsPolicyIamPolicy.ts",
        "networksecurity/v1/getAuthorizationPolicy.ts",
        "networksecurity/v1/getAuthorizationPolicyIamPolicy.ts",
        "networksecurity/v1/getClientTlsPolicy.ts",
        "networksecurity/v1/getClientTlsPolicyIamPolicy.ts",
        "networksecurity/v1/getServerTlsPolicy.ts",
        "networksecurity/v1/getServerTlsPolicyIamPolicy.ts",
        "networksecurity/v1/index.ts",
        "networksecurity/v1/serverTlsPolicy.ts",
        "networksecurity/v1/serverTlsPolicyIamPolicy.ts",
        "networksecurity/v1beta1/authorizationPolicy.ts",
        "networksecurity/v1beta1/authorizationPolicyIamPolicy.ts",
        "networksecurity/v1beta1/clientTlsPolicy.ts",
        "networksecurity/v1beta1/clientTlsPolicyIamPolicy.ts",
        "networksecurity/v1beta1/getAuthorizationPolicy.ts",
        "networksecurity/v1beta1/getAuthorizationPolicyIamPolicy.ts",
        "networksecurity/v1beta1/getClientTlsPolicy.ts",
        "networksecurity/v1beta1/getClientTlsPolicyIamPolicy.ts",
        "networksecurity/v1beta1/getServerTlsPolicy.ts",
        "networksecurity/v1beta1/getServerTlsPolicyIamPolicy.ts",
        "networksecurity/v1beta1/index.ts",
        "networksecurity/v1beta1/serverTlsPolicy.ts",
        "networksecurity/v1beta1/serverTlsPolicyIamPolicy.ts",
        "networkservices/index.ts",
        "networkservices/v1/edgeCacheKeysetIamPolicy.ts",
        "networkservices/v1/edgeCacheOriginIamPolicy.ts",
        "networkservices/v1/edgeCacheServiceIamPolicy.ts",
        "networkservices/v1/endpointPolicy.ts",
        "networkservices/v1/endpointPolicyIamPolicy.ts",
        "networkservices/v1/getEdgeCacheKeysetIamPolicy.ts",
        "networkservices/v1/getEdgeCacheOriginIamPolicy.ts",
        "networkservices/v1/getEdgeCacheServiceIamPolicy.ts",
        "networkservices/v1/getEndpointPolicy.ts",
        "networkservices/v1/getEndpointPolicyIamPolicy.ts",
        "networkservices/v1/index.ts",
        "networkservices/v1beta1/endpointPolicy.ts",
        "networkservices/v1beta1/endpointPolicyIamPolicy.ts",
        "networkservices/v1beta1/gateway.ts",
        "networkservices/v1beta1/gatewayIamPolicy.ts",
        "networkservices/v1beta1/getEndpointPolicy.ts",
        "networkservices/v1beta1/getEndpointPolicyIamPolicy.ts",
        "networkservices/v1beta1/getGateway.ts",
        "networkservices/v1beta1/getGatewayIamPolicy.ts",
        "networkservices/v1beta1/getGrpcRoute.ts",
        "networkservices/v1beta1/getHttpRoute.ts",
        "networkservices/v1beta1/getMesh.ts",
        "networkservices/v1beta1/getMeshIamPolicy.ts",
        "networkservices/v1beta1/getServiceBinding.ts",
        "networkservices/v1beta1/getServiceBindingIamPolicy.ts",
        "networkservices/v1beta1/getTcpRoute.ts",
        "networkservices/v1beta1/getTlsRoute.ts",
        "networkservices/v1beta1/grpcRoute.ts",
        "networkservices/v1beta1/httpRoute.ts",
        "networkservices/v1beta1/index.ts",
        "networkservices/v1beta1/mesh.ts",
        "networkservices/v1beta1/meshIamPolicy.ts",
        "networkservices/v1beta1/serviceBinding.ts",
        "networkservices/v1beta1/serviceBindingIamPolicy.ts",
        "networkservices/v1beta1/tcpRoute.ts",
        "networkservices/v1beta1/tlsRoute.ts",
        "notebooks/index.ts",
        "notebooks/v1/environment.ts",
        "notebooks/v1/execution.ts",
        "notebooks/v1/getEnvironment.ts",
        "notebooks/v1/getExecution.ts",
        "notebooks/v1/getInstance.ts",
        "notebooks/v1/getInstanceIamPolicy.ts",
        "notebooks/v1/getRuntime.ts",
        "notebooks/v1/getRuntimeIamPolicy.ts",
        "notebooks/v1/getSchedule.ts",
        "notebooks/v1/index.ts",
        "notebooks/v1/instance.ts",
        "notebooks/v1/instanceIamPolicy.ts",
        "notebooks/v1/runtime.ts",
        "notebooks/v1/runtimeIamPolicy.ts",
        "notebooks/v1/schedule.ts",
        "organizations/classic/getProject.ts",
        "organizations/classic/index.ts",
        "organizations/classic/project.ts",
        "organizations/index.ts",
        "orgpolicy/index.ts",
        "orgpolicy/v2/folderPolicy.ts",
        "orgpolicy/v2/getFolderPolicy.ts",
        "orgpolicy/v2/getOrganizationPolicy.ts",
        "orgpolicy/v2/getPolicy.ts",
        "orgpolicy/v2/index.ts",
        "orgpolicy/v2/organizationPolicy.ts",
        "orgpolicy/v2/policy.ts",
        "osconfig/index.ts",
        "osconfig/v1/getOsPolicyAssignment.ts",
        "osconfig/v1/getPatchDeployment.ts",
        "osconfig/v1/index.ts",
        "osconfig/v1/osPolicyAssignment.ts",
        "osconfig/v1/patchDeployment.ts",
        "osconfig/v1alpha/getOsPolicyAssignment.ts",
        "osconfig/v1alpha/index.ts",
        "osconfig/v1alpha/osPolicyAssignment.ts",
        "osconfig/v1beta/getGuestPolicy.ts",
        "osconfig/v1beta/getPatchDeployment.ts",
        "osconfig/v1beta/guestPolicy.ts",
        "osconfig/v1beta/index.ts",
        "osconfig/v1beta/patchDeployment.ts",
        "oslogin/index.ts",
        "oslogin/v1/getSshPublicKey.ts",
        "oslogin/v1/index.ts",
        "oslogin/v1/sshPublicKey.ts",
        "oslogin/v1alpha/getSshPublicKey.ts",
        "oslogin/v1alpha/index.ts",
        "oslogin/v1alpha/sshPublicKey.ts",
        "oslogin/v1beta/getSshPublicKey.ts",
        "oslogin/v1beta/index.ts",
        "oslogin/v1beta/sshPublicKey.ts",
        "policysimulator/index.ts",
        "policysimulator/v1/folderReplay.ts",
        "policysimulator/v1/getFolderReplay.ts",
        "policysimulator/v1/getOrganizationReplay.ts",
        "policysimulator/v1/getReplay.ts",
        "policysimulator/v1/index.ts",
        "policysimulator/v1/organizationReplay.ts",
        "policysimulator/v1/replay.ts",
        "policysimulator/v1beta1/folderReplay.ts",
        "policysimulator/v1beta1/getFolderReplay.ts",
        "policysimulator/v1beta1/getOrganizationReplay.ts",
        "policysimulator/v1beta1/getReplay.ts",
        "policysimulator/v1beta1/index.ts",
        "policysimulator/v1beta1/organizationReplay.ts",
        "policysimulator/v1beta1/replay.ts",
        "privateca/index.ts",
        "privateca/v1/caPool.ts",
        "privateca/v1/caPoolCertificateAuthorityCertificateRevocationListIamPolicy.ts",
        "privateca/v1/caPoolIamPolicy.ts",
        "privateca/v1/certificate.ts",
        "privateca/v1/certificateAuthority.ts",
        "privateca/v1/certificateTemplate.ts",
        "privateca/v1/certificateTemplateIamPolicy.ts",
        "privateca/v1/getCaPool.ts",
        "privateca/v1/getCaPoolCertificateAuthorityCertificateRevocationListIamPolicy.ts",
        "privateca/v1/getCaPoolIamPolicy.ts",
        "privateca/v1/getCertificate.ts",
        "privateca/v1/getCertificateAuthority.ts",
        "privateca/v1/getCertificateTemplate.ts",
        "privateca/v1/getCertificateTemplateIamPolicy.ts",
        "privateca/v1/index.ts",
        "privateca/v1beta1/certificate.ts",
        "privateca/v1beta1/certificateAuthority.ts",
        "privateca/v1beta1/certificateAuthorityCertificateRevocationListIamPolicy.ts",
        "privateca/v1beta1/certificateAuthorityIamPolicy.ts",
        "privateca/v1beta1/getCertificate.ts",
        "privateca/v1beta1/getCertificateAuthority.ts",
        "privateca/v1beta1/getCertificateAuthorityCertificateRevocationListIamPolicy.ts",
        "privateca/v1beta1/getCertificateAuthorityIamPolicy.ts",
        "privateca/v1beta1/getReusableConfigIamPolicy.ts",
        "privateca/v1beta1/index.ts",
        "privateca/v1beta1/reusableConfigIamPolicy.ts",
        "projects/classic/accessApprovalSettings.ts",
        "projects/classic/defaultServiceAccounts.ts",
        "projects/classic/iamauditConfig.ts",
        "projects/classic/iambinding.ts",
        "projects/classic/iamcustomRole.ts",
        "projects/classic/iammember.ts",
        "projects/classic/iampolicy.ts",
        "projects/classic/index.ts",
        "projects/classic/organizationPolicy.ts",
        "projects/classic/service.ts",
        "projects/classic/serviceIdentity.ts",
        "projects/classic/usageExportBucket.ts",
        "projects/index.ts",
        "provider.ts",
        "pubsub/index.ts",
        "pubsub/v1/getSchema.ts",
        "pubsub/v1/getSchemaIamPolicy.ts",
        "pubsub/v1/getSnapshot.ts",
        "pubsub/v1/getSnapshotIamPolicy.ts",
        "pubsub/v1/getSubscription.ts",
        "pubsub/v1/getSubscriptionIamPolicy.ts",
        "pubsub/v1/getTopic.ts",
        "pubsub/v1/getTopicIamPolicy.ts",
        "pubsub/v1/index.ts",
        "pubsub/v1/schema.ts",
        "pubsub/v1/schemaIamPolicy.ts",
        "pubsub/v1/snapshot.ts",
        "pubsub/v1/snapshotIamPolicy.ts",
        "pubsub/v1/subscription.ts",
        "pubsub/v1/subscriptionIamPolicy.ts",
        "pubsub/v1/topic.ts",
        "pubsub/v1/topicIamPolicy.ts",
        "pubsub/v1beta1a/getSubscription.ts",
        "pubsub/v1beta1a/getTopic.ts",
        "pubsub/v1beta1a/index.ts",
        "pubsub/v1beta1a/subscription.ts",
        "pubsub/v1beta1a/topic.ts",
        "pubsub/v1beta2/getSubscription.ts",
        "pubsub/v1beta2/getSubscriptionIamPolicy.ts",
        "pubsub/v1beta2/getTopic.ts",
        "pubsub/v1beta2/getTopicIamPolicy.ts",
        "pubsub/v1beta2/index.ts",
        "pubsub/v1beta2/subscription.ts",
        "pubsub/v1beta2/subscriptionIamPolicy.ts",
        "pubsub/v1beta2/topic.ts",
        "pubsub/v1beta2/topicIamPolicy.ts",
        "pubsublite/index.ts",
        "pubsublite/v1/getReservation.ts",
        "pubsublite/v1/getSubscription.ts",
        "pubsublite/v1/getTopic.ts",
        "pubsublite/v1/index.ts",
        "pubsublite/v1/reservation.ts",
        "pubsublite/v1/subscription.ts",
        "pubsublite/v1/topic.ts",
        "recaptchaenterprise/index.ts",
        "recaptchaenterprise/v1/getKey.ts",
        "recaptchaenterprise/v1/index.ts",
        "recaptchaenterprise/v1/key.ts",
        "recommendationengine/index.ts",
        "recommendationengine/v1beta1/catalogItem.ts",
        "recommendationengine/v1beta1/getCatalogItem.ts",
        "recommendationengine/v1beta1/index.ts",
        "redis/index.ts",
        "redis/v1/getInstance.ts",
        "redis/v1/index.ts",
        "redis/v1/instance.ts",
        "redis/v1beta1/getInstance.ts",
        "redis/v1beta1/index.ts",
        "redis/v1beta1/instance.ts",
        "remotebuildexecution/index.ts",
        "remotebuildexecution/v1alpha/getInstance.ts",
        "remotebuildexecution/v1alpha/getWorkerPool.ts",
        "remotebuildexecution/v1alpha/index.ts",
        "remotebuildexecution/v1alpha/instance.ts",
        "remotebuildexecution/v1alpha/workerPool.ts",
        "retail/index.ts",
        "retail/v2/getProduct.ts",
        "retail/v2/index.ts",
        "retail/v2/product.ts",
        "retail/v2alpha/control.ts",
        "retail/v2alpha/getControl.ts",
        "retail/v2alpha/getProduct.ts",
        "retail/v2alpha/getServingConfig.ts",
        "retail/v2alpha/index.ts",
        "retail/v2alpha/product.ts",
        "retail/v2alpha/servingConfig.ts",
        "retail/v2beta/control.ts",
        "retail/v2beta/getControl.ts",
        "retail/v2beta/getProduct.ts",
        "retail/v2beta/getServingConfig.ts",
        "retail/v2beta/index.ts",
        "retail/v2beta/product.ts",
        "retail/v2beta/servingConfig.ts",
        "run/index.ts",
        "run/v1/domainMapping.ts",
        "run/v1/getDomainMapping.ts",
        "run/v1/getJobIamPolicy.ts",
        "run/v1/getService.ts",
        "run/v1/getServiceIamPolicy.ts",
        "run/v1/index.ts",
        "run/v1/jobIamPolicy.ts",
        "run/v1/service.ts",
        "run/v1/serviceIamPolicy.ts",
        "run/v1alpha1/getJob.ts",
        "run/v1alpha1/index.ts",
        "run/v1alpha1/job.ts",
        "run/v2/getService.ts",
        "run/v2/getServiceIamPolicy.ts",
        "run/v2/index.ts",
        "run/v2/service.ts",
        "run/v2/serviceIamPolicy.ts",
        "runtimeconfig/index.ts",
        "runtimeconfig/v1beta1/config.ts",
        "runtimeconfig/v1beta1/configIamPolicy.ts",
        "runtimeconfig/v1beta1/getConfig.ts",
        "runtimeconfig/v1beta1/getConfigIamPolicy.ts",
        "runtimeconfig/v1beta1/getVariable.ts",
        "runtimeconfig/v1beta1/getWaiter.ts",
        "runtimeconfig/v1beta1/index.ts",
        "runtimeconfig/v1beta1/variable.ts",
        "runtimeconfig/v1beta1/waiter.ts",
        "secretmanager/classic/getSecretVersion.ts",
        "secretmanager/classic/index.ts",
        "secretmanager/index.ts",
        "secretmanager/v1/getSecret.ts",
        "secretmanager/v1/getSecretIamPolicy.ts",
        "secretmanager/v1/index.ts",
        "secretmanager/v1/secret.ts",
        "secretmanager/v1/secretIamPolicy.ts",
        "secretmanager/v1beta1/getSecret.ts",
        "secretmanager/v1beta1/getSecretIamPolicy.ts",
        "secretmanager/v1beta1/index.ts",
        "secretmanager/v1beta1/secret.ts",
        "secretmanager/v1beta1/secretIamPolicy.ts",
        "securitycenter/index.ts",
        "securitycenter/v1/folderBigQueryExport.ts",
        "securitycenter/v1/getFolderBigQueryExport.ts",
        "securitycenter/v1/getMuteConfig.ts",
        "securitycenter/v1/getNotificationConfig.ts",
        "securitycenter/v1/getOrganizationBigQueryExport.ts",
        "securitycenter/v1/getOrganizationMuteConfig.ts",
        "securitycenter/v1/getOrganizationSourceIamPolicy.ts",
        "securitycenter/v1/getProjectBigQueryExport.ts",
        "securitycenter/v1/getSource.ts",
        "securitycenter/v1/index.ts",
        "securitycenter/v1/muteConfig.ts",
        "securitycenter/v1/notificationConfig.ts",
        "securitycenter/v1/organizationBigQueryExport.ts",
        "securitycenter/v1/organizationMuteConfig.ts",
        "securitycenter/v1/organizationSourceIamPolicy.ts",
        "securitycenter/v1/projectBigQueryExport.ts",
        "securitycenter/v1/source.ts",
        "securitycenter/v1beta1/getOrganizationSourceIamPolicy.ts",
        "securitycenter/v1beta1/getSource.ts",
        "securitycenter/v1beta1/index.ts",
        "securitycenter/v1beta1/organizationSourceIamPolicy.ts",
        "securitycenter/v1beta1/source.ts",
        "servicedirectory/index.ts",
        "servicedirectory/v1/endpoint.ts",
        "servicedirectory/v1/getEndpoint.ts",
        "servicedirectory/v1/getNamespace.ts",
        "servicedirectory/v1/getNamespaceIamPolicy.ts",
        "servicedirectory/v1/getNamespaceServiceIamPolicy.ts",
        "servicedirectory/v1/getService.ts",
        "servicedirectory/v1/index.ts",
        "servicedirectory/v1/namespace.ts",
        "servicedirectory/v1/namespaceIamPolicy.ts",
        "servicedirectory/v1/namespaceServiceIamPolicy.ts",
        "servicedirectory/v1/service.ts",
        "servicedirectory/v1beta1/endpoint.ts",
        "servicedirectory/v1beta1/getEndpoint.ts",
        "servicedirectory/v1beta1/getNamespace.ts",
        "servicedirectory/v1beta1/getNamespaceIamPolicy.ts",
        "servicedirectory/v1beta1/getNamespaceServiceIamPolicy.ts",
        "servicedirectory/v1beta1/getService.ts",
        "servicedirectory/v1beta1/index.ts",
        "servicedirectory/v1beta1/namespace.ts",
        "servicedirectory/v1beta1/namespaceIamPolicy.ts",
        "servicedirectory/v1beta1/namespaceServiceIamPolicy.ts",
        "servicedirectory/v1beta1/service.ts",
        "servicemanagement/index.ts",
        "servicemanagement/v1/config.ts",
        "servicemanagement/v1/getConfig.ts",
        "servicemanagement/v1/getRollout.ts",
        "servicemanagement/v1/getService.ts",
        "servicemanagement/v1/getServiceConsumerIamPolicy.ts",
        "servicemanagement/v1/getServiceIamPolicy.ts",
        "servicemanagement/v1/index.ts",
        "servicemanagement/v1/rollout.ts",
        "servicemanagement/v1/service.ts",
        "servicemanagement/v1/serviceConsumerIamPolicy.ts",
        "servicemanagement/v1/serviceIamPolicy.ts",
        "sourcerepo/index.ts",
        "sourcerepo/v1/getRepo.ts",
        "sourcerepo/v1/getRepoIamPolicy.ts",
        "sourcerepo/v1/index.ts",
        "sourcerepo/v1/repo.ts",
        "sourcerepo/v1/repoIamPolicy.ts",
        "spanner/index.ts",
        "spanner/v1/backup.ts",
        "spanner/v1/database.ts",
        "spanner/v1/getBackup.ts",
        "spanner/v1/getDatabase.ts",
        "spanner/v1/getInstance.ts",
        "spanner/v1/getInstanceBackupIamPolicy.ts",
        "spanner/v1/getInstanceDatabaseIamPolicy.ts",
        "spanner/v1/getInstanceIamPolicy.ts",
        "spanner/v1/getSession.ts",
        "spanner/v1/index.ts",
        "spanner/v1/instance.ts",
        "spanner/v1/instanceBackupIamPolicy.ts",
        "spanner/v1/instanceDatabaseIamPolicy.ts",
        "spanner/v1/instanceIamPolicy.ts",
        "spanner/v1/session.ts",
        "speech/index.ts",
        "speech/v1/customClass.ts",
        "speech/v1/getCustomClass.ts",
        "speech/v1/getPhraseSet.ts",
        "speech/v1/index.ts",
        "speech/v1/phraseSet.ts",
        "sqladmin/index.ts",
        "sqladmin/v1/backupRun.ts",
        "sqladmin/v1/database.ts",
        "sqladmin/v1/getBackupRun.ts",
        "sqladmin/v1/getDatabase.ts",
        "sqladmin/v1/getInstance.ts",
        "sqladmin/v1/getSslCert.ts",
        "sqladmin/v1/index.ts",
        "sqladmin/v1/instance.ts",
        "sqladmin/v1/sslCert.ts",
        "sqladmin/v1beta4/backupRun.ts",
        "sqladmin/v1beta4/database.ts",
        "sqladmin/v1beta4/getBackupRun.ts",
        "sqladmin/v1beta4/getDatabase.ts",
        "sqladmin/v1beta4/getInstance.ts",
        "sqladmin/v1beta4/getSslCert.ts",
        "sqladmin/v1beta4/index.ts",
        "sqladmin/v1beta4/instance.ts",
        "sqladmin/v1beta4/sslCert.ts",
        "storage/index.ts",
        "storage/v1/bucket.ts",
        "storage/v1/bucketAccessControl.ts",
        "storage/v1/bucketIamPolicy.ts",
        "storage/v1/bucketObject.ts",
        "storage/v1/defaultObjectAccessControl.ts",
        "storage/v1/getBucket.ts",
        "storage/v1/getBucketAccessControl.ts",
        "storage/v1/getBucketIamPolicy.ts",
        "storage/v1/getBucketObject.ts",
        "storage/v1/getDefaultObjectAccessControl.ts",
        "storage/v1/getHmacKey.ts",
        "storage/v1/getNotification.ts",
        "storage/v1/getObjectAccessControl.ts",
        "storage/v1/getObjectIamPolicy.ts",
        "storage/v1/hmacKey.ts",
        "storage/v1/index.ts",
        "storage/v1/notification.ts",
        "storage/v1/objectAccessControl.ts",
        "storage/v1/objectIamPolicy.ts",
        "storagetransfer/index.ts",
        "storagetransfer/v1/agentPool.ts",
        "storagetransfer/v1/getAgentPool.ts",
        "storagetransfer/v1/getTransferJob.ts",
        "storagetransfer/v1/index.ts",
        "storagetransfer/v1/transferJob.ts",
        "testing/index.ts",
        "testing/v1/getTestMatrix.ts",
        "testing/v1/index.ts",
        "testing/v1/testMatrix.ts",
        "toolresults/index.ts",
        "toolresults/v1beta3/execution.ts",
        "toolresults/v1beta3/getExecution.ts",
        "toolresults/v1beta3/getHistory.ts",
        "toolresults/v1beta3/getPerfSampleSeries.ts",
        "toolresults/v1beta3/getStep.ts",
        "toolresults/v1beta3/history.ts",
        "toolresults/v1beta3/index.ts",
        "toolresults/v1beta3/perfSampleSeries.ts",
        "toolresults/v1beta3/step.ts",
        "tpu/index.ts",
        "tpu/v1/getNode.ts",
        "tpu/v1/index.ts",
        "tpu/v1/node.ts",
        "tpu/v1alpha1/getNode.ts",
        "tpu/v1alpha1/index.ts",
        "tpu/v1alpha1/node.ts",
        "tpu/v2alpha1/getNode.ts",
        "tpu/v2alpha1/index.ts",
        "tpu/v2alpha1/node.ts",
        "transcoder/index.ts",
        "transcoder/v1/getJob.ts",
        "transcoder/v1/getJobTemplate.ts",
        "transcoder/v1/index.ts",
        "transcoder/v1/job.ts",
        "transcoder/v1/jobTemplate.ts",
        "translate/index.ts",
        "translate/v3/getGlossary.ts",
        "translate/v3/glossary.ts",
        "translate/v3/index.ts",
        "translate/v3beta1/getGlossary.ts",
        "translate/v3beta1/glossary.ts",
        "translate/v3beta1/index.ts",
        "types/enums/accesscontextmanager/index.ts",
        "types/enums/accesscontextmanager/v1/index.ts",
        "types/enums/accesscontextmanager/v1beta/index.ts",
        "types/enums/apigateway/index.ts",
        "types/enums/apigateway/v1/index.ts",
        "types/enums/apigateway/v1beta/index.ts",
        "types/enums/apigee/index.ts",
        "types/enums/apigee/v1/index.ts",
        "types/enums/appengine/index.ts",
        "types/enums/appengine/v1/index.ts",
        "types/enums/appengine/v1beta/index.ts",
        "types/enums/artifactregistry/index.ts",
        "types/enums/artifactregistry/v1/index.ts",
        "types/enums/artifactregistry/v1beta1/index.ts",
        "types/enums/artifactregistry/v1beta2/index.ts",
        "types/enums/assuredworkloads/index.ts",
        "types/enums/assuredworkloads/v1/index.ts",
        "types/enums/baremetalsolution/index.ts",
        "types/enums/baremetalsolution/v2/index.ts",
        "types/enums/bigquery/index.ts",
        "types/enums/bigquery/v2/index.ts",
        "types/enums/bigqueryconnection/index.ts",
        "types/enums/bigqueryconnection/v1beta1/index.ts",
        "types/enums/bigqueryreservation/index.ts",
        "types/enums/bigqueryreservation/v1/index.ts",
        "types/enums/bigqueryreservation/v1beta1/index.ts",
        "types/enums/bigtableadmin/index.ts",
        "types/enums/bigtableadmin/v2/index.ts",
        "types/enums/billingbudgets/index.ts",
        "types/enums/billingbudgets/v1/index.ts",
        "types/enums/billingbudgets/v1beta1/index.ts",
        "types/enums/binaryauthorization/index.ts",
        "types/enums/binaryauthorization/v1/index.ts",
        "types/enums/binaryauthorization/v1beta1/index.ts",
        "types/enums/certificatemanager/index.ts",
        "types/enums/certificatemanager/v1/index.ts",
        "types/enums/cloudasset/index.ts",
        "types/enums/cloudasset/v1/index.ts",
        "types/enums/cloudbilling/index.ts",
        "types/enums/cloudbilling/v1/index.ts",
        "types/enums/cloudbuild/index.ts",
        "types/enums/cloudbuild/v1/index.ts",
        "types/enums/cloudbuild/v1alpha1/index.ts",
        "types/enums/cloudchannel/index.ts",
        "types/enums/cloudchannel/v1/index.ts",
        "types/enums/clouddeploy/index.ts",
        "types/enums/clouddeploy/v1/index.ts",
        "types/enums/cloudfunctions/index.ts",
        "types/enums/cloudfunctions/v1/index.ts",
        "types/enums/cloudfunctions/v2alpha/index.ts",
        "types/enums/cloudfunctions/v2beta/index.ts",
        "types/enums/cloudidentity/index.ts",
        "types/enums/cloudidentity/v1/index.ts",
        "types/enums/cloudidentity/v1beta1/index.ts",
        "types/enums/cloudiot/index.ts",
        "types/enums/cloudiot/v1/index.ts",
        "types/enums/cloudkms/index.ts",
        "types/enums/cloudkms/v1/index.ts",
        "types/enums/cloudresourcemanager/index.ts",
        "types/enums/cloudresourcemanager/v1/index.ts",
        "types/enums/cloudresourcemanager/v1beta1/index.ts",
        "types/enums/cloudresourcemanager/v2/index.ts",
        "types/enums/cloudresourcemanager/v2beta1/index.ts",
        "types/enums/cloudresourcemanager/v3/index.ts",
        "types/enums/cloudscheduler/index.ts",
        "types/enums/cloudscheduler/v1/index.ts",
        "types/enums/cloudscheduler/v1beta1/index.ts",
        "types/enums/cloudsearch/index.ts",
        "types/enums/cloudsearch/v1/index.ts",
        "types/enums/cloudsupport/index.ts",
        "types/enums/cloudsupport/v2beta/index.ts",
        "types/enums/cloudtasks/index.ts",
        "types/enums/cloudtasks/v2/index.ts",
        "types/enums/cloudtasks/v2beta2/index.ts",
        "types/enums/cloudtasks/v2beta3/index.ts",
        "types/enums/composer/index.ts",
        "types/enums/composer/v1/index.ts",
        "types/enums/composer/v1beta1/index.ts",
        "types/enums/compute/alpha/index.ts",
        "types/enums/compute/beta/index.ts",
        "types/enums/compute/index.ts",
        "types/enums/compute/v1/index.ts",
        "types/enums/connectors/index.ts",
        "types/enums/connectors/v1/index.ts",
        "types/enums/contactcenterinsights/index.ts",
        "types/enums/contactcenterinsights/v1/index.ts",
        "types/enums/container/index.ts",
        "types/enums/container/v1/index.ts",
        "types/enums/container/v1beta1/index.ts",
        "types/enums/containeranalysis/index.ts",
        "types/enums/containeranalysis/v1/index.ts",
        "types/enums/containeranalysis/v1alpha1/index.ts",
        "types/enums/containeranalysis/v1beta1/index.ts",
        "types/enums/datacatalog/index.ts",
        "types/enums/datacatalog/v1/index.ts",
        "types/enums/datacatalog/v1beta1/index.ts",
        "types/enums/dataflow/index.ts",
        "types/enums/dataflow/v1b3/index.ts",
        "types/enums/datafusion/index.ts",
        "types/enums/datafusion/v1/index.ts",
        "types/enums/datafusion/v1beta1/index.ts",
        "types/enums/datalabeling/index.ts",
        "types/enums/datalabeling/v1beta1/index.ts",
        "types/enums/datamigration/index.ts",
        "types/enums/datamigration/v1/index.ts",
        "types/enums/datamigration/v1beta1/index.ts",
        "types/enums/datapipelines/index.ts",
        "types/enums/datapipelines/v1/index.ts",
        "types/enums/dataplex/index.ts",
        "types/enums/dataplex/v1/index.ts",
        "types/enums/dataproc/index.ts",
        "types/enums/dataproc/v1/index.ts",
        "types/enums/dataproc/v1beta2/index.ts",
        "types/enums/datastore/index.ts",
        "types/enums/datastore/v1/index.ts",
        "types/enums/datastream/index.ts",
        "types/enums/datastream/v1/index.ts",
        "types/enums/datastream/v1alpha1/index.ts",
        "types/enums/deploymentmanager/alpha/index.ts",
        "types/enums/deploymentmanager/index.ts",
        "types/enums/deploymentmanager/v2/index.ts",
        "types/enums/deploymentmanager/v2beta/index.ts",
        "types/enums/dialogflow/index.ts",
        "types/enums/dialogflow/v2/index.ts",
        "types/enums/dialogflow/v2beta1/index.ts",
        "types/enums/dialogflow/v3/index.ts",
        "types/enums/dialogflow/v3beta1/index.ts",
        "types/enums/dlp/index.ts",
        "types/enums/dlp/v2/index.ts",
        "types/enums/dns/index.ts",
        "types/enums/dns/v1/index.ts",
        "types/enums/dns/v1beta2/index.ts",
        "types/enums/dns/v2/index.ts",
        "types/enums/domains/index.ts",
        "types/enums/domains/v1/index.ts",
        "types/enums/domains/v1alpha2/index.ts",
        "types/enums/domains/v1beta1/index.ts",
        "types/enums/essentialcontacts/index.ts",
        "types/enums/essentialcontacts/v1/index.ts",
        "types/enums/eventarc/index.ts",
        "types/enums/eventarc/v1/index.ts",
        "types/enums/eventarc/v1beta1/index.ts",
        "types/enums/file/index.ts",
        "types/enums/file/v1/index.ts",
        "types/enums/file/v1beta1/index.ts",
        "types/enums/firebasedatabase/index.ts",
        "types/enums/firebasedatabase/v1beta/index.ts",
        "types/enums/firebasehosting/index.ts",
        "types/enums/firebasehosting/v1beta1/index.ts",
        "types/enums/firestore/index.ts",
        "types/enums/firestore/v1/index.ts",
        "types/enums/firestore/v1beta1/index.ts",
        "types/enums/firestore/v1beta2/index.ts",
        "types/enums/gameservices/index.ts",
        "types/enums/gameservices/v1/index.ts",
        "types/enums/gameservices/v1beta/index.ts",
        "types/enums/genomics/index.ts",
        "types/enums/genomics/v1alpha2/index.ts",
        "types/enums/gkehub/index.ts",
        "types/enums/gkehub/v1/index.ts",
        "types/enums/gkehub/v1alpha/index.ts",
        "types/enums/gkehub/v1alpha2/index.ts",
        "types/enums/gkehub/v1beta/index.ts",
        "types/enums/gkehub/v1beta1/index.ts",
        "types/enums/healthcare/index.ts",
        "types/enums/healthcare/v1/index.ts",
        "types/enums/healthcare/v1beta1/index.ts",
        "types/enums/iam/index.ts",
        "types/enums/iam/v1/index.ts",
        "types/enums/ids/index.ts",
        "types/enums/ids/v1/index.ts",
        "types/enums/index.ts",
        "types/enums/jobs/index.ts",
        "types/enums/jobs/v3/index.ts",
        "types/enums/jobs/v4/index.ts",
        "types/enums/logging/index.ts",
        "types/enums/logging/v2/index.ts",
        "types/enums/memcache/index.ts",
        "types/enums/memcache/v1/index.ts",
        "types/enums/memcache/v1beta2/index.ts",
        "types/enums/metastore/index.ts",
        "types/enums/metastore/v1alpha/index.ts",
        "types/enums/metastore/v1beta/index.ts",
        "types/enums/ml/index.ts",
        "types/enums/ml/v1/index.ts",
        "types/enums/monitoring/index.ts",
        "types/enums/monitoring/v1/index.ts",
        "types/enums/monitoring/v3/index.ts",
        "types/enums/networkconnectivity/index.ts",
        "types/enums/networkconnectivity/v1/index.ts",
        "types/enums/networkconnectivity/v1alpha1/index.ts",
        "types/enums/networkmanagement/index.ts",
        "types/enums/networkmanagement/v1/index.ts",
        "types/enums/networkmanagement/v1beta1/index.ts",
        "types/enums/networksecurity/index.ts",
        "types/enums/networksecurity/v1/index.ts",
        "types/enums/networksecurity/v1beta1/index.ts",
        "types/enums/networkservices/index.ts",
        "types/enums/networkservices/v1/index.ts",
        "types/enums/networkservices/v1beta1/index.ts",
        "types/enums/notebooks/index.ts",
        "types/enums/notebooks/v1/index.ts",
        "types/enums/osconfig/index.ts",
        "types/enums/osconfig/v1/index.ts",
        "types/enums/osconfig/v1alpha/index.ts",
        "types/enums/osconfig/v1beta/index.ts",
        "types/enums/policysimulator/index.ts",
        "types/enums/policysimulator/v1/index.ts",
        "types/enums/policysimulator/v1beta1/index.ts",
        "types/enums/privateca/index.ts",
        "types/enums/privateca/v1/index.ts",
        "types/enums/privateca/v1beta1/index.ts",
        "types/enums/pubsub/index.ts",
        "types/enums/pubsub/v1/index.ts",
        "types/enums/pubsublite/index.ts",
        "types/enums/pubsublite/v1/index.ts",
        "types/enums/recaptchaenterprise/index.ts",
        "types/enums/recaptchaenterprise/v1/index.ts",
        "types/enums/recommendationengine/index.ts",
        "types/enums/recommendationengine/v1beta1/index.ts",
        "types/enums/redis/index.ts",
        "types/enums/redis/v1/index.ts",
        "types/enums/redis/v1beta1/index.ts",
        "types/enums/remotebuildexecution/index.ts",
        "types/enums/remotebuildexecution/v1alpha/index.ts",
        "types/enums/retail/index.ts",
        "types/enums/retail/v2/index.ts",
        "types/enums/retail/v2alpha/index.ts",
        "types/enums/retail/v2beta/index.ts",
        "types/enums/run/index.ts",
        "types/enums/run/v1/index.ts",
        "types/enums/run/v2/index.ts",
        "types/enums/secretmanager/index.ts",
        "types/enums/secretmanager/v1/index.ts",
        "types/enums/secretmanager/v1beta1/index.ts",
        "types/enums/securitycenter/index.ts",
        "types/enums/securitycenter/v1/index.ts",
        "types/enums/securitycenter/v1beta1/index.ts",
        "types/enums/servicemanagement/index.ts",
        "types/enums/servicemanagement/v1/index.ts",
        "types/enums/sourcerepo/index.ts",
        "types/enums/sourcerepo/v1/index.ts",
        "types/enums/spanner/index.ts",
        "types/enums/spanner/v1/index.ts",
        "types/enums/sqladmin/index.ts",
        "types/enums/sqladmin/v1/index.ts",
        "types/enums/sqladmin/v1beta4/index.ts",
        "types/enums/storagetransfer/index.ts",
        "types/enums/storagetransfer/v1/index.ts",
        "types/enums/testing/index.ts",
        "types/enums/testing/v1/index.ts",
        "types/enums/toolresults/index.ts",
        "types/enums/toolresults/v1beta3/index.ts",
        "types/enums/tpu/index.ts",
        "types/enums/tpu/v1/index.ts",
        "types/enums/tpu/v1alpha1/index.ts",
        "types/enums/tpu/v2alpha1/index.ts",
        "types/enums/transcoder/index.ts",
        "types/enums/transcoder/v1/index.ts",
        "types/enums/vmmigration/index.ts",
        "types/enums/vmmigration/v1/index.ts",
        "types/enums/vmmigration/v1alpha1/index.ts",
        "types/enums/websecurityscanner/index.ts",
        "types/enums/websecurityscanner/v1/index.ts",
        "types/enums/websecurityscanner/v1alpha/index.ts",
        "types/enums/websecurityscanner/v1beta/index.ts",
        "types/enums/workflowexecutions/index.ts",
        "types/enums/workflowexecutions/v1/index.ts",
        "types/enums/workflowexecutions/v1beta/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vision/index.ts",
        "vision/v1/getProduct.ts",
        "vision/v1/getProductSet.ts",
        "vision/v1/getReferenceImage.ts",
        "vision/v1/index.ts",
        "vision/v1/product.ts",
        "vision/v1/productSet.ts",
        "vision/v1/referenceImage.ts",
        "vmmigration/index.ts",
        "vmmigration/v1/cloneJob.ts",
        "vmmigration/v1/cutoverJob.ts",
        "vmmigration/v1/datacenterConnector.ts",
        "vmmigration/v1/getCloneJob.ts",
        "vmmigration/v1/getCutoverJob.ts",
        "vmmigration/v1/getDatacenterConnector.ts",
        "vmmigration/v1/getGroup.ts",
        "vmmigration/v1/getMigratingVm.ts",
        "vmmigration/v1/getSource.ts",
        "vmmigration/v1/getTargetProject.ts",
        "vmmigration/v1/getUtilizationReport.ts",
        "vmmigration/v1/group.ts",
        "vmmigration/v1/index.ts",
        "vmmigration/v1/migratingVm.ts",
        "vmmigration/v1/source.ts",
        "vmmigration/v1/targetProject.ts",
        "vmmigration/v1/utilizationReport.ts",
        "vmmigration/v1alpha1/cloneJob.ts",
        "vmmigration/v1alpha1/cutoverJob.ts",
        "vmmigration/v1alpha1/datacenterConnector.ts",
        "vmmigration/v1alpha1/getCloneJob.ts",
        "vmmigration/v1alpha1/getCutoverJob.ts",
        "vmmigration/v1alpha1/getDatacenterConnector.ts",
        "vmmigration/v1alpha1/getGroup.ts",
        "vmmigration/v1alpha1/getMigratingVm.ts",
        "vmmigration/v1alpha1/getSource.ts",
        "vmmigration/v1alpha1/getTargetProject.ts",
        "vmmigration/v1alpha1/getUtilizationReport.ts",
        "vmmigration/v1alpha1/group.ts",
        "vmmigration/v1alpha1/index.ts",
        "vmmigration/v1alpha1/migratingVm.ts",
        "vmmigration/v1alpha1/source.ts",
        "vmmigration/v1alpha1/targetProject.ts",
        "vmmigration/v1alpha1/utilizationReport.ts",
        "vpcaccess/index.ts",
        "vpcaccess/v1/connector.ts",
        "vpcaccess/v1/getConnector.ts",
        "vpcaccess/v1/index.ts",
        "websecurityscanner/index.ts",
        "websecurityscanner/v1/getScanConfig.ts",
        "websecurityscanner/v1/index.ts",
        "websecurityscanner/v1/scanConfig.ts",
        "websecurityscanner/v1alpha/getScanConfig.ts",
        "websecurityscanner/v1alpha/index.ts",
        "websecurityscanner/v1alpha/scanConfig.ts",
        "websecurityscanner/v1beta/getScanConfig.ts",
        "websecurityscanner/v1beta/index.ts",
        "websecurityscanner/v1beta/scanConfig.ts",
        "workflowexecutions/index.ts",
        "workflowexecutions/v1/execution.ts",
        "workflowexecutions/v1/getExecution.ts",
        "workflowexecutions/v1/index.ts",
        "workflowexecutions/v1beta/execution.ts",
        "workflowexecutions/v1beta/getExecution.ts",
        "workflowexecutions/v1beta/index.ts",
        "workflows/index.ts",
        "workflows/v1/getWorkflow.ts",
        "workflows/v1/index.ts",
        "workflows/v1/workflow.ts",
        "workflows/v1beta/getWorkflow.ts",
        "workflows/v1beta/index.ts",
        "workflows/v1beta/workflow.ts"
    ]
}
