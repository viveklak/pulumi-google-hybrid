// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new bucket.
 */
export class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Bucket {
        return new Bucket(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:storage/v1:Bucket';

    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bucket.__pulumiType;
    }

    /**
     * Access controls on the bucket.
     */
    public readonly acl!: pulumi.Output<outputs.storage.v1.BucketAccessControlResponse[]>;
    /**
     * The bucket's Autoclass configuration.
     */
    public readonly autoclass!: pulumi.Output<outputs.storage.v1.BucketAutoclassResponse>;
    /**
     * The bucket's billing configuration.
     */
    public readonly billing!: pulumi.Output<outputs.storage.v1.BucketBillingResponse>;
    /**
     * The bucket's Cross-Origin Resource Sharing (CORS) configuration.
     */
    public readonly cors!: pulumi.Output<outputs.storage.v1.BucketCorsItemResponse[]>;
    /**
     * The bucket's custom placement configuration for Custom Dual Regions.
     */
    public readonly customPlacementConfig!: pulumi.Output<outputs.storage.v1.BucketCustomPlacementConfigResponse>;
    /**
     * The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed.
     */
    public readonly defaultEventBasedHold!: pulumi.Output<boolean>;
    /**
     * Default access controls to apply to new objects when no ACL is provided.
     */
    public readonly defaultObjectAcl!: pulumi.Output<outputs.storage.v1.ObjectAccessControlResponse[]>;
    /**
     * Encryption configuration for a bucket.
     */
    public readonly encryption!: pulumi.Output<outputs.storage.v1.BucketEncryptionResponse>;
    /**
     * HTTP 1.1 Entity tag for the bucket.
     */
    public readonly etag!: pulumi.Output<string>;
    /**
     * The bucket's IAM configuration.
     */
    public readonly iamConfiguration!: pulumi.Output<outputs.storage.v1.BucketIamConfigurationResponse>;
    /**
     * The kind of item this is. For buckets, this is always storage#bucket.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * User-provided labels, in key/value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The bucket's lifecycle configuration. See lifecycle management for more information.
     */
    public readonly lifecycle!: pulumi.Output<outputs.storage.v1.BucketLifecycleResponse>;
    /**
     * The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The type of the bucket location.
     */
    public readonly locationType!: pulumi.Output<string>;
    /**
     * The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
     */
    public readonly logging!: pulumi.Output<outputs.storage.v1.BucketLoggingResponse>;
    /**
     * The metadata generation of this bucket.
     */
    public readonly metageneration!: pulumi.Output<string>;
    /**
     * The name of the bucket.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The owner of the bucket. This is always the project team's owner group.
     */
    public readonly owner!: pulumi.Output<outputs.storage.v1.BucketOwnerResponse>;
    /**
     * The project number of the project the bucket belongs to.
     */
    public readonly projectNumber!: pulumi.Output<string>;
    /**
     * The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
     */
    public readonly retentionPolicy!: pulumi.Output<outputs.storage.v1.BucketRetentionPolicyResponse>;
    /**
     * The Recovery Point Objective (RPO) of this bucket. Set to ASYNC_TURBO to turn on Turbo Replication on a bucket.
     */
    public readonly rpo!: pulumi.Output<string>;
    /**
     * Reserved for future use.
     */
    public readonly satisfiesPZS!: pulumi.Output<boolean>;
    /**
     * The URI of this bucket.
     */
    public readonly selfLink!: pulumi.Output<string>;
    /**
     * The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.
     */
    public readonly storageClass!: pulumi.Output<string>;
    /**
     * The creation time of the bucket in RFC 3339 format.
     */
    public readonly timeCreated!: pulumi.Output<string>;
    /**
     * The modification time of the bucket in RFC 3339 format.
     */
    public readonly updated!: pulumi.Output<string>;
    /**
     * The bucket's versioning configuration.
     */
    public readonly versioning!: pulumi.Output<outputs.storage.v1.BucketVersioningResponse>;
    /**
     * The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
     */
    public readonly website!: pulumi.Output<outputs.storage.v1.BucketWebsiteResponse>;

    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BucketArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["autoclass"] = args ? args.autoclass : undefined;
            resourceInputs["billing"] = args ? args.billing : undefined;
            resourceInputs["cors"] = args ? args.cors : undefined;
            resourceInputs["customPlacementConfig"] = args ? args.customPlacementConfig : undefined;
            resourceInputs["defaultEventBasedHold"] = args ? args.defaultEventBasedHold : undefined;
            resourceInputs["defaultObjectAcl"] = args ? args.defaultObjectAcl : undefined;
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["iamConfiguration"] = args ? args.iamConfiguration : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lifecycle"] = args ? args.lifecycle : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["locationType"] = args ? args.locationType : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["metageneration"] = args ? args.metageneration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["predefinedAcl"] = args ? args.predefinedAcl : undefined;
            resourceInputs["predefinedDefaultObjectAcl"] = args ? args.predefinedDefaultObjectAcl : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["projectNumber"] = args ? args.projectNumber : undefined;
            resourceInputs["projection"] = args ? args.projection : undefined;
            resourceInputs["provisionalUserProject"] = args ? args.provisionalUserProject : undefined;
            resourceInputs["retentionPolicy"] = args ? args.retentionPolicy : undefined;
            resourceInputs["rpo"] = args ? args.rpo : undefined;
            resourceInputs["satisfiesPZS"] = args ? args.satisfiesPZS : undefined;
            resourceInputs["selfLink"] = args ? args.selfLink : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["timeCreated"] = args ? args.timeCreated : undefined;
            resourceInputs["updated"] = args ? args.updated : undefined;
            resourceInputs["userProject"] = args ? args.userProject : undefined;
            resourceInputs["versioning"] = args ? args.versioning : undefined;
            resourceInputs["website"] = args ? args.website : undefined;
        } else {
            resourceInputs["acl"] = undefined /*out*/;
            resourceInputs["autoclass"] = undefined /*out*/;
            resourceInputs["billing"] = undefined /*out*/;
            resourceInputs["cors"] = undefined /*out*/;
            resourceInputs["customPlacementConfig"] = undefined /*out*/;
            resourceInputs["defaultEventBasedHold"] = undefined /*out*/;
            resourceInputs["defaultObjectAcl"] = undefined /*out*/;
            resourceInputs["encryption"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["iamConfiguration"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["lifecycle"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["locationType"] = undefined /*out*/;
            resourceInputs["logging"] = undefined /*out*/;
            resourceInputs["metageneration"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["projectNumber"] = undefined /*out*/;
            resourceInputs["retentionPolicy"] = undefined /*out*/;
            resourceInputs["rpo"] = undefined /*out*/;
            resourceInputs["satisfiesPZS"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["storageClass"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
            resourceInputs["versioning"] = undefined /*out*/;
            resourceInputs["website"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * Access controls on the bucket.
     */
    acl?: pulumi.Input<pulumi.Input<inputs.storage.v1.BucketAccessControlArgs>[]>;
    /**
     * The bucket's Autoclass configuration.
     */
    autoclass?: pulumi.Input<inputs.storage.v1.BucketAutoclassArgs>;
    /**
     * The bucket's billing configuration.
     */
    billing?: pulumi.Input<inputs.storage.v1.BucketBillingArgs>;
    /**
     * The bucket's Cross-Origin Resource Sharing (CORS) configuration.
     */
    cors?: pulumi.Input<pulumi.Input<inputs.storage.v1.BucketCorsItemArgs>[]>;
    /**
     * The bucket's custom placement configuration for Custom Dual Regions.
     */
    customPlacementConfig?: pulumi.Input<inputs.storage.v1.BucketCustomPlacementConfigArgs>;
    /**
     * The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed.
     */
    defaultEventBasedHold?: pulumi.Input<boolean>;
    /**
     * Default access controls to apply to new objects when no ACL is provided.
     */
    defaultObjectAcl?: pulumi.Input<pulumi.Input<inputs.storage.v1.ObjectAccessControlArgs>[]>;
    /**
     * Encryption configuration for a bucket.
     */
    encryption?: pulumi.Input<inputs.storage.v1.BucketEncryptionArgs>;
    /**
     * HTTP 1.1 Entity tag for the bucket.
     */
    etag?: pulumi.Input<string>;
    /**
     * The bucket's IAM configuration.
     */
    iamConfiguration?: pulumi.Input<inputs.storage.v1.BucketIamConfigurationArgs>;
    /**
     * The ID of the bucket. For buckets, the id and name properties are the same.
     */
    id?: pulumi.Input<string>;
    /**
     * The kind of item this is. For buckets, this is always storage#bucket.
     */
    kind?: pulumi.Input<string>;
    /**
     * User-provided labels, in key/value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The bucket's lifecycle configuration. See lifecycle management for more information.
     */
    lifecycle?: pulumi.Input<inputs.storage.v1.BucketLifecycleArgs>;
    /**
     * The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.
     */
    location?: pulumi.Input<string>;
    /**
     * The type of the bucket location.
     */
    locationType?: pulumi.Input<string>;
    /**
     * The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
     */
    logging?: pulumi.Input<inputs.storage.v1.BucketLoggingArgs>;
    /**
     * The metadata generation of this bucket.
     */
    metageneration?: pulumi.Input<string>;
    /**
     * The name of the bucket.
     */
    name?: pulumi.Input<string>;
    /**
     * The owner of the bucket. This is always the project team's owner group.
     */
    owner?: pulumi.Input<inputs.storage.v1.BucketOwnerArgs>;
    /**
     * Apply a predefined set of access controls to this bucket.
     */
    predefinedAcl?: pulumi.Input<string>;
    /**
     * Apply a predefined set of default object access controls to this bucket.
     */
    predefinedDefaultObjectAcl?: pulumi.Input<string>;
    /**
     * A valid API project identifier.
     */
    project?: pulumi.Input<string>;
    /**
     * The project number of the project the bucket belongs to.
     */
    projectNumber?: pulumi.Input<string>;
    /**
     * Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.
     */
    projection?: pulumi.Input<string>;
    /**
     * The project to be billed for this request if the target bucket is requester-pays bucket.
     */
    provisionalUserProject?: pulumi.Input<string>;
    /**
     * The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
     */
    retentionPolicy?: pulumi.Input<inputs.storage.v1.BucketRetentionPolicyArgs>;
    /**
     * The Recovery Point Objective (RPO) of this bucket. Set to ASYNC_TURBO to turn on Turbo Replication on a bucket.
     */
    rpo?: pulumi.Input<string>;
    /**
     * Reserved for future use.
     */
    satisfiesPZS?: pulumi.Input<boolean>;
    /**
     * The URI of this bucket.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * The creation time of the bucket in RFC 3339 format.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The modification time of the bucket in RFC 3339 format.
     */
    updated?: pulumi.Input<string>;
    /**
     * The project to be billed for this request.
     */
    userProject?: pulumi.Input<string>;
    /**
     * The bucket's versioning configuration.
     */
    versioning?: pulumi.Input<inputs.storage.v1.BucketVersioningArgs>;
    /**
     * The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
     */
    website?: pulumi.Input<inputs.storage.v1.BucketWebsiteArgs>;
}
