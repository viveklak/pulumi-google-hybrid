// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new ManagedZone.
 */
export class ManagedZone extends pulumi.CustomResource {
    /**
     * Get an existing ManagedZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedZone {
        return new ManagedZone(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dns/v1beta2:ManagedZone';

    /**
     * Returns true if the given object is an instance of ManagedZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedZone.__pulumiType;
    }

    public readonly cloudLoggingConfig!: pulumi.Output<outputs.dns.v1beta2.ManagedZoneCloudLoggingConfigResponse>;
    /**
     * The time that this resource was created on the server. This is in RFC3339 text format. Output only.
     */
    public readonly creationTime!: pulumi.Output<string>;
    /**
     * A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The DNS name of this managed zone, for instance "example.com.".
     */
    public readonly dnsName!: pulumi.Output<string>;
    /**
     * DNSSEC configuration.
     */
    public readonly dnssecConfig!: pulumi.Output<outputs.dns.v1beta2.ManagedZoneDnsSecConfigResponse>;
    /**
     * The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.
     */
    public readonly forwardingConfig!: pulumi.Output<outputs.dns.v1beta2.ManagedZoneForwardingConfigResponse>;
    public readonly kind!: pulumi.Output<string>;
    /**
     * User labels.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.
     */
    public readonly nameServerSet!: pulumi.Output<string>;
    /**
     * Delegate your managed_zone to these virtual name servers; defined by the server (output only)
     */
    public /*out*/ readonly nameServers!: pulumi.Output<string[]>;
    /**
     * The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.
     */
    public readonly peeringConfig!: pulumi.Output<outputs.dns.v1beta2.ManagedZonePeeringConfigResponse>;
    /**
     * For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.
     */
    public readonly privateVisibilityConfig!: pulumi.Output<outputs.dns.v1beta2.ManagedZonePrivateVisibilityConfigResponse>;
    /**
     * The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config.
     */
    public readonly reverseLookupConfig!: pulumi.Output<outputs.dns.v1beta2.ManagedZoneReverseLookupConfigResponse>;
    /**
     * This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones.
     */
    public readonly serviceDirectoryConfig!: pulumi.Output<outputs.dns.v1beta2.ManagedZoneServiceDirectoryConfigResponse>;
    /**
     * The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
     */
    public readonly visibility!: pulumi.Output<string>;

    /**
     * Create a ManagedZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagedZoneArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["clientOperationId"] = args ? args.clientOperationId : undefined;
            resourceInputs["cloudLoggingConfig"] = args ? args.cloudLoggingConfig : undefined;
            resourceInputs["creationTime"] = args ? args.creationTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsName"] = args ? args.dnsName : undefined;
            resourceInputs["dnssecConfig"] = args ? args.dnssecConfig : undefined;
            resourceInputs["forwardingConfig"] = args ? args.forwardingConfig : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameServerSet"] = args ? args.nameServerSet : undefined;
            resourceInputs["peeringConfig"] = args ? args.peeringConfig : undefined;
            resourceInputs["privateVisibilityConfig"] = args ? args.privateVisibilityConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["reverseLookupConfig"] = args ? args.reverseLookupConfig : undefined;
            resourceInputs["serviceDirectoryConfig"] = args ? args.serviceDirectoryConfig : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
            resourceInputs["nameServers"] = undefined /*out*/;
        } else {
            resourceInputs["cloudLoggingConfig"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["dnsName"] = undefined /*out*/;
            resourceInputs["dnssecConfig"] = undefined /*out*/;
            resourceInputs["forwardingConfig"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nameServerSet"] = undefined /*out*/;
            resourceInputs["nameServers"] = undefined /*out*/;
            resourceInputs["peeringConfig"] = undefined /*out*/;
            resourceInputs["privateVisibilityConfig"] = undefined /*out*/;
            resourceInputs["reverseLookupConfig"] = undefined /*out*/;
            resourceInputs["serviceDirectoryConfig"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedZone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ManagedZone resource.
 */
export interface ManagedZoneArgs {
    /**
     * For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.
     */
    clientOperationId?: pulumi.Input<string>;
    cloudLoggingConfig?: pulumi.Input<inputs.dns.v1beta2.ManagedZoneCloudLoggingConfigArgs>;
    /**
     * The time that this resource was created on the server. This is in RFC3339 text format. Output only.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.
     */
    description?: pulumi.Input<string>;
    /**
     * The DNS name of this managed zone, for instance "example.com.".
     */
    dnsName?: pulumi.Input<string>;
    /**
     * DNSSEC configuration.
     */
    dnssecConfig?: pulumi.Input<inputs.dns.v1beta2.ManagedZoneDnsSecConfigArgs>;
    /**
     * The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.
     */
    forwardingConfig?: pulumi.Input<inputs.dns.v1beta2.ManagedZoneForwardingConfigArgs>;
    kind?: pulumi.Input<string>;
    /**
     * User labels.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.
     */
    name?: pulumi.Input<string>;
    /**
     * Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.
     */
    nameServerSet?: pulumi.Input<string>;
    /**
     * The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.
     */
    peeringConfig?: pulumi.Input<inputs.dns.v1beta2.ManagedZonePeeringConfigArgs>;
    /**
     * For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.
     */
    privateVisibilityConfig?: pulumi.Input<inputs.dns.v1beta2.ManagedZonePrivateVisibilityConfigArgs>;
    project?: pulumi.Input<string>;
    /**
     * The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config.
     */
    reverseLookupConfig?: pulumi.Input<inputs.dns.v1beta2.ManagedZoneReverseLookupConfigArgs>;
    /**
     * This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones.
     */
    serviceDirectoryConfig?: pulumi.Input<inputs.dns.v1beta2.ManagedZoneServiceDirectoryConfigArgs>;
    /**
     * The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
     */
    visibility?: pulumi.Input<enums.dns.v1beta2.ManagedZoneVisibility>;
}
