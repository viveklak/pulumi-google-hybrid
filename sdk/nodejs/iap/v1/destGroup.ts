// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new TunnelDestGroup.
 */
export class DestGroup extends pulumi.CustomResource {
    /**
     * Get an existing DestGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DestGroup {
        return new DestGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:iap/v1:DestGroup';

    /**
     * Returns true if the given object is an instance of DestGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DestGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DestGroup.__pulumiType;
    }

    /**
     * null List of CIDRs that this group applies to.
     */
    public readonly cidrs!: pulumi.Output<string[]>;
    /**
     * null List of FQDNs that this group applies to.
     */
    public readonly fqdns!: pulumi.Output<string[]>;
    /**
     * Immutable. Identifier for the TunnelDestGroup. Must be unique within the project.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a DestGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DestGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.tunnelDestGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tunnelDestGroupId'");
            }
            resourceInputs["cidrs"] = args ? args.cidrs : undefined;
            resourceInputs["fqdns"] = args ? args.fqdns : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["tunnelDestGroupId"] = args ? args.tunnelDestGroupId : undefined;
        } else {
            resourceInputs["cidrs"] = undefined /*out*/;
            resourceInputs["fqdns"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DestGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DestGroup resource.
 */
export interface DestGroupArgs {
    /**
     * null List of CIDRs that this group applies to.
     */
    cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * null List of FQDNs that this group applies to.
     */
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    location?: pulumi.Input<string>;
    /**
     * Immutable. Identifier for the TunnelDestGroup. Must be unique within the project.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Required. The ID to use for the TunnelDestGroup, which will become the final component of the resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
     */
    tunnelDestGroupId: pulumi.Input<string>;
}
