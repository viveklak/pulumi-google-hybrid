// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Use this method to get details about a route.
 */
export function getRoute(args: GetRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:datastream/v1alpha1:getRoute", {
        "location": args.location,
        "privateConnectionId": args.privateConnectionId,
        "project": args.project,
        "routeId": args.routeId,
    }, opts);
}

export interface GetRouteArgs {
    location: string;
    privateConnectionId: string;
    project?: string;
    routeId: string;
}

export interface GetRouteResult {
    /**
     * The create time of the resource.
     */
    readonly createTime: string;
    /**
     * Destination address for connection
     */
    readonly destinationAddress: string;
    /**
     * Destination port for connection
     */
    readonly destinationPort: number;
    /**
     * Display name.
     */
    readonly displayName: string;
    /**
     * Labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource's name.
     */
    readonly name: string;
    /**
     * The update time of the resource.
     */
    readonly updateTime: string;
}

export function getRouteOutput(args: GetRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteResult> {
    return pulumi.output(args).apply(a => getRoute(a, opts))
}

export interface GetRouteOutputArgs {
    location: pulumi.Input<string>;
    privateConnectionId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    routeId: pulumi.Input<string>;
}
