// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets details of a single Domain.
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:managedidentities/v1alpha1:getDomain", {
        "domainId": args.domainId,
        "project": args.project,
    }, opts);
}

export interface GetDomainArgs {
    domainId: string;
    project?: string;
}

export interface GetDomainResult {
    /**
     * Optional. Configuration for audit logs. True if audit logs are enabled, else false. Default is audit logs disabled.
     */
    readonly auditLogsEnabled: boolean;
    /**
     * Optional. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. Network can be added using UpdateDomain later. Domain is only available on network part of authorized_networks. Caller needs to make sure that CIDR subnets do not overlap between networks, else domain creation will fail.
     */
    readonly authorizedNetworks: string[];
    /**
     * The time the instance was created. Synthetic field is populated automatically by CCFE. go/ccfe-synthetic-field-user-guide
     */
    readonly createTime: string;
    /**
     * Fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would be chosen for an Active Directory that is set up on an internal network.
     */
    readonly fqdn: string;
    /**
     * Optional. Resource labels to represent user provided metadata
     */
    readonly labels: {[key: string]: string};
    /**
     * Locations where domain needs to be provisioned. regions e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block.
     */
    readonly locations: string[];
    /**
     * Optional. Name of customer-visible admin used to perform Active Directory operations. If not specified `setupadmin` would be used.
     */
    readonly managedIdentitiesAdminName: string;
    /**
     * Unique name of the domain in this scope including projects and location using the form: `projects/{project_id}/locations/global/domains/{domain_name}`.
     */
    readonly name: string;
    /**
     * The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in [Domain].[authorized_networks].
     */
    readonly reservedIpRange: string;
    /**
     * The current state of this domain.
     */
    readonly state: string;
    /**
     * Additional information about the current status of this domain, if available.
     */
    readonly statusMessage: string;
    /**
     * The current trusts associated with the domain.
     */
    readonly trusts: outputs.managedidentities.v1alpha1.TrustResponse[];
    /**
     * Last update time. Synthetic field is populated automatically by CCFE.
     */
    readonly updateTime: string;
}

export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply(a => getDomain(a, opts))
}

export interface GetDomainOutputArgs {
    domainId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
