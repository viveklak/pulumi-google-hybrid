// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets the batch workload resource representation.
 */
export function getBatch(args: GetBatchArgs, opts?: pulumi.InvokeOptions): Promise<GetBatchResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:dataproc/v1:getBatch", {
        "batchId": args.batchId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetBatchArgs {
    batchId: string;
    location: string;
    project?: string;
}

export interface GetBatchResult {
    /**
     * The time when the batch was created.
     */
    readonly createTime: string;
    /**
     * The email address of the user who created the batch.
     */
    readonly creator: string;
    /**
     * Optional. Environment configuration for the batch execution.
     */
    readonly environmentConfig: outputs.dataproc.v1.EnvironmentConfigResponse;
    /**
     * Optional. The labels to associate with this batch. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a batch.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name of the batch.
     */
    readonly name: string;
    /**
     * The resource name of the operation associated with this batch.
     */
    readonly operation: string;
    /**
     * Optional. PySpark batch config.
     */
    readonly pysparkBatch: outputs.dataproc.v1.PySparkBatchResponse;
    /**
     * Optional. Runtime configuration for the batch execution.
     */
    readonly runtimeConfig: outputs.dataproc.v1.RuntimeConfigResponse;
    /**
     * Runtime information about batch execution.
     */
    readonly runtimeInfo: outputs.dataproc.v1.RuntimeInfoResponse;
    /**
     * Optional. Spark batch config.
     */
    readonly sparkBatch: outputs.dataproc.v1.SparkBatchResponse;
    /**
     * Optional. SparkR batch config.
     */
    readonly sparkRBatch: outputs.dataproc.v1.SparkRBatchResponse;
    /**
     * Optional. SparkSql batch config.
     */
    readonly sparkSqlBatch: outputs.dataproc.v1.SparkSqlBatchResponse;
    /**
     * The state of the batch.
     */
    readonly state: string;
    /**
     * Historical state information for the batch.
     */
    readonly stateHistory: outputs.dataproc.v1.StateHistoryResponse[];
    /**
     * Batch state details, such as a failure description if the state is FAILED.
     */
    readonly stateMessage: string;
    /**
     * The time when the batch entered a current state.
     */
    readonly stateTime: string;
    /**
     * A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch.
     */
    readonly uuid: string;
}

export function getBatchOutput(args: GetBatchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBatchResult> {
    return pulumi.output(args).apply(a => getBatch(a, opts))
}

export interface GetBatchOutputArgs {
    batchId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
