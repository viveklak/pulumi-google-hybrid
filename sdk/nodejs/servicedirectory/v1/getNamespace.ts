// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a namespace.
 */
export function getNamespace(args: GetNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:servicedirectory/v1:getNamespace", {
        "location": args.location,
        "namespaceId": args.namespaceId,
        "project": args.project,
    }, opts);
}

export interface GetNamespaceArgs {
    location: string;
    namespaceId: string;
    project?: string;
}

export interface GetNamespaceResult {
    /**
     * Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.
     */
    readonly labels: {[key: string]: string};
    /**
     * Immutable. The resource name for the namespace in the format `projects/*&#47;locations/*&#47;namespaces/*`.
     */
    readonly name: string;
}

export function getNamespaceOutput(args: GetNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamespaceResult> {
    return pulumi.output(args).apply(a => getNamespace(a, opts))
}

export interface GetNamespaceOutputArgs {
    location: pulumi.Input<string>;
    namespaceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
