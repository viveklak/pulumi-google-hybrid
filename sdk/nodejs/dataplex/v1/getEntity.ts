// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Get a metadata entity.
 */
export function getEntity(args: GetEntityArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:dataplex/v1:getEntity", {
        "entityId": args.entityId,
        "lakeId": args.lakeId,
        "location": args.location,
        "project": args.project,
        "view": args.view,
        "zone": args.zone,
    }, opts);
}

export interface GetEntityArgs {
    entityId: string;
    lakeId: string;
    location: string;
    project?: string;
    view?: string;
    zone: string;
}

export interface GetEntityResult {
    /**
     * Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
     */
    readonly asset: string;
    /**
     * The name of the associated Data Catalog entry.
     */
    readonly catalogEntry: string;
    /**
     * Metadata stores that the entity is compatible with.
     */
    readonly compatibility: outputs.dataplex.v1.GoogleCloudDataplexV1EntityCompatibilityStatusResponse;
    /**
     * The time when the entity was created.
     */
    readonly createTime: string;
    /**
     * Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.
     */
    readonly dataPath: string;
    /**
     * Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**&#47;*.csv.
     */
    readonly dataPathPattern: string;
    /**
     * Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
     */
    readonly description: string;
    /**
     * Optional. Display name must be shorter than or equal to 256 characters.
     */
    readonly displayName: string;
    /**
     * Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.
     */
    readonly etag: string;
    /**
     * Identifies the storage format of the entity data. It does not apply to entities with data stored in BigQuery.
     */
    readonly format: outputs.dataplex.v1.GoogleCloudDataplexV1StorageFormatResponse;
    /**
     * The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.
     */
    readonly name: string;
    /**
     * The description of the data structure and layout. The schema is not included in list responses. It is only included in SCHEMA and FULL entity views of a GetEntity response.
     */
    readonly schema: outputs.dataplex.v1.GoogleCloudDataplexV1SchemaResponse;
    /**
     * Immutable. Identifies the storage system of the entity data.
     */
    readonly system: string;
    /**
     * Immutable. The type of entity.
     */
    readonly type: string;
    /**
     * The time when the entity was last updated.
     */
    readonly updateTime: string;
}

export function getEntityOutput(args: GetEntityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityResult> {
    return pulumi.output(args).apply(a => getEntity(a, opts))
}

export interface GetEntityOutputArgs {
    entityId: pulumi.Input<string>;
    lakeId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    view?: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
