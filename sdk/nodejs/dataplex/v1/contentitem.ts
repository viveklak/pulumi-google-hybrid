// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Create a content.
 * Auto-naming is currently not supported for this resource.
 */
export class Contentitem extends pulumi.CustomResource {
    /**
     * Get an existing Contentitem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Contentitem {
        return new Contentitem(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:dataplex/v1:Contentitem';

    /**
     * Returns true if the given object is an instance of Contentitem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Contentitem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Contentitem.__pulumiType;
    }

    /**
     * Content creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Content data in string format.
     */
    public readonly dataText!: pulumi.Output<string>;
    /**
     * Optional. Description of the content.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Optional. User defined labels for the content.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Notebook related configurations.
     */
    public readonly notebook!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1ContentNotebookResponse>;
    /**
     * The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * Sql Script related configurations.
     */
    public readonly sqlScript!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1ContentSqlScriptResponse>;
    /**
     * System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The time when the content was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Contentitem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContentitemArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dataText === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataText'");
            }
            if ((!args || args.lakeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lakeId'");
            }
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            resourceInputs["dataText"] = args ? args.dataText : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lakeId"] = args ? args.lakeId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["notebook"] = args ? args.notebook : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["sqlScript"] = args ? args.sqlScript : undefined;
            resourceInputs["validateOnly"] = args ? args.validateOnly : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dataText"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["notebook"] = undefined /*out*/;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["sqlScript"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Contentitem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Contentitem resource.
 */
export interface ContentitemArgs {
    /**
     * Content data in string format.
     */
    dataText: pulumi.Input<string>;
    /**
     * Optional. Description of the content.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. User defined labels for the content.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lakeId: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Notebook related configurations.
     */
    notebook?: pulumi.Input<inputs.dataplex.v1.GoogleCloudDataplexV1ContentNotebookArgs>;
    /**
     * The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
     */
    path: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Sql Script related configurations.
     */
    sqlScript?: pulumi.Input<inputs.dataplex.v1.GoogleCloudDataplexV1ContentSqlScriptArgs>;
    /**
     * Optional. Only validate the request, but do not perform mutations. The default is false.
     */
    validateOnly?: pulumi.Input<string>;
}
