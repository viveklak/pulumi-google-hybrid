// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Create an environment resource.
 * Auto-naming is currently not supported for this resource.
 */
export class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Environment {
        return new Environment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:dataplex/v1:Environment';

    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Environment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Environment.__pulumiType;
    }

    /**
     * Environment creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Description of the environment.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Optional. User friendly display name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * URI Endpoints to access sessions associated with the Environment.
     */
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1EnvironmentEndpointsResponse>;
    /**
     * Infrastructure specification for the Environment.
     */
    public readonly infrastructureSpec!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse>;
    /**
     * Optional. User defined labels for the environment.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The relative resource name of the environment, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Optional. Configuration for sessions created for this environment.
     */
    public readonly sessionSpec!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1EnvironmentSessionSpecResponse>;
    /**
     * Status of sessions created for this environment.
     */
    public /*out*/ readonly sessionStatus!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1EnvironmentSessionStatusResponse>;
    /**
     * Current state of the environment.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System generated globally unique ID for the environment. This ID will be different if the environment is deleted and re-created with the same name.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The time when the environment was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.infrastructureSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infrastructureSpec'");
            }
            if ((!args || args.lakeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lakeId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["infrastructureSpec"] = args ? args.infrastructureSpec : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lakeId"] = args ? args.lakeId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["sessionSpec"] = args ? args.sessionSpec : undefined;
            resourceInputs["validateOnly"] = args ? args.validateOnly : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["sessionStatus"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["infrastructureSpec"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["sessionSpec"] = undefined /*out*/;
            resourceInputs["sessionStatus"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Environment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * Optional. Description of the environment.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Required. Environment identifier. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the lake.
     */
    environmentId: pulumi.Input<string>;
    /**
     * Infrastructure specification for the Environment.
     */
    infrastructureSpec: pulumi.Input<inputs.dataplex.v1.GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs>;
    /**
     * Optional. User defined labels for the environment.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lakeId: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. Configuration for sessions created for this environment.
     */
    sessionSpec?: pulumi.Input<inputs.dataplex.v1.GoogleCloudDataplexV1EnvironmentSessionSpecArgs>;
    /**
     * Optional. Only validate the request, but do not perform mutations. The default is false.
     */
    validateOnly?: pulumi.Input<string>;
}
