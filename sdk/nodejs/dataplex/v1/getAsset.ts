// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Retrieves an asset resource.
 */
export function getAsset(args: GetAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetAssetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:dataplex/v1:getAsset", {
        "assetId": args.assetId,
        "lakeId": args.lakeId,
        "location": args.location,
        "project": args.project,
        "zone": args.zone,
    }, opts);
}

export interface GetAssetArgs {
    assetId: string;
    lakeId: string;
    location: string;
    project?: string;
    zone: string;
}

export interface GetAssetResult {
    /**
     * The time when the asset was created.
     */
    readonly createTime: string;
    /**
     * Optional. Description of the asset.
     */
    readonly description: string;
    /**
     * Optional. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.
     */
    readonly discoverySpec: outputs.dataplex.v1.GoogleCloudDataplexV1AssetDiscoverySpecResponse;
    /**
     * Status of the discovery feature applied to data referenced by this asset.
     */
    readonly discoveryStatus: outputs.dataplex.v1.GoogleCloudDataplexV1AssetDiscoveryStatusResponse;
    /**
     * Optional. User friendly display name.
     */
    readonly displayName: string;
    /**
     * Optional. User defined labels for the asset.
     */
    readonly labels: {[key: string]: string};
    /**
     * The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.
     */
    readonly name: string;
    /**
     * Specification of the resource that is referenced by this asset.
     */
    readonly resourceSpec: outputs.dataplex.v1.GoogleCloudDataplexV1AssetResourceSpecResponse;
    /**
     * Status of the resource referenced by this asset.
     */
    readonly resourceStatus: outputs.dataplex.v1.GoogleCloudDataplexV1AssetResourceStatusResponse;
    /**
     * Status of the security policy applied to resource referenced by this asset.
     */
    readonly securityStatus: outputs.dataplex.v1.GoogleCloudDataplexV1AssetSecurityStatusResponse;
    /**
     * Current state of the asset.
     */
    readonly state: string;
    /**
     * System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
     */
    readonly uid: string;
    /**
     * The time when the asset was last updated.
     */
    readonly updateTime: string;
}

export function getAssetOutput(args: GetAssetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAssetResult> {
    return pulumi.output(args).apply(a => getAsset(a, opts))
}

export interface GetAssetOutputArgs {
    assetId: pulumi.Input<string>;
    lakeId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
