// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new Execution in a given project and location.
 * Auto-naming is currently not supported for this resource.
 */
export class Execution extends pulumi.CustomResource {
    /**
     * Get an existing Execution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Execution {
        return new Execution(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:notebooks/v1:Execution';

    /**
     * Returns true if the given object is an instance of Execution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Execution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Execution.__pulumiType;
    }

    /**
     * Time the Execution was instantiated.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A brief description of this execution.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * execute metadata including name, hardware spec, region, labels, etc.
     */
    public readonly executionTemplate!: pulumi.Output<outputs.notebooks.v1.ExecutionTemplateResponse>;
    /**
     * The URI of the external job used to execute the notebook.
     */
    public /*out*/ readonly jobUri!: pulumi.Output<string>;
    /**
     * The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Output notebook file generated by this execution
     */
    public readonly outputNotebookFile!: pulumi.Output<string>;
    /**
     * State of the underlying AI Platform job.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Time the Execution was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Execution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExecutionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.executionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executionId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["executionId"] = args ? args.executionId : undefined;
            resourceInputs["executionTemplate"] = args ? args.executionTemplate : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["outputNotebookFile"] = args ? args.outputNotebookFile : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["jobUri"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["executionTemplate"] = undefined /*out*/;
            resourceInputs["jobUri"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["outputNotebookFile"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Execution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Execution resource.
 */
export interface ExecutionArgs {
    /**
     * A brief description of this execution.
     */
    description?: pulumi.Input<string>;
    /**
     * Required. User-defined unique ID of this execution.
     */
    executionId: pulumi.Input<string>;
    /**
     * execute metadata including name, hardware spec, region, labels, etc.
     */
    executionTemplate?: pulumi.Input<inputs.notebooks.v1.ExecutionTemplateArgs>;
    location?: pulumi.Input<string>;
    /**
     * Output notebook file generated by this execution
     */
    outputNotebookFile?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
