// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets details of a single ApiConfig.
 */
export function getConfig(args: GetConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigateway/v1:getConfig", {
        "apiId": args.apiId,
        "configId": args.configId,
        "location": args.location,
        "project": args.project,
        "view": args.view,
    }, opts);
}

export interface GetConfigArgs {
    apiId: string;
    configId: string;
    location: string;
    project?: string;
    view?: string;
}

export interface GetConfigResult {
    /**
     * Created time.
     */
    readonly createTime: string;
    /**
     * Optional. Display name.
     */
    readonly displayName: string;
    /**
     * Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account's email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
     */
    readonly gatewayServiceAccount: string;
    /**
     * Optional. gRPC service definition files. If specified, openapi_documents must not be included.
     */
    readonly grpcServices: outputs.apigateway.v1.ApigatewayApiConfigGrpcServiceDefinitionResponse[];
    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     */
    readonly labels: {[key: string]: string};
    /**
     * Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using "last one wins" semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
     */
    readonly managedServiceConfigs: outputs.apigateway.v1.ApigatewayApiConfigFileResponse[];
    /**
     * Resource name of the API Config. Format: projects/{project}/locations/global/apis/{api}/configs/{api_config}
     */
    readonly name: string;
    /**
     * Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
     */
    readonly openapiDocuments: outputs.apigateway.v1.ApigatewayApiConfigOpenApiDocumentResponse[];
    /**
     * The ID of the associated Service Config ( https://cloud.google.com/service-infrastructure/docs/glossary#config).
     */
    readonly serviceConfigId: string;
    /**
     * State of the API Config.
     */
    readonly state: string;
    /**
     * Updated time.
     */
    readonly updateTime: string;
}

export function getConfigOutput(args: GetConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigResult> {
    return pulumi.output(args).apply(a => getConfig(a, opts))
}

export interface GetConfigOutputArgs {
    apiId: pulumi.Input<string>;
    configId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}
