// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the specified ArchiveDeployment.
 */
export function getArchiveDeployment(args: GetArchiveDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetArchiveDeploymentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getArchiveDeployment", {
        "archiveDeploymentId": args.archiveDeploymentId,
        "environmentId": args.environmentId,
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetArchiveDeploymentArgs {
    archiveDeploymentId: string;
    environmentId: string;
    organizationId: string;
}

export interface GetArchiveDeploymentResult {
    /**
     * The time at which the Archive Deployment was created in milliseconds since the epoch.
     */
    readonly createdAt: string;
    /**
     * Input only. The Google Cloud Storage signed URL returned from GenerateUploadUrl and used to upload the Archive zip file.
     */
    readonly gcsUri: string;
    /**
     * User-supplied key-value pairs used to organize ArchiveDeployments. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
     */
    readonly labels: {[key: string]: string};
    /**
     * Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
     */
    readonly name: string;
    /**
     * A reference to the LRO that created this Archive Deployment in the following format: `organizations/{org}/operations/{id}`
     */
    readonly operation: string;
    /**
     * The time at which the Archive Deployment was updated in milliseconds since the epoch.
     */
    readonly updatedAt: string;
}

export function getArchiveDeploymentOutput(args: GetArchiveDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArchiveDeploymentResult> {
    return pulumi.output(args).apply(a => getArchiveDeployment(a, opts))
}

export interface GetArchiveDeploymentOutputArgs {
    archiveDeploymentId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
}
