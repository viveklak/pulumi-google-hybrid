// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets an API proxy including a list of existing revisions.
 */
export function getApi(args: GetApiArgs, opts?: pulumi.InvokeOptions): Promise<GetApiResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getApi", {
        "apiId": args.apiId,
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetApiArgs {
    apiId: string;
    organizationId: string;
}

export interface GetApiResult {
    /**
     * The type of the API proxy.
     */
    readonly apiProxyType: string;
    /**
     * User labels applied to this API Proxy.
     */
    readonly labels: {[key: string]: string};
    /**
     * The id of the most recently created revision for this api proxy.
     */
    readonly latestRevisionId: string;
    /**
     * Metadata describing the API proxy.
     */
    readonly metaData: outputs.apigee.v1.GoogleCloudApigeeV1EntityMetadataResponse;
    /**
     * Name of the API proxy.
     */
    readonly name: string;
    /**
     * Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive.
     */
    readonly readOnly: boolean;
    /**
     * List of revisons defined for the API proxy.
     */
    readonly revision: string[];
}

export function getApiOutput(args: GetApiOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiResult> {
    return pulumi.output(args).apply(a => getApi(a, opts))
}

export interface GetApiOutputArgs {
    apiId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
}
