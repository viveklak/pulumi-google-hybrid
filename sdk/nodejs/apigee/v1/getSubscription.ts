// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets details for an API product subscription.
 */
export function getSubscription(args: GetSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getSubscription", {
        "developerId": args.developerId,
        "organizationId": args.organizationId,
        "subscriptionId": args.subscriptionId,
    }, opts);
}

export interface GetSubscriptionArgs {
    developerId: string;
    organizationId: string;
    subscriptionId: string;
}

export interface GetSubscriptionResult {
    /**
     * Name of the API product for which the developer is purchasing a subscription.
     */
    readonly apiproduct: string;
    /**
     * Time when the API product subscription was created in milliseconds since epoch.
     */
    readonly createdAt: string;
    /**
     * Time when the API product subscription ends in milliseconds since epoch.
     */
    readonly endTime: string;
    /**
     * Time when the API product subscription was last modified in milliseconds since epoch.
     */
    readonly lastModifiedAt: string;
    /**
     * Name of the API product subscription.
     */
    readonly name: string;
    /**
     * Time when the API product subscription starts in milliseconds since epoch.
     */
    readonly startTime: string;
}

export function getSubscriptionOutput(args: GetSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionResult> {
    return pulumi.output(args).apply(a => getSubscription(a, opts))
}

export interface GetSubscriptionOutputArgs {
    developerId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}
