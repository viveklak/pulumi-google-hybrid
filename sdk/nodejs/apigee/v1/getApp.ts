// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the details for a developer app.
 */
export function getApp(args: GetAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAppResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getApp", {
        "appId": args.appId,
        "developerId": args.developerId,
        "entity": args.entity,
        "organizationId": args.organizationId,
        "query": args.query,
    }, opts);
}

export interface GetAppArgs {
    appId: string;
    developerId: string;
    entity?: string;
    organizationId: string;
    query?: string;
}

export interface GetAppResult {
    /**
     * List of API products associated with the developer app.
     */
    readonly apiProducts: string[];
    /**
     * Developer app family.
     */
    readonly appFamily: string;
    /**
     * ID of the developer app.
     */
    readonly appId: string;
    /**
     * List of attributes for the developer app.
     */
    readonly attributes: outputs.apigee.v1.GoogleCloudApigeeV1AttributeResponse[];
    /**
     * Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps.
     */
    readonly callbackUrl: string;
    /**
     * Time the developer app was created in milliseconds since epoch.
     */
    readonly createdAt: string;
    /**
     * Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products.
     */
    readonly credentials: outputs.apigee.v1.GoogleCloudApigeeV1CredentialResponse[];
    /**
     * ID of the developer.
     */
    readonly developerId: string;
    /**
     * Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
     */
    readonly keyExpiresIn: string;
    /**
     * Time the developer app was modified in milliseconds since epoch.
     */
    readonly lastModifiedAt: string;
    /**
     * Name of the developer app.
     */
    readonly name: string;
    /**
     * Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app.
     */
    readonly scopes: string[];
    /**
     * Status of the credential. Valid values include `approved` or `revoked`.
     */
    readonly status: string;
}

export function getAppOutput(args: GetAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppResult> {
    return pulumi.output(args).apply(a => getApp(a, opts))
}

export interface GetAppOutputArgs {
    appId: pulumi.Input<string>;
    developerId: pulumi.Input<string>;
    entity?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    query?: pulumi.Input<string>;
}
