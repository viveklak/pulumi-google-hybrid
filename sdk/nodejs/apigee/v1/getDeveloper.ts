// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the developer details, including the developer's name, email address, apps, and other information. **Note**: The response includes only the first 100 developer apps.
 */
export function getDeveloper(args: GetDeveloperArgs, opts?: pulumi.InvokeOptions): Promise<GetDeveloperResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getDeveloper", {
        "action": args.action,
        "developerId": args.developerId,
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetDeveloperArgs {
    action?: string;
    developerId: string;
    organizationId: string;
}

export interface GetDeveloperResult {
    /**
     * Access type.
     */
    readonly accessType: string;
    /**
     * Developer app family.
     */
    readonly appFamily: string;
    /**
     * List of apps associated with the developer.
     */
    readonly apps: string[];
    /**
     * Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.
     */
    readonly attributes: outputs.apigee.v1.GoogleCloudApigeeV1AttributeResponse[];
    /**
     * List of companies associated with the developer.
     */
    readonly companies: string[];
    /**
     * Time at which the developer was created in milliseconds since epoch.
     */
    readonly createdAt: string;
    /**
     * ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time.
     */
    readonly developerId: string;
    /**
     * Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only.
     */
    readonly email: string;
    /**
     * First name of the developer.
     */
    readonly firstName: string;
    /**
     * Time at which the developer was last modified in milliseconds since epoch.
     */
    readonly lastModifiedAt: string;
    /**
     * Last name of the developer.
     */
    readonly lastName: string;
    /**
     * Name of the Apigee organization in which the developer resides.
     */
    readonly organizationName: string;
    /**
     * Status of the developer. Valid values are `active` and `inactive`.
     */
    readonly status: string;
    /**
     * User name of the developer. Not used by Apigee hybrid.
     */
    readonly userName: string;
}

export function getDeveloperOutput(args: GetDeveloperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeveloperResult> {
    return pulumi.output(args).apply(a => getDeveloper(a, opts))
}

export interface GetDeveloperOutputArgs {
    action?: pulumi.Input<string>;
    developerId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
}
