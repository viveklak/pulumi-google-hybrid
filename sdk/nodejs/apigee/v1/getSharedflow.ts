// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets a shared flow by name, including a list of its revisions.
 */
export function getSharedflow(args: GetSharedflowArgs, opts?: pulumi.InvokeOptions): Promise<GetSharedflowResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getSharedflow", {
        "organizationId": args.organizationId,
        "sharedflowId": args.sharedflowId,
    }, opts);
}

export interface GetSharedflowArgs {
    organizationId: string;
    sharedflowId: string;
}

export interface GetSharedflowResult {
    /**
     * The id of the most recently created revision for this shared flow.
     */
    readonly latestRevisionId: string;
    /**
     * Metadata describing the shared flow.
     */
    readonly metaData: outputs.apigee.v1.GoogleCloudApigeeV1EntityMetadataResponse;
    /**
     * The ID of the shared flow.
     */
    readonly name: string;
    /**
     * A list of revisions of this shared flow.
     */
    readonly revision: string[];
}

export function getSharedflowOutput(args: GetSharedflowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSharedflowResult> {
    return pulumi.output(args).apply(a => getSharedflow(a, opts))
}

export interface GetSharedflowOutputArgs {
    organizationId: pulumi.Input<string>;
    sharedflowId: pulumi.Input<string>;
}
