// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of "enqueued" means that the request succeeded.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class HostQuery extends pulumi.CustomResource {
    /**
     * Get an existing HostQuery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HostQuery {
        return new HostQuery(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:apigee/v1:HostQuery';

    /**
     * Returns true if the given object is an instance of HostQuery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostQuery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostQuery.__pulumiType;
    }

    /**
     * Creation time of the query.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * Hostname is available only when query is executed at host level.
     */
    public readonly envgroupHostname!: pulumi.Output<string>;
    /**
     * Error is set when query fails.
     */
    public /*out*/ readonly error!: pulumi.Output<string>;
    /**
     * ExecutionTime is available only after the query is completed.
     */
    public /*out*/ readonly executionTime!: pulumi.Output<string>;
    /**
     * Asynchronous Query Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Contains information like metrics, dimenstions etc of the AsyncQuery.
     */
    public /*out*/ readonly queryParams!: pulumi.Output<outputs.apigee.v1.GoogleCloudApigeeV1QueryMetadataResponse>;
    /**
     * Asynchronous Report ID.
     */
    public readonly reportDefinitionId!: pulumi.Output<string>;
    /**
     * Result is available only after the query is completed.
     */
    public /*out*/ readonly result!: pulumi.Output<outputs.apigee.v1.GoogleCloudApigeeV1AsyncQueryResultResponse>;
    /**
     * ResultFileSize is available only after the query is completed.
     */
    public /*out*/ readonly resultFileSize!: pulumi.Output<string>;
    /**
     * ResultRows is available only after the query is completed.
     */
    public /*out*/ readonly resultRows!: pulumi.Output<string>;
    /**
     * Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
     */
    public /*out*/ readonly self!: pulumi.Output<string>;
    /**
     * Query state could be "enqueued", "running", "completed", "failed".
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Last updated timestamp for the query.
     */
    public /*out*/ readonly updated!: pulumi.Output<string>;

    /**
     * Create a HostQuery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostQueryArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.timeRange === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeRange'");
            }
            resourceInputs["csvDelimiter"] = args ? args.csvDelimiter : undefined;
            resourceInputs["dimensions"] = args ? args.dimensions : undefined;
            resourceInputs["envgroupHostname"] = args ? args.envgroupHostname : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["groupByTimeUnit"] = args ? args.groupByTimeUnit : undefined;
            resourceInputs["limit"] = args ? args.limit : undefined;
            resourceInputs["metrics"] = args ? args.metrics : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["outputFormat"] = args ? args.outputFormat : undefined;
            resourceInputs["reportDefinitionId"] = args ? args.reportDefinitionId : undefined;
            resourceInputs["timeRange"] = args ? args.timeRange : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["error"] = undefined /*out*/;
            resourceInputs["executionTime"] = undefined /*out*/;
            resourceInputs["queryParams"] = undefined /*out*/;
            resourceInputs["result"] = undefined /*out*/;
            resourceInputs["resultFileSize"] = undefined /*out*/;
            resourceInputs["resultRows"] = undefined /*out*/;
            resourceInputs["self"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        } else {
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["envgroupHostname"] = undefined /*out*/;
            resourceInputs["error"] = undefined /*out*/;
            resourceInputs["executionTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["queryParams"] = undefined /*out*/;
            resourceInputs["reportDefinitionId"] = undefined /*out*/;
            resourceInputs["result"] = undefined /*out*/;
            resourceInputs["resultFileSize"] = undefined /*out*/;
            resourceInputs["resultRows"] = undefined /*out*/;
            resourceInputs["self"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostQuery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a HostQuery resource.
 */
export interface HostQueryArgs {
    /**
     * Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
     */
    csvDelimiter?: pulumi.Input<string>;
    /**
     * A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions
     */
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname.
     */
    envgroupHostname?: pulumi.Input<string>;
    /**
     * Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax
     */
    filter?: pulumi.Input<string>;
    /**
     * Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.
     */
    groupByTimeUnit?: pulumi.Input<string>;
    /**
     * Maximum number of rows that can be returned in the result.
     */
    limit?: pulumi.Input<number>;
    /**
     * A list of Metrics.
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.apigee.v1.GoogleCloudApigeeV1QueryMetricArgs>[]>;
    /**
     * Asynchronous Query Name.
     */
    name?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    /**
     * Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.
     */
    outputFormat?: pulumi.Input<string>;
    /**
     * Asynchronous Report ID.
     */
    reportDefinitionId?: pulumi.Input<string>;
    /**
     * Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: "timeRange": { "start": "2018-07-29T00:13:00Z", "end": "2018-08-01T00:18:00Z" }
     */
    timeRange: any;
}
