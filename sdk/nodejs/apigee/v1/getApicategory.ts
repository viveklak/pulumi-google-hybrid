// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets a category on the portal.
 */
export function getApicategory(args: GetApicategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetApicategoryResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getApicategory", {
        "apicategoryId": args.apicategoryId,
        "organizationId": args.organizationId,
        "siteId": args.siteId,
    }, opts);
}

export interface GetApicategoryArgs {
    apicategoryId: string;
    organizationId: string;
    siteId: string;
}

export interface GetApicategoryResult {
    /**
     * Details of category.
     */
    readonly data: outputs.apigee.v1.GoogleCloudApigeeV1ApiCategoryDataResponse;
    /**
     * ID that can be used to find errors in the log files.
     */
    readonly errorCode: string;
    /**
     * Description of the operation.
     */
    readonly message: string;
    /**
     * ID that can be used to find request details in the log files.
     */
    readonly requestId: string;
    /**
     * Status of the operation.
     */
    readonly status: string;
}

export function getApicategoryOutput(args: GetApicategoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApicategoryResult> {
    return pulumi.output(args).apply(a => getApicategory(a, opts))
}

export interface GetApicategoryOutputArgs {
    apicategoryId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
}
