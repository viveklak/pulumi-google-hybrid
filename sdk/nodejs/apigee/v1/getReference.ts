// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a Reference resource.
 */
export function getReference(args: GetReferenceArgs, opts?: pulumi.InvokeOptions): Promise<GetReferenceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getReference", {
        "environmentId": args.environmentId,
        "organizationId": args.organizationId,
        "referenceId": args.referenceId,
    }, opts);
}

export interface GetReferenceArgs {
    environmentId: string;
    organizationId: string;
    referenceId: string;
}

export interface GetReferenceResult {
    /**
     * Optional. A human-readable description of this reference.
     */
    readonly description: string;
    /**
     * The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
     */
    readonly name: string;
    /**
     * The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
     */
    readonly refers: string;
    /**
     * The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
     */
    readonly resourceType: string;
}

export function getReferenceOutput(args: GetReferenceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReferenceResult> {
    return pulumi.output(args).apply(a => getReference(a, opts))
}

export interface GetReferenceOutputArgs {
    environmentId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    referenceId: pulumi.Input<string>;
}
