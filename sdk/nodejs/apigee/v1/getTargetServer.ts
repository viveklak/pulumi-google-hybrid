// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets a TargetServer resource.
 */
export function getTargetServer(args: GetTargetServerArgs, opts?: pulumi.InvokeOptions): Promise<GetTargetServerResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getTargetServer", {
        "environmentId": args.environmentId,
        "organizationId": args.organizationId,
        "targetserverId": args.targetserverId,
    }, opts);
}

export interface GetTargetServerArgs {
    environmentId: string;
    organizationId: string;
    targetserverId: string;
}

export interface GetTargetServerResult {
    /**
     * Optional. A human-readable description of this TargetServer.
     */
    readonly description: string;
    /**
     * The host name this target connects to. Value must be a valid hostname as described by RFC-1123.
     */
    readonly host: string;
    /**
     * Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true.
     */
    readonly isEnabled: boolean;
    /**
     * The resource id of this target server. Values must match the regular expression 
     */
    readonly name: string;
    /**
     * The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.
     */
    readonly port: number;
    /**
     * Immutable. The protocol used by this TargetServer.
     */
    readonly protocol: string;
    /**
     * Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration.
     */
    readonly sSLInfo: outputs.apigee.v1.GoogleCloudApigeeV1TlsInfoResponse;
}

export function getTargetServerOutput(args: GetTargetServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTargetServerResult> {
    return pulumi.output(args).apply(a => getTargetServer(a, opts))
}

export interface GetTargetServerOutputArgs {
    environmentId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    targetserverId: pulumi.Input<string>;
}
