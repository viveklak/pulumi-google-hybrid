// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
 */
export function getOrganization(args: GetOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getOrganization", {
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetOrganizationArgs {
    organizationId: string;
}

export interface GetOrganizationResult {
    /**
     * Addon configurations of the Apigee organization.
     */
    readonly addonsConfig: outputs.apigee.v1.GoogleCloudApigeeV1AddonsConfigResponse;
    /**
     * DEPRECATED: This field will be deprecated once Apigee supports DRZ. Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     *
     * @deprecated Required. DEPRECATED: This field will be deprecated once Apigee supports DRZ. Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     */
    readonly analyticsRegion: string;
    /**
     * Not used by Apigee.
     */
    readonly attributes: string[];
    /**
     * Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid.
     */
    readonly authorizedNetwork: string;
    /**
     * Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).
     */
    readonly billingType: string;
    /**
     * Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`.
     */
    readonly caCertificate: string;
    /**
     * Time that the Apigee organization was created in milliseconds since epoch.
     */
    readonly createdAt: string;
    /**
     * Not used by Apigee.
     */
    readonly customerName: string;
    /**
     * Description of the Apigee organization.
     */
    readonly description: string;
    /**
     * Display name for the Apigee organization. Unused, but reserved for future use.
     */
    readonly displayName: string;
    /**
     * List of environments in the Apigee organization.
     */
    readonly environments: string[];
    /**
     * Time that the Apigee organization is scheduled for deletion.
     */
    readonly expiresAt: string;
    /**
     * Time that the Apigee organization was last modified in milliseconds since epoch.
     */
    readonly lastModifiedAt: string;
    /**
     * Name of the Apigee organization.
     */
    readonly name: string;
    /**
     * Configuration for the Portals settings.
     */
    readonly portalDisabled: boolean;
    /**
     * Project ID associated with the Apigee organization.
     */
    readonly project: string;
    /**
     * Properties defined in the Apigee organization profile.
     */
    readonly properties: outputs.apigee.v1.GoogleCloudApigeeV1PropertiesResponse;
    /**
     * Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: "projects/foo/locations/us/keyRings/bar/cryptoKeys/baz". **Note:** Not supported for Apigee hybrid.
     */
    readonly runtimeDatabaseEncryptionKeyName: string;
    /**
     * Runtime type of the Apigee organization based on the Apigee subscription purchased.
     */
    readonly runtimeType: string;
    /**
     * State of the organization. Values other than ACTIVE means the resource is not ready to use.
     */
    readonly state: string;
    /**
     * DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
     *
     * @deprecated Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
     */
    readonly subscriptionType: string;
    /**
     * Not used by Apigee.
     */
    readonly type: string;
}

export function getOrganizationOutput(args: GetOrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationResult> {
    return pulumi.output(args).apply(a => getOrganization(a, opts))
}

export interface GetOrganizationOutputArgs {
    organizationId: pulumi.Input<string>;
}
