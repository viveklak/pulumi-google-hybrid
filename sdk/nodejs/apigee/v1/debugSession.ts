// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a debug session for a deployed API Proxy revision.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class DebugSession extends pulumi.CustomResource {
    /**
     * Get an existing DebugSession resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DebugSession {
        return new DebugSession(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:apigee/v1:DebugSession';

    /**
     * Returns true if the given object is an instance of DebugSession.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DebugSession {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DebugSession.__pulumiType;
    }

    /**
     * Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10.
     */
    public readonly count!: pulumi.Output<number>;
    /**
     * The first transaction creation timestamp, recorded by UAP.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition.
     */
    public readonly filter!: pulumi.Output<string>;
    /**
     * A unique ID for this DebugSession.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided.
     */
    public readonly timeout!: pulumi.Output<string>;
    /**
     * Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.
     */
    public readonly tracesize!: pulumi.Output<number>;
    /**
     * Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10.
     */
    public readonly validity!: pulumi.Output<number>;

    /**
     * Create a DebugSession resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DebugSessionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.revisionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'revisionId'");
            }
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["count"] = args ? args.count : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["revisionId"] = args ? args.revisionId : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["tracesize"] = args ? args.tracesize : undefined;
            resourceInputs["validity"] = args ? args.validity : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        } else {
            resourceInputs["count"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["filter"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["timeout"] = undefined /*out*/;
            resourceInputs["tracesize"] = undefined /*out*/;
            resourceInputs["validity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DebugSession.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DebugSession resource.
 */
export interface DebugSessionArgs {
    apiId: pulumi.Input<string>;
    /**
     * Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10.
     */
    count?: pulumi.Input<number>;
    environmentId: pulumi.Input<string>;
    /**
     * Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition.
     */
    filter?: pulumi.Input<string>;
    /**
     * A unique ID for this DebugSession.
     */
    name?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    revisionId: pulumi.Input<string>;
    /**
     * Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided.
     */
    timeout?: pulumi.Input<string>;
    /**
     * Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.
     */
    tracesize?: pulumi.Input<number>;
    /**
     * Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10.
     */
    validity?: pulumi.Input<number>;
}
