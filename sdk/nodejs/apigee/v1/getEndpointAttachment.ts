// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the endpoint attachment.
 */
export function getEndpointAttachment(args: GetEndpointAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointAttachmentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apigee/v1:getEndpointAttachment", {
        "endpointAttachmentId": args.endpointAttachmentId,
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetEndpointAttachmentArgs {
    endpointAttachmentId: string;
    organizationId: string;
}

export interface GetEndpointAttachmentResult {
    /**
     * Host that can be used in either the HTTP target endpoint directly or as the host in target server.
     */
    readonly host: string;
    /**
     * Location of the endpoint attachment.
     */
    readonly location: string;
    /**
     * Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`
     */
    readonly name: string;
    /**
     * Format: projects/*&#47;regions/*&#47;serviceAttachments/*
     */
    readonly serviceAttachment: string;
}

export function getEndpointAttachmentOutput(args: GetEndpointAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointAttachmentResult> {
    return pulumi.output(args).apply(a => getEndpointAttachment(a, opts))
}

export interface GetEndpointAttachmentOutputArgs {
    endpointAttachmentId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
}
