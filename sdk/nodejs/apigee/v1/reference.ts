// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a Reference in the specified environment.
 */
export class Reference extends pulumi.CustomResource {
    /**
     * Get an existing Reference resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Reference {
        return new Reference(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:apigee/v1:Reference';

    /**
     * Returns true if the given object is an instance of Reference.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Reference {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Reference.__pulumiType;
    }

    /**
     * Optional. A human-readable description of this reference.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
     */
    public readonly refers!: pulumi.Output<string>;
    /**
     * The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
     */
    public readonly resourceType!: pulumi.Output<string>;

    /**
     * Create a Reference resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReferenceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.refers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'refers'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["refers"] = args ? args.refers : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
        } else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["refers"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Reference.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Reference resource.
 */
export interface ReferenceArgs {
    /**
     * Optional. A human-readable description of this reference.
     */
    description?: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    /**
     * The resource id of this reference. Values must match the regular expression [\w\s\-.]+.
     */
    name?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    /**
     * The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.
     */
    refers: pulumi.Input<string>;
    /**
     * The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
     */
    resourceType?: pulumi.Input<string>;
}
