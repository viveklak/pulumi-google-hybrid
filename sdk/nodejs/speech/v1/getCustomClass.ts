// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Get a custom class.
 */
export function getCustomClass(args: GetCustomClassArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomClassResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:speech/v1:getCustomClass", {
        "customClassId": args.customClassId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetCustomClassArgs {
    customClassId: string;
    location: string;
    project?: string;
}

export interface GetCustomClassResult {
    /**
     * If this custom class is a resource, the custom_class_id is the resource id of the CustomClass. Case sensitive.
     */
    readonly customClassId: string;
    /**
     * A collection of class items.
     */
    readonly items: outputs.speech.v1.ClassItemResponse[];
    /**
     * The resource name of the custom class.
     */
    readonly name: string;
}

export function getCustomClassOutput(args: GetCustomClassOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomClassResult> {
    return pulumi.output(args).apply(a => getCustomClass(a, opts))
}

export interface GetCustomClassOutputArgs {
    customClassId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
