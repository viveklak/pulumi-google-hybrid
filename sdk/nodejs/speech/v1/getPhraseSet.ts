// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Get a phrase set.
 */
export function getPhraseSet(args: GetPhraseSetArgs, opts?: pulumi.InvokeOptions): Promise<GetPhraseSetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:speech/v1:getPhraseSet", {
        "location": args.location,
        "phraseSetId": args.phraseSetId,
        "project": args.project,
    }, opts);
}

export interface GetPhraseSetArgs {
    location: string;
    phraseSetId: string;
    project?: string;
}

export interface GetPhraseSetResult {
    /**
     * Hint Boost. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 (exclusive) and 20. We recommend using a binary search approach to finding the optimal value for your use case. Speech recognition will skip PhraseSets with a boost value of 0.
     */
    readonly boost: number;
    /**
     * The resource name of the phrase set.
     */
    readonly name: string;
    /**
     * A list of word and phrases.
     */
    readonly phrases: outputs.speech.v1.PhraseResponse[];
}

export function getPhraseSetOutput(args: GetPhraseSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPhraseSetResult> {
    return pulumi.output(args).apply(a => getPhraseSet(a, opts))
}

export interface GetPhraseSetOutputArgs {
    location: pulumi.Input<string>;
    phraseSetId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
