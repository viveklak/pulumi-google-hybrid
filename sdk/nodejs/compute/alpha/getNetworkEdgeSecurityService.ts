// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a specified NetworkEdgeSecurityService.
 */
export function getNetworkEdgeSecurityService(args: GetNetworkEdgeSecurityServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkEdgeSecurityServiceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:compute/alpha:getNetworkEdgeSecurityService", {
        "networkEdgeSecurityService": args.networkEdgeSecurityService,
        "project": args.project,
        "region": args.region,
    }, opts);
}

export interface GetNetworkEdgeSecurityServiceArgs {
    networkEdgeSecurityService: string;
    project?: string;
    region: string;
}

export interface GetNetworkEdgeSecurityServiceResult {
    /**
     * Creation timestamp in RFC3339 text format.
     */
    readonly creationTimestamp: string;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    readonly description: string;
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a NetworkEdgeSecurityService. An up-to-date fingerprint must be provided in order to update the NetworkEdgeSecurityService, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a NetworkEdgeSecurityService.
     */
    readonly fingerprint: string;
    /**
     * [Output only] Type of the resource. Always compute#networkEdgeSecurityService for NetworkEdgeSecurityServices
     */
    readonly kind: string;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    readonly name: string;
    /**
     * URL of the region where the resource resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    readonly region: string;
    /**
     * The resource URL for the network edge security service associated with this network edge security service.
     */
    readonly securityPolicy: string;
    /**
     * Server-defined URL for the resource.
     */
    readonly selfLink: string;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    readonly selfLinkWithId: string;
}

export function getNetworkEdgeSecurityServiceOutput(args: GetNetworkEdgeSecurityServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkEdgeSecurityServiceResult> {
    return pulumi.output(args).apply(a => getNetworkEdgeSecurityService(a, opts))
}

export interface GetNetworkEdgeSecurityServiceOutputArgs {
    networkEdgeSecurityService: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region: pulumi.Input<string>;
}
