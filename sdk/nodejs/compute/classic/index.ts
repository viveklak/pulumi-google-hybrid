// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./autoscalar";
export * from "./autoscaler";
export * from "./managedSslCertificate";
export * from "./mangedSslCertificate";

// Import resources to register:
import { Autoscalar } from "./autoscalar";
import { Autoscaler } from "./autoscaler";
import { ManagedSslCertificate } from "./managedSslCertificate";
import { MangedSslCertificate } from "./mangedSslCertificate";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:compute/classic:Autoscalar":
                return new Autoscalar(name, <any>undefined, { urn })
            case "google-hybrid:compute/classic:Autoscaler":
                return new Autoscaler(name, <any>undefined, { urn })
            case "google-hybrid:compute/classic:ManagedSslCertificate":
                return new ManagedSslCertificate(name, <any>undefined, { urn })
            case "google-hybrid:compute/classic:MangedSslCertificate":
                return new MangedSslCertificate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "compute/classic", _module)
