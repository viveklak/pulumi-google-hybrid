// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./certificate";
export * from "./certificateMap";
export * from "./certificateMapEntry";
export * from "./dnsAuthorization";
export * from "./getCertificate";
export * from "./getCertificateMap";
export * from "./getCertificateMapEntry";
export * from "./getDnsAuthorization";

// Export enums:
export * from "../../types/enums/certificatemanager/v1";

// Import resources to register:
import { Certificate } from "./certificate";
import { CertificateMap } from "./certificateMap";
import { CertificateMapEntry } from "./certificateMapEntry";
import { DnsAuthorization } from "./dnsAuthorization";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:certificatemanager/v1:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "google-hybrid:certificatemanager/v1:CertificateMap":
                return new CertificateMap(name, <any>undefined, { urn })
            case "google-hybrid:certificatemanager/v1:CertificateMapEntry":
                return new CertificateMapEntry(name, <any>undefined, { urn })
            case "google-hybrid:certificatemanager/v1:DnsAuthorization":
                return new DnsAuthorization(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "certificatemanager/v1", _module)
