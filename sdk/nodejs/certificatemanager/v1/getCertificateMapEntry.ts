// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets details of a single CertificateMapEntry.
 */
export function getCertificateMapEntry(args: GetCertificateMapEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateMapEntryResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:certificatemanager/v1:getCertificateMapEntry", {
        "certificateMapEntryId": args.certificateMapEntryId,
        "certificateMapId": args.certificateMapId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetCertificateMapEntryArgs {
    certificateMapEntryId: string;
    certificateMapId: string;
    location: string;
    project?: string;
}

export interface GetCertificateMapEntryResult {
    /**
     * A set of Certificates defines for the given `hostname`. There can be defined up to fifteen certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*&#47;locations/*&#47;certificates/*`.
     */
    readonly certificates: string[];
    /**
     * The creation timestamp of a Certificate Map Entry.
     */
    readonly createTime: string;
    /**
     * One or more paragraphs of text description of a certificate map entry.
     */
    readonly description: string;
    /**
     * A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
     */
    readonly hostname: string;
    /**
     * Set of labels associated with a Certificate Map Entry.
     */
    readonly labels: {[key: string]: string};
    /**
     * A predefined matcher for particular cases, other than SNI selection.
     */
    readonly matcher: string;
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*&#47;locations/*&#47;certificateMaps/*&#47;certificateMapEntries/*`.
     */
    readonly name: string;
    /**
     * A serving state of this Certificate Map Entry.
     */
    readonly state: string;
    /**
     * The update timestamp of a Certificate Map Entry.
     */
    readonly updateTime: string;
}

export function getCertificateMapEntryOutput(args: GetCertificateMapEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateMapEntryResult> {
    return pulumi.output(args).apply(a => getCertificateMapEntry(a, opts))
}

export interface GetCertificateMapEntryOutputArgs {
    certificateMapEntryId: pulumi.Input<string>;
    certificateMapId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
