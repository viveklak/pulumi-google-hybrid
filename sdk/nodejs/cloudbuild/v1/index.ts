// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./bitbucketServerConfig";
export * from "./build";
export * from "./getBitbucketServerConfig";
export * from "./getBuild";
export * from "./getGithubEnterpriseConfig";
export * from "./getTrigger";
export * from "./getWorkerPool";
export * from "./githubEnterpriseConfig";
export * from "./trigger";
export * from "./workerPool";

// Export enums:
export * from "../../types/enums/cloudbuild/v1";

// Import resources to register:
import { BitbucketServerConfig } from "./bitbucketServerConfig";
import { Build } from "./build";
import { GithubEnterpriseConfig } from "./githubEnterpriseConfig";
import { Trigger } from "./trigger";
import { WorkerPool } from "./workerPool";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:cloudbuild/v1:BitbucketServerConfig":
                return new BitbucketServerConfig(name, <any>undefined, { urn })
            case "google-hybrid:cloudbuild/v1:Build":
                return new Build(name, <any>undefined, { urn })
            case "google-hybrid:cloudbuild/v1:GithubEnterpriseConfig":
                return new GithubEnterpriseConfig(name, <any>undefined, { urn })
            case "google-hybrid:cloudbuild/v1:Trigger":
                return new Trigger(name, <any>undefined, { urn })
            case "google-hybrid:cloudbuild/v1:WorkerPool":
                return new WorkerPool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "cloudbuild/v1", _module)
