// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Retrieve a `BitbucketServerConfig`. This API is experimental.
 */
export function getBitbucketServerConfig(args: GetBitbucketServerConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetBitbucketServerConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:cloudbuild/v1:getBitbucketServerConfig", {
        "bitbucketServerConfigId": args.bitbucketServerConfigId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetBitbucketServerConfigArgs {
    bitbucketServerConfigId: string;
    location: string;
    project?: string;
}

export interface GetBitbucketServerConfigResult {
    /**
     * Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
     */
    readonly apiKey: string;
    /**
     * Connected Bitbucket Server repositories for this config.
     */
    readonly connectedRepositories: outputs.cloudbuild.v1.BitbucketServerRepositoryIdResponse[];
    /**
     * Time when the config was created.
     */
    readonly createTime: string;
    /**
     * Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
     */
    readonly hostUri: string;
    /**
     * The resource name for the config.
     */
    readonly name: string;
    /**
     * Optional. The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance will be made over the public internet. Must be in the format `projects/{project}/global/networks/{network}`, where {project} is a project number or id and {network} is the name of a VPC network in the project.
     */
    readonly peeredNetwork: string;
    /**
     * Secret Manager secrets needed by the config.
     */
    readonly secrets: outputs.cloudbuild.v1.BitbucketServerSecretsResponse;
    /**
     * Optional. SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of .pem, .cer, or .crt.
     */
    readonly sslCa: string;
    /**
     * Username of the account Cloud Build will use on Bitbucket Server.
     */
    readonly username: string;
    /**
     * UUID included in webhook requests. The UUID is used to look up the corresponding config.
     */
    readonly webhookKey: string;
}

export function getBitbucketServerConfigOutput(args: GetBitbucketServerConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBitbucketServerConfigResult> {
    return pulumi.output(args).apply(a => getBitbucketServerConfig(a, opts))
}

export interface GetBitbucketServerConfigOutputArgs {
    bitbucketServerConfigId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
