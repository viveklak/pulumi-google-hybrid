// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a session. Returns `NOT_FOUND` if the session does not exist. This is mainly useful for determining whether a session is still alive.
 */
export function getSession(args: GetSessionArgs, opts?: pulumi.InvokeOptions): Promise<GetSessionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:spanner/v1:getSession", {
        "databaseId": args.databaseId,
        "instanceId": args.instanceId,
        "project": args.project,
        "sessionId": args.sessionId,
    }, opts);
}

export interface GetSessionArgs {
    databaseId: string;
    instanceId: string;
    project?: string;
    sessionId: string;
}

export interface GetSessionResult {
    /**
     * The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.
     */
    readonly approximateLastUseTime: string;
    /**
     * The timestamp when the session is created.
     */
    readonly createTime: string;
    /**
     * The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * The name of the session. This is always system-assigned.
     */
    readonly name: string;
}

export function getSessionOutput(args: GetSessionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSessionResult> {
    return pulumi.output(args).apply(a => getSession(a, opts))
}

export interface GetSessionOutputArgs {
    databaseId: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    sessionId: pulumi.Input<string>;
}
