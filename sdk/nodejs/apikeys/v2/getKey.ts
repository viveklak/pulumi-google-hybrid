// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets the metadata for an API key. The key string of the API key isn't included in the response. NOTE: Key is a global resource; hence the only supported value for location is `global`.
 */
export function getKey(args: GetKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:apikeys/v2:getKey", {
        "keyId": args.keyId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetKeyArgs {
    keyId: string;
    location: string;
    project?: string;
}

export interface GetKeyResult {
    /**
     * Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     */
    readonly annotations: {[key: string]: string};
    /**
     * A timestamp identifying the time this key was originally created.
     */
    readonly createTime: string;
    /**
     * A timestamp when this key was deleted. If the resource is not deleted, this must be empty.
     */
    readonly deleteTime: string;
    /**
     * Human-readable display name of this key that you can modify. The maximum length is 63 characters.
     */
    readonly displayName: string;
    /**
     * A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.
     */
    readonly etag: string;
    /**
     * An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.
     */
    readonly keyString: string;
    /**
     * The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.
     */
    readonly name: string;
    /**
     * Key restrictions.
     */
    readonly restrictions: outputs.apikeys.v2.V2RestrictionsResponse;
    /**
     * Unique id in UUID4 format.
     */
    readonly uid: string;
    /**
     * A timestamp identifying the time this key was last updated.
     */
    readonly updateTime: string;
}

export function getKeyOutput(args: GetKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyResult> {
    return pulumi.output(args).apply(a => getKey(a, opts))
}

export interface GetKeyOutputArgs {
    keyId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
