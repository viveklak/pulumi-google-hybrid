// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets details of a single migration job.
 */
export function getMigrationJob(args: GetMigrationJobArgs, opts?: pulumi.InvokeOptions): Promise<GetMigrationJobResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:datamigration/v1:getMigrationJob", {
        "location": args.location,
        "migrationJobId": args.migrationJobId,
        "project": args.project,
    }, opts);
}

export interface GetMigrationJobArgs {
    location: string;
    migrationJobId: string;
    project?: string;
}

export interface GetMigrationJobResult {
    /**
     * The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    readonly createTime: string;
    /**
     * The resource name (URI) of the destination connection profile.
     */
    readonly destination: string;
    /**
     * The database engine type and provider of the destination.
     */
    readonly destinationDatabase: outputs.datamigration.v1.DatabaseTypeResponse;
    /**
     * The migration job display name.
     */
    readonly displayName: string;
    /**
     * The initial dump flags. This field and the "dump_path" field are mutually exclusive.
     */
    readonly dumpFlags: outputs.datamigration.v1.DumpFlagsResponse;
    /**
     * The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the "dump_flags" field are mutually exclusive.
     */
    readonly dumpPath: string;
    /**
     * The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
     */
    readonly duration: string;
    /**
     * If the migration job is completed, the time when it was completed.
     */
    readonly endTime: string;
    /**
     * The error details in case of state FAILED.
     */
    readonly error: outputs.datamigration.v1.StatusResponse;
    /**
     * The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    readonly labels: {[key: string]: string};
    /**
     * The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
     */
    readonly name: string;
    /**
     * The current migration job phase.
     */
    readonly phase: string;
    /**
     * The details needed to communicate to the source over Reverse SSH tunnel connectivity.
     */
    readonly reverseSshConnectivity: outputs.datamigration.v1.ReverseSshConnectivityResponse;
    /**
     * The resource name (URI) of the source connection profile.
     */
    readonly source: string;
    /**
     * The database engine type and provider of the source.
     */
    readonly sourceDatabase: outputs.datamigration.v1.DatabaseTypeResponse;
    /**
     * The current migration job state.
     */
    readonly state: string;
    /**
     * static ip connectivity data (default, no additional details needed).
     */
    readonly staticIpConnectivity: outputs.datamigration.v1.StaticIpConnectivityResponse;
    /**
     * The migration job type.
     */
    readonly type: string;
    /**
     * The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    readonly updateTime: string;
    /**
     * The details of the VPC network that the source database is located in.
     */
    readonly vpcPeeringConnectivity: outputs.datamigration.v1.VpcPeeringConnectivityResponse;
}

export function getMigrationJobOutput(args: GetMigrationJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMigrationJobResult> {
    return pulumi.output(args).apply(a => getMigrationJob(a, opts))
}

export interface GetMigrationJobOutputArgs {
    location: pulumi.Input<string>;
    migrationJobId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
