// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets a specific catalog item.
 */
export function getCatalogItem(args: GetCatalogItemArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalogItemResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:recommendationengine/v1beta1:getCatalogItem", {
        "catalogId": args.catalogId,
        "catalogItemId": args.catalogItemId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetCatalogItemArgs {
    catalogId: string;
    catalogItemId: string;
    location: string;
    project?: string;
}

export interface GetCatalogItemResult {
    /**
     * Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
     */
    readonly categoryHierarchies: outputs.recommendationengine.v1beta1.GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponse[];
    /**
     * Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
     */
    readonly description: string;
    /**
     * Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
     */
    readonly itemAttributes: outputs.recommendationengine.v1beta1.GoogleCloudRecommendationengineV1beta1FeatureMapResponse;
    /**
     * Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
     */
    readonly itemGroupId: string;
    /**
     * Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
     *
     * @deprecated Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
     */
    readonly languageCode: string;
    /**
     * Optional. Metadata specific to retail products.
     */
    readonly productMetadata: outputs.recommendationengine.v1beta1.GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse;
    /**
     * Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
     */
    readonly tags: string[];
    /**
     * Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
     */
    readonly title: string;
}

export function getCatalogItemOutput(args: GetCatalogItemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCatalogItemResult> {
    return pulumi.output(args).apply(a => getCatalogItem(a, opts))
}

export interface GetCatalogItemOutputArgs {
    catalogId: pulumi.Input<string>;
    catalogItemId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
