// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the specified key.
 */
export function getKey(args: GetKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:recaptchaenterprise/v1:getKey", {
        "keyId": args.keyId,
        "project": args.project,
    }, opts);
}

export interface GetKeyArgs {
    keyId: string;
    project?: string;
}

export interface GetKeyResult {
    /**
     * Settings for keys that can be used by Android apps.
     */
    readonly androidSettings: outputs.recaptchaenterprise.v1.GoogleCloudRecaptchaenterpriseV1AndroidKeySettingsResponse;
    /**
     * The timestamp corresponding to the creation of this Key.
     */
    readonly createTime: string;
    /**
     * Human-readable display name of this key. Modifiable by user.
     */
    readonly displayName: string;
    /**
     * Settings for keys that can be used by iOS apps.
     */
    readonly iosSettings: outputs.recaptchaenterprise.v1.GoogleCloudRecaptchaenterpriseV1IOSKeySettingsResponse;
    /**
     * See Creating and managing labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name for the Key in the format "projects/{project}/keys/{key}".
     */
    readonly name: string;
    /**
     * Options for user acceptance testing.
     */
    readonly testingOptions: outputs.recaptchaenterprise.v1.GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse;
    /**
     * Settings for WAF
     */
    readonly wafSettings: outputs.recaptchaenterprise.v1.GoogleCloudRecaptchaenterpriseV1WafSettingsResponse;
    /**
     * Settings for keys that can be used by websites.
     */
    readonly webSettings: outputs.recaptchaenterprise.v1.GoogleCloudRecaptchaenterpriseV1WebKeySettingsResponse;
}

export function getKeyOutput(args: GetKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyResult> {
    return pulumi.output(args).apply(a => getKey(a, opts))
}

export interface GetKeyOutputArgs {
    keyId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
