// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets information about a single waiter.
 */
export function getWaiter(args: GetWaiterArgs, opts?: pulumi.InvokeOptions): Promise<GetWaiterResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:runtimeconfig/v1beta1:getWaiter", {
        "configId": args.configId,
        "project": args.project,
        "waiterId": args.waiterId,
    }, opts);
}

export interface GetWaiterArgs {
    configId: string;
    project?: string;
    waiterId: string;
}

export interface GetWaiterResult {
    /**
     * The instant at which this Waiter resource was created. Adding the value of `timeout` to this instant yields the timeout deadline for the waiter.
     */
    readonly createTime: string;
    /**
     * If the value is `false`, it means the waiter is still waiting for one of its conditions to be met. If true, the waiter has finished. If the waiter finished due to a timeout or failure, `error` will be set.
     */
    readonly done: boolean;
    /**
     * If the waiter ended due to a failure or timeout, this value will be set.
     */
    readonly error: outputs.runtimeconfig.v1beta1.StatusResponse;
    /**
     * [Optional] The failure condition of this waiter. If this condition is met, `done` will be set to `true` and the `error` code will be set to `ABORTED`. The failure condition takes precedence over the success condition. If both conditions are met, a failure will be indicated. This value is optional; if no failure condition is set, the only failure scenario will be a timeout.
     */
    readonly failure: outputs.runtimeconfig.v1beta1.EndConditionResponse;
    /**
     * The name of the Waiter resource, in the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME] The `[PROJECT_ID]` must be a valid Google Cloud project ID, the `[CONFIG_NAME]` must be a valid RuntimeConfig resource, the `[WAITER_NAME]` must match RFC 1035 segment specification, and the length of `[WAITER_NAME]` must be less than 64 bytes. After you create a Waiter resource, you cannot change the resource name.
     */
    readonly name: string;
    /**
     * [Required] The success condition. If this condition is met, `done` will be set to `true` and the `error` value will remain unset. The failure condition takes precedence over the success condition. If both conditions are met, a failure will be indicated.
     */
    readonly success: outputs.runtimeconfig.v1beta1.EndConditionResponse;
    /**
     * [Required] Specifies the timeout of the waiter in seconds, beginning from the instant that `waiters().create` method is called. If this time elapses before the success or failure conditions are met, the waiter fails and sets the `error` code to `DEADLINE_EXCEEDED`.
     */
    readonly timeout: string;
}

export function getWaiterOutput(args: GetWaiterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWaiterResult> {
    return pulumi.output(args).apply(a => getWaiter(a, opts))
}

export interface GetWaiterOutputArgs {
    configId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    waiterId: pulumi.Input<string>;
}
