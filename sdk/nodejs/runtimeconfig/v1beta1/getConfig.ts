// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets information about a RuntimeConfig resource.
 */
export function getConfig(args: GetConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:runtimeconfig/v1beta1:getConfig", {
        "configId": args.configId,
        "project": args.project,
    }, opts);
}

export interface GetConfigArgs {
    configId: string;
    project?: string;
}

export interface GetConfigResult {
    /**
     * An optional description of the RuntimeConfig object.
     */
    readonly description: string;
    /**
     * The resource name of a runtime config. The name must have the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME] The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length of `[CONFIG_NAME]` must be less than 64 characters. You pick the RuntimeConfig resource name, but the server will validate that the name adheres to this format. After you create the resource, you cannot change the resource's name.
     */
    readonly name: string;
}

export function getConfigOutput(args: GetConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigResult> {
    return pulumi.output(args).apply(a => getConfig(a, opts))
}

export interface GetConfigOutputArgs {
    configId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
