// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./config";
export * from "./configIamPolicy";
export * from "./getConfig";
export * from "./getConfigIamPolicy";
export * from "./getVariable";
export * from "./getWaiter";
export * from "./variable";
export * from "./waiter";

// Import resources to register:
import { Config } from "./config";
import { ConfigIamPolicy } from "./configIamPolicy";
import { Variable } from "./variable";
import { Waiter } from "./waiter";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:runtimeconfig/v1beta1:Config":
                return new Config(name, <any>undefined, { urn })
            case "google-hybrid:runtimeconfig/v1beta1:ConfigIamPolicy":
                return new ConfigIamPolicy(name, <any>undefined, { urn })
            case "google-hybrid:runtimeconfig/v1beta1:Variable":
                return new Variable(name, <any>undefined, { urn })
            case "google-hybrid:runtimeconfig/v1beta1:Waiter":
                return new Waiter(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "runtimeconfig/v1beta1", _module)
