// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets an entry.
 */
export function getEntry(args: GetEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetEntryResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:datacatalog/v1:getEntry", {
        "entryGroupId": args.entryGroupId,
        "entryId": args.entryId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetEntryArgs {
    entryGroupId: string;
    entryId: string;
    location: string;
    project?: string;
}

export interface GetEntryResult {
    /**
     * Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
     */
    readonly bigqueryDateShardedSpec: outputs.datacatalog.v1.GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse;
    /**
     * Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.
     */
    readonly bigqueryTableSpec: outputs.datacatalog.v1.GoogleCloudDatacatalogV1BigQueryTableSpecResponse;
    /**
     * Business Context of the entry. Not supported for BigQuery datasets
     */
    readonly businessContext: outputs.datacatalog.v1.GoogleCloudDatacatalogV1BusinessContextResponse;
    /**
     * Physical location of the entry.
     */
    readonly dataSource: outputs.datacatalog.v1.GoogleCloudDatacatalogV1DataSourceResponse;
    /**
     * Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.
     */
    readonly dataSourceConnectionSpec: outputs.datacatalog.v1.GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse;
    /**
     * Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
     */
    readonly databaseTableSpec: outputs.datacatalog.v1.GoogleCloudDatacatalogV1DatabaseTableSpecResponse;
    /**
     * Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
     */
    readonly description: string;
    /**
     * Display name of an entry. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum size is 200 bytes when encoded in UTF-8. Default value is an empty string.
     */
    readonly displayName: string;
    /**
     * Specification that applies to a fileset resource. Valid only for entries with the `FILESET` type.
     */
    readonly filesetSpec: outputs.datacatalog.v1.GoogleCloudDatacatalogV1FilesetSpecResponse;
    /**
     * Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
     */
    readonly fullyQualifiedName: string;
    /**
     * Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type.
     */
    readonly gcsFilesetSpec: outputs.datacatalog.v1.GoogleCloudDatacatalogV1GcsFilesetSpecResponse;
    /**
     * Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
     */
    readonly integratedSystem: string;
    /**
     * Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
     */
    readonly linkedResource: string;
    /**
     * The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
     */
    readonly name: string;
    /**
     * Additional information related to the entry. Private to the current user.
     */
    readonly personalDetails: outputs.datacatalog.v1.GoogleCloudDatacatalogV1PersonalDetailsResponse;
    /**
     * Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type.
     */
    readonly routineSpec: outputs.datacatalog.v1.GoogleCloudDatacatalogV1RoutineSpecResponse;
    /**
     * Schema of the entry. An entry might not have any schema attached to it.
     */
    readonly schema: outputs.datacatalog.v1.GoogleCloudDatacatalogV1SchemaResponse;
    /**
     * Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a type listed in the `EntryType` enum. For entries with `user_specified_type`, this field is optional and defaults to an empty timestamp.
     */
    readonly sourceSystemTimestamps: outputs.datacatalog.v1.GoogleCloudDatacatalogV1SystemTimestampsResponse;
    /**
     * The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.
     */
    readonly type: string;
    /**
     * Resource usage statistics.
     */
    readonly usageSignal: outputs.datacatalog.v1.GoogleCloudDatacatalogV1UsageSignalResponse;
    /**
     * Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     */
    readonly userSpecifiedSystem: string;
    /**
     * Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     */
    readonly userSpecifiedType: string;
}

export function getEntryOutput(args: GetEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntryResult> {
    return pulumi.output(args).apply(a => getEntry(a, opts))
}

export interface GetEntryOutputArgs {
    entryGroupId: pulumi.Input<string>;
    entryId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
