// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./execution";
export * from "./getExecution";
export * from "./getHistory";
export * from "./getPerfSampleSeries";
export * from "./getStep";
export * from "./history";
export * from "./perfSampleSeries";
export * from "./step";

// Export enums:
export * from "../../types/enums/toolresults/v1beta3";

// Import resources to register:
import { Execution } from "./execution";
import { History } from "./history";
import { PerfSampleSeries } from "./perfSampleSeries";
import { Step } from "./step";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:toolresults/v1beta3:Execution":
                return new Execution(name, <any>undefined, { urn })
            case "google-hybrid:toolresults/v1beta3:History":
                return new History(name, <any>undefined, { urn })
            case "google-hybrid:toolresults/v1beta3:PerfSampleSeries":
                return new PerfSampleSeries(name, <any>undefined, { urn })
            case "google-hybrid:toolresults/v1beta3:Step":
                return new Step(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "toolresults/v1beta3", _module)
