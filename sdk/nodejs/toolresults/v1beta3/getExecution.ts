// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Execution does not exist
 */
export function getExecution(args: GetExecutionArgs, opts?: pulumi.InvokeOptions): Promise<GetExecutionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:toolresults/v1beta3:getExecution", {
        "executionId": args.executionId,
        "historyId": args.historyId,
        "project": args.project,
    }, opts);
}

export interface GetExecutionArgs {
    executionId: string;
    historyId: string;
    project?: string;
}

export interface GetExecutionResult {
    /**
     * The time when the Execution status transitioned to COMPLETE. This value will be set automatically when state transitions to COMPLETE. - In response: set if the execution state is COMPLETE. - In create/update request: never set
     */
    readonly completionTime: outputs.toolresults.v1beta3.TimestampResponse;
    /**
     * The time when the Execution was created. This value will be set automatically when CreateExecution is called. - In response: always set - In create/update request: never set
     */
    readonly creationTime: outputs.toolresults.v1beta3.TimestampResponse;
    /**
     * The dimensions along which different steps in this execution may vary. This must remain fixed over the life of the execution. Returns INVALID_ARGUMENT if this field is set in an update request. Returns INVALID_ARGUMENT if the same name occurs in more than one dimension_definition. Returns INVALID_ARGUMENT if the size of the list is over 100. - In response: present if set by create - In create request: optional - In update request: never set
     */
    readonly dimensionDefinitions: outputs.toolresults.v1beta3.MatrixDimensionDefinitionResponse[];
    /**
     * A unique identifier within a History for this Execution. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create/update request: never set
     */
    readonly executionId: string;
    /**
     * Classify the result, for example into SUCCESS or FAILURE - In response: present if set by create/update request - In create/update request: optional
     */
    readonly outcome: outputs.toolresults.v1beta3.OutcomeResponse;
    /**
     * Lightweight information about execution request. - In response: present if set by create - In create: optional - In update: optional
     */
    readonly specification: outputs.toolresults.v1beta3.SpecificationResponse;
    /**
     * The initial state is IN_PROGRESS. The only legal state transitions is from IN_PROGRESS to COMPLETE. A PRECONDITION_FAILED will be returned if an invalid transition is requested. The state can only be set to COMPLETE once. A FAILED_PRECONDITION will be returned if the state is set to COMPLETE multiple times. If the state is set to COMPLETE, all the in-progress steps within the execution will be set as COMPLETE. If the outcome of the step is not set, the outcome will be set to INCONCLUSIVE. - In response always set - In create/update request: optional
     */
    readonly state: string;
    /**
     * TestExecution Matrix ID that the TestExecutionService uses. - In response: present if set by create - In create: optional - In update: never set
     */
    readonly testExecutionMatrixId: string;
}

export function getExecutionOutput(args: GetExecutionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExecutionResult> {
    return pulumi.output(args).apply(a => getExecution(a, opts))
}

export interface GetExecutionOutputArgs {
    executionId: pulumi.Input<string>;
    historyId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
