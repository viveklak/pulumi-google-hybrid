// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new occurrence.
 * Auto-naming is currently not supported for this resource.
 */
export class Occurrence extends pulumi.CustomResource {
    /**
     * Get an existing Occurrence resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Occurrence {
        return new Occurrence(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:containeranalysis/v1:Occurrence';

    /**
     * Returns true if the given object is an instance of Occurrence.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Occurrence {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Occurrence.__pulumiType;
    }

    /**
     * Describes an attestation of an artifact.
     */
    public readonly attestation!: pulumi.Output<outputs.containeranalysis.v1.AttestationOccurrenceResponse>;
    /**
     * Describes a verifiable build.
     */
    public readonly build!: pulumi.Output<outputs.containeranalysis.v1.BuildOccurrenceResponse>;
    /**
     * Describes a compliance violation on a linked resource.
     */
    public readonly compliance!: pulumi.Output<outputs.containeranalysis.v1.ComplianceOccurrenceResponse>;
    /**
     * The time this occurrence was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Describes the deployment of an artifact on a runtime.
     */
    public readonly deployment!: pulumi.Output<outputs.containeranalysis.v1.DeploymentOccurrenceResponse>;
    /**
     * Describes when a resource was discovered.
     */
    public readonly discovery!: pulumi.Output<outputs.containeranalysis.v1.DiscoveryOccurrenceResponse>;
    /**
     * Describes an attestation of an artifact using dsse.
     */
    public readonly dsseAttestation!: pulumi.Output<outputs.containeranalysis.v1.DSSEAttestationOccurrenceResponse>;
    /**
     * https://github.com/secure-systems-lab/dsse
     */
    public readonly envelope!: pulumi.Output<outputs.containeranalysis.v1.EnvelopeResponse>;
    /**
     * Describes how this resource derives from the basis in the associated note.
     */
    public readonly image!: pulumi.Output<outputs.containeranalysis.v1.ImageOccurrenceResponse>;
    /**
     * This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
     */
    public /*out*/ readonly kind!: pulumi.Output<string>;
    /**
     * The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
     */
    public readonly noteName!: pulumi.Output<string>;
    /**
     * Describes the installation of a package on the linked resource.
     */
    public readonly package!: pulumi.Output<outputs.containeranalysis.v1.PackageOccurrenceResponse>;
    /**
     * A description of actions that can be taken to remedy the note.
     */
    public readonly remediation!: pulumi.Output<string>;
    /**
     * Immutable. A URI that represents the resource for which the occurrence applies. For example, `https://gcr.io/project/image@sha256:123abc` for a Docker image.
     */
    public readonly resourceUri!: pulumi.Output<string>;
    /**
     * The time this occurrence was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Describes an available package upgrade on the linked resource.
     */
    public readonly upgrade!: pulumi.Output<outputs.containeranalysis.v1.UpgradeOccurrenceResponse>;
    /**
     * Describes a security vulnerability.
     */
    public readonly vulnerability!: pulumi.Output<outputs.containeranalysis.v1.VulnerabilityOccurrenceResponse>;

    /**
     * Create a Occurrence resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OccurrenceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.noteName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'noteName'");
            }
            if ((!args || args.resourceUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceUri'");
            }
            resourceInputs["attestation"] = args ? args.attestation : undefined;
            resourceInputs["build"] = args ? args.build : undefined;
            resourceInputs["compliance"] = args ? args.compliance : undefined;
            resourceInputs["deployment"] = args ? args.deployment : undefined;
            resourceInputs["discovery"] = args ? args.discovery : undefined;
            resourceInputs["dsseAttestation"] = args ? args.dsseAttestation : undefined;
            resourceInputs["envelope"] = args ? args.envelope : undefined;
            resourceInputs["image"] = args ? args.image : undefined;
            resourceInputs["noteName"] = args ? args.noteName : undefined;
            resourceInputs["package"] = args ? args.package : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["remediation"] = args ? args.remediation : undefined;
            resourceInputs["resourceUri"] = args ? args.resourceUri : undefined;
            resourceInputs["upgrade"] = args ? args.upgrade : undefined;
            resourceInputs["vulnerability"] = args ? args.vulnerability : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["attestation"] = undefined /*out*/;
            resourceInputs["build"] = undefined /*out*/;
            resourceInputs["compliance"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deployment"] = undefined /*out*/;
            resourceInputs["discovery"] = undefined /*out*/;
            resourceInputs["dsseAttestation"] = undefined /*out*/;
            resourceInputs["envelope"] = undefined /*out*/;
            resourceInputs["image"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["noteName"] = undefined /*out*/;
            resourceInputs["package"] = undefined /*out*/;
            resourceInputs["remediation"] = undefined /*out*/;
            resourceInputs["resourceUri"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["upgrade"] = undefined /*out*/;
            resourceInputs["vulnerability"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Occurrence.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Occurrence resource.
 */
export interface OccurrenceArgs {
    /**
     * Describes an attestation of an artifact.
     */
    attestation?: pulumi.Input<inputs.containeranalysis.v1.AttestationOccurrenceArgs>;
    /**
     * Describes a verifiable build.
     */
    build?: pulumi.Input<inputs.containeranalysis.v1.BuildOccurrenceArgs>;
    /**
     * Describes a compliance violation on a linked resource.
     */
    compliance?: pulumi.Input<inputs.containeranalysis.v1.ComplianceOccurrenceArgs>;
    /**
     * Describes the deployment of an artifact on a runtime.
     */
    deployment?: pulumi.Input<inputs.containeranalysis.v1.DeploymentOccurrenceArgs>;
    /**
     * Describes when a resource was discovered.
     */
    discovery?: pulumi.Input<inputs.containeranalysis.v1.DiscoveryOccurrenceArgs>;
    /**
     * Describes an attestation of an artifact using dsse.
     */
    dsseAttestation?: pulumi.Input<inputs.containeranalysis.v1.DSSEAttestationOccurrenceArgs>;
    /**
     * https://github.com/secure-systems-lab/dsse
     */
    envelope?: pulumi.Input<inputs.containeranalysis.v1.EnvelopeArgs>;
    /**
     * Describes how this resource derives from the basis in the associated note.
     */
    image?: pulumi.Input<inputs.containeranalysis.v1.ImageOccurrenceArgs>;
    /**
     * Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
     */
    noteName: pulumi.Input<string>;
    /**
     * Describes the installation of a package on the linked resource.
     */
    package?: pulumi.Input<inputs.containeranalysis.v1.PackageOccurrenceArgs>;
    project?: pulumi.Input<string>;
    /**
     * A description of actions that can be taken to remedy the note.
     */
    remediation?: pulumi.Input<string>;
    /**
     * Immutable. A URI that represents the resource for which the occurrence applies. For example, `https://gcr.io/project/image@sha256:123abc` for a Docker image.
     */
    resourceUri: pulumi.Input<string>;
    /**
     * Describes an available package upgrade on the linked resource.
     */
    upgrade?: pulumi.Input<inputs.containeranalysis.v1.UpgradeOccurrenceArgs>;
    /**
     * Describes a security vulnerability.
     */
    vulnerability?: pulumi.Input<inputs.containeranalysis.v1.VulnerabilityOccurrenceArgs>;
}
