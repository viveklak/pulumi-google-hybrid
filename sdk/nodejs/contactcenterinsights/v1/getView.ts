// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a view.
 */
export function getView(args: GetViewArgs, opts?: pulumi.InvokeOptions): Promise<GetViewResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:contactcenterinsights/v1:getView", {
        "location": args.location,
        "project": args.project,
        "viewId": args.viewId,
    }, opts);
}

export interface GetViewArgs {
    location: string;
    project?: string;
    viewId: string;
}

export interface GetViewResult {
    /**
     * The time at which this view was created.
     */
    readonly createTime: string;
    /**
     * The human-readable display name of the view.
     */
    readonly displayName: string;
    /**
     * Immutable. The resource name of the view. Format: projects/{project}/locations/{location}/views/{view}
     */
    readonly name: string;
    /**
     * The most recent time at which the view was updated.
     */
    readonly updateTime: string;
    /**
     * String with specific view properties.
     */
    readonly value: string;
}

export function getViewOutput(args: GetViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetViewResult> {
    return pulumi.output(args).apply(a => getView(a, opts))
}

export interface GetViewOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    viewId: pulumi.Input<string>;
}
