// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Get a trace sink by name under the parent resource (GCP project).
 */
export function getTraceSink(args: GetTraceSinkArgs, opts?: pulumi.InvokeOptions): Promise<GetTraceSinkResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:cloudtrace/v2beta1:getTraceSink", {
        "project": args.project,
        "traceSinkId": args.traceSinkId,
    }, opts);
}

export interface GetTraceSinkArgs {
    project?: string;
    traceSinkId: string;
}

export interface GetTraceSinkResult {
    /**
     * The canonical sink resource name, unique within the project. Must be of the form: projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]. E.g.: `"projects/12345/traceSinks/my-project-trace-sink"`. Sink identifiers are limited to 256 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods.
     */
    readonly name: string;
    /**
     * The export destination.
     */
    readonly outputConfig: outputs.cloudtrace.v2beta1.OutputConfigResponse;
    /**
     * A service account name for exporting the data. This field is set by sinks.create and sinks.update. The service account will need to be granted write access to the destination specified in the output configuration, see [Granting access for a resource](/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). To create tables and to write data, this account needs the `dataEditor` role. Read more about roles in the [BigQuery documentation](https://cloud.google.com/bigquery/docs/access-control). E.g.: "service-00000001@00000002.iam.gserviceaccount.com"
     */
    readonly writerIdentity: string;
}

export function getTraceSinkOutput(args: GetTraceSinkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTraceSinkResult> {
    return pulumi.output(args).apply(a => getTraceSink(a, opts))
}

export interface GetTraceSinkOutputArgs {
    project?: pulumi.Input<string>;
    traceSinkId: pulumi.Input<string>;
}
