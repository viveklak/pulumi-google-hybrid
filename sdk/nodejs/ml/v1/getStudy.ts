// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets a study.
 */
export function getStudy(args: GetStudyArgs, opts?: pulumi.InvokeOptions): Promise<GetStudyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:ml/v1:getStudy", {
        "location": args.location,
        "project": args.project,
        "studyId": args.studyId,
    }, opts);
}

export interface GetStudyArgs {
    location: string;
    project?: string;
    studyId: string;
}

export interface GetStudyResult {
    /**
     * Time at which the study was created.
     */
    readonly createTime: string;
    /**
     * A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
     */
    readonly inactiveReason: string;
    /**
     * The name of a study.
     */
    readonly name: string;
    /**
     * The detailed state of a study.
     */
    readonly state: string;
    /**
     * Configuration of the study.
     */
    readonly studyConfig: outputs.ml.v1.GoogleCloudMlV1__StudyConfigResponse;
}

export function getStudyOutput(args: GetStudyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStudyResult> {
    return pulumi.output(args).apply(a => getStudy(a, opts))
}

export interface GetStudyOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    studyId: pulumi.Input<string>;
}
