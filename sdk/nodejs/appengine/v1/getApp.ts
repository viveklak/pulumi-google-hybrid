// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets information about an application.
 */
export function getApp(args: GetAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAppResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:appengine/v1:getApp", {
        "appId": args.appId,
    }, opts);
}

export interface GetAppArgs {
    appId: string;
}

export interface GetAppResult {
    /**
     * Google Apps authentication domain that controls which users can access this application.Defaults to open access for any Google Account.
     */
    readonly authDomain: string;
    /**
     * Google Cloud Storage bucket that can be used for storing files associated with this application. This bucket is associated with the application and can be used by the gcloud deployment commands.
     */
    readonly codeBucket: string;
    /**
     * The type of the Cloud Firestore or Cloud Datastore database associated with this application.
     */
    readonly databaseType: string;
    /**
     * Google Cloud Storage bucket that can be used by this application to store content.
     */
    readonly defaultBucket: string;
    /**
     * Cookie expiration policy for this application.
     */
    readonly defaultCookieExpiration: string;
    /**
     * Hostname used to reach this application, as resolved by App Engine.
     */
    readonly defaultHostname: string;
    /**
     * HTTP path dispatch rules for requests to the application that do not explicitly target a service or version. Rules are order-dependent. Up to 20 dispatch rules can be supported.
     */
    readonly dispatchRules: outputs.appengine.v1.UrlDispatchRuleResponse[];
    /**
     * The feature specific settings to be used in the application.
     */
    readonly featureSettings: outputs.appengine.v1.FeatureSettingsResponse;
    /**
     * The Google Container Registry domain used for storing managed build docker images for this application.
     */
    readonly gcrDomain: string;
    readonly iap: outputs.appengine.v1.IdentityAwareProxyResponse;
    /**
     * Location from which this application runs. Application instances run out of the data centers in the specified location, which is also where all of the application's end user content is stored.Defaults to us-central.View the list of supported locations (https://cloud.google.com/appengine/docs/locations).
     */
    readonly location: string;
    /**
     * Full path to the Application resource in the API. Example: apps/myapp.
     */
    readonly name: string;
    /**
     * The service account associated with the application. This is the app-level default identity. If no identity provided during create version, Admin API will fallback to this one.
     */
    readonly serviceAccount: string;
    /**
     * Serving status of this application.
     */
    readonly servingStatus: string;
}

export function getAppOutput(args: GetAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppResult> {
    return pulumi.output(args).apply(a => getApp(a, opts))
}

export interface GetAppOutputArgs {
    appId: pulumi.Input<string>;
}
