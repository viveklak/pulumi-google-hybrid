// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets details of a single AuthorizationPolicy.
 */
export function getAuthorizationPolicy(args: GetAuthorizationPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorizationPolicyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:networksecurity/v1:getAuthorizationPolicy", {
        "authorizationPolicyId": args.authorizationPolicyId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetAuthorizationPolicyArgs {
    authorizationPolicyId: string;
    location: string;
    project?: string;
}

export interface GetAuthorizationPolicyResult {
    /**
     * The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
     */
    readonly action: string;
    /**
     * The timestamp when the resource was created.
     */
    readonly createTime: string;
    /**
     * Optional. Free-text description of the resource.
     */
    readonly description: string;
    /**
     * Optional. Set of label tags associated with the AuthorizationPolicy resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * Name of the AuthorizationPolicy resource. It matches pattern `projects/{project}/locations/{location}/authorizationPolicies/`.
     */
    readonly name: string;
    /**
     * Optional. List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action' field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified in the `action` field will be applied on every request.
     */
    readonly rules: outputs.networksecurity.v1.RuleResponse[];
    /**
     * The timestamp when the resource was updated.
     */
    readonly updateTime: string;
}

export function getAuthorizationPolicyOutput(args: GetAuthorizationPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorizationPolicyResult> {
    return pulumi.output(args).apply(a => getAuthorizationPolicy(a, opts))
}

export interface GetAuthorizationPolicyOutputArgs {
    authorizationPolicyId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
