// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Create an OS Config patch deployment.
 */
export class PatchDeployment extends pulumi.CustomResource {
    /**
     * Get an existing PatchDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PatchDeployment {
        return new PatchDeployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:osconfig/v1beta:PatchDeployment';

    /**
     * Returns true if the given object is an instance of PatchDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PatchDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PatchDeployment.__pulumiType;
    }

    /**
     * Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Optional. Duration of the patch. After the duration ends, the patch times out.
     */
    public readonly duration!: pulumi.Output<string>;
    /**
     * VM instances to patch.
     */
    public readonly instanceFilter!: pulumi.Output<outputs.osconfig.v1beta.PatchInstanceFilterResponse>;
    /**
     * The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    public /*out*/ readonly lastExecuteTime!: pulumi.Output<string>;
    /**
     * Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Schedule a one-time execution.
     */
    public readonly oneTimeSchedule!: pulumi.Output<outputs.osconfig.v1beta.OneTimeScheduleResponse>;
    /**
     * Optional. Patch configuration that is applied.
     */
    public readonly patchConfig!: pulumi.Output<outputs.osconfig.v1beta.PatchConfigResponse>;
    /**
     * Schedule recurring executions.
     */
    public readonly recurringSchedule!: pulumi.Output<outputs.osconfig.v1beta.RecurringScheduleResponse>;
    /**
     * Optional. Rollout strategy of the patch job.
     */
    public readonly rollout!: pulumi.Output<outputs.osconfig.v1beta.PatchRolloutResponse>;
    /**
     * Current state of the patch deployment.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a PatchDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PatchDeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceFilter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceFilter'");
            }
            if ((!args || args.oneTimeSchedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oneTimeSchedule'");
            }
            if ((!args || args.patchDeploymentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'patchDeploymentId'");
            }
            if ((!args || args.recurringSchedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurringSchedule'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["instanceFilter"] = args ? args.instanceFilter : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oneTimeSchedule"] = args ? args.oneTimeSchedule : undefined;
            resourceInputs["patchConfig"] = args ? args.patchConfig : undefined;
            resourceInputs["patchDeploymentId"] = args ? args.patchDeploymentId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["recurringSchedule"] = args ? args.recurringSchedule : undefined;
            resourceInputs["rollout"] = args ? args.rollout : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["lastExecuteTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["duration"] = undefined /*out*/;
            resourceInputs["instanceFilter"] = undefined /*out*/;
            resourceInputs["lastExecuteTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["oneTimeSchedule"] = undefined /*out*/;
            resourceInputs["patchConfig"] = undefined /*out*/;
            resourceInputs["recurringSchedule"] = undefined /*out*/;
            resourceInputs["rollout"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PatchDeployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a PatchDeployment resource.
 */
export interface PatchDeploymentArgs {
    /**
     * Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. Duration of the patch. After the duration ends, the patch times out.
     */
    duration?: pulumi.Input<string>;
    /**
     * VM instances to patch.
     */
    instanceFilter: pulumi.Input<inputs.osconfig.v1beta.PatchInstanceFilterArgs>;
    /**
     * Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.
     */
    name?: pulumi.Input<string>;
    /**
     * Schedule a one-time execution.
     */
    oneTimeSchedule: pulumi.Input<inputs.osconfig.v1beta.OneTimeScheduleArgs>;
    /**
     * Optional. Patch configuration that is applied.
     */
    patchConfig?: pulumi.Input<inputs.osconfig.v1beta.PatchConfigArgs>;
    /**
     * Required. A name for the patch deployment in the project. When creating a name the following rules apply: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.
     */
    patchDeploymentId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Schedule recurring executions.
     */
    recurringSchedule: pulumi.Input<inputs.osconfig.v1beta.RecurringScheduleArgs>;
    /**
     * Optional. Rollout strategy of the patch job.
     */
    rollout?: pulumi.Input<inputs.osconfig.v1beta.PatchRolloutArgs>;
}
