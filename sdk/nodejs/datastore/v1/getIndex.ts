// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets an index.
 */
export function getIndex(args: GetIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetIndexResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:datastore/v1:getIndex", {
        "indexId": args.indexId,
        "project": args.project,
    }, opts);
}

export interface GetIndexArgs {
    indexId: string;
    project?: string;
}

export interface GetIndexResult {
    /**
     * The index's ancestor mode. Must not be ANCESTOR_MODE_UNSPECIFIED.
     */
    readonly ancestor: string;
    /**
     * The resource ID of the index.
     */
    readonly indexId: string;
    /**
     * The entity kind to which this index applies.
     */
    readonly kind: string;
    /**
     * Project ID.
     */
    readonly project: string;
    /**
     * An ordered sequence of property names and their index attributes.
     */
    readonly properties: outputs.datastore.v1.GoogleDatastoreAdminV1IndexedPropertyResponse[];
    /**
     * The state of the index.
     */
    readonly state: string;
}

export function getIndexOutput(args: GetIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIndexResult> {
    return pulumi.output(args).apply(a => getIndex(a, opts))
}

export interface GetIndexOutputArgs {
    indexId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
