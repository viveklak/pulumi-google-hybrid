// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets details of a single ServiceBinding.
 */
export function getServiceBinding(args: GetServiceBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceBindingResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:networkservices/v1beta1:getServiceBinding", {
        "location": args.location,
        "project": args.project,
        "serviceBindingId": args.serviceBindingId,
    }, opts);
}

export interface GetServiceBindingArgs {
    location: string;
    project?: string;
    serviceBindingId: string;
}

export interface GetServiceBindingResult {
    /**
     * The timestamp when the resource was created.
     */
    readonly createTime: string;
    /**
     * Optional. A free-text description of the resource. Max length 1024 characters.
     */
    readonly description: string;
    /**
     * Optional. The endpoint filter associated with the Service Binding. The syntax is described in http://cloud/service-directory/docs/reference/rpc/google.cloud.servicedirectory.v1#google.cloud.servicedirectory.v1.ResolveServiceRequest
     */
    readonly endpointFilter: string;
    /**
     * Optional. Set of label tags associated with the ServiceBinding resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * Name of the ServiceBinding resource. It matches pattern `projects/*&#47;locations/global/serviceBindings/service_binding_name>`.
     */
    readonly name: string;
    /**
     * The full service directory service name of the format /projects/*&#47;locations/*&#47;namespaces/*&#47;services/*
     */
    readonly service: string;
    /**
     * The timestamp when the resource was updated.
     */
    readonly updateTime: string;
}

export function getServiceBindingOutput(args: GetServiceBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceBindingResult> {
    return pulumi.output(args).apply(a => getServiceBinding(a, opts))
}

export interface GetServiceBindingOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    serviceBindingId: pulumi.Input<string>;
}
