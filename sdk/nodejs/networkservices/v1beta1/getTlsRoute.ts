// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets details of a single TlsRoute.
 */
export function getTlsRoute(args: GetTlsRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetTlsRouteResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:networkservices/v1beta1:getTlsRoute", {
        "location": args.location,
        "project": args.project,
        "tlsRouteId": args.tlsRouteId,
    }, opts);
}

export interface GetTlsRouteArgs {
    location: string;
    project?: string;
    tlsRouteId: string;
}

export interface GetTlsRouteResult {
    /**
     * The timestamp when the resource was created.
     */
    readonly createTime: string;
    /**
     * Optional. A free-text description of the resource. Max length 1024 characters.
     */
    readonly description: string;
    /**
     * Optional. Gateways defines a list of gateways this TlsRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects/*&#47;locations/global/gateways/`
     */
    readonly gateways: string[];
    /**
     * Optional. Meshes defines a list of meshes this TlsRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects/*&#47;locations/global/meshes/` The attached Mesh should be of a type SIDECAR
     */
    readonly meshes: string[];
    /**
     * Name of the TlsRoute resource. It matches pattern `projects/*&#47;locations/global/tlsRoutes/tls_route_name>`.
     */
    readonly name: string;
    /**
     * Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.
     */
    readonly rules: outputs.networkservices.v1beta1.TlsRouteRouteRuleResponse[];
    /**
     * Server-defined URL of this resource
     */
    readonly selfLink: string;
    /**
     * The timestamp when the resource was updated.
     */
    readonly updateTime: string;
}

export function getTlsRouteOutput(args: GetTlsRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTlsRouteResult> {
    return pulumi.output(args).apply(a => getTlsRoute(a, opts))
}

export interface GetTlsRouteOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    tlsRouteId: pulumi.Input<string>;
}
