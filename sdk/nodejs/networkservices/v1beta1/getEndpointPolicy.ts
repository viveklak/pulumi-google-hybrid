// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets details of a single EndpointPolicy.
 */
export function getEndpointPolicy(args: GetEndpointPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointPolicyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:networkservices/v1beta1:getEndpointPolicy", {
        "endpointPolicyId": args.endpointPolicyId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetEndpointPolicyArgs {
    endpointPolicyId: string;
    location: string;
    project?: string;
}

export interface GetEndpointPolicyResult {
    /**
     * Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint.
     */
    readonly authorizationPolicy: string;
    /**
     * Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.
     */
    readonly clientTlsPolicy: string;
    /**
     * The timestamp when the resource was created.
     */
    readonly createTime: string;
    /**
     * Optional. A free-text description of the resource. Max length 1024 characters.
     */
    readonly description: string;
    /**
     * A matcher that selects endpoints to which the policies should be applied.
     */
    readonly endpointMatcher: outputs.networkservices.v1beta1.EndpointMatcherResponse;
    /**
     * Optional. Set of label tags associated with the EndpointPolicy resource.
     */
    readonly labels: {[key: string]: string};
    /**
     * Name of the EndpointPolicy resource. It matches pattern `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.
     */
    readonly name: string;
    /**
     * Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint.
     */
    readonly serverTlsPolicy: string;
    /**
     * Optional. Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
     */
    readonly trafficPortSelector: outputs.networkservices.v1beta1.TrafficPortSelectorResponse;
    /**
     * The type of endpoint policy. This is primarily used to validate the configuration.
     */
    readonly type: string;
    /**
     * The timestamp when the resource was updated.
     */
    readonly updateTime: string;
}

export function getEndpointPolicyOutput(args: GetEndpointPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointPolicyResult> {
    return pulumi.output(args).apply(a => getEndpointPolicy(a, opts))
}

export interface GetEndpointPolicyOutputArgs {
    endpointPolicyId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
