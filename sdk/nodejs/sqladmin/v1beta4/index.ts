// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./backupRun";
export * from "./database";
export * from "./getBackupRun";
export * from "./getDatabase";
export * from "./getInstance";
export * from "./getSslCert";
export * from "./instance";
export * from "./sslCert";

// Export enums:
export * from "../../types/enums/sqladmin/v1beta4";

// Import resources to register:
import { BackupRun } from "./backupRun";
import { Database } from "./database";
import { Instance } from "./instance";
import { SslCert } from "./sslCert";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:sqladmin/v1beta4:BackupRun":
                return new BackupRun(name, <any>undefined, { urn })
            case "google-hybrid:sqladmin/v1beta4:Database":
                return new Database(name, <any>undefined, { urn })
            case "google-hybrid:sqladmin/v1beta4:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "google-hybrid:sqladmin/v1beta4:SslCert":
                return new SslCert(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "sqladmin/v1beta4", _module)
