// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Retrieves a resource containing information about a backup run.
 */
export function getBackupRun(args: GetBackupRunArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupRunResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:sqladmin/v1beta4:getBackupRun", {
        "id": args.id,
        "instance": args.instance,
        "project": args.project,
    }, opts);
}

export interface GetBackupRunArgs {
    id: string;
    instance: string;
    project?: string;
}

export interface GetBackupRunResult {
    /**
     * Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
     */
    readonly backupKind: string;
    /**
     * The description of this run, only applicable to on-demand backups.
     */
    readonly description: string;
    /**
     * Encryption configuration specific to a backup.
     */
    readonly diskEncryptionConfiguration: outputs.sqladmin.v1beta4.DiskEncryptionConfigurationResponse;
    /**
     * Encryption status specific to a backup.
     */
    readonly diskEncryptionStatus: outputs.sqladmin.v1beta4.DiskEncryptionStatusResponse;
    /**
     * The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    readonly endTime: string;
    /**
     * The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    readonly enqueuedTime: string;
    /**
     * Information about why the backup operation failed. This is only present if the run has the FAILED status.
     */
    readonly error: outputs.sqladmin.v1beta4.OperationErrorResponse;
    /**
     * Name of the database instance.
     */
    readonly instance: string;
    /**
     * This is always `sql#backupRun`.
     */
    readonly kind: string;
    /**
     * Location of the backups.
     */
    readonly location: string;
    /**
     * The URI of this resource.
     */
    readonly selfLink: string;
    /**
     * The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    readonly startTime: string;
    /**
     * The status of this run.
     */
    readonly status: string;
    /**
     * The type of this run; can be either "AUTOMATED" or "ON_DEMAND". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
     */
    readonly type: string;
    /**
     * The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    readonly windowStartTime: string;
}

export function getBackupRunOutput(args: GetBackupRunOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupRunResult> {
    return pulumi.output(args).apply(a => getBackupRun(a, opts))
}

export interface GetBackupRunOutputArgs {
    id: pulumi.Input<string>;
    instance: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
