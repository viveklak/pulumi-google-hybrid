// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Initiates a channel partner link between a distributor and a reseller, or between resellers in an n-tier reseller channel. Invited partners need to follow the invite_link_uri provided in the response to accept. After accepting the invitation, a link is set up between the two parties. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud Identity customer exists for provided domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The new ChannelPartnerLink resource.
 * Auto-naming is currently not supported for this resource.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class ChannelPartnerLink extends pulumi.CustomResource {
    /**
     * Get an existing ChannelPartnerLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ChannelPartnerLink {
        return new ChannelPartnerLink(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:cloudchannel/v1:ChannelPartnerLink';

    /**
     * Returns true if the given object is an instance of ChannelPartnerLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ChannelPartnerLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ChannelPartnerLink.__pulumiType;
    }

    /**
     * Cloud Identity info of the channel partner (IR).
     */
    public /*out*/ readonly channelPartnerCloudIdentityInfo!: pulumi.Output<outputs.cloudchannel.v1.GoogleCloudChannelV1CloudIdentityInfoResponse>;
    /**
     * Timestamp of when the channel partner link is created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * URI of the web page where partner accepts the link invitation.
     */
    public /*out*/ readonly inviteLinkUri!: pulumi.Output<string>;
    /**
     * State of the channel partner link.
     */
    public readonly linkState!: pulumi.Output<string>;
    /**
     * Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.
     */
    public /*out*/ readonly publicId!: pulumi.Output<string>;
    /**
     * Cloud Identity ID of the linked reseller.
     */
    public readonly resellerCloudIdentityId!: pulumi.Output<string>;
    /**
     * Timestamp of when the channel partner link is updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ChannelPartnerLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ChannelPartnerLinkArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.linkState === undefined) && !opts.urn) {
                throw new Error("Missing required property 'linkState'");
            }
            if ((!args || args.resellerCloudIdentityId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resellerCloudIdentityId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["linkState"] = args ? args.linkState : undefined;
            resourceInputs["resellerCloudIdentityId"] = args ? args.resellerCloudIdentityId : undefined;
            resourceInputs["channelPartnerCloudIdentityInfo"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["inviteLinkUri"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["publicId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["channelPartnerCloudIdentityInfo"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["inviteLinkUri"] = undefined /*out*/;
            resourceInputs["linkState"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["publicId"] = undefined /*out*/;
            resourceInputs["resellerCloudIdentityId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ChannelPartnerLink.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ChannelPartnerLink resource.
 */
export interface ChannelPartnerLinkArgs {
    accountId: pulumi.Input<string>;
    /**
     * State of the channel partner link.
     */
    linkState: pulumi.Input<enums.cloudchannel.v1.ChannelPartnerLinkLinkState>;
    /**
     * Cloud Identity ID of the linked reseller.
     */
    resellerCloudIdentityId: pulumi.Input<string>;
}
