// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the requested Customer resource. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer resource doesn't exist. Usually the result of an invalid name parameter. Return value: The Customer resource.
 */
export function getCustomer(args: GetCustomerArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomerResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:cloudchannel/v1:getCustomer", {
        "accountId": args.accountId,
        "channelPartnerLinkId": args.channelPartnerLinkId,
        "customerId": args.customerId,
    }, opts);
}

export interface GetCustomerArgs {
    accountId: string;
    channelPartnerLinkId: string;
    customerId: string;
}

export interface GetCustomerResult {
    /**
     * Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
     */
    readonly alternateEmail: string;
    /**
     * Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
     */
    readonly channelPartnerId: string;
    /**
     * The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
     */
    readonly cloudIdentityId: string;
    /**
     * Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
     */
    readonly cloudIdentityInfo: outputs.cloudchannel.v1.GoogleCloudChannelV1CloudIdentityInfoResponse;
    /**
     * Time when the customer was created.
     */
    readonly createTime: string;
    /**
     * The customer's primary domain. Must match the primary contact email's domain.
     */
    readonly domain: string;
    /**
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     */
    readonly languageCode: string;
    /**
     * Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
     */
    readonly name: string;
    /**
     * Name of the organization that the customer entity represents.
     */
    readonly orgDisplayName: string;
    /**
     * The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
     */
    readonly orgPostalAddress: outputs.cloudchannel.v1.GoogleTypePostalAddressResponse;
    /**
     * Primary contact info.
     */
    readonly primaryContactInfo: outputs.cloudchannel.v1.GoogleCloudChannelV1ContactInfoResponse;
    /**
     * Time when the customer was updated.
     */
    readonly updateTime: string;
}

export function getCustomerOutput(args: GetCustomerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomerResult> {
    return pulumi.output(args).apply(a => getCustomer(a, opts))
}

export interface GetCustomerOutputArgs {
    accountId: pulumi.Input<string>;
    channelPartnerLinkId: pulumi.Input<string>;
    customerId: pulumi.Input<string>;
}
