// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the job template data.
 */
export function getJobTemplate(args: GetJobTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetJobTemplateResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:transcoder/v1:getJobTemplate", {
        "jobTemplateId": args.jobTemplateId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetJobTemplateArgs {
    jobTemplateId: string;
    location: string;
    project?: string;
}

export interface GetJobTemplateResult {
    /**
     * The configuration for this template.
     */
    readonly config: outputs.transcoder.v1.JobConfigResponse;
    /**
     * The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`
     */
    readonly name: string;
}

export function getJobTemplateOutput(args: GetJobTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobTemplateResult> {
    return pulumi.output(args).apply(a => getJobTemplate(a, opts))
}

export interface GetJobTemplateOutputArgs {
    jobTemplateId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
