// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns information about a specific job. Job information is available for a six month period after creation. Requires that you're the person who ran the job, or have the Is Owner project role.
 */
export function getJob(args: GetJobArgs, opts?: pulumi.InvokeOptions): Promise<GetJobResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:bigquery/v2:getJob", {
        "jobId": args.jobId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetJobArgs {
    jobId: string;
    location?: string;
    project?: string;
}

export interface GetJobResult {
    /**
     * [Required] Describes the job configuration.
     */
    readonly configuration: outputs.bigquery.v2.JobConfigurationResponse;
    /**
     * A hash of this resource.
     */
    readonly etag: string;
    /**
     * [Optional] Reference describing the unique-per-user name of the job.
     */
    readonly jobReference: outputs.bigquery.v2.JobReferenceResponse;
    /**
     * The type of the resource.
     */
    readonly kind: string;
    /**
     * A URL that can be used to access this resource again.
     */
    readonly selfLink: string;
    /**
     * Information about the job, including starting time and ending time of the job.
     */
    readonly statistics: outputs.bigquery.v2.JobStatisticsResponse;
    /**
     * The status of this job. Examine this value when polling an asynchronous job to see if the job is complete.
     */
    readonly status: outputs.bigquery.v2.JobStatusResponse;
    /**
     * Email address of the user who ran the job.
     */
    readonly userEmail: string;
}

export function getJobOutput(args: GetJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobResult> {
    return pulumi.output(args).apply(a => getJob(a, opts))
}

export interface GetJobOutputArgs {
    jobId: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
