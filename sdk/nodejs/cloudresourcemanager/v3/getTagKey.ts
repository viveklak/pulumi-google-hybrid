// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.
 */
export function getTagKey(args: GetTagKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetTagKeyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:cloudresourcemanager/v3:getTagKey", {
        "tagKeyId": args.tagKeyId,
    }, opts);
}

export interface GetTagKeyArgs {
    tagKeyId: string;
}

export interface GetTagKeyResult {
    /**
     * Creation time.
     */
    readonly createTime: string;
    /**
     * Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write.
     */
    readonly description: string;
    /**
     * Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.
     */
    readonly etag: string;
    /**
     * Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.
     */
    readonly name: string;
    /**
     * Immutable. Namespaced name of the TagKey.
     */
    readonly namespacedName: string;
    /**
     * Immutable. The resource name of the new TagKey's parent. Must be of the form `organizations/{org_id}`.
     */
    readonly parent: string;
    /**
     * Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    readonly shortName: string;
    /**
     * Update time.
     */
    readonly updateTime: string;
}

export function getTagKeyOutput(args: GetTagKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTagKeyResult> {
    return pulumi.output(args).apply(a => getTagKey(a, opts))
}

export interface GetTagKeyOutputArgs {
    tagKeyId: pulumi.Input<string>;
}
