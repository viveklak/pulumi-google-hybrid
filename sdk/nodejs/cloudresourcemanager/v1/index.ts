// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./getLien";
export * from "./getOrganizationIamPolicy";
export * from "./getProject";
export * from "./getProjectIamPolicy";
export * from "./lien";
export * from "./organizationIamPolicy";
export * from "./project";
export * from "./projectIamPolicy";

// Export enums:
export * from "../../types/enums/cloudresourcemanager/v1";

// Import resources to register:
import { Lien } from "./lien";
import { OrganizationIamPolicy } from "./organizationIamPolicy";
import { Project } from "./project";
import { ProjectIamPolicy } from "./projectIamPolicy";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:cloudresourcemanager/v1:Lien":
                return new Lien(name, <any>undefined, { urn })
            case "google-hybrid:cloudresourcemanager/v1:OrganizationIamPolicy":
                return new OrganizationIamPolicy(name, <any>undefined, { urn })
            case "google-hybrid:cloudresourcemanager/v1:Project":
                return new Project(name, <any>undefined, { urn })
            case "google-hybrid:cloudresourcemanager/v1:ProjectIamPolicy":
                return new ProjectIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "cloudresourcemanager/v1", _module)
