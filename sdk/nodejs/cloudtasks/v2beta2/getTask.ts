// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets a task.
 */
export function getTask(args: GetTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:cloudtasks/v2beta2:getTask", {
        "location": args.location,
        "project": args.project,
        "queueId": args.queueId,
        "responseView": args.responseView,
        "taskId": args.taskId,
    }, opts);
}

export interface GetTaskArgs {
    location: string;
    project?: string;
    queueId: string;
    responseView?: string;
    taskId: string;
}

export interface GetTaskResult {
    /**
     * App Engine HTTP request that is sent to the task's target. Can be set only if app_engine_http_target is set on the queue. An App Engine task is a task that has AppEngineHttpRequest set.
     */
    readonly appEngineHttpRequest: outputs.cloudtasks.v2beta2.AppEngineHttpRequestResponse;
    /**
     * The time that the task was created. `create_time` will be truncated to the nearest second.
     */
    readonly createTime: string;
    /**
     * Optionally caller-specified in CreateTask. The task name. The task name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the task's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters. * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.
     */
    readonly name: string;
    /**
     * LeaseTasks to process the task. Can be set only if pull_target is set on the queue. A pull task is a task that has PullMessage set.
     */
    readonly pullMessage: outputs.cloudtasks.v2beta2.PullMessageResponse;
    /**
     * The time when the task is scheduled to be attempted. For App Engine queues, this is when the task will be attempted or retried. For pull queues, this is the time when the task is available to be leased; if a task is currently leased, this is the time when the current lease expires, that is, the time that the task was leased plus the lease_duration. `schedule_time` will be truncated to the nearest microsecond.
     */
    readonly scheduleTime: string;
    /**
     * The task status.
     */
    readonly status: outputs.cloudtasks.v2beta2.TaskStatusResponse;
    /**
     * The view specifies which subset of the Task has been returned.
     */
    readonly view: string;
}

export function getTaskOutput(args: GetTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTaskResult> {
    return pulumi.output(args).apply(a => getTask(a, opts))
}

export interface GetTaskOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    queueId: pulumi.Input<string>;
    responseView?: pulumi.Input<string>;
    taskId: pulumi.Input<string>;
}
