// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Retrieves the specified session entity type.
 */
export function getSessionEntityType(args: GetSessionEntityTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetSessionEntityTypeResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:dialogflow/v3beta1:getSessionEntityType", {
        "agentId": args.agentId,
        "entityTypeId": args.entityTypeId,
        "environmentId": args.environmentId,
        "location": args.location,
        "project": args.project,
        "sessionId": args.sessionId,
    }, opts);
}

export interface GetSessionEntityTypeArgs {
    agentId: string;
    entityTypeId: string;
    environmentId: string;
    location: string;
    project?: string;
    sessionId: string;
}

export interface GetSessionEntityTypeResult {
    /**
     * The collection of entities to override or supplement the custom entity type.
     */
    readonly entities: outputs.dialogflow.v3beta1.GoogleCloudDialogflowCxV3beta1EntityTypeEntityResponse[];
    /**
     * Indicates whether the additional data should override or supplement the custom entity type definition.
     */
    readonly entityOverrideMode: string;
    /**
     * The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.
     */
    readonly name: string;
}

export function getSessionEntityTypeOutput(args: GetSessionEntityTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSessionEntityTypeResult> {
    return pulumi.output(args).apply(a => getSessionEntityType(a, opts))
}

export interface GetSessionEntityTypeOutputArgs {
    agentId: pulumi.Input<string>;
    entityTypeId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    sessionId: pulumi.Input<string>;
}
