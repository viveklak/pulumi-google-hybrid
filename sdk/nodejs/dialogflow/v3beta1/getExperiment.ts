// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Retrieves the specified Experiment.
 */
export function getExperiment(args: GetExperimentArgs, opts?: pulumi.InvokeOptions): Promise<GetExperimentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:dialogflow/v3beta1:getExperiment", {
        "agentId": args.agentId,
        "environmentId": args.environmentId,
        "experimentId": args.experimentId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetExperimentArgs {
    agentId: string;
    environmentId: string;
    experimentId: string;
    location: string;
    project?: string;
}

export interface GetExperimentResult {
    /**
     * Creation time of this experiment.
     */
    readonly createTime: string;
    /**
     * The definition of the experiment.
     */
    readonly definition: outputs.dialogflow.v3beta1.GoogleCloudDialogflowCxV3beta1ExperimentDefinitionResponse;
    /**
     * The human-readable description of the experiment.
     */
    readonly description: string;
    /**
     * The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
     */
    readonly displayName: string;
    /**
     * End time of this experiment.
     */
    readonly endTime: string;
    /**
     * Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
     */
    readonly experimentLength: string;
    /**
     * Last update time of this experiment.
     */
    readonly lastUpdateTime: string;
    /**
     * The name of the experiment. Format: projects//locations//agents//environments//experiments/..
     */
    readonly name: string;
    /**
     * Inference result of the experiment.
     */
    readonly result: outputs.dialogflow.v3beta1.GoogleCloudDialogflowCxV3beta1ExperimentResultResponse;
    /**
     * The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow.
     */
    readonly rolloutConfig: outputs.dialogflow.v3beta1.GoogleCloudDialogflowCxV3beta1RolloutConfigResponse;
    /**
     * The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.
     */
    readonly rolloutFailureReason: string;
    /**
     * State of the auto rollout process.
     */
    readonly rolloutState: outputs.dialogflow.v3beta1.GoogleCloudDialogflowCxV3beta1RolloutStateResponse;
    /**
     * Start time of this experiment.
     */
    readonly startTime: string;
    /**
     * The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.
     */
    readonly state: string;
    /**
     * The history of updates to the experiment variants.
     */
    readonly variantsHistory: outputs.dialogflow.v3beta1.GoogleCloudDialogflowCxV3beta1VariantsHistoryResponse[];
}

export function getExperimentOutput(args: GetExperimentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExperimentResult> {
    return pulumi.output(args).apply(a => getExperiment(a, opts))
}

export interface GetExperimentOutputArgs {
    agentId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    experimentId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
