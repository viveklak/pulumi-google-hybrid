// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets conversation model.
 */
export function getConversationModel(args: GetConversationModelArgs, opts?: pulumi.InvokeOptions): Promise<GetConversationModelResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:dialogflow/v2:getConversationModel", {
        "conversationModelId": args.conversationModelId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetConversationModelArgs {
    conversationModelId: string;
    location: string;
    project?: string;
}

export interface GetConversationModelResult {
    /**
     * Metadata for article suggestion models.
     */
    readonly articleSuggestionModelMetadata: outputs.dialogflow.v2.GoogleCloudDialogflowV2ArticleSuggestionModelMetadataResponse;
    /**
     * Creation time of this model.
     */
    readonly createTime: string;
    /**
     * Datasets used to create model.
     */
    readonly datasets: outputs.dialogflow.v2.GoogleCloudDialogflowV2InputDatasetResponse[];
    /**
     * The display name of the model. At most 64 bytes long.
     */
    readonly displayName: string;
    /**
     * Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
     */
    readonly languageCode: string;
    /**
     * ConversationModel resource name. Format: `projects//conversationModels/`
     */
    readonly name: string;
    /**
     * Metadata for smart reply models.
     */
    readonly smartReplyModelMetadata: outputs.dialogflow.v2.GoogleCloudDialogflowV2SmartReplyModelMetadataResponse;
    /**
     * State of the model. A model can only serve prediction requests after it gets deployed.
     */
    readonly state: string;
}

export function getConversationModelOutput(args: GetConversationModelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConversationModelResult> {
    return pulumi.output(args).apply(a => getConversationModel(a, opts))
}

export interface GetConversationModelOutputArgs {
    conversationModelId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
