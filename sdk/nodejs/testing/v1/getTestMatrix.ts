// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Checks the status of a test matrix. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Test Matrix does not exist
 */
export function getTestMatrix(args: GetTestMatrixArgs, opts?: pulumi.InvokeOptions): Promise<GetTestMatrixResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:testing/v1:getTestMatrix", {
        "project": args.project,
        "testMatrixId": args.testMatrixId,
    }, opts);
}

export interface GetTestMatrixArgs {
    project?: string;
    testMatrixId: string;
}

export interface GetTestMatrixResult {
    /**
     * Information about the client which invoked the test.
     */
    readonly clientInfo: outputs.testing.v1.ClientInfoResponse;
    /**
     * The devices the tests are being executed on.
     */
    readonly environmentMatrix: outputs.testing.v1.EnvironmentMatrixResponse;
    /**
     * If true, only a single attempt at most will be made to run each execution/shard in the matrix. Flaky test attempts are not affected. Normally, 2 or more attempts are made if a potential infrastructure issue is detected. This feature is for latency sensitive workloads. The incidence of execution failures may be significantly greater for fail-fast matrices and support is more limited because of that expectation.
     */
    readonly failFast: boolean;
    /**
     * The number of times a TestExecution should be re-attempted if one or more of its test cases fail for any reason. The maximum number of reruns allowed is 10. Default is 0, which implies no reruns.
     */
    readonly flakyTestAttempts: number;
    /**
     * Describes why the matrix is considered invalid. Only useful for matrices in the INVALID state.
     */
    readonly invalidMatrixDetails: string;
    /**
     * Output Only. The overall outcome of the test. Only set when the test matrix state is FINISHED.
     */
    readonly outcomeSummary: string;
    /**
     * The cloud project that owns the test matrix.
     */
    readonly project: string;
    /**
     * Where the results for the matrix are written.
     */
    readonly resultStorage: outputs.testing.v1.ResultStorageResponse;
    /**
     * Indicates the current progress of the test matrix.
     */
    readonly state: string;
    /**
     * The list of test executions that the service creates for this matrix.
     */
    readonly testExecutions: outputs.testing.v1.TestExecutionResponse[];
    /**
     * Unique id set by the service.
     */
    readonly testMatrixId: string;
    /**
     * How to run the test.
     */
    readonly testSpecification: outputs.testing.v1.TestSpecificationResponse;
    /**
     * The time this test matrix was initially created.
     */
    readonly timestamp: string;
}

export function getTestMatrixOutput(args: GetTestMatrixOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTestMatrixResult> {
    return pulumi.output(args).apply(a => getTestMatrix(a, opts))
}

export interface GetTestMatrixOutputArgs {
    project?: pulumi.Input<string>;
    testMatrixId: pulumi.Input<string>;
}
