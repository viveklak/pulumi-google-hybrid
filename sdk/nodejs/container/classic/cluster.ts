// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:container/classic:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * The configuration for addons supported by GKE.
     */
    public readonly addonsConfig!: pulumi.Output<outputs.container.ClusterAddonsConfig.ClusterAddonsConfig>;
    /**
     * Configuration for the Google Groups for GKE feature.
     */
    public readonly authenticatorGroupsConfig!: pulumi.Output<outputs.container.ClusterAuthenticatorGroupsConfig.ClusterAuthenticatorGroupsConfig>;
    /**
     * Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
     * cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
     * Auto-Provisioning for more details.
     */
    public readonly clusterAutoscaling!: pulumi.Output<outputs.container.ClusterClusterAutoscaling.ClusterClusterAutoscaling>;
    /**
     * The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
     * one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
     * where ip_allocation_policy is not defined.
     */
    public readonly clusterIpv4Cidr!: pulumi.Output<string>;
    /**
     * Telemetry integration for the cluster.
     */
    public readonly clusterTelemetry!: pulumi.Output<outputs.container.ClusterClusterTelemetry.ClusterClusterTelemetry>;
    /**
     * Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
     * can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
     */
    public readonly confidentialNodes!: pulumi.Output<outputs.container.ClusterConfidentialNodes.ClusterConfidentialNodes>;
    /**
     * Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
     * state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
     */
    public readonly databaseEncryption!: pulumi.Output<outputs.container.ClusterDatabaseEncryption.ClusterDatabaseEncryption>;
    /**
     * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
     */
    public readonly datapathProvider!: pulumi.Output<string>;
    /**
     * The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
     * don't have IP Aliasing enabled.
     */
    public readonly defaultMaxPodsPerNode!: pulumi.Output<number>;
    /**
     * Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
     * disabled.
     */
    public readonly defaultSnatStatus!: pulumi.Output<outputs.container.ClusterDefaultSnatStatus.ClusterDefaultSnatStatus>;
    /**
     * Description of the cluster.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Configuration for Cloud DNS for Kubernetes Engine.
     */
    public readonly dnsConfig!: pulumi.Output<outputs.container.ClusterDnsConfig.ClusterDnsConfig | undefined>;
    /**
     * Enable Autopilot for this cluster.
     */
    public readonly enableAutopilot!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Binary Authorization for this cluster. If enabled, all container images will be validated by Google Binary
     * Authorization.
     */
    public readonly enableBinaryAuthorization!: pulumi.Output<boolean | undefined>;
    /**
     * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
     * network.
     */
    public readonly enableIntranodeVisibility!: pulumi.Output<boolean>;
    /**
     * Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
     * be upgraded and will be automatically deleted after 30 days.
     */
    public readonly enableKubernetesAlpha!: pulumi.Output<boolean | undefined>;
    /**
     * Whether L4ILB Subsetting is enabled for this cluster.
     */
    public readonly enableL4IlbSubsetting!: pulumi.Output<boolean | undefined>;
    /**
     * Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
     * accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
     * configuration or IAM. Defaults to false.
     */
    public readonly enableLegacyAbac!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
     */
    public readonly enableShieldedNodes!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable Cloud TPU resources in this cluster.
     */
    public readonly enableTpu!: pulumi.Output<boolean | undefined>;
    /**
     * The IP address of this cluster's Kubernetes master.
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
     */
    public readonly identityServiceConfig!: pulumi.Output<outputs.container.ClusterIdentityServiceConfig.ClusterIdentityServiceConfig>;
    /**
     * The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
     * number of nodes per zone. Must be set if node_pool is not set. If you're using google_container_node_pool objects with
     * no default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to
     * true.
     */
    public readonly initialNodeCount!: pulumi.Output<number | undefined>;
    /**
     * Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
     * cluster VPC-native instead of routes-based.
     */
    public readonly ipAllocationPolicy!: pulumi.Output<outputs.container.ClusterIpAllocationPolicy.ClusterIpAllocationPolicy>;
    /**
     * The fingerprint of the set of labels for this cluster.
     */
    public /*out*/ readonly labelFingerprint!: pulumi.Output<string>;
    /**
     * The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
     * specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
     * a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
     * region, and with default node locations in those zones as well.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Logging configuration for the cluster.
     */
    public readonly loggingConfig!: pulumi.Output<outputs.container.ClusterLoggingConfig.ClusterLoggingConfig>;
    /**
     * The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
     * Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
     * logging.googleapis.com/kubernetes.
     */
    public readonly loggingService!: pulumi.Output<string>;
    /**
     * The maintenance policy to use for the cluster.
     */
    public readonly maintenancePolicy!: pulumi.Output<outputs.container.ClusterMaintenancePolicy.ClusterMaintenancePolicy | undefined>;
    /**
     * The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
     * API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
     * unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
     */
    public readonly masterAuth!: pulumi.Output<outputs.container.ClusterMasterAuth.ClusterMasterAuth>;
    /**
     * The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
     * external access (except the cluster node IPs, which GKE automatically whitelists).
     */
    public readonly masterAuthorizedNetworksConfig!: pulumi.Output<outputs.container.ClusterMasterAuthorizedNetworksConfig.ClusterMasterAuthorizedNetworksConfig | undefined>;
    /**
     * The current version of the master in the cluster. This may be different than the min_master_version set in the config if
     * the master has been updated by GKE.
     */
    public /*out*/ readonly masterVersion!: pulumi.Output<string>;
    /**
     * The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
     * current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
     * set by GKE to the version of the most recent official release (which is not necessarily the latest version).
     */
    public readonly minMasterVersion!: pulumi.Output<string | undefined>;
    /**
     * Monitoring configuration for the cluster.
     */
    public readonly monitoringConfig!: pulumi.Output<outputs.container.ClusterMonitoringConfig.ClusterMonitoringConfig>;
    /**
     * The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
     * the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
     * Available options include monitoring.googleapis.com(Legacy Stackdriver),
     * monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
     * monitoring.googleapis.com/kubernetes.
     */
    public readonly monitoringService!: pulumi.Output<string>;
    /**
     * The name of the cluster, unique within the project and location.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
     * to the self link of the shared network.
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * Configuration options for the NetworkPolicy feature.
     */
    public readonly networkPolicy!: pulumi.Output<outputs.container.ClusterNetworkPolicy.ClusterNetworkPolicy>;
    /**
     * Determines whether alias IPs or routes will be used for pod IPs in the cluster.
     */
    public readonly networkingMode!: pulumi.Output<string>;
    /**
     * The configuration of the nodepool
     */
    public readonly nodeConfig!: pulumi.Output<outputs.container.ClusterNodeConfig.ClusterNodeConfig>;
    /**
     * The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
     * the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
     * zone.
     */
    public readonly nodeLocations!: pulumi.Output<string[]>;
    /**
     * List of node pools associated with this cluster. See google_container_node_pool for schema. Warning: node pools defined
     * inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
     * cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
     * the google_container_node_pool resource instead of this property.
     */
    public readonly nodePools!: pulumi.Output<outputs.container.ClusterNodePool.ClusterNodePool[]>;
    /**
     * The Kubernetes version on the nodes. Must either be unset or set to the same value as min_master_version on create.
     * Defaults to the default version set by GKE which is not necessarily the latest version. This only affects nodes in the
     * default node pool. While a fuzzy version can be specified, it's recommended that you specify explicit versions as
     * Terraform will see spurious diffs when fuzzy versions are used. See the google_container_engine_versions data source's
     * version_prefix field to approximate fuzzy versions in a Terraform-compatible way. To update nodes in other node pools,
     * use the version attribute on the node pool.
     */
    public readonly nodeVersion!: pulumi.Output<string>;
    /**
     * The notification config for sending cluster upgrade notifications
     */
    public readonly notificationConfig!: pulumi.Output<outputs.container.ClusterNotificationConfig.ClusterNotificationConfig>;
    public /*out*/ readonly operation!: pulumi.Output<string>;
    /**
     * Configuration for the PodSecurityPolicy feature.
     */
    public readonly podSecurityPolicyConfig!: pulumi.Output<outputs.container.ClusterPodSecurityPolicyConfig.ClusterPodSecurityPolicyConfig | undefined>;
    /**
     * Configuration for private clusters, clusters with private nodes.
     */
    public readonly privateClusterConfig!: pulumi.Output<outputs.container.ClusterPrivateClusterConfig.ClusterPrivateClusterConfig>;
    /**
     * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
     * (all access will be via IPv4).
     */
    public readonly privateIpv6GoogleAccess!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
     * clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
     */
    public readonly releaseChannel!: pulumi.Output<outputs.container.ClusterReleaseChannel.ClusterReleaseChannel>;
    /**
     * If true, deletes the default node pool upon cluster creation. If you're using google_container_node_pool resources with
     * no default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
     */
    public readonly removeDefaultNodePool!: pulumi.Output<boolean | undefined>;
    /**
     * The GCE resource labels (a map of key/value pairs) to be applied to the cluster.
     */
    public readonly resourceLabels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configuration for the ResourceUsageExportConfig feature.
     */
    public readonly resourceUsageExportConfig!: pulumi.Output<outputs.container.ClusterResourceUsageExportConfig.ClusterResourceUsageExportConfig | undefined>;
    /**
     * Server-defined URL for the resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The IP address range of the Kubernetes services in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service addresses
     * are typically put in the last /16 from the container CIDR.
     */
    public /*out*/ readonly servicesIpv4Cidr!: pulumi.Output<string>;
    /**
     * The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
     */
    public readonly subnetwork!: pulumi.Output<string>;
    /**
     * The IP address range of the Cloud TPUs in this cluster, in CIDR notation (e.g. 1.2.3.4/29).
     */
    public /*out*/ readonly tpuIpv4CidrBlock!: pulumi.Output<string>;
    /**
     * Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
     */
    public readonly verticalPodAutoscaling!: pulumi.Output<outputs.container.ClusterVerticalPodAutoscaling.ClusterVerticalPodAutoscaling>;
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     */
    public readonly workloadIdentityConfig!: pulumi.Output<outputs.container.ClusterWorkloadIdentityConfig.ClusterWorkloadIdentityConfig>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["addonsConfig"] = state ? state.addonsConfig : undefined;
            resourceInputs["authenticatorGroupsConfig"] = state ? state.authenticatorGroupsConfig : undefined;
            resourceInputs["clusterAutoscaling"] = state ? state.clusterAutoscaling : undefined;
            resourceInputs["clusterIpv4Cidr"] = state ? state.clusterIpv4Cidr : undefined;
            resourceInputs["clusterTelemetry"] = state ? state.clusterTelemetry : undefined;
            resourceInputs["confidentialNodes"] = state ? state.confidentialNodes : undefined;
            resourceInputs["databaseEncryption"] = state ? state.databaseEncryption : undefined;
            resourceInputs["datapathProvider"] = state ? state.datapathProvider : undefined;
            resourceInputs["defaultMaxPodsPerNode"] = state ? state.defaultMaxPodsPerNode : undefined;
            resourceInputs["defaultSnatStatus"] = state ? state.defaultSnatStatus : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsConfig"] = state ? state.dnsConfig : undefined;
            resourceInputs["enableAutopilot"] = state ? state.enableAutopilot : undefined;
            resourceInputs["enableBinaryAuthorization"] = state ? state.enableBinaryAuthorization : undefined;
            resourceInputs["enableIntranodeVisibility"] = state ? state.enableIntranodeVisibility : undefined;
            resourceInputs["enableKubernetesAlpha"] = state ? state.enableKubernetesAlpha : undefined;
            resourceInputs["enableL4IlbSubsetting"] = state ? state.enableL4IlbSubsetting : undefined;
            resourceInputs["enableLegacyAbac"] = state ? state.enableLegacyAbac : undefined;
            resourceInputs["enableShieldedNodes"] = state ? state.enableShieldedNodes : undefined;
            resourceInputs["enableTpu"] = state ? state.enableTpu : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["identityServiceConfig"] = state ? state.identityServiceConfig : undefined;
            resourceInputs["initialNodeCount"] = state ? state.initialNodeCount : undefined;
            resourceInputs["ipAllocationPolicy"] = state ? state.ipAllocationPolicy : undefined;
            resourceInputs["labelFingerprint"] = state ? state.labelFingerprint : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["loggingConfig"] = state ? state.loggingConfig : undefined;
            resourceInputs["loggingService"] = state ? state.loggingService : undefined;
            resourceInputs["maintenancePolicy"] = state ? state.maintenancePolicy : undefined;
            resourceInputs["masterAuth"] = state ? state.masterAuth : undefined;
            resourceInputs["masterAuthorizedNetworksConfig"] = state ? state.masterAuthorizedNetworksConfig : undefined;
            resourceInputs["masterVersion"] = state ? state.masterVersion : undefined;
            resourceInputs["minMasterVersion"] = state ? state.minMasterVersion : undefined;
            resourceInputs["monitoringConfig"] = state ? state.monitoringConfig : undefined;
            resourceInputs["monitoringService"] = state ? state.monitoringService : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["networkPolicy"] = state ? state.networkPolicy : undefined;
            resourceInputs["networkingMode"] = state ? state.networkingMode : undefined;
            resourceInputs["nodeConfig"] = state ? state.nodeConfig : undefined;
            resourceInputs["nodeLocations"] = state ? state.nodeLocations : undefined;
            resourceInputs["nodePools"] = state ? state.nodePools : undefined;
            resourceInputs["nodeVersion"] = state ? state.nodeVersion : undefined;
            resourceInputs["notificationConfig"] = state ? state.notificationConfig : undefined;
            resourceInputs["operation"] = state ? state.operation : undefined;
            resourceInputs["podSecurityPolicyConfig"] = state ? state.podSecurityPolicyConfig : undefined;
            resourceInputs["privateClusterConfig"] = state ? state.privateClusterConfig : undefined;
            resourceInputs["privateIpv6GoogleAccess"] = state ? state.privateIpv6GoogleAccess : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["releaseChannel"] = state ? state.releaseChannel : undefined;
            resourceInputs["removeDefaultNodePool"] = state ? state.removeDefaultNodePool : undefined;
            resourceInputs["resourceLabels"] = state ? state.resourceLabels : undefined;
            resourceInputs["resourceUsageExportConfig"] = state ? state.resourceUsageExportConfig : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["servicesIpv4Cidr"] = state ? state.servicesIpv4Cidr : undefined;
            resourceInputs["subnetwork"] = state ? state.subnetwork : undefined;
            resourceInputs["tpuIpv4CidrBlock"] = state ? state.tpuIpv4CidrBlock : undefined;
            resourceInputs["verticalPodAutoscaling"] = state ? state.verticalPodAutoscaling : undefined;
            resourceInputs["workloadIdentityConfig"] = state ? state.workloadIdentityConfig : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            resourceInputs["addonsConfig"] = args ? args.addonsConfig : undefined;
            resourceInputs["authenticatorGroupsConfig"] = args ? args.authenticatorGroupsConfig : undefined;
            resourceInputs["clusterAutoscaling"] = args ? args.clusterAutoscaling : undefined;
            resourceInputs["clusterIpv4Cidr"] = args ? args.clusterIpv4Cidr : undefined;
            resourceInputs["clusterTelemetry"] = args ? args.clusterTelemetry : undefined;
            resourceInputs["confidentialNodes"] = args ? args.confidentialNodes : undefined;
            resourceInputs["databaseEncryption"] = args ? args.databaseEncryption : undefined;
            resourceInputs["datapathProvider"] = args ? args.datapathProvider : undefined;
            resourceInputs["defaultMaxPodsPerNode"] = args ? args.defaultMaxPodsPerNode : undefined;
            resourceInputs["defaultSnatStatus"] = args ? args.defaultSnatStatus : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsConfig"] = args ? args.dnsConfig : undefined;
            resourceInputs["enableAutopilot"] = args ? args.enableAutopilot : undefined;
            resourceInputs["enableBinaryAuthorization"] = args ? args.enableBinaryAuthorization : undefined;
            resourceInputs["enableIntranodeVisibility"] = args ? args.enableIntranodeVisibility : undefined;
            resourceInputs["enableKubernetesAlpha"] = args ? args.enableKubernetesAlpha : undefined;
            resourceInputs["enableL4IlbSubsetting"] = args ? args.enableL4IlbSubsetting : undefined;
            resourceInputs["enableLegacyAbac"] = args ? args.enableLegacyAbac : undefined;
            resourceInputs["enableShieldedNodes"] = args ? args.enableShieldedNodes : undefined;
            resourceInputs["enableTpu"] = args ? args.enableTpu : undefined;
            resourceInputs["identityServiceConfig"] = args ? args.identityServiceConfig : undefined;
            resourceInputs["initialNodeCount"] = args ? args.initialNodeCount : undefined;
            resourceInputs["ipAllocationPolicy"] = args ? args.ipAllocationPolicy : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["loggingConfig"] = args ? args.loggingConfig : undefined;
            resourceInputs["loggingService"] = args ? args.loggingService : undefined;
            resourceInputs["maintenancePolicy"] = args ? args.maintenancePolicy : undefined;
            resourceInputs["masterAuth"] = args ? args.masterAuth : undefined;
            resourceInputs["masterAuthorizedNetworksConfig"] = args ? args.masterAuthorizedNetworksConfig : undefined;
            resourceInputs["minMasterVersion"] = args ? args.minMasterVersion : undefined;
            resourceInputs["monitoringConfig"] = args ? args.monitoringConfig : undefined;
            resourceInputs["monitoringService"] = args ? args.monitoringService : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["networkPolicy"] = args ? args.networkPolicy : undefined;
            resourceInputs["networkingMode"] = args ? args.networkingMode : undefined;
            resourceInputs["nodeConfig"] = args ? args.nodeConfig : undefined;
            resourceInputs["nodeLocations"] = args ? args.nodeLocations : undefined;
            resourceInputs["nodePools"] = args ? args.nodePools : undefined;
            resourceInputs["nodeVersion"] = args ? args.nodeVersion : undefined;
            resourceInputs["notificationConfig"] = args ? args.notificationConfig : undefined;
            resourceInputs["podSecurityPolicyConfig"] = args ? args.podSecurityPolicyConfig : undefined;
            resourceInputs["privateClusterConfig"] = args ? args.privateClusterConfig : undefined;
            resourceInputs["privateIpv6GoogleAccess"] = args ? args.privateIpv6GoogleAccess : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["releaseChannel"] = args ? args.releaseChannel : undefined;
            resourceInputs["removeDefaultNodePool"] = args ? args.removeDefaultNodePool : undefined;
            resourceInputs["resourceLabels"] = args ? args.resourceLabels : undefined;
            resourceInputs["resourceUsageExportConfig"] = args ? args.resourceUsageExportConfig : undefined;
            resourceInputs["subnetwork"] = args ? args.subnetwork : undefined;
            resourceInputs["verticalPodAutoscaling"] = args ? args.verticalPodAutoscaling : undefined;
            resourceInputs["workloadIdentityConfig"] = args ? args.workloadIdentityConfig : undefined;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["labelFingerprint"] = undefined /*out*/;
            resourceInputs["masterVersion"] = undefined /*out*/;
            resourceInputs["operation"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["servicesIpv4Cidr"] = undefined /*out*/;
            resourceInputs["tpuIpv4CidrBlock"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * The configuration for addons supported by GKE.
     */
    addonsConfig?: pulumi.Input<inputs.container.ClusterAddonsConfig.ClusterAddonsConfigArgs>;
    /**
     * Configuration for the Google Groups for GKE feature.
     */
    authenticatorGroupsConfig?: pulumi.Input<inputs.container.ClusterAuthenticatorGroupsConfig.ClusterAuthenticatorGroupsConfigArgs>;
    /**
     * Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
     * cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
     * Auto-Provisioning for more details.
     */
    clusterAutoscaling?: pulumi.Input<inputs.container.ClusterClusterAutoscaling.ClusterClusterAutoscalingArgs>;
    /**
     * The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
     * one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
     * where ip_allocation_policy is not defined.
     */
    clusterIpv4Cidr?: pulumi.Input<string>;
    /**
     * Telemetry integration for the cluster.
     */
    clusterTelemetry?: pulumi.Input<inputs.container.ClusterClusterTelemetry.ClusterClusterTelemetryArgs>;
    /**
     * Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
     * can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
     */
    confidentialNodes?: pulumi.Input<inputs.container.ClusterConfidentialNodes.ClusterConfidentialNodesArgs>;
    /**
     * Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
     * state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
     */
    databaseEncryption?: pulumi.Input<inputs.container.ClusterDatabaseEncryption.ClusterDatabaseEncryptionArgs>;
    /**
     * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
     */
    datapathProvider?: pulumi.Input<string>;
    /**
     * The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
     * don't have IP Aliasing enabled.
     */
    defaultMaxPodsPerNode?: pulumi.Input<number>;
    /**
     * Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
     * disabled.
     */
    defaultSnatStatus?: pulumi.Input<inputs.container.ClusterDefaultSnatStatus.ClusterDefaultSnatStatusArgs>;
    /**
     * Description of the cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * Configuration for Cloud DNS for Kubernetes Engine.
     */
    dnsConfig?: pulumi.Input<inputs.container.ClusterDnsConfig.ClusterDnsConfigArgs>;
    /**
     * Enable Autopilot for this cluster.
     */
    enableAutopilot?: pulumi.Input<boolean>;
    /**
     * Enable Binary Authorization for this cluster. If enabled, all container images will be validated by Google Binary
     * Authorization.
     */
    enableBinaryAuthorization?: pulumi.Input<boolean>;
    /**
     * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
     * network.
     */
    enableIntranodeVisibility?: pulumi.Input<boolean>;
    /**
     * Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
     * be upgraded and will be automatically deleted after 30 days.
     */
    enableKubernetesAlpha?: pulumi.Input<boolean>;
    /**
     * Whether L4ILB Subsetting is enabled for this cluster.
     */
    enableL4IlbSubsetting?: pulumi.Input<boolean>;
    /**
     * Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
     * accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
     * configuration or IAM. Defaults to false.
     */
    enableLegacyAbac?: pulumi.Input<boolean>;
    /**
     * Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
     */
    enableShieldedNodes?: pulumi.Input<boolean>;
    /**
     * Whether to enable Cloud TPU resources in this cluster.
     */
    enableTpu?: pulumi.Input<boolean>;
    /**
     * The IP address of this cluster's Kubernetes master.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
     */
    identityServiceConfig?: pulumi.Input<inputs.container.ClusterIdentityServiceConfig.ClusterIdentityServiceConfigArgs>;
    /**
     * The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
     * number of nodes per zone. Must be set if node_pool is not set. If you're using google_container_node_pool objects with
     * no default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to
     * true.
     */
    initialNodeCount?: pulumi.Input<number>;
    /**
     * Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
     * cluster VPC-native instead of routes-based.
     */
    ipAllocationPolicy?: pulumi.Input<inputs.container.ClusterIpAllocationPolicy.ClusterIpAllocationPolicyArgs>;
    /**
     * The fingerprint of the set of labels for this cluster.
     */
    labelFingerprint?: pulumi.Input<string>;
    /**
     * The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
     * specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
     * a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
     * region, and with default node locations in those zones as well.
     */
    location?: pulumi.Input<string>;
    /**
     * Logging configuration for the cluster.
     */
    loggingConfig?: pulumi.Input<inputs.container.ClusterLoggingConfig.ClusterLoggingConfigArgs>;
    /**
     * The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
     * Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
     * logging.googleapis.com/kubernetes.
     */
    loggingService?: pulumi.Input<string>;
    /**
     * The maintenance policy to use for the cluster.
     */
    maintenancePolicy?: pulumi.Input<inputs.container.ClusterMaintenancePolicy.ClusterMaintenancePolicyArgs>;
    /**
     * The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
     * API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
     * unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
     */
    masterAuth?: pulumi.Input<inputs.container.ClusterMasterAuth.ClusterMasterAuthArgs>;
    /**
     * The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
     * external access (except the cluster node IPs, which GKE automatically whitelists).
     */
    masterAuthorizedNetworksConfig?: pulumi.Input<inputs.container.ClusterMasterAuthorizedNetworksConfig.ClusterMasterAuthorizedNetworksConfigArgs>;
    /**
     * The current version of the master in the cluster. This may be different than the min_master_version set in the config if
     * the master has been updated by GKE.
     */
    masterVersion?: pulumi.Input<string>;
    /**
     * The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
     * current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
     * set by GKE to the version of the most recent official release (which is not necessarily the latest version).
     */
    minMasterVersion?: pulumi.Input<string>;
    /**
     * Monitoring configuration for the cluster.
     */
    monitoringConfig?: pulumi.Input<inputs.container.ClusterMonitoringConfig.ClusterMonitoringConfigArgs>;
    /**
     * The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
     * the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
     * Available options include monitoring.googleapis.com(Legacy Stackdriver),
     * monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
     * monitoring.googleapis.com/kubernetes.
     */
    monitoringService?: pulumi.Input<string>;
    /**
     * The name of the cluster, unique within the project and location.
     */
    name?: pulumi.Input<string>;
    /**
     * The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
     * to the self link of the shared network.
     */
    network?: pulumi.Input<string>;
    /**
     * Configuration options for the NetworkPolicy feature.
     */
    networkPolicy?: pulumi.Input<inputs.container.ClusterNetworkPolicy.ClusterNetworkPolicyArgs>;
    /**
     * Determines whether alias IPs or routes will be used for pod IPs in the cluster.
     */
    networkingMode?: pulumi.Input<string>;
    /**
     * The configuration of the nodepool
     */
    nodeConfig?: pulumi.Input<inputs.container.ClusterNodeConfig.ClusterNodeConfigArgs>;
    /**
     * The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
     * the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
     * zone.
     */
    nodeLocations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of node pools associated with this cluster. See google_container_node_pool for schema. Warning: node pools defined
     * inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
     * cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
     * the google_container_node_pool resource instead of this property.
     */
    nodePools?: pulumi.Input<pulumi.Input<inputs.container.ClusterNodePool.ClusterNodePoolArgs>[]>;
    /**
     * The Kubernetes version on the nodes. Must either be unset or set to the same value as min_master_version on create.
     * Defaults to the default version set by GKE which is not necessarily the latest version. This only affects nodes in the
     * default node pool. While a fuzzy version can be specified, it's recommended that you specify explicit versions as
     * Terraform will see spurious diffs when fuzzy versions are used. See the google_container_engine_versions data source's
     * version_prefix field to approximate fuzzy versions in a Terraform-compatible way. To update nodes in other node pools,
     * use the version attribute on the node pool.
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * The notification config for sending cluster upgrade notifications
     */
    notificationConfig?: pulumi.Input<inputs.container.ClusterNotificationConfig.ClusterNotificationConfigArgs>;
    operation?: pulumi.Input<string>;
    /**
     * Configuration for the PodSecurityPolicy feature.
     */
    podSecurityPolicyConfig?: pulumi.Input<inputs.container.ClusterPodSecurityPolicyConfig.ClusterPodSecurityPolicyConfigArgs>;
    /**
     * Configuration for private clusters, clusters with private nodes.
     */
    privateClusterConfig?: pulumi.Input<inputs.container.ClusterPrivateClusterConfig.ClusterPrivateClusterConfigArgs>;
    /**
     * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
     * (all access will be via IPv4).
     */
    privateIpv6GoogleAccess?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
     * clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
     */
    releaseChannel?: pulumi.Input<inputs.container.ClusterReleaseChannel.ClusterReleaseChannelArgs>;
    /**
     * If true, deletes the default node pool upon cluster creation. If you're using google_container_node_pool resources with
     * no default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
     */
    removeDefaultNodePool?: pulumi.Input<boolean>;
    /**
     * The GCE resource labels (a map of key/value pairs) to be applied to the cluster.
     */
    resourceLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration for the ResourceUsageExportConfig feature.
     */
    resourceUsageExportConfig?: pulumi.Input<inputs.container.ClusterResourceUsageExportConfig.ClusterResourceUsageExportConfigArgs>;
    /**
     * Server-defined URL for the resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The IP address range of the Kubernetes services in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service addresses
     * are typically put in the last /16 from the container CIDR.
     */
    servicesIpv4Cidr?: pulumi.Input<string>;
    /**
     * The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
     */
    subnetwork?: pulumi.Input<string>;
    /**
     * The IP address range of the Cloud TPUs in this cluster, in CIDR notation (e.g. 1.2.3.4/29).
     */
    tpuIpv4CidrBlock?: pulumi.Input<string>;
    /**
     * Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
     */
    verticalPodAutoscaling?: pulumi.Input<inputs.container.ClusterVerticalPodAutoscaling.ClusterVerticalPodAutoscalingArgs>;
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     */
    workloadIdentityConfig?: pulumi.Input<inputs.container.ClusterWorkloadIdentityConfig.ClusterWorkloadIdentityConfigArgs>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The configuration for addons supported by GKE.
     */
    addonsConfig?: pulumi.Input<inputs.container.ClusterAddonsConfig.ClusterAddonsConfigArgs>;
    /**
     * Configuration for the Google Groups for GKE feature.
     */
    authenticatorGroupsConfig?: pulumi.Input<inputs.container.ClusterAuthenticatorGroupsConfig.ClusterAuthenticatorGroupsConfigArgs>;
    /**
     * Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
     * cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
     * Auto-Provisioning for more details.
     */
    clusterAutoscaling?: pulumi.Input<inputs.container.ClusterClusterAutoscaling.ClusterClusterAutoscalingArgs>;
    /**
     * The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
     * one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
     * where ip_allocation_policy is not defined.
     */
    clusterIpv4Cidr?: pulumi.Input<string>;
    /**
     * Telemetry integration for the cluster.
     */
    clusterTelemetry?: pulumi.Input<inputs.container.ClusterClusterTelemetry.ClusterClusterTelemetryArgs>;
    /**
     * Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
     * can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
     */
    confidentialNodes?: pulumi.Input<inputs.container.ClusterConfidentialNodes.ClusterConfidentialNodesArgs>;
    /**
     * Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
     * state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
     */
    databaseEncryption?: pulumi.Input<inputs.container.ClusterDatabaseEncryption.ClusterDatabaseEncryptionArgs>;
    /**
     * The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
     */
    datapathProvider?: pulumi.Input<string>;
    /**
     * The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
     * don't have IP Aliasing enabled.
     */
    defaultMaxPodsPerNode?: pulumi.Input<number>;
    /**
     * Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
     * disabled.
     */
    defaultSnatStatus?: pulumi.Input<inputs.container.ClusterDefaultSnatStatus.ClusterDefaultSnatStatusArgs>;
    /**
     * Description of the cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * Configuration for Cloud DNS for Kubernetes Engine.
     */
    dnsConfig?: pulumi.Input<inputs.container.ClusterDnsConfig.ClusterDnsConfigArgs>;
    /**
     * Enable Autopilot for this cluster.
     */
    enableAutopilot?: pulumi.Input<boolean>;
    /**
     * Enable Binary Authorization for this cluster. If enabled, all container images will be validated by Google Binary
     * Authorization.
     */
    enableBinaryAuthorization?: pulumi.Input<boolean>;
    /**
     * Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
     * network.
     */
    enableIntranodeVisibility?: pulumi.Input<boolean>;
    /**
     * Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
     * be upgraded and will be automatically deleted after 30 days.
     */
    enableKubernetesAlpha?: pulumi.Input<boolean>;
    /**
     * Whether L4ILB Subsetting is enabled for this cluster.
     */
    enableL4IlbSubsetting?: pulumi.Input<boolean>;
    /**
     * Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
     * accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
     * configuration or IAM. Defaults to false.
     */
    enableLegacyAbac?: pulumi.Input<boolean>;
    /**
     * Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
     */
    enableShieldedNodes?: pulumi.Input<boolean>;
    /**
     * Whether to enable Cloud TPU resources in this cluster.
     */
    enableTpu?: pulumi.Input<boolean>;
    /**
     * Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
     */
    identityServiceConfig?: pulumi.Input<inputs.container.ClusterIdentityServiceConfig.ClusterIdentityServiceConfigArgs>;
    /**
     * The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
     * number of nodes per zone. Must be set if node_pool is not set. If you're using google_container_node_pool objects with
     * no default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to
     * true.
     */
    initialNodeCount?: pulumi.Input<number>;
    /**
     * Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
     * cluster VPC-native instead of routes-based.
     */
    ipAllocationPolicy?: pulumi.Input<inputs.container.ClusterIpAllocationPolicy.ClusterIpAllocationPolicyArgs>;
    /**
     * The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
     * specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
     * a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
     * region, and with default node locations in those zones as well.
     */
    location?: pulumi.Input<string>;
    /**
     * Logging configuration for the cluster.
     */
    loggingConfig?: pulumi.Input<inputs.container.ClusterLoggingConfig.ClusterLoggingConfigArgs>;
    /**
     * The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
     * Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
     * logging.googleapis.com/kubernetes.
     */
    loggingService?: pulumi.Input<string>;
    /**
     * The maintenance policy to use for the cluster.
     */
    maintenancePolicy?: pulumi.Input<inputs.container.ClusterMaintenancePolicy.ClusterMaintenancePolicyArgs>;
    /**
     * The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
     * API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
     * unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
     */
    masterAuth?: pulumi.Input<inputs.container.ClusterMasterAuth.ClusterMasterAuthArgs>;
    /**
     * The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
     * external access (except the cluster node IPs, which GKE automatically whitelists).
     */
    masterAuthorizedNetworksConfig?: pulumi.Input<inputs.container.ClusterMasterAuthorizedNetworksConfig.ClusterMasterAuthorizedNetworksConfigArgs>;
    /**
     * The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
     * current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
     * set by GKE to the version of the most recent official release (which is not necessarily the latest version).
     */
    minMasterVersion?: pulumi.Input<string>;
    /**
     * Monitoring configuration for the cluster.
     */
    monitoringConfig?: pulumi.Input<inputs.container.ClusterMonitoringConfig.ClusterMonitoringConfigArgs>;
    /**
     * The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
     * the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
     * Available options include monitoring.googleapis.com(Legacy Stackdriver),
     * monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
     * monitoring.googleapis.com/kubernetes.
     */
    monitoringService?: pulumi.Input<string>;
    /**
     * The name of the cluster, unique within the project and location.
     */
    name?: pulumi.Input<string>;
    /**
     * The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
     * to the self link of the shared network.
     */
    network?: pulumi.Input<string>;
    /**
     * Configuration options for the NetworkPolicy feature.
     */
    networkPolicy?: pulumi.Input<inputs.container.ClusterNetworkPolicy.ClusterNetworkPolicyArgs>;
    /**
     * Determines whether alias IPs or routes will be used for pod IPs in the cluster.
     */
    networkingMode?: pulumi.Input<string>;
    /**
     * The configuration of the nodepool
     */
    nodeConfig?: pulumi.Input<inputs.container.ClusterNodeConfig.ClusterNodeConfigArgs>;
    /**
     * The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
     * the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
     * zone.
     */
    nodeLocations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of node pools associated with this cluster. See google_container_node_pool for schema. Warning: node pools defined
     * inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
     * cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
     * the google_container_node_pool resource instead of this property.
     */
    nodePools?: pulumi.Input<pulumi.Input<inputs.container.ClusterNodePool.ClusterNodePoolArgs>[]>;
    /**
     * The Kubernetes version on the nodes. Must either be unset or set to the same value as min_master_version on create.
     * Defaults to the default version set by GKE which is not necessarily the latest version. This only affects nodes in the
     * default node pool. While a fuzzy version can be specified, it's recommended that you specify explicit versions as
     * Terraform will see spurious diffs when fuzzy versions are used. See the google_container_engine_versions data source's
     * version_prefix field to approximate fuzzy versions in a Terraform-compatible way. To update nodes in other node pools,
     * use the version attribute on the node pool.
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * The notification config for sending cluster upgrade notifications
     */
    notificationConfig?: pulumi.Input<inputs.container.ClusterNotificationConfig.ClusterNotificationConfigArgs>;
    /**
     * Configuration for the PodSecurityPolicy feature.
     */
    podSecurityPolicyConfig?: pulumi.Input<inputs.container.ClusterPodSecurityPolicyConfig.ClusterPodSecurityPolicyConfigArgs>;
    /**
     * Configuration for private clusters, clusters with private nodes.
     */
    privateClusterConfig?: pulumi.Input<inputs.container.ClusterPrivateClusterConfig.ClusterPrivateClusterConfigArgs>;
    /**
     * The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
     * (all access will be via IPv4).
     */
    privateIpv6GoogleAccess?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
     * clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
     */
    releaseChannel?: pulumi.Input<inputs.container.ClusterReleaseChannel.ClusterReleaseChannelArgs>;
    /**
     * If true, deletes the default node pool upon cluster creation. If you're using google_container_node_pool resources with
     * no default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
     */
    removeDefaultNodePool?: pulumi.Input<boolean>;
    /**
     * The GCE resource labels (a map of key/value pairs) to be applied to the cluster.
     */
    resourceLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration for the ResourceUsageExportConfig feature.
     */
    resourceUsageExportConfig?: pulumi.Input<inputs.container.ClusterResourceUsageExportConfig.ClusterResourceUsageExportConfigArgs>;
    /**
     * The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
     */
    subnetwork?: pulumi.Input<string>;
    /**
     * Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
     */
    verticalPodAutoscaling?: pulumi.Input<inputs.container.ClusterVerticalPodAutoscaling.ClusterVerticalPodAutoscalingArgs>;
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     */
    workloadIdentityConfig?: pulumi.Input<inputs.container.ClusterWorkloadIdentityConfig.ClusterWorkloadIdentityConfigArgs>;
}
