// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a Redis instance based on the specified tier and memory size. By default, the instance is accessible from the project's [default network](https://cloud.google.com/vpc/docs/vpc). The creation is executed asynchronously and callers may check the returned operation to track its progress. Once the operation is completed the Redis instance will be fully functional. The completed longrunning.Operation will contain the new instance object in the response field. The returned operation is automatically deleted after a few hours, so there is no need to call DeleteOperation.
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:redis/v1beta1:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.
     */
    public readonly alternativeLocationId!: pulumi.Output<string>;
    /**
     * Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the instance. Default value is "false" meaning AUTH is disabled.
     */
    public readonly authEnabled!: pulumi.Output<boolean>;
    /**
     * Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.
     */
    public readonly authorizedNetwork!: pulumi.Output<string>;
    /**
     * Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.
     */
    public readonly connectMode!: pulumi.Output<string>;
    /**
     * The time the instance was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The current zone where the Redis primary node is located. In basic tier, this will always be the same as [location_id]. In standard tier, this can be the zone of any node in the instance.
     */
    public /*out*/ readonly currentLocationId!: pulumi.Output<string>;
    /**
     * An arbitrary and optional user-provided name for the instance.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
     */
    public /*out*/ readonly host!: pulumi.Output<string>;
    /**
     * Resource labels to represent user provided metadata
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Optional. The zone where the instance will be provisioned. If not provided, the service will choose a zone from the specified region for the instance. For standard tier, additional nodes will be added across multiple zones for protection against zonal failures. If specified, at least one node will be provisioned in this zone.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.
     */
    public readonly maintenancePolicy!: pulumi.Output<outputs.redis.v1beta1.MaintenancePolicyResponse>;
    /**
     * Date and time of upcoming maintenance events which have been scheduled.
     */
    public /*out*/ readonly maintenanceSchedule!: pulumi.Output<outputs.redis.v1beta1.MaintenanceScheduleResponse>;
    /**
     * Redis memory size in GiB.
     */
    public readonly memorySizeGb!: pulumi.Output<number>;
    /**
     * Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Info per node.
     */
    public /*out*/ readonly nodes!: pulumi.Output<outputs.redis.v1beta1.NodeInfoResponse[]>;
    /**
     * Optional. Persistence configuration parameters
     */
    public readonly persistenceConfig!: pulumi.Output<outputs.redis.v1beta1.PersistenceConfigResponse>;
    /**
     * Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export operation.
     */
    public /*out*/ readonly persistenceIamIdentity!: pulumi.Output<string>;
    /**
     * The port number of the exposed Redis endpoint.
     */
    public /*out*/ readonly port!: pulumi.Output<number>;
    /**
     * Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write requests must target 'host'.
     */
    public /*out*/ readonly readEndpoint!: pulumi.Output<string>;
    /**
     * The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target 'port'.
     */
    public /*out*/ readonly readEndpointPort!: pulumi.Output<number>;
    /**
     * Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.
     */
    public readonly readReplicasMode!: pulumi.Output<string>;
    /**
     * Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries
     */
    public readonly redisConfigs!: pulumi.Output<{[key: string]: string}>;
    /**
     * Optional. The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility (default) * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility
     */
    public readonly redisVersion!: pulumi.Output<string>;
    /**
     * Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.
     */
    public readonly replicaCount!: pulumi.Output<number>;
    /**
     * Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28.
     */
    public readonly reservedIpRange!: pulumi.Output<string>;
    /**
     * Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or "auto".
     */
    public readonly secondaryIpRange!: pulumi.Output<string>;
    /**
     * List of server CA certificates for the instance.
     */
    public /*out*/ readonly serverCaCerts!: pulumi.Output<outputs.redis.v1beta1.TlsCertificateResponse[]>;
    /**
     * The current state of this instance.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Additional information about the current status of this instance, if available.
     */
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    /**
     * The service tier of the instance.
     */
    public readonly tier!: pulumi.Output<string>;
    /**
     * Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.
     */
    public readonly transitEncryptionMode!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.memorySizeGb === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memorySizeGb'");
            }
            if ((!args || args.tier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tier'");
            }
            resourceInputs["alternativeLocationId"] = args ? args.alternativeLocationId : undefined;
            resourceInputs["authEnabled"] = args ? args.authEnabled : undefined;
            resourceInputs["authorizedNetwork"] = args ? args.authorizedNetwork : undefined;
            resourceInputs["connectMode"] = args ? args.connectMode : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maintenancePolicy"] = args ? args.maintenancePolicy : undefined;
            resourceInputs["memorySizeGb"] = args ? args.memorySizeGb : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["persistenceConfig"] = args ? args.persistenceConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["readReplicasMode"] = args ? args.readReplicasMode : undefined;
            resourceInputs["redisConfigs"] = args ? args.redisConfigs : undefined;
            resourceInputs["redisVersion"] = args ? args.redisVersion : undefined;
            resourceInputs["replicaCount"] = args ? args.replicaCount : undefined;
            resourceInputs["reservedIpRange"] = args ? args.reservedIpRange : undefined;
            resourceInputs["secondaryIpRange"] = args ? args.secondaryIpRange : undefined;
            resourceInputs["tier"] = args ? args.tier : undefined;
            resourceInputs["transitEncryptionMode"] = args ? args.transitEncryptionMode : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["currentLocationId"] = undefined /*out*/;
            resourceInputs["host"] = undefined /*out*/;
            resourceInputs["maintenanceSchedule"] = undefined /*out*/;
            resourceInputs["nodes"] = undefined /*out*/;
            resourceInputs["persistenceIamIdentity"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["readEndpoint"] = undefined /*out*/;
            resourceInputs["readEndpointPort"] = undefined /*out*/;
            resourceInputs["serverCaCerts"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
        } else {
            resourceInputs["alternativeLocationId"] = undefined /*out*/;
            resourceInputs["authEnabled"] = undefined /*out*/;
            resourceInputs["authorizedNetwork"] = undefined /*out*/;
            resourceInputs["connectMode"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["currentLocationId"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["host"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["maintenancePolicy"] = undefined /*out*/;
            resourceInputs["maintenanceSchedule"] = undefined /*out*/;
            resourceInputs["memorySizeGb"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nodes"] = undefined /*out*/;
            resourceInputs["persistenceConfig"] = undefined /*out*/;
            resourceInputs["persistenceIamIdentity"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["readEndpoint"] = undefined /*out*/;
            resourceInputs["readEndpointPort"] = undefined /*out*/;
            resourceInputs["readReplicasMode"] = undefined /*out*/;
            resourceInputs["redisConfigs"] = undefined /*out*/;
            resourceInputs["redisVersion"] = undefined /*out*/;
            resourceInputs["replicaCount"] = undefined /*out*/;
            resourceInputs["reservedIpRange"] = undefined /*out*/;
            resourceInputs["secondaryIpRange"] = undefined /*out*/;
            resourceInputs["serverCaCerts"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
            resourceInputs["tier"] = undefined /*out*/;
            resourceInputs["transitEncryptionMode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Optional. If specified, at least one node will be provisioned in this zone in addition to the zone specified in location_id. Only applicable to standard tier. If provided, it must be a different zone from the one provided in [location_id]. Additional nodes beyond the first 2 will be placed in zones selected by the service.
     */
    alternativeLocationId?: pulumi.Input<string>;
    /**
     * Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the instance. Default value is "false" meaning AUTH is disabled.
     */
    authEnabled?: pulumi.Input<boolean>;
    /**
     * Optional. The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected. If left unspecified, the `default` network will be used.
     */
    authorizedNetwork?: pulumi.Input<string>;
    /**
     * Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.
     */
    connectMode?: pulumi.Input<enums.redis.v1beta1.InstanceConnectMode>;
    /**
     * An arbitrary and optional user-provided name for the instance.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Required. The logical name of the Redis instance in the customer project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project / location
     */
    instanceId: pulumi.Input<string>;
    /**
     * Resource labels to represent user provided metadata
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. The zone where the instance will be provisioned. If not provided, the service will choose a zone from the specified region for the instance. For standard tier, additional nodes will be added across multiple zones for protection against zonal failures. If specified, at least one node will be provisioned in this zone.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. The maintenance policy for the instance. If not provided, maintenance events can be performed at any time.
     */
    maintenancePolicy?: pulumi.Input<inputs.redis.v1beta1.MaintenancePolicyArgs>;
    /**
     * Redis memory size in GiB.
     */
    memorySizeGb: pulumi.Input<number>;
    /**
     * Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to location_id and alternative_location_id fields for more details.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional. Persistence configuration parameters
     */
    persistenceConfig?: pulumi.Input<inputs.redis.v1beta1.PersistenceConfigArgs>;
    project?: pulumi.Input<string>;
    /**
     * Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.
     */
    readReplicasMode?: pulumi.Input<enums.redis.v1beta1.InstanceReadReplicasMode>;
    /**
     * Optional. Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: Redis version 3.2 and newer: * maxmemory-policy * notify-keyspace-events Redis version 4.0 and newer: * activedefrag * lfu-decay-time * lfu-log-factor * maxmemory-gb Redis version 5.0 and newer: * stream-node-max-bytes * stream-node-max-entries
     */
    redisConfigs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: * `REDIS_3_2` for Redis 3.2 compatibility * `REDIS_4_0` for Redis 4.0 compatibility (default) * `REDIS_5_0` for Redis 5.0 compatibility * `REDIS_6_X` for Redis 6.x compatibility
     */
    redisVersion?: pulumi.Input<string>;
    /**
     * Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default is 1. The valid value for basic tier is 0 and the default is also 0.
     */
    replicaCount?: pulumi.Input<number>;
    /**
     * Optional. For DIRECT_PEERING mode, the CIDR range of internal addresses that are reserved for this instance. Range must be unique and non-overlapping with existing subnets in an authorized network. For PRIVATE_SERVICE_ACCESS mode, the name of one allocated IP address ranges associated with this private service access connection. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. For READ_REPLICAS_ENABLED the default block size is /28.
     */
    reservedIpRange?: pulumi.Input<string>;
    /**
     * Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address range associated with the private service access connection, or "auto".
     */
    secondaryIpRange?: pulumi.Input<string>;
    /**
     * The service tier of the instance.
     */
    tier: pulumi.Input<enums.redis.v1beta1.InstanceTier>;
    /**
     * Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.
     */
    transitEncryptionMode?: pulumi.Input<enums.redis.v1beta1.InstanceTransitEncryptionMode>;
}
