// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./getKey";
export * from "./getOrganizationRole";
export * from "./getProvider";
export * from "./getRole";
export * from "./getServiceAccount";
export * from "./getServiceAccountIamPolicy";
export * from "./getWorkloadIdentityPool";
export * from "./key";
export * from "./organizationRole";
export * from "./provider";
export * from "./role";
export * from "./serviceAccount";
export * from "./serviceAccountIamPolicy";
export * from "./workloadIdentityPool";

// Export enums:
export * from "../../types/enums/iam/v1";

// Import resources to register:
import { Key } from "./key";
import { OrganizationRole } from "./organizationRole";
import { Provider } from "./provider";
import { Role } from "./role";
import { ServiceAccount } from "./serviceAccount";
import { ServiceAccountIamPolicy } from "./serviceAccountIamPolicy";
import { WorkloadIdentityPool } from "./workloadIdentityPool";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-hybrid:iam/v1:Key":
                return new Key(name, <any>undefined, { urn })
            case "google-hybrid:iam/v1:OrganizationRole":
                return new OrganizationRole(name, <any>undefined, { urn })
            case "google-hybrid:iam/v1:Provider":
                return new Provider(name, <any>undefined, { urn })
            case "google-hybrid:iam/v1:Role":
                return new Role(name, <any>undefined, { urn })
            case "google-hybrid:iam/v1:ServiceAccount":
                return new ServiceAccount(name, <any>undefined, { urn })
            case "google-hybrid:iam/v1:ServiceAccountIamPolicy":
                return new ServiceAccountIamPolicy(name, <any>undefined, { urn })
            case "google-hybrid:iam/v1:WorkloadIdentityPool":
                return new WorkloadIdentityPool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-hybrid", "iam/v1", _module)
