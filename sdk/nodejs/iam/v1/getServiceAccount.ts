// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a ServiceAccount.
 */
export function getServiceAccount(args: GetServiceAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceAccountResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:iam/v1:getServiceAccount", {
        "project": args.project,
        "serviceAccountId": args.serviceAccountId,
    }, opts);
}

export interface GetServiceAccountArgs {
    project?: string;
    serviceAccountId: string;
}

export interface GetServiceAccountResult {
    /**
     * Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes.
     */
    readonly description: string;
    /**
     * Whether the service account is disabled.
     */
    readonly disabled: boolean;
    /**
     * Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes.
     */
    readonly displayName: string;
    /**
     * The email address of the service account.
     */
    readonly email: string;
    /**
     * Deprecated. Do not use.
     *
     * @deprecated Deprecated. Do not use.
     */
    readonly etag: string;
    /**
     * The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.
     */
    readonly name: string;
    /**
     * The OAuth 2.0 client ID for the service account.
     */
    readonly oauth2ClientId: string;
    /**
     * The ID of the project that owns the service account.
     */
    readonly project: string;
    /**
     * The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account.
     */
    readonly uniqueId: string;
}

export function getServiceAccountOutput(args: GetServiceAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceAccountResult> {
    return pulumi.output(args).apply(a => getServiceAccount(a, opts))
}

export interface GetServiceAccountOutputArgs {
    project?: pulumi.Input<string>;
    serviceAccountId: pulumi.Input<string>;
}
