// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the definition of a Role.
 */
export function getOrganizationRole(args: GetOrganizationRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationRoleResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:iam/v1:getOrganizationRole", {
        "organizationId": args.organizationId,
        "roleId": args.roleId,
    }, opts);
}

export interface GetOrganizationRoleArgs {
    organizationId: string;
    roleId: string;
}

export interface GetOrganizationRoleResult {
    /**
     * The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.
     */
    readonly deleted: boolean;
    /**
     * Optional. A human-readable description for the role.
     */
    readonly description: string;
    /**
     * Used to perform a consistent read-modify-write.
     */
    readonly etag: string;
    /**
     * The names of the permissions this role grants when bound in an IAM policy.
     */
    readonly includedPermissions: string[];
    /**
     * The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.
     */
    readonly name: string;
    /**
     * The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.
     */
    readonly stage: string;
    /**
     * Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
     */
    readonly title: string;
}

export function getOrganizationRoleOutput(args: GetOrganizationRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationRoleResult> {
    return pulumi.output(args).apply(a => getOrganizationRole(a, opts))
}

export interface GetOrganizationRoleOutputArgs {
    organizationId: pulumi.Input<string>;
    roleId: pulumi.Input<string>;
}
