// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a ServiceAccountKey.
 */
export function getKey(args: GetKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:iam/v1:getKey", {
        "keyId": args.keyId,
        "project": args.project,
        "publicKeyType": args.publicKeyType,
        "serviceAccountId": args.serviceAccountId,
    }, opts);
}

export interface GetKeyArgs {
    keyId: string;
    project?: string;
    publicKeyType?: string;
    serviceAccountId: string;
}

export interface GetKeyResult {
    /**
     * The key status.
     */
    readonly disabled: boolean;
    /**
     * Specifies the algorithm (and possibly key size) for the key.
     */
    readonly keyAlgorithm: string;
    /**
     * The key origin.
     */
    readonly keyOrigin: string;
    /**
     * The key type.
     */
    readonly keyType: string;
    /**
     * The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
     */
    readonly name: string;
    /**
     * The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account.
     */
    readonly privateKeyData: string;
    /**
     * The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.
     */
    readonly privateKeyType: string;
    /**
     * The public key data. Only provided in `GetServiceAccountKey` responses.
     */
    readonly publicKeyData: string;
    /**
     * The key can be used after this timestamp.
     */
    readonly validAfterTime: string;
    /**
     * The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time.
     */
    readonly validBeforeTime: string;
}

export function getKeyOutput(args: GetKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyResult> {
    return pulumi.output(args).apply(a => getKey(a, opts))
}

export interface GetKeyOutputArgs {
    keyId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    publicKeyType?: pulumi.Input<string>;
    serviceAccountId: pulumi.Input<string>;
}
