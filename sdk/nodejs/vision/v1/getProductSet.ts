// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets information associated with a ProductSet. Possible errors: * Returns NOT_FOUND if the ProductSet does not exist.
 */
export function getProductSet(args: GetProductSetArgs, opts?: pulumi.InvokeOptions): Promise<GetProductSetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:vision/v1:getProductSet", {
        "location": args.location,
        "productSetId": args.productSetId,
        "project": args.project,
    }, opts);
}

export interface GetProductSetArgs {
    location: string;
    productSetId: string;
    project?: string;
}

export interface GetProductSetResult {
    /**
     * The user-provided name for this ProductSet. Must not be empty. Must be at most 4096 characters long.
     */
    readonly displayName: string;
    /**
     * If there was an error with indexing the product set, the field is populated. This field is ignored when creating a ProductSet.
     */
    readonly indexError: outputs.vision.v1.StatusResponse;
    /**
     * The time at which this ProductSet was last indexed. Query results will reflect all updates before this time. If this ProductSet has never been indexed, this timestamp is the default value "1970-01-01T00:00:00Z". This field is ignored when creating a ProductSet.
     */
    readonly indexTime: string;
    /**
     * The resource name of the ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`. This field is ignored when creating a ProductSet.
     */
    readonly name: string;
}

export function getProductSetOutput(args: GetProductSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductSetResult> {
    return pulumi.output(args).apply(a => getProductSet(a, opts))
}

export interface GetProductSetOutputArgs {
    location: pulumi.Input<string>;
    productSetId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
