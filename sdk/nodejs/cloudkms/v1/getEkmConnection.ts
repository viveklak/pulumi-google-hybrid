// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns metadata for a given EkmConnection.
 */
export function getEkmConnection(args: GetEkmConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetEkmConnectionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:cloudkms/v1:getEkmConnection", {
        "ekmConnectionId": args.ekmConnectionId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetEkmConnectionArgs {
    ekmConnectionId: string;
    location: string;
    project?: string;
}

export interface GetEkmConnectionResult {
    /**
     * The time at which the EkmConnection was created.
     */
    readonly createTime: string;
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
     */
    readonly etag: string;
    /**
     * The resource name for the EkmConnection in the format `projects/*&#47;locations/*&#47;ekmConnections/*`.
     */
    readonly name: string;
    /**
     * A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
     */
    readonly serviceResolvers: outputs.cloudkms.v1.ServiceResolverResponse[];
}

export function getEkmConnectionOutput(args: GetEkmConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEkmConnectionResult> {
    return pulumi.output(args).apply(a => getEkmConnection(a, opts))
}

export interface GetEkmConnectionOutputArgs {
    ekmConnectionId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
