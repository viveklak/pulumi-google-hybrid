// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Create a new CryptoKeyVersion in a CryptoKey. The server will assign the next sequential id. If unset, state will be set to ENABLED.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class CryptoKeyVersion extends pulumi.CustomResource {
    /**
     * Get an existing CryptoKeyVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CryptoKeyVersion {
        return new CryptoKeyVersion(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:cloudkms/v1:CryptoKeyVersion';

    /**
     * Returns true if the given object is an instance of CryptoKeyVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CryptoKeyVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CryptoKeyVersion.__pulumiType;
    }

    /**
     * The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
     */
    public /*out*/ readonly algorithm!: pulumi.Output<string>;
    /**
     * Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.
     */
    public /*out*/ readonly attestation!: pulumi.Output<outputs.cloudkms.v1.KeyOperationAttestationResponse>;
    /**
     * The time at which this CryptoKeyVersion was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
     */
    public /*out*/ readonly destroyEventTime!: pulumi.Output<string>;
    /**
     * The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
     */
    public /*out*/ readonly destroyTime!: pulumi.Output<string>;
    /**
     * ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
     */
    public readonly externalProtectionLevelOptions!: pulumi.Output<outputs.cloudkms.v1.ExternalProtectionLevelOptionsResponse>;
    /**
     * The time this CryptoKeyVersion's key material was generated.
     */
    public /*out*/ readonly generateTime!: pulumi.Output<string>;
    /**
     * The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.
     */
    public /*out*/ readonly importFailureReason!: pulumi.Output<string>;
    /**
     * The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.
     */
    public /*out*/ readonly importJob!: pulumi.Output<string>;
    /**
     * The time at which this CryptoKeyVersion's key material was most recently imported.
     */
    public /*out*/ readonly importTime!: pulumi.Output<string>;
    /**
     * The resource name for this CryptoKeyVersion in the format `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*&#47;cryptoKeyVersions/*`.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
     */
    public /*out*/ readonly protectionLevel!: pulumi.Output<string>;
    /**
     * Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.
     */
    public /*out*/ readonly reimportEligible!: pulumi.Output<boolean>;
    /**
     * The current state of the CryptoKeyVersion.
     */
    public readonly state!: pulumi.Output<string>;

    /**
     * Create a CryptoKeyVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CryptoKeyVersionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.keyRingId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyRingId'");
            }
            resourceInputs["cryptoKeyId"] = args ? args.cryptoKeyId : undefined;
            resourceInputs["externalProtectionLevelOptions"] = args ? args.externalProtectionLevelOptions : undefined;
            resourceInputs["keyRingId"] = args ? args.keyRingId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["algorithm"] = undefined /*out*/;
            resourceInputs["attestation"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["destroyEventTime"] = undefined /*out*/;
            resourceInputs["destroyTime"] = undefined /*out*/;
            resourceInputs["generateTime"] = undefined /*out*/;
            resourceInputs["importFailureReason"] = undefined /*out*/;
            resourceInputs["importJob"] = undefined /*out*/;
            resourceInputs["importTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["protectionLevel"] = undefined /*out*/;
            resourceInputs["reimportEligible"] = undefined /*out*/;
        } else {
            resourceInputs["algorithm"] = undefined /*out*/;
            resourceInputs["attestation"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["destroyEventTime"] = undefined /*out*/;
            resourceInputs["destroyTime"] = undefined /*out*/;
            resourceInputs["externalProtectionLevelOptions"] = undefined /*out*/;
            resourceInputs["generateTime"] = undefined /*out*/;
            resourceInputs["importFailureReason"] = undefined /*out*/;
            resourceInputs["importJob"] = undefined /*out*/;
            resourceInputs["importTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["protectionLevel"] = undefined /*out*/;
            resourceInputs["reimportEligible"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CryptoKeyVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CryptoKeyVersion resource.
 */
export interface CryptoKeyVersionArgs {
    cryptoKeyId?: pulumi.Input<string>;
    /**
     * ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
     */
    externalProtectionLevelOptions?: pulumi.Input<inputs.cloudkms.v1.ExternalProtectionLevelOptionsArgs>;
    keyRingId: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The current state of the CryptoKeyVersion.
     */
    state?: pulumi.Input<enums.cloudkms.v1.CryptoKeyVersionState>;
}
