// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets details of a single CutoverJob.
 */
export function getCutoverJob(args: GetCutoverJobArgs, opts?: pulumi.InvokeOptions): Promise<GetCutoverJobResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:vmmigration/v1:getCutoverJob", {
        "cutoverJobId": args.cutoverJobId,
        "location": args.location,
        "migratingVmId": args.migratingVmId,
        "project": args.project,
        "sourceId": args.sourceId,
    }, opts);
}

export interface GetCutoverJobArgs {
    cutoverJobId: string;
    location: string;
    migratingVmId: string;
    project?: string;
    sourceId: string;
}

export interface GetCutoverJobResult {
    /**
     * Details of the target VM in Compute Engine.
     */
    readonly computeEngineTargetDetails: outputs.vmmigration.v1.ComputeEngineTargetDetailsResponse;
    /**
     * The time the cutover job was created (as an API call, not when it was actually created in the target).
     */
    readonly createTime: string;
    /**
     * Provides details for the errors that led to the Cutover Job's state.
     */
    readonly error: outputs.vmmigration.v1.StatusResponse;
    /**
     * The name of the cutover job.
     */
    readonly name: string;
    /**
     * The current progress in percentage of the cutover job.
     */
    readonly progressPercent: number;
    /**
     * State of the cutover job.
     */
    readonly state: string;
    /**
     * A message providing possible extra details about the current state.
     */
    readonly stateMessage: string;
    /**
     * The time the state was last updated.
     */
    readonly stateTime: string;
}

export function getCutoverJobOutput(args: GetCutoverJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCutoverJobResult> {
    return pulumi.output(args).apply(a => getCutoverJob(a, opts))
}

export interface GetCutoverJobOutputArgs {
    cutoverJobId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    migratingVmId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    sourceId: pulumi.Input<string>;
}
