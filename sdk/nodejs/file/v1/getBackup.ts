// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets the details of a specific backup.
 */
export function getBackup(args: GetBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:file/v1:getBackup", {
        "backupId": args.backupId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetBackupArgs {
    backupId: string;
    location: string;
    project?: string;
}

export interface GetBackupResult {
    /**
     * Capacity of the source file share when the backup was created.
     */
    readonly capacityGb: string;
    /**
     * The time when the backup was created.
     */
    readonly createTime: string;
    /**
     * A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
     */
    readonly description: string;
    /**
     * Amount of bytes that will be downloaded if the backup is restored. This may be different than storage bytes, since sequential backups of the same disk will share storage.
     */
    readonly downloadBytes: string;
    /**
     * Resource labels to represent user provided metadata.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`.
     */
    readonly name: string;
    /**
     * Reserved for future use.
     */
    readonly satisfiesPzs: boolean;
    /**
     * Name of the file share in the source Cloud Filestore instance that the backup is created from.
     */
    readonly sourceFileShare: string;
    /**
     * The resource name of the source Cloud Filestore instance, in the format `projects/{project_number}/locations/{location_id}/instances/{instance_id}`, used to create this backup.
     */
    readonly sourceInstance: string;
    /**
     * The service tier of the source Cloud Filestore instance that this backup is created from.
     */
    readonly sourceInstanceTier: string;
    /**
     * The backup state.
     */
    readonly state: string;
    /**
     * The size of the storage used by the backup. As backups share storage, this number is expected to change with backup creation/deletion.
     */
    readonly storageBytes: string;
}

export function getBackupOutput(args: GetBackupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupResult> {
    return pulumi.output(args).apply(a => getBackup(a, opts))
}

export interface GetBackupOutputArgs {
    backupId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
