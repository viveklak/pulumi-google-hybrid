// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the specified instance.
 */
export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:remotebuildexecution/v1alpha:getInstance", {
        "instanceId": args.instanceId,
        "project": args.project,
    }, opts);
}

export interface GetInstanceArgs {
    instanceId: string;
    project?: string;
}

export interface GetInstanceResult {
    /**
     * The policy to define whether or not RBE features can be used or how they can be used.
     */
    readonly featurePolicy: outputs.remotebuildexecution.v1alpha.GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyResponse;
    /**
     * The location is a GCP region. Currently only `us-central1` is supported.
     */
    readonly location: string;
    /**
     * Whether stack driver logging is enabled for the instance.
     */
    readonly loggingEnabled: boolean;
    /**
     * Instance resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`. Name should not be populated when creating an instance since it is provided in the `instance_id` field.
     */
    readonly name: string;
    /**
     * State of the instance.
     */
    readonly state: string;
}

export function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult> {
    return pulumi.output(args).apply(a => getInstance(a, opts))
}

export interface GetInstanceOutputArgs {
    instanceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
