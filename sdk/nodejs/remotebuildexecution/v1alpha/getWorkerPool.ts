// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the specified worker pool.
 */
export function getWorkerPool(args: GetWorkerPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkerPoolResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:remotebuildexecution/v1alpha:getWorkerPool", {
        "instanceId": args.instanceId,
        "project": args.project,
        "workerpoolId": args.workerpoolId,
    }, opts);
}

export interface GetWorkerPoolArgs {
    instanceId: string;
    project?: string;
    workerpoolId: string;
}

export interface GetWorkerPoolResult {
    /**
     * The autoscale policy to apply on a pool.
     */
    readonly autoscale: outputs.remotebuildexecution.v1alpha.GoogleDevtoolsRemotebuildexecutionAdminV1alphaAutoscaleResponse;
    /**
     * Channel specifies the release channel of the pool.
     */
    readonly channel: string;
    /**
     * WorkerPool resource name formatted as: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]/workerpools/[POOL_ID]`. name should not be populated when creating a worker pool since it is provided in the `poolId` field.
     */
    readonly name: string;
    /**
     * State of the worker pool.
     */
    readonly state: string;
    /**
     * Specifies the properties, such as machine type and disk size, used for creating workers in a worker pool.
     */
    readonly workerConfig: outputs.remotebuildexecution.v1alpha.GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigResponse;
    /**
     * The desired number of workers in the worker pool. Must be a value between 0 and 15000.
     */
    readonly workerCount: string;
}

export function getWorkerPoolOutput(args: GetWorkerPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkerPoolResult> {
    return pulumi.output(args).apply(a => getWorkerPool(a, opts))
}

export interface GetWorkerPoolOutputArgs {
    instanceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    workerpoolId: pulumi.Input<string>;
}
