// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new Uptime check configuration.
 */
export class UptimeCheckConfig extends pulumi.CustomResource {
    /**
     * Get an existing UptimeCheckConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UptimeCheckConfig {
        return new UptimeCheckConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-hybrid:monitoring/v3:UptimeCheckConfig';

    /**
     * Returns true if the given object is an instance of UptimeCheckConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UptimeCheckConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UptimeCheckConfig.__pulumiType;
    }

    /**
     * The type of checkers to use to execute the Uptime check.
     */
    public readonly checkerType!: pulumi.Output<string>;
    /**
     * The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.
     */
    public readonly contentMatchers!: pulumi.Output<outputs.monitoring.v3.ContentMatcherResponse[]>;
    /**
     * A human-friendly name for the Uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Contains information needed to make an HTTP or HTTPS check.
     */
    public readonly httpCheck!: pulumi.Output<outputs.monitoring.v3.HttpCheckResponse>;
    /**
     * The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.
     */
    public readonly internalCheckers!: pulumi.Output<outputs.monitoring.v3.InternalCheckerResponse[]>;
    /**
     * If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.
     */
    public readonly isInternal!: pulumi.Output<boolean>;
    /**
     * The monitored resource (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The following monitored resource types are valid for this field: uptime_url, gce_instance, gae_app, aws_ec2_instance, aws_elb_load_balancer k8s_service servicedirectory_service
     */
    public readonly monitoredResource!: pulumi.Output<outputs.monitoring.v3.MonitoredResourceResponse>;
    /**
     * A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.
     */
    public readonly period!: pulumi.Output<string>;
    /**
     * The group resource associated with the configuration.
     */
    public readonly resourceGroup!: pulumi.Output<outputs.monitoring.v3.ResourceGroupResponse>;
    /**
     * The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.
     */
    public readonly selectedRegions!: pulumi.Output<string[]>;
    /**
     * Contains information needed to make a TCP check.
     */
    public readonly tcpCheck!: pulumi.Output<outputs.monitoring.v3.TcpCheckResponse>;
    /**
     * The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.
     */
    public readonly timeout!: pulumi.Output<string>;

    /**
     * Create a UptimeCheckConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UptimeCheckConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["checkerType"] = args ? args.checkerType : undefined;
            resourceInputs["contentMatchers"] = args ? args.contentMatchers : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["httpCheck"] = args ? args.httpCheck : undefined;
            resourceInputs["internalCheckers"] = args ? args.internalCheckers : undefined;
            resourceInputs["isInternal"] = args ? args.isInternal : undefined;
            resourceInputs["monitoredResource"] = args ? args.monitoredResource : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            resourceInputs["selectedRegions"] = args ? args.selectedRegions : undefined;
            resourceInputs["tcpCheck"] = args ? args.tcpCheck : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
        } else {
            resourceInputs["checkerType"] = undefined /*out*/;
            resourceInputs["contentMatchers"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["httpCheck"] = undefined /*out*/;
            resourceInputs["internalCheckers"] = undefined /*out*/;
            resourceInputs["isInternal"] = undefined /*out*/;
            resourceInputs["monitoredResource"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["period"] = undefined /*out*/;
            resourceInputs["resourceGroup"] = undefined /*out*/;
            resourceInputs["selectedRegions"] = undefined /*out*/;
            resourceInputs["tcpCheck"] = undefined /*out*/;
            resourceInputs["timeout"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UptimeCheckConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a UptimeCheckConfig resource.
 */
export interface UptimeCheckConfigArgs {
    /**
     * The type of checkers to use to execute the Uptime check.
     */
    checkerType?: pulumi.Input<enums.monitoring.v3.UptimeCheckConfigCheckerType>;
    /**
     * The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.
     */
    contentMatchers?: pulumi.Input<pulumi.Input<inputs.monitoring.v3.ContentMatcherArgs>[]>;
    /**
     * A human-friendly name for the Uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Contains information needed to make an HTTP or HTTPS check.
     */
    httpCheck?: pulumi.Input<inputs.monitoring.v3.HttpCheckArgs>;
    /**
     * The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.
     */
    internalCheckers?: pulumi.Input<pulumi.Input<inputs.monitoring.v3.InternalCheckerArgs>[]>;
    /**
     * If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.
     */
    isInternal?: pulumi.Input<boolean>;
    /**
     * The monitored resource (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The following monitored resource types are valid for this field: uptime_url, gce_instance, gae_app, aws_ec2_instance, aws_elb_load_balancer k8s_service servicedirectory_service
     */
    monitoredResource?: pulumi.Input<inputs.monitoring.v3.MonitoredResourceArgs>;
    /**
     * A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.
     */
    name?: pulumi.Input<string>;
    /**
     * How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.
     */
    period?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The group resource associated with the configuration.
     */
    resourceGroup?: pulumi.Input<inputs.monitoring.v3.ResourceGroupArgs>;
    /**
     * The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.
     */
    selectedRegions?: pulumi.Input<pulumi.Input<enums.monitoring.v3.UptimeCheckConfigSelectedRegionsItem>[]>;
    /**
     * Contains information needed to make a TCP check.
     */
    tcpCheck?: pulumi.Input<inputs.monitoring.v3.TcpCheckArgs>;
    /**
     * The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.
     */
    timeout?: pulumi.Input<string>;
}
