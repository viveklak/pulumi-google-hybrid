// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Get a ServiceLevelObjective by name.
 */
export function getServiceLevelObjective(args: GetServiceLevelObjectiveArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceLevelObjectiveResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:monitoring/v3:getServiceLevelObjective", {
        "serviceId": args.serviceId,
        "serviceLevelObjectiveId": args.serviceLevelObjectiveId,
        "v3Id": args.v3Id,
        "v3Id1": args.v3Id1,
        "view": args.view,
    }, opts);
}

export interface GetServiceLevelObjectiveArgs {
    serviceId: string;
    serviceLevelObjectiveId: string;
    v3Id: string;
    v3Id1: string;
    view?: string;
}

export interface GetServiceLevelObjectiveResult {
    /**
     * A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
     */
    readonly calendarPeriod: string;
    /**
     * Name used for UI elements listing this SLO.
     */
    readonly displayName: string;
    /**
     * The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
     */
    readonly goal: number;
    /**
     * Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME] 
     */
    readonly name: string;
    /**
     * A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
     */
    readonly rollingPeriod: string;
    /**
     * The definition of good service, used to measure and calculate the quality of the Service's performance with respect to a single aspect of service quality.
     */
    readonly serviceLevelIndicator: outputs.monitoring.v3.ServiceLevelIndicatorResponse;
    /**
     * Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     */
    readonly userLabels: {[key: string]: string};
}

export function getServiceLevelObjectiveOutput(args: GetServiceLevelObjectiveOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceLevelObjectiveResult> {
    return pulumi.output(args).apply(a => getServiceLevelObjective(a, opts))
}

export interface GetServiceLevelObjectiveOutputArgs {
    serviceId: pulumi.Input<string>;
    serviceLevelObjectiveId: pulumi.Input<string>;
    v3Id: pulumi.Input<string>;
    v3Id1: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}
