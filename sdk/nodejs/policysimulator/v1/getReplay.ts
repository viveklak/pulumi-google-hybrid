// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Gets the specified Replay. Each `Replay` is available for at least 7 days.
 */
export function getReplay(args: GetReplayArgs, opts?: pulumi.InvokeOptions): Promise<GetReplayResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-hybrid:policysimulator/v1:getReplay", {
        "location": args.location,
        "project": args.project,
        "replayId": args.replayId,
    }, opts);
}

export interface GetReplayArgs {
    location: string;
    project?: string;
    replayId: string;
}

export interface GetReplayResult {
    /**
     * The configuration used for the `Replay`.
     */
    readonly config: outputs.policysimulator.v1.GoogleCloudPolicysimulatorV1ReplayConfigResponse;
    /**
     * The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
     */
    readonly name: string;
    /**
     * Summary statistics about the replayed log entries.
     */
    readonly resultsSummary: outputs.policysimulator.v1.GoogleCloudPolicysimulatorV1ReplayResultsSummaryResponse;
    /**
     * The current state of the `Replay`.
     */
    readonly state: string;
}

export function getReplayOutput(args: GetReplayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReplayResult> {
    return pulumi.output(args).apply(a => getReplay(a, opts))
}

export interface GetReplayOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    replayId: pulumi.Input<string>;
}
