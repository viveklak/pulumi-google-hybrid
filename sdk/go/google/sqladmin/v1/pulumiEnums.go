// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The unit that 'retained_backups' represents.
type BackupRetentionSettingsRetentionUnit string

const (
	// Backup retention unit is unspecified, will be treated as COUNT.
	BackupRetentionSettingsRetentionUnitRetentionUnitUnspecified = BackupRetentionSettingsRetentionUnit("RETENTION_UNIT_UNSPECIFIED")
	// Retention will be by count, eg. "retain the most recent 7 backups".
	BackupRetentionSettingsRetentionUnitCount = BackupRetentionSettingsRetentionUnit("COUNT")
)

func (BackupRetentionSettingsRetentionUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRetentionSettingsRetentionUnit)(nil)).Elem()
}

func (e BackupRetentionSettingsRetentionUnit) ToBackupRetentionSettingsRetentionUnitOutput() BackupRetentionSettingsRetentionUnitOutput {
	return pulumi.ToOutput(e).(BackupRetentionSettingsRetentionUnitOutput)
}

func (e BackupRetentionSettingsRetentionUnit) ToBackupRetentionSettingsRetentionUnitOutputWithContext(ctx context.Context) BackupRetentionSettingsRetentionUnitOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackupRetentionSettingsRetentionUnitOutput)
}

func (e BackupRetentionSettingsRetentionUnit) ToBackupRetentionSettingsRetentionUnitPtrOutput() BackupRetentionSettingsRetentionUnitPtrOutput {
	return e.ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(context.Background())
}

func (e BackupRetentionSettingsRetentionUnit) ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(ctx context.Context) BackupRetentionSettingsRetentionUnitPtrOutput {
	return BackupRetentionSettingsRetentionUnit(e).ToBackupRetentionSettingsRetentionUnitOutputWithContext(ctx).ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(ctx)
}

func (e BackupRetentionSettingsRetentionUnit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRetentionSettingsRetentionUnit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRetentionSettingsRetentionUnit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupRetentionSettingsRetentionUnit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackupRetentionSettingsRetentionUnitOutput struct{ *pulumi.OutputState }

func (BackupRetentionSettingsRetentionUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRetentionSettingsRetentionUnit)(nil)).Elem()
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToBackupRetentionSettingsRetentionUnitOutput() BackupRetentionSettingsRetentionUnitOutput {
	return o
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToBackupRetentionSettingsRetentionUnitOutputWithContext(ctx context.Context) BackupRetentionSettingsRetentionUnitOutput {
	return o
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToBackupRetentionSettingsRetentionUnitPtrOutput() BackupRetentionSettingsRetentionUnitPtrOutput {
	return o.ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(context.Background())
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(ctx context.Context) BackupRetentionSettingsRetentionUnitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupRetentionSettingsRetentionUnit) *BackupRetentionSettingsRetentionUnit {
		return &v
	}).(BackupRetentionSettingsRetentionUnitPtrOutput)
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupRetentionSettingsRetentionUnit) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupRetentionSettingsRetentionUnitOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupRetentionSettingsRetentionUnit) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackupRetentionSettingsRetentionUnitPtrOutput struct{ *pulumi.OutputState }

func (BackupRetentionSettingsRetentionUnitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupRetentionSettingsRetentionUnit)(nil)).Elem()
}

func (o BackupRetentionSettingsRetentionUnitPtrOutput) ToBackupRetentionSettingsRetentionUnitPtrOutput() BackupRetentionSettingsRetentionUnitPtrOutput {
	return o
}

func (o BackupRetentionSettingsRetentionUnitPtrOutput) ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(ctx context.Context) BackupRetentionSettingsRetentionUnitPtrOutput {
	return o
}

func (o BackupRetentionSettingsRetentionUnitPtrOutput) Elem() BackupRetentionSettingsRetentionUnitOutput {
	return o.ApplyT(func(v *BackupRetentionSettingsRetentionUnit) BackupRetentionSettingsRetentionUnit {
		if v != nil {
			return *v
		}
		var ret BackupRetentionSettingsRetentionUnit
		return ret
	}).(BackupRetentionSettingsRetentionUnitOutput)
}

func (o BackupRetentionSettingsRetentionUnitPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupRetentionSettingsRetentionUnitPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackupRetentionSettingsRetentionUnit) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackupRetentionSettingsRetentionUnitInput is an input type that accepts BackupRetentionSettingsRetentionUnitArgs and BackupRetentionSettingsRetentionUnitOutput values.
// You can construct a concrete instance of `BackupRetentionSettingsRetentionUnitInput` via:
//
//          BackupRetentionSettingsRetentionUnitArgs{...}
type BackupRetentionSettingsRetentionUnitInput interface {
	pulumi.Input

	ToBackupRetentionSettingsRetentionUnitOutput() BackupRetentionSettingsRetentionUnitOutput
	ToBackupRetentionSettingsRetentionUnitOutputWithContext(context.Context) BackupRetentionSettingsRetentionUnitOutput
}

var backupRetentionSettingsRetentionUnitPtrType = reflect.TypeOf((**BackupRetentionSettingsRetentionUnit)(nil)).Elem()

type BackupRetentionSettingsRetentionUnitPtrInput interface {
	pulumi.Input

	ToBackupRetentionSettingsRetentionUnitPtrOutput() BackupRetentionSettingsRetentionUnitPtrOutput
	ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(context.Context) BackupRetentionSettingsRetentionUnitPtrOutput
}

type backupRetentionSettingsRetentionUnitPtr string

func BackupRetentionSettingsRetentionUnitPtr(v string) BackupRetentionSettingsRetentionUnitPtrInput {
	return (*backupRetentionSettingsRetentionUnitPtr)(&v)
}

func (*backupRetentionSettingsRetentionUnitPtr) ElementType() reflect.Type {
	return backupRetentionSettingsRetentionUnitPtrType
}

func (in *backupRetentionSettingsRetentionUnitPtr) ToBackupRetentionSettingsRetentionUnitPtrOutput() BackupRetentionSettingsRetentionUnitPtrOutput {
	return pulumi.ToOutput(in).(BackupRetentionSettingsRetentionUnitPtrOutput)
}

func (in *backupRetentionSettingsRetentionUnitPtr) ToBackupRetentionSettingsRetentionUnitPtrOutputWithContext(ctx context.Context) BackupRetentionSettingsRetentionUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackupRetentionSettingsRetentionUnitPtrOutput)
}

// Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
type BackupRunBackupKind string

const (
	// This is an unknown BackupKind.
	BackupRunBackupKindSqlBackupKindUnspecified = BackupRunBackupKind("SQL_BACKUP_KIND_UNSPECIFIED")
	// The snapshot based backups
	BackupRunBackupKindSnapshot = BackupRunBackupKind("SNAPSHOT")
	// Physical backups
	BackupRunBackupKindPhysical = BackupRunBackupKind("PHYSICAL")
)

func (BackupRunBackupKind) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRunBackupKind)(nil)).Elem()
}

func (e BackupRunBackupKind) ToBackupRunBackupKindOutput() BackupRunBackupKindOutput {
	return pulumi.ToOutput(e).(BackupRunBackupKindOutput)
}

func (e BackupRunBackupKind) ToBackupRunBackupKindOutputWithContext(ctx context.Context) BackupRunBackupKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackupRunBackupKindOutput)
}

func (e BackupRunBackupKind) ToBackupRunBackupKindPtrOutput() BackupRunBackupKindPtrOutput {
	return e.ToBackupRunBackupKindPtrOutputWithContext(context.Background())
}

func (e BackupRunBackupKind) ToBackupRunBackupKindPtrOutputWithContext(ctx context.Context) BackupRunBackupKindPtrOutput {
	return BackupRunBackupKind(e).ToBackupRunBackupKindOutputWithContext(ctx).ToBackupRunBackupKindPtrOutputWithContext(ctx)
}

func (e BackupRunBackupKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunBackupKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunBackupKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupRunBackupKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackupRunBackupKindOutput struct{ *pulumi.OutputState }

func (BackupRunBackupKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRunBackupKind)(nil)).Elem()
}

func (o BackupRunBackupKindOutput) ToBackupRunBackupKindOutput() BackupRunBackupKindOutput {
	return o
}

func (o BackupRunBackupKindOutput) ToBackupRunBackupKindOutputWithContext(ctx context.Context) BackupRunBackupKindOutput {
	return o
}

func (o BackupRunBackupKindOutput) ToBackupRunBackupKindPtrOutput() BackupRunBackupKindPtrOutput {
	return o.ToBackupRunBackupKindPtrOutputWithContext(context.Background())
}

func (o BackupRunBackupKindOutput) ToBackupRunBackupKindPtrOutputWithContext(ctx context.Context) BackupRunBackupKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupRunBackupKind) *BackupRunBackupKind {
		return &v
	}).(BackupRunBackupKindPtrOutput)
}

func (o BackupRunBackupKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackupRunBackupKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupRunBackupKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackupRunBackupKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupRunBackupKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupRunBackupKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackupRunBackupKindPtrOutput struct{ *pulumi.OutputState }

func (BackupRunBackupKindPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupRunBackupKind)(nil)).Elem()
}

func (o BackupRunBackupKindPtrOutput) ToBackupRunBackupKindPtrOutput() BackupRunBackupKindPtrOutput {
	return o
}

func (o BackupRunBackupKindPtrOutput) ToBackupRunBackupKindPtrOutputWithContext(ctx context.Context) BackupRunBackupKindPtrOutput {
	return o
}

func (o BackupRunBackupKindPtrOutput) Elem() BackupRunBackupKindOutput {
	return o.ApplyT(func(v *BackupRunBackupKind) BackupRunBackupKind {
		if v != nil {
			return *v
		}
		var ret BackupRunBackupKind
		return ret
	}).(BackupRunBackupKindOutput)
}

func (o BackupRunBackupKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupRunBackupKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackupRunBackupKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackupRunBackupKindInput is an input type that accepts BackupRunBackupKindArgs and BackupRunBackupKindOutput values.
// You can construct a concrete instance of `BackupRunBackupKindInput` via:
//
//          BackupRunBackupKindArgs{...}
type BackupRunBackupKindInput interface {
	pulumi.Input

	ToBackupRunBackupKindOutput() BackupRunBackupKindOutput
	ToBackupRunBackupKindOutputWithContext(context.Context) BackupRunBackupKindOutput
}

var backupRunBackupKindPtrType = reflect.TypeOf((**BackupRunBackupKind)(nil)).Elem()

type BackupRunBackupKindPtrInput interface {
	pulumi.Input

	ToBackupRunBackupKindPtrOutput() BackupRunBackupKindPtrOutput
	ToBackupRunBackupKindPtrOutputWithContext(context.Context) BackupRunBackupKindPtrOutput
}

type backupRunBackupKindPtr string

func BackupRunBackupKindPtr(v string) BackupRunBackupKindPtrInput {
	return (*backupRunBackupKindPtr)(&v)
}

func (*backupRunBackupKindPtr) ElementType() reflect.Type {
	return backupRunBackupKindPtrType
}

func (in *backupRunBackupKindPtr) ToBackupRunBackupKindPtrOutput() BackupRunBackupKindPtrOutput {
	return pulumi.ToOutput(in).(BackupRunBackupKindPtrOutput)
}

func (in *backupRunBackupKindPtr) ToBackupRunBackupKindPtrOutputWithContext(ctx context.Context) BackupRunBackupKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackupRunBackupKindPtrOutput)
}

// The status of this run.
type BackupRunStatus string

const (
	// The status of the run is unknown.
	BackupRunStatusSqlBackupRunStatusUnspecified = BackupRunStatus("SQL_BACKUP_RUN_STATUS_UNSPECIFIED")
	// The backup operation was enqueued.
	BackupRunStatusEnqueued = BackupRunStatus("ENQUEUED")
	// The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.
	BackupRunStatusOverdue = BackupRunStatus("OVERDUE")
	// The backup is in progress.
	BackupRunStatusRunning = BackupRunStatus("RUNNING")
	// The backup failed.
	BackupRunStatusFailed = BackupRunStatus("FAILED")
	// The backup was successful.
	BackupRunStatusSuccessful = BackupRunStatus("SUCCESSFUL")
	// The backup was skipped (without problems) for a given backup window. Example: Instance was idle.
	BackupRunStatusSkipped = BackupRunStatus("SKIPPED")
	// The backup is about to be deleted.
	BackupRunStatusDeletionPending = BackupRunStatus("DELETION_PENDING")
	// The backup deletion failed.
	BackupRunStatusDeletionFailed = BackupRunStatus("DELETION_FAILED")
	// The backup has been deleted.
	BackupRunStatusDeleted = BackupRunStatus("DELETED")
)

// The type of this run; can be either "AUTOMATED" or "ON_DEMAND". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
type BackupRunType string

const (
	// This is an unknown BackupRun type.
	BackupRunTypeSqlBackupRunTypeUnspecified = BackupRunType("SQL_BACKUP_RUN_TYPE_UNSPECIFIED")
	// The backup schedule automatically triggers a backup.
	BackupRunTypeAutomated = BackupRunType("AUTOMATED")
	// The user manually triggers a backup.
	BackupRunTypeOnDemand = BackupRunType("ON_DEMAND")
)

func (BackupRunType) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRunType)(nil)).Elem()
}

func (e BackupRunType) ToBackupRunTypeOutput() BackupRunTypeOutput {
	return pulumi.ToOutput(e).(BackupRunTypeOutput)
}

func (e BackupRunType) ToBackupRunTypeOutputWithContext(ctx context.Context) BackupRunTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackupRunTypeOutput)
}

func (e BackupRunType) ToBackupRunTypePtrOutput() BackupRunTypePtrOutput {
	return e.ToBackupRunTypePtrOutputWithContext(context.Background())
}

func (e BackupRunType) ToBackupRunTypePtrOutputWithContext(ctx context.Context) BackupRunTypePtrOutput {
	return BackupRunType(e).ToBackupRunTypeOutputWithContext(ctx).ToBackupRunTypePtrOutputWithContext(ctx)
}

func (e BackupRunType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupRunType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackupRunTypeOutput struct{ *pulumi.OutputState }

func (BackupRunTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupRunType)(nil)).Elem()
}

func (o BackupRunTypeOutput) ToBackupRunTypeOutput() BackupRunTypeOutput {
	return o
}

func (o BackupRunTypeOutput) ToBackupRunTypeOutputWithContext(ctx context.Context) BackupRunTypeOutput {
	return o
}

func (o BackupRunTypeOutput) ToBackupRunTypePtrOutput() BackupRunTypePtrOutput {
	return o.ToBackupRunTypePtrOutputWithContext(context.Background())
}

func (o BackupRunTypeOutput) ToBackupRunTypePtrOutputWithContext(ctx context.Context) BackupRunTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupRunType) *BackupRunType {
		return &v
	}).(BackupRunTypePtrOutput)
}

func (o BackupRunTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackupRunTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupRunType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackupRunTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupRunTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupRunType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackupRunTypePtrOutput struct{ *pulumi.OutputState }

func (BackupRunTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupRunType)(nil)).Elem()
}

func (o BackupRunTypePtrOutput) ToBackupRunTypePtrOutput() BackupRunTypePtrOutput {
	return o
}

func (o BackupRunTypePtrOutput) ToBackupRunTypePtrOutputWithContext(ctx context.Context) BackupRunTypePtrOutput {
	return o
}

func (o BackupRunTypePtrOutput) Elem() BackupRunTypeOutput {
	return o.ApplyT(func(v *BackupRunType) BackupRunType {
		if v != nil {
			return *v
		}
		var ret BackupRunType
		return ret
	}).(BackupRunTypeOutput)
}

func (o BackupRunTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupRunTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackupRunType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackupRunTypeInput is an input type that accepts BackupRunTypeArgs and BackupRunTypeOutput values.
// You can construct a concrete instance of `BackupRunTypeInput` via:
//
//          BackupRunTypeArgs{...}
type BackupRunTypeInput interface {
	pulumi.Input

	ToBackupRunTypeOutput() BackupRunTypeOutput
	ToBackupRunTypeOutputWithContext(context.Context) BackupRunTypeOutput
}

var backupRunTypePtrType = reflect.TypeOf((**BackupRunType)(nil)).Elem()

type BackupRunTypePtrInput interface {
	pulumi.Input

	ToBackupRunTypePtrOutput() BackupRunTypePtrOutput
	ToBackupRunTypePtrOutputWithContext(context.Context) BackupRunTypePtrOutput
}

type backupRunTypePtr string

func BackupRunTypePtr(v string) BackupRunTypePtrInput {
	return (*backupRunTypePtr)(&v)
}

func (*backupRunTypePtr) ElementType() reflect.Type {
	return backupRunTypePtrType
}

func (in *backupRunTypePtr) ToBackupRunTypePtrOutput() BackupRunTypePtrOutput {
	return pulumi.ToOutput(in).(BackupRunTypePtrOutput)
}

func (in *backupRunTypePtr) ToBackupRunTypePtrOutputWithContext(ctx context.Context) BackupRunTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackupRunTypePtrOutput)
}

// The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.
type InstanceBackendType string

const (
	// This is an unknown backend type for instance.
	InstanceBackendTypeSqlBackendTypeUnspecified = InstanceBackendType("SQL_BACKEND_TYPE_UNSPECIFIED")
	// V1 speckle instance.
	InstanceBackendTypeFirstGen = InstanceBackendType("FIRST_GEN")
	// V2 speckle instance.
	InstanceBackendTypeSecondGen = InstanceBackendType("SECOND_GEN")
	// On premises instance.
	InstanceBackendTypeExternal = InstanceBackendType("EXTERNAL")
)

func (InstanceBackendType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackendType)(nil)).Elem()
}

func (e InstanceBackendType) ToInstanceBackendTypeOutput() InstanceBackendTypeOutput {
	return pulumi.ToOutput(e).(InstanceBackendTypeOutput)
}

func (e InstanceBackendType) ToInstanceBackendTypeOutputWithContext(ctx context.Context) InstanceBackendTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceBackendTypeOutput)
}

func (e InstanceBackendType) ToInstanceBackendTypePtrOutput() InstanceBackendTypePtrOutput {
	return e.ToInstanceBackendTypePtrOutputWithContext(context.Background())
}

func (e InstanceBackendType) ToInstanceBackendTypePtrOutputWithContext(ctx context.Context) InstanceBackendTypePtrOutput {
	return InstanceBackendType(e).ToInstanceBackendTypeOutputWithContext(ctx).ToInstanceBackendTypePtrOutputWithContext(ctx)
}

func (e InstanceBackendType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceBackendType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceBackendType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceBackendType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceBackendTypeOutput struct{ *pulumi.OutputState }

func (InstanceBackendTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackendType)(nil)).Elem()
}

func (o InstanceBackendTypeOutput) ToInstanceBackendTypeOutput() InstanceBackendTypeOutput {
	return o
}

func (o InstanceBackendTypeOutput) ToInstanceBackendTypeOutputWithContext(ctx context.Context) InstanceBackendTypeOutput {
	return o
}

func (o InstanceBackendTypeOutput) ToInstanceBackendTypePtrOutput() InstanceBackendTypePtrOutput {
	return o.ToInstanceBackendTypePtrOutputWithContext(context.Background())
}

func (o InstanceBackendTypeOutput) ToInstanceBackendTypePtrOutputWithContext(ctx context.Context) InstanceBackendTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackendType) *InstanceBackendType {
		return &v
	}).(InstanceBackendTypePtrOutput)
}

func (o InstanceBackendTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceBackendTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceBackendType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceBackendTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceBackendTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceBackendType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceBackendTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceBackendTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackendType)(nil)).Elem()
}

func (o InstanceBackendTypePtrOutput) ToInstanceBackendTypePtrOutput() InstanceBackendTypePtrOutput {
	return o
}

func (o InstanceBackendTypePtrOutput) ToInstanceBackendTypePtrOutputWithContext(ctx context.Context) InstanceBackendTypePtrOutput {
	return o
}

func (o InstanceBackendTypePtrOutput) Elem() InstanceBackendTypeOutput {
	return o.ApplyT(func(v *InstanceBackendType) InstanceBackendType {
		if v != nil {
			return *v
		}
		var ret InstanceBackendType
		return ret
	}).(InstanceBackendTypeOutput)
}

func (o InstanceBackendTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceBackendTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceBackendType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceBackendTypeInput is an input type that accepts InstanceBackendTypeArgs and InstanceBackendTypeOutput values.
// You can construct a concrete instance of `InstanceBackendTypeInput` via:
//
//          InstanceBackendTypeArgs{...}
type InstanceBackendTypeInput interface {
	pulumi.Input

	ToInstanceBackendTypeOutput() InstanceBackendTypeOutput
	ToInstanceBackendTypeOutputWithContext(context.Context) InstanceBackendTypeOutput
}

var instanceBackendTypePtrType = reflect.TypeOf((**InstanceBackendType)(nil)).Elem()

type InstanceBackendTypePtrInput interface {
	pulumi.Input

	ToInstanceBackendTypePtrOutput() InstanceBackendTypePtrOutput
	ToInstanceBackendTypePtrOutputWithContext(context.Context) InstanceBackendTypePtrOutput
}

type instanceBackendTypePtr string

func InstanceBackendTypePtr(v string) InstanceBackendTypePtrInput {
	return (*instanceBackendTypePtr)(&v)
}

func (*instanceBackendTypePtr) ElementType() reflect.Type {
	return instanceBackendTypePtrType
}

func (in *instanceBackendTypePtr) ToInstanceBackendTypePtrOutput() InstanceBackendTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceBackendTypePtrOutput)
}

func (in *instanceBackendTypePtr) ToInstanceBackendTypePtrOutputWithContext(ctx context.Context) InstanceBackendTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceBackendTypePtrOutput)
}

// The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
type InstanceDatabaseVersion string

const (
	// This is an unknown database version.
	InstanceDatabaseVersionSqlDatabaseVersionUnspecified = InstanceDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED")
	// The database version is MySQL 5.1.
	InstanceDatabaseVersionMysql51 = InstanceDatabaseVersion("MYSQL_5_1")
	// The database version is MySQL 5.5.
	InstanceDatabaseVersionMysql55 = InstanceDatabaseVersion("MYSQL_5_5")
	// The database version is MySQL 5.6.
	InstanceDatabaseVersionMysql56 = InstanceDatabaseVersion("MYSQL_5_6")
	// The database version is MySQL 5.7.
	InstanceDatabaseVersionMysql57 = InstanceDatabaseVersion("MYSQL_5_7")
	// The database version is PostgreSQL 9.6.
	InstanceDatabaseVersionPostgres96 = InstanceDatabaseVersion("POSTGRES_9_6")
	// The database version is PostgreSQL 11.
	InstanceDatabaseVersionPostgres11 = InstanceDatabaseVersion("POSTGRES_11")
	// The database version is SQL Server 2017 Standard.
	InstanceDatabaseVersionSqlserver2017Standard = InstanceDatabaseVersion("SQLSERVER_2017_STANDARD")
	// The database version is SQL Server 2017 Enterprise.
	InstanceDatabaseVersionSqlserver2017Enterprise = InstanceDatabaseVersion("SQLSERVER_2017_ENTERPRISE")
	// The database version is SQL Server 2017 Express.
	InstanceDatabaseVersionSqlserver2017Express = InstanceDatabaseVersion("SQLSERVER_2017_EXPRESS")
	// The database version is SQL Server 2017 Web.
	InstanceDatabaseVersionSqlserver2017Web = InstanceDatabaseVersion("SQLSERVER_2017_WEB")
	// The database version is PostgreSQL 10.
	InstanceDatabaseVersionPostgres10 = InstanceDatabaseVersion("POSTGRES_10")
	// The database version is PostgreSQL 12.
	InstanceDatabaseVersionPostgres12 = InstanceDatabaseVersion("POSTGRES_12")
	// The database version is MySQL 8.
	InstanceDatabaseVersionMysql80 = InstanceDatabaseVersion("MYSQL_8_0")
	// The database major version is MySQL 8.0 and the minor version is 18.
	InstanceDatabaseVersionMysql8018 = InstanceDatabaseVersion("MYSQL_8_0_18")
	// The database major version is MySQL 8.0 and the minor version is 26.
	InstanceDatabaseVersionMysql8026 = InstanceDatabaseVersion("MYSQL_8_0_26")
	// The database version is PostgreSQL 13.
	InstanceDatabaseVersionPostgres13 = InstanceDatabaseVersion("POSTGRES_13")
	// The database version is PostgreSQL 14.
	InstanceDatabaseVersionPostgres14 = InstanceDatabaseVersion("POSTGRES_14")
	// The database version is SQL Server 2019 Standard.
	InstanceDatabaseVersionSqlserver2019Standard = InstanceDatabaseVersion("SQLSERVER_2019_STANDARD")
	// The database version is SQL Server 2019 Enterprise.
	InstanceDatabaseVersionSqlserver2019Enterprise = InstanceDatabaseVersion("SQLSERVER_2019_ENTERPRISE")
	// The database version is SQL Server 2019 Express.
	InstanceDatabaseVersionSqlserver2019Express = InstanceDatabaseVersion("SQLSERVER_2019_EXPRESS")
	// The database version is SQL Server 2019 Web.
	InstanceDatabaseVersionSqlserver2019Web = InstanceDatabaseVersion("SQLSERVER_2019_WEB")
)

func (InstanceDatabaseVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDatabaseVersion)(nil)).Elem()
}

func (e InstanceDatabaseVersion) ToInstanceDatabaseVersionOutput() InstanceDatabaseVersionOutput {
	return pulumi.ToOutput(e).(InstanceDatabaseVersionOutput)
}

func (e InstanceDatabaseVersion) ToInstanceDatabaseVersionOutputWithContext(ctx context.Context) InstanceDatabaseVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceDatabaseVersionOutput)
}

func (e InstanceDatabaseVersion) ToInstanceDatabaseVersionPtrOutput() InstanceDatabaseVersionPtrOutput {
	return e.ToInstanceDatabaseVersionPtrOutputWithContext(context.Background())
}

func (e InstanceDatabaseVersion) ToInstanceDatabaseVersionPtrOutputWithContext(ctx context.Context) InstanceDatabaseVersionPtrOutput {
	return InstanceDatabaseVersion(e).ToInstanceDatabaseVersionOutputWithContext(ctx).ToInstanceDatabaseVersionPtrOutputWithContext(ctx)
}

func (e InstanceDatabaseVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceDatabaseVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceDatabaseVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceDatabaseVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceDatabaseVersionOutput struct{ *pulumi.OutputState }

func (InstanceDatabaseVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDatabaseVersion)(nil)).Elem()
}

func (o InstanceDatabaseVersionOutput) ToInstanceDatabaseVersionOutput() InstanceDatabaseVersionOutput {
	return o
}

func (o InstanceDatabaseVersionOutput) ToInstanceDatabaseVersionOutputWithContext(ctx context.Context) InstanceDatabaseVersionOutput {
	return o
}

func (o InstanceDatabaseVersionOutput) ToInstanceDatabaseVersionPtrOutput() InstanceDatabaseVersionPtrOutput {
	return o.ToInstanceDatabaseVersionPtrOutputWithContext(context.Background())
}

func (o InstanceDatabaseVersionOutput) ToInstanceDatabaseVersionPtrOutputWithContext(ctx context.Context) InstanceDatabaseVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDatabaseVersion) *InstanceDatabaseVersion {
		return &v
	}).(InstanceDatabaseVersionPtrOutput)
}

func (o InstanceDatabaseVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceDatabaseVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceDatabaseVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceDatabaseVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceDatabaseVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceDatabaseVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceDatabaseVersionPtrOutput struct{ *pulumi.OutputState }

func (InstanceDatabaseVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDatabaseVersion)(nil)).Elem()
}

func (o InstanceDatabaseVersionPtrOutput) ToInstanceDatabaseVersionPtrOutput() InstanceDatabaseVersionPtrOutput {
	return o
}

func (o InstanceDatabaseVersionPtrOutput) ToInstanceDatabaseVersionPtrOutputWithContext(ctx context.Context) InstanceDatabaseVersionPtrOutput {
	return o
}

func (o InstanceDatabaseVersionPtrOutput) Elem() InstanceDatabaseVersionOutput {
	return o.ApplyT(func(v *InstanceDatabaseVersion) InstanceDatabaseVersion {
		if v != nil {
			return *v
		}
		var ret InstanceDatabaseVersion
		return ret
	}).(InstanceDatabaseVersionOutput)
}

func (o InstanceDatabaseVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceDatabaseVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceDatabaseVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceDatabaseVersionInput is an input type that accepts InstanceDatabaseVersionArgs and InstanceDatabaseVersionOutput values.
// You can construct a concrete instance of `InstanceDatabaseVersionInput` via:
//
//          InstanceDatabaseVersionArgs{...}
type InstanceDatabaseVersionInput interface {
	pulumi.Input

	ToInstanceDatabaseVersionOutput() InstanceDatabaseVersionOutput
	ToInstanceDatabaseVersionOutputWithContext(context.Context) InstanceDatabaseVersionOutput
}

var instanceDatabaseVersionPtrType = reflect.TypeOf((**InstanceDatabaseVersion)(nil)).Elem()

type InstanceDatabaseVersionPtrInput interface {
	pulumi.Input

	ToInstanceDatabaseVersionPtrOutput() InstanceDatabaseVersionPtrOutput
	ToInstanceDatabaseVersionPtrOutputWithContext(context.Context) InstanceDatabaseVersionPtrOutput
}

type instanceDatabaseVersionPtr string

func InstanceDatabaseVersionPtr(v string) InstanceDatabaseVersionPtrInput {
	return (*instanceDatabaseVersionPtr)(&v)
}

func (*instanceDatabaseVersionPtr) ElementType() reflect.Type {
	return instanceDatabaseVersionPtrType
}

func (in *instanceDatabaseVersionPtr) ToInstanceDatabaseVersionPtrOutput() InstanceDatabaseVersionPtrOutput {
	return pulumi.ToOutput(in).(InstanceDatabaseVersionPtrOutput)
}

func (in *instanceDatabaseVersionPtr) ToInstanceDatabaseVersionPtrOutputWithContext(ctx context.Context) InstanceDatabaseVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceDatabaseVersionPtrOutput)
}

// The instance type.
type InstanceInstanceType string

const (
	// This is an unknown Cloud SQL instance type.
	InstanceInstanceTypeSqlInstanceTypeUnspecified = InstanceInstanceType("SQL_INSTANCE_TYPE_UNSPECIFIED")
	// A regular Cloud SQL instance that is not replicating from a primary instance.
	InstanceInstanceTypeCloudSqlInstance = InstanceInstanceType("CLOUD_SQL_INSTANCE")
	// An instance running on the customer's premises that is not managed by Cloud SQL.
	InstanceInstanceTypeOnPremisesInstance = InstanceInstanceType("ON_PREMISES_INSTANCE")
	// A Cloud SQL instance acting as a read-replica.
	InstanceInstanceTypeReadReplicaInstance = InstanceInstanceType("READ_REPLICA_INSTANCE")
)

func (InstanceInstanceType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceType)(nil)).Elem()
}

func (e InstanceInstanceType) ToInstanceInstanceTypeOutput() InstanceInstanceTypeOutput {
	return pulumi.ToOutput(e).(InstanceInstanceTypeOutput)
}

func (e InstanceInstanceType) ToInstanceInstanceTypeOutputWithContext(ctx context.Context) InstanceInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceInstanceTypeOutput)
}

func (e InstanceInstanceType) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return e.ToInstanceInstanceTypePtrOutputWithContext(context.Background())
}

func (e InstanceInstanceType) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return InstanceInstanceType(e).ToInstanceInstanceTypeOutputWithContext(ctx).ToInstanceInstanceTypePtrOutputWithContext(ctx)
}

func (e InstanceInstanceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceInstanceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceInstanceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceInstanceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceInstanceTypeOutput struct{ *pulumi.OutputState }

func (InstanceInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceType)(nil)).Elem()
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypeOutput() InstanceInstanceTypeOutput {
	return o
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypeOutputWithContext(ctx context.Context) InstanceInstanceTypeOutput {
	return o
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return o.ToInstanceInstanceTypePtrOutputWithContext(context.Background())
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceInstanceType) *InstanceInstanceType {
		return &v
	}).(InstanceInstanceTypePtrOutput)
}

func (o InstanceInstanceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceInstanceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceInstanceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceInstanceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceInstanceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceInstanceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceInstanceTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceInstanceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceInstanceType)(nil)).Elem()
}

func (o InstanceInstanceTypePtrOutput) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return o
}

func (o InstanceInstanceTypePtrOutput) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return o
}

func (o InstanceInstanceTypePtrOutput) Elem() InstanceInstanceTypeOutput {
	return o.ApplyT(func(v *InstanceInstanceType) InstanceInstanceType {
		if v != nil {
			return *v
		}
		var ret InstanceInstanceType
		return ret
	}).(InstanceInstanceTypeOutput)
}

func (o InstanceInstanceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceInstanceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceInstanceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceInstanceTypeInput is an input type that accepts InstanceInstanceTypeArgs and InstanceInstanceTypeOutput values.
// You can construct a concrete instance of `InstanceInstanceTypeInput` via:
//
//          InstanceInstanceTypeArgs{...}
type InstanceInstanceTypeInput interface {
	pulumi.Input

	ToInstanceInstanceTypeOutput() InstanceInstanceTypeOutput
	ToInstanceInstanceTypeOutputWithContext(context.Context) InstanceInstanceTypeOutput
}

var instanceInstanceTypePtrType = reflect.TypeOf((**InstanceInstanceType)(nil)).Elem()

type InstanceInstanceTypePtrInput interface {
	pulumi.Input

	ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput
	ToInstanceInstanceTypePtrOutputWithContext(context.Context) InstanceInstanceTypePtrOutput
}

type instanceInstanceTypePtr string

func InstanceInstanceTypePtr(v string) InstanceInstanceTypePtrInput {
	return (*instanceInstanceTypePtr)(&v)
}

func (*instanceInstanceTypePtr) ElementType() reflect.Type {
	return instanceInstanceTypePtrType
}

func (in *instanceInstanceTypePtr) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceInstanceTypePtrOutput)
}

func (in *instanceInstanceTypePtr) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceInstanceTypePtrOutput)
}

// The current serving state of the Cloud SQL instance.
type InstanceStateEnum string

const (
	// The state of the instance is unknown.
	InstanceStateEnumSqlInstanceStateUnspecified = InstanceStateEnum("SQL_INSTANCE_STATE_UNSPECIFIED")
	// The instance is running, or has been stopped by owner.
	InstanceStateEnumRunnable = InstanceStateEnum("RUNNABLE")
	// The instance is not available, for example due to problems with billing.
	InstanceStateEnumSuspended = InstanceStateEnum("SUSPENDED")
	// The instance is being deleted.
	InstanceStateEnumPendingDelete = InstanceStateEnum("PENDING_DELETE")
	// The instance is being created.
	InstanceStateEnumPendingCreate = InstanceStateEnum("PENDING_CREATE")
	// The instance is down for maintenance.
	InstanceStateEnumMaintenance = InstanceStateEnum("MAINTENANCE")
	// The creation of the instance failed or a fatal error occurred during maintenance.
	InstanceStateEnumFailed = InstanceStateEnum("FAILED")
	// Deprecated
	InstanceStateEnumOnlineMaintenance = InstanceStateEnum("ONLINE_MAINTENANCE")
)

func (InstanceStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateEnum)(nil)).Elem()
}

func (e InstanceStateEnum) ToInstanceStateEnumOutput() InstanceStateEnumOutput {
	return pulumi.ToOutput(e).(InstanceStateEnumOutput)
}

func (e InstanceStateEnum) ToInstanceStateEnumOutputWithContext(ctx context.Context) InstanceStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceStateEnumOutput)
}

func (e InstanceStateEnum) ToInstanceStateEnumPtrOutput() InstanceStateEnumPtrOutput {
	return e.ToInstanceStateEnumPtrOutputWithContext(context.Background())
}

func (e InstanceStateEnum) ToInstanceStateEnumPtrOutputWithContext(ctx context.Context) InstanceStateEnumPtrOutput {
	return InstanceStateEnum(e).ToInstanceStateEnumOutputWithContext(ctx).ToInstanceStateEnumPtrOutputWithContext(ctx)
}

func (e InstanceStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceStateEnumOutput struct{ *pulumi.OutputState }

func (InstanceStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateEnum)(nil)).Elem()
}

func (o InstanceStateEnumOutput) ToInstanceStateEnumOutput() InstanceStateEnumOutput {
	return o
}

func (o InstanceStateEnumOutput) ToInstanceStateEnumOutputWithContext(ctx context.Context) InstanceStateEnumOutput {
	return o
}

func (o InstanceStateEnumOutput) ToInstanceStateEnumPtrOutput() InstanceStateEnumPtrOutput {
	return o.ToInstanceStateEnumPtrOutputWithContext(context.Background())
}

func (o InstanceStateEnumOutput) ToInstanceStateEnumPtrOutputWithContext(ctx context.Context) InstanceStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStateEnum) *InstanceStateEnum {
		return &v
	}).(InstanceStateEnumPtrOutput)
}

func (o InstanceStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStateEnumPtrOutput struct{ *pulumi.OutputState }

func (InstanceStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStateEnum)(nil)).Elem()
}

func (o InstanceStateEnumPtrOutput) ToInstanceStateEnumPtrOutput() InstanceStateEnumPtrOutput {
	return o
}

func (o InstanceStateEnumPtrOutput) ToInstanceStateEnumPtrOutputWithContext(ctx context.Context) InstanceStateEnumPtrOutput {
	return o
}

func (o InstanceStateEnumPtrOutput) Elem() InstanceStateEnumOutput {
	return o.ApplyT(func(v *InstanceStateEnum) InstanceStateEnum {
		if v != nil {
			return *v
		}
		var ret InstanceStateEnum
		return ret
	}).(InstanceStateEnumOutput)
}

func (o InstanceStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceStateEnumInput is an input type that accepts InstanceStateEnumArgs and InstanceStateEnumOutput values.
// You can construct a concrete instance of `InstanceStateEnumInput` via:
//
//          InstanceStateEnumArgs{...}
type InstanceStateEnumInput interface {
	pulumi.Input

	ToInstanceStateEnumOutput() InstanceStateEnumOutput
	ToInstanceStateEnumOutputWithContext(context.Context) InstanceStateEnumOutput
}

var instanceStateEnumPtrType = reflect.TypeOf((**InstanceStateEnum)(nil)).Elem()

type InstanceStateEnumPtrInput interface {
	pulumi.Input

	ToInstanceStateEnumPtrOutput() InstanceStateEnumPtrOutput
	ToInstanceStateEnumPtrOutputWithContext(context.Context) InstanceStateEnumPtrOutput
}

type instanceStateEnumPtr string

func InstanceStateEnumPtr(v string) InstanceStateEnumPtrInput {
	return (*instanceStateEnumPtr)(&v)
}

func (*instanceStateEnumPtr) ElementType() reflect.Type {
	return instanceStateEnumPtrType
}

func (in *instanceStateEnumPtr) ToInstanceStateEnumPtrOutput() InstanceStateEnumPtrOutput {
	return pulumi.ToOutput(in).(InstanceStateEnumPtrOutput)
}

func (in *instanceStateEnumPtr) ToInstanceStateEnumPtrOutputWithContext(ctx context.Context) InstanceStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceStateEnumPtrOutput)
}

type InstanceSuspensionReasonItem string

const (
	// This is an unknown suspension reason.
	InstanceSuspensionReasonItemSqlSuspensionReasonUnspecified = InstanceSuspensionReasonItem("SQL_SUSPENSION_REASON_UNSPECIFIED")
	// The instance is suspended due to billing issues (for example:, GCP account issue)
	InstanceSuspensionReasonItemBillingIssue = InstanceSuspensionReasonItem("BILLING_ISSUE")
	// The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).
	InstanceSuspensionReasonItemLegalIssue = InstanceSuspensionReasonItem("LEGAL_ISSUE")
	// The instance is causing operational issues (for example:, causing the database to crash).
	InstanceSuspensionReasonItemOperationalIssue = InstanceSuspensionReasonItem("OPERATIONAL_ISSUE")
	// The KMS key used by the instance is either revoked or denied access to
	InstanceSuspensionReasonItemKmsKeyIssue = InstanceSuspensionReasonItem("KMS_KEY_ISSUE")
)

func (InstanceSuspensionReasonItem) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSuspensionReasonItem)(nil)).Elem()
}

func (e InstanceSuspensionReasonItem) ToInstanceSuspensionReasonItemOutput() InstanceSuspensionReasonItemOutput {
	return pulumi.ToOutput(e).(InstanceSuspensionReasonItemOutput)
}

func (e InstanceSuspensionReasonItem) ToInstanceSuspensionReasonItemOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceSuspensionReasonItemOutput)
}

func (e InstanceSuspensionReasonItem) ToInstanceSuspensionReasonItemPtrOutput() InstanceSuspensionReasonItemPtrOutput {
	return e.ToInstanceSuspensionReasonItemPtrOutputWithContext(context.Background())
}

func (e InstanceSuspensionReasonItem) ToInstanceSuspensionReasonItemPtrOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemPtrOutput {
	return InstanceSuspensionReasonItem(e).ToInstanceSuspensionReasonItemOutputWithContext(ctx).ToInstanceSuspensionReasonItemPtrOutputWithContext(ctx)
}

func (e InstanceSuspensionReasonItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceSuspensionReasonItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceSuspensionReasonItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceSuspensionReasonItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceSuspensionReasonItemOutput struct{ *pulumi.OutputState }

func (InstanceSuspensionReasonItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSuspensionReasonItem)(nil)).Elem()
}

func (o InstanceSuspensionReasonItemOutput) ToInstanceSuspensionReasonItemOutput() InstanceSuspensionReasonItemOutput {
	return o
}

func (o InstanceSuspensionReasonItemOutput) ToInstanceSuspensionReasonItemOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemOutput {
	return o
}

func (o InstanceSuspensionReasonItemOutput) ToInstanceSuspensionReasonItemPtrOutput() InstanceSuspensionReasonItemPtrOutput {
	return o.ToInstanceSuspensionReasonItemPtrOutputWithContext(context.Background())
}

func (o InstanceSuspensionReasonItemOutput) ToInstanceSuspensionReasonItemPtrOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceSuspensionReasonItem) *InstanceSuspensionReasonItem {
		return &v
	}).(InstanceSuspensionReasonItemPtrOutput)
}

func (o InstanceSuspensionReasonItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceSuspensionReasonItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceSuspensionReasonItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceSuspensionReasonItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceSuspensionReasonItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceSuspensionReasonItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceSuspensionReasonItemPtrOutput struct{ *pulumi.OutputState }

func (InstanceSuspensionReasonItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSuspensionReasonItem)(nil)).Elem()
}

func (o InstanceSuspensionReasonItemPtrOutput) ToInstanceSuspensionReasonItemPtrOutput() InstanceSuspensionReasonItemPtrOutput {
	return o
}

func (o InstanceSuspensionReasonItemPtrOutput) ToInstanceSuspensionReasonItemPtrOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemPtrOutput {
	return o
}

func (o InstanceSuspensionReasonItemPtrOutput) Elem() InstanceSuspensionReasonItemOutput {
	return o.ApplyT(func(v *InstanceSuspensionReasonItem) InstanceSuspensionReasonItem {
		if v != nil {
			return *v
		}
		var ret InstanceSuspensionReasonItem
		return ret
	}).(InstanceSuspensionReasonItemOutput)
}

func (o InstanceSuspensionReasonItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceSuspensionReasonItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceSuspensionReasonItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceSuspensionReasonItemInput is an input type that accepts InstanceSuspensionReasonItemArgs and InstanceSuspensionReasonItemOutput values.
// You can construct a concrete instance of `InstanceSuspensionReasonItemInput` via:
//
//          InstanceSuspensionReasonItemArgs{...}
type InstanceSuspensionReasonItemInput interface {
	pulumi.Input

	ToInstanceSuspensionReasonItemOutput() InstanceSuspensionReasonItemOutput
	ToInstanceSuspensionReasonItemOutputWithContext(context.Context) InstanceSuspensionReasonItemOutput
}

var instanceSuspensionReasonItemPtrType = reflect.TypeOf((**InstanceSuspensionReasonItem)(nil)).Elem()

type InstanceSuspensionReasonItemPtrInput interface {
	pulumi.Input

	ToInstanceSuspensionReasonItemPtrOutput() InstanceSuspensionReasonItemPtrOutput
	ToInstanceSuspensionReasonItemPtrOutputWithContext(context.Context) InstanceSuspensionReasonItemPtrOutput
}

type instanceSuspensionReasonItemPtr string

func InstanceSuspensionReasonItemPtr(v string) InstanceSuspensionReasonItemPtrInput {
	return (*instanceSuspensionReasonItemPtr)(&v)
}

func (*instanceSuspensionReasonItemPtr) ElementType() reflect.Type {
	return instanceSuspensionReasonItemPtrType
}

func (in *instanceSuspensionReasonItemPtr) ToInstanceSuspensionReasonItemPtrOutput() InstanceSuspensionReasonItemPtrOutput {
	return pulumi.ToOutput(in).(InstanceSuspensionReasonItemPtrOutput)
}

func (in *instanceSuspensionReasonItemPtr) ToInstanceSuspensionReasonItemPtrOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceSuspensionReasonItemPtrOutput)
}

// InstanceSuspensionReasonItemArrayInput is an input type that accepts InstanceSuspensionReasonItemArray and InstanceSuspensionReasonItemArrayOutput values.
// You can construct a concrete instance of `InstanceSuspensionReasonItemArrayInput` via:
//
//          InstanceSuspensionReasonItemArray{ InstanceSuspensionReasonItemArgs{...} }
type InstanceSuspensionReasonItemArrayInput interface {
	pulumi.Input

	ToInstanceSuspensionReasonItemArrayOutput() InstanceSuspensionReasonItemArrayOutput
	ToInstanceSuspensionReasonItemArrayOutputWithContext(context.Context) InstanceSuspensionReasonItemArrayOutput
}

type InstanceSuspensionReasonItemArray []InstanceSuspensionReasonItem

func (InstanceSuspensionReasonItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSuspensionReasonItem)(nil)).Elem()
}

func (i InstanceSuspensionReasonItemArray) ToInstanceSuspensionReasonItemArrayOutput() InstanceSuspensionReasonItemArrayOutput {
	return i.ToInstanceSuspensionReasonItemArrayOutputWithContext(context.Background())
}

func (i InstanceSuspensionReasonItemArray) ToInstanceSuspensionReasonItemArrayOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSuspensionReasonItemArrayOutput)
}

type InstanceSuspensionReasonItemArrayOutput struct{ *pulumi.OutputState }

func (InstanceSuspensionReasonItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSuspensionReasonItem)(nil)).Elem()
}

func (o InstanceSuspensionReasonItemArrayOutput) ToInstanceSuspensionReasonItemArrayOutput() InstanceSuspensionReasonItemArrayOutput {
	return o
}

func (o InstanceSuspensionReasonItemArrayOutput) ToInstanceSuspensionReasonItemArrayOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemArrayOutput {
	return o
}

func (o InstanceSuspensionReasonItemArrayOutput) Index(i pulumi.IntInput) InstanceSuspensionReasonItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSuspensionReasonItem {
		return vs[0].([]InstanceSuspensionReasonItem)[vs[1].(int)]
	}).(InstanceSuspensionReasonItemOutput)
}

// The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.
type IpMappingType string

const (
	// This is an unknown IP address type.
	IpMappingTypeSqlIpAddressTypeUnspecified = IpMappingType("SQL_IP_ADDRESS_TYPE_UNSPECIFIED")
	// IP address the customer is supposed to connect to. Usually this is the load balancer's IP address
	IpMappingTypePrimary = IpMappingType("PRIMARY")
	// Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.
	IpMappingTypeOutgoing = IpMappingType("OUTGOING")
	// Private IP used when using private IPs and network peering.
	IpMappingTypePrivate = IpMappingType("PRIVATE")
	// V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
	IpMappingTypeMigrated1stGen = IpMappingType("MIGRATED_1ST_GEN")
)

func (IpMappingType) ElementType() reflect.Type {
	return reflect.TypeOf((*IpMappingType)(nil)).Elem()
}

func (e IpMappingType) ToIpMappingTypeOutput() IpMappingTypeOutput {
	return pulumi.ToOutput(e).(IpMappingTypeOutput)
}

func (e IpMappingType) ToIpMappingTypeOutputWithContext(ctx context.Context) IpMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IpMappingTypeOutput)
}

func (e IpMappingType) ToIpMappingTypePtrOutput() IpMappingTypePtrOutput {
	return e.ToIpMappingTypePtrOutputWithContext(context.Background())
}

func (e IpMappingType) ToIpMappingTypePtrOutputWithContext(ctx context.Context) IpMappingTypePtrOutput {
	return IpMappingType(e).ToIpMappingTypeOutputWithContext(ctx).ToIpMappingTypePtrOutputWithContext(ctx)
}

func (e IpMappingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpMappingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpMappingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IpMappingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IpMappingTypeOutput struct{ *pulumi.OutputState }

func (IpMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpMappingType)(nil)).Elem()
}

func (o IpMappingTypeOutput) ToIpMappingTypeOutput() IpMappingTypeOutput {
	return o
}

func (o IpMappingTypeOutput) ToIpMappingTypeOutputWithContext(ctx context.Context) IpMappingTypeOutput {
	return o
}

func (o IpMappingTypeOutput) ToIpMappingTypePtrOutput() IpMappingTypePtrOutput {
	return o.ToIpMappingTypePtrOutputWithContext(context.Background())
}

func (o IpMappingTypeOutput) ToIpMappingTypePtrOutputWithContext(ctx context.Context) IpMappingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpMappingType) *IpMappingType {
		return &v
	}).(IpMappingTypePtrOutput)
}

func (o IpMappingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IpMappingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpMappingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IpMappingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpMappingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpMappingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpMappingTypePtrOutput struct{ *pulumi.OutputState }

func (IpMappingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpMappingType)(nil)).Elem()
}

func (o IpMappingTypePtrOutput) ToIpMappingTypePtrOutput() IpMappingTypePtrOutput {
	return o
}

func (o IpMappingTypePtrOutput) ToIpMappingTypePtrOutputWithContext(ctx context.Context) IpMappingTypePtrOutput {
	return o
}

func (o IpMappingTypePtrOutput) Elem() IpMappingTypeOutput {
	return o.ApplyT(func(v *IpMappingType) IpMappingType {
		if v != nil {
			return *v
		}
		var ret IpMappingType
		return ret
	}).(IpMappingTypeOutput)
}

func (o IpMappingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpMappingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IpMappingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IpMappingTypeInput is an input type that accepts IpMappingTypeArgs and IpMappingTypeOutput values.
// You can construct a concrete instance of `IpMappingTypeInput` via:
//
//          IpMappingTypeArgs{...}
type IpMappingTypeInput interface {
	pulumi.Input

	ToIpMappingTypeOutput() IpMappingTypeOutput
	ToIpMappingTypeOutputWithContext(context.Context) IpMappingTypeOutput
}

var ipMappingTypePtrType = reflect.TypeOf((**IpMappingType)(nil)).Elem()

type IpMappingTypePtrInput interface {
	pulumi.Input

	ToIpMappingTypePtrOutput() IpMappingTypePtrOutput
	ToIpMappingTypePtrOutputWithContext(context.Context) IpMappingTypePtrOutput
}

type ipMappingTypePtr string

func IpMappingTypePtr(v string) IpMappingTypePtrInput {
	return (*ipMappingTypePtr)(&v)
}

func (*ipMappingTypePtr) ElementType() reflect.Type {
	return ipMappingTypePtrType
}

func (in *ipMappingTypePtr) ToIpMappingTypePtrOutput() IpMappingTypePtrOutput {
	return pulumi.ToOutput(in).(IpMappingTypePtrOutput)
}

func (in *ipMappingTypePtr) ToIpMappingTypePtrOutputWithContext(ctx context.Context) IpMappingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IpMappingTypePtrOutput)
}

// Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).
type MaintenanceWindowUpdateTrack string

const (
	// This is an unknown maintenance timing preference.
	MaintenanceWindowUpdateTrackSqlUpdateTrackUnspecified = MaintenanceWindowUpdateTrack("SQL_UPDATE_TRACK_UNSPECIFIED")
	// For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.
	MaintenanceWindowUpdateTrackCanary = MaintenanceWindowUpdateTrack("canary")
	// For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable).
	MaintenanceWindowUpdateTrackStable = MaintenanceWindowUpdateTrack("stable")
)

func (MaintenanceWindowUpdateTrack) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowUpdateTrack)(nil)).Elem()
}

func (e MaintenanceWindowUpdateTrack) ToMaintenanceWindowUpdateTrackOutput() MaintenanceWindowUpdateTrackOutput {
	return pulumi.ToOutput(e).(MaintenanceWindowUpdateTrackOutput)
}

func (e MaintenanceWindowUpdateTrack) ToMaintenanceWindowUpdateTrackOutputWithContext(ctx context.Context) MaintenanceWindowUpdateTrackOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MaintenanceWindowUpdateTrackOutput)
}

func (e MaintenanceWindowUpdateTrack) ToMaintenanceWindowUpdateTrackPtrOutput() MaintenanceWindowUpdateTrackPtrOutput {
	return e.ToMaintenanceWindowUpdateTrackPtrOutputWithContext(context.Background())
}

func (e MaintenanceWindowUpdateTrack) ToMaintenanceWindowUpdateTrackPtrOutputWithContext(ctx context.Context) MaintenanceWindowUpdateTrackPtrOutput {
	return MaintenanceWindowUpdateTrack(e).ToMaintenanceWindowUpdateTrackOutputWithContext(ctx).ToMaintenanceWindowUpdateTrackPtrOutputWithContext(ctx)
}

func (e MaintenanceWindowUpdateTrack) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowUpdateTrack) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowUpdateTrack) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MaintenanceWindowUpdateTrack) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MaintenanceWindowUpdateTrackOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowUpdateTrackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowUpdateTrack)(nil)).Elem()
}

func (o MaintenanceWindowUpdateTrackOutput) ToMaintenanceWindowUpdateTrackOutput() MaintenanceWindowUpdateTrackOutput {
	return o
}

func (o MaintenanceWindowUpdateTrackOutput) ToMaintenanceWindowUpdateTrackOutputWithContext(ctx context.Context) MaintenanceWindowUpdateTrackOutput {
	return o
}

func (o MaintenanceWindowUpdateTrackOutput) ToMaintenanceWindowUpdateTrackPtrOutput() MaintenanceWindowUpdateTrackPtrOutput {
	return o.ToMaintenanceWindowUpdateTrackPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowUpdateTrackOutput) ToMaintenanceWindowUpdateTrackPtrOutputWithContext(ctx context.Context) MaintenanceWindowUpdateTrackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowUpdateTrack) *MaintenanceWindowUpdateTrack {
		return &v
	}).(MaintenanceWindowUpdateTrackPtrOutput)
}

func (o MaintenanceWindowUpdateTrackOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MaintenanceWindowUpdateTrackOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenanceWindowUpdateTrack) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MaintenanceWindowUpdateTrackOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowUpdateTrackOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenanceWindowUpdateTrack) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MaintenanceWindowUpdateTrackPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowUpdateTrackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowUpdateTrack)(nil)).Elem()
}

func (o MaintenanceWindowUpdateTrackPtrOutput) ToMaintenanceWindowUpdateTrackPtrOutput() MaintenanceWindowUpdateTrackPtrOutput {
	return o
}

func (o MaintenanceWindowUpdateTrackPtrOutput) ToMaintenanceWindowUpdateTrackPtrOutputWithContext(ctx context.Context) MaintenanceWindowUpdateTrackPtrOutput {
	return o
}

func (o MaintenanceWindowUpdateTrackPtrOutput) Elem() MaintenanceWindowUpdateTrackOutput {
	return o.ApplyT(func(v *MaintenanceWindowUpdateTrack) MaintenanceWindowUpdateTrack {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowUpdateTrack
		return ret
	}).(MaintenanceWindowUpdateTrackOutput)
}

func (o MaintenanceWindowUpdateTrackPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowUpdateTrackPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MaintenanceWindowUpdateTrack) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MaintenanceWindowUpdateTrackInput is an input type that accepts MaintenanceWindowUpdateTrackArgs and MaintenanceWindowUpdateTrackOutput values.
// You can construct a concrete instance of `MaintenanceWindowUpdateTrackInput` via:
//
//          MaintenanceWindowUpdateTrackArgs{...}
type MaintenanceWindowUpdateTrackInput interface {
	pulumi.Input

	ToMaintenanceWindowUpdateTrackOutput() MaintenanceWindowUpdateTrackOutput
	ToMaintenanceWindowUpdateTrackOutputWithContext(context.Context) MaintenanceWindowUpdateTrackOutput
}

var maintenanceWindowUpdateTrackPtrType = reflect.TypeOf((**MaintenanceWindowUpdateTrack)(nil)).Elem()

type MaintenanceWindowUpdateTrackPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowUpdateTrackPtrOutput() MaintenanceWindowUpdateTrackPtrOutput
	ToMaintenanceWindowUpdateTrackPtrOutputWithContext(context.Context) MaintenanceWindowUpdateTrackPtrOutput
}

type maintenanceWindowUpdateTrackPtr string

func MaintenanceWindowUpdateTrackPtr(v string) MaintenanceWindowUpdateTrackPtrInput {
	return (*maintenanceWindowUpdateTrackPtr)(&v)
}

func (*maintenanceWindowUpdateTrackPtr) ElementType() reflect.Type {
	return maintenanceWindowUpdateTrackPtrType
}

func (in *maintenanceWindowUpdateTrackPtr) ToMaintenanceWindowUpdateTrackPtrOutput() MaintenanceWindowUpdateTrackPtrOutput {
	return pulumi.ToOutput(in).(MaintenanceWindowUpdateTrackPtrOutput)
}

func (in *maintenanceWindowUpdateTrackPtr) ToMaintenanceWindowUpdateTrackPtrOutputWithContext(ctx context.Context) MaintenanceWindowUpdateTrackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MaintenanceWindowUpdateTrackPtrOutput)
}

// The complexity of the password.
type PasswordValidationPolicyComplexity string

const (
	// Complexity check is not specified.
	PasswordValidationPolicyComplexityComplexityUnspecified = PasswordValidationPolicyComplexity("COMPLEXITY_UNSPECIFIED")
	// A combination of lowercase, uppercase, numeric, and non-alphanumeric characters.
	PasswordValidationPolicyComplexityComplexityDefault = PasswordValidationPolicyComplexity("COMPLEXITY_DEFAULT")
)

func (PasswordValidationPolicyComplexity) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordValidationPolicyComplexity)(nil)).Elem()
}

func (e PasswordValidationPolicyComplexity) ToPasswordValidationPolicyComplexityOutput() PasswordValidationPolicyComplexityOutput {
	return pulumi.ToOutput(e).(PasswordValidationPolicyComplexityOutput)
}

func (e PasswordValidationPolicyComplexity) ToPasswordValidationPolicyComplexityOutputWithContext(ctx context.Context) PasswordValidationPolicyComplexityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PasswordValidationPolicyComplexityOutput)
}

func (e PasswordValidationPolicyComplexity) ToPasswordValidationPolicyComplexityPtrOutput() PasswordValidationPolicyComplexityPtrOutput {
	return e.ToPasswordValidationPolicyComplexityPtrOutputWithContext(context.Background())
}

func (e PasswordValidationPolicyComplexity) ToPasswordValidationPolicyComplexityPtrOutputWithContext(ctx context.Context) PasswordValidationPolicyComplexityPtrOutput {
	return PasswordValidationPolicyComplexity(e).ToPasswordValidationPolicyComplexityOutputWithContext(ctx).ToPasswordValidationPolicyComplexityPtrOutputWithContext(ctx)
}

func (e PasswordValidationPolicyComplexity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PasswordValidationPolicyComplexity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PasswordValidationPolicyComplexity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PasswordValidationPolicyComplexity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PasswordValidationPolicyComplexityOutput struct{ *pulumi.OutputState }

func (PasswordValidationPolicyComplexityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PasswordValidationPolicyComplexity)(nil)).Elem()
}

func (o PasswordValidationPolicyComplexityOutput) ToPasswordValidationPolicyComplexityOutput() PasswordValidationPolicyComplexityOutput {
	return o
}

func (o PasswordValidationPolicyComplexityOutput) ToPasswordValidationPolicyComplexityOutputWithContext(ctx context.Context) PasswordValidationPolicyComplexityOutput {
	return o
}

func (o PasswordValidationPolicyComplexityOutput) ToPasswordValidationPolicyComplexityPtrOutput() PasswordValidationPolicyComplexityPtrOutput {
	return o.ToPasswordValidationPolicyComplexityPtrOutputWithContext(context.Background())
}

func (o PasswordValidationPolicyComplexityOutput) ToPasswordValidationPolicyComplexityPtrOutputWithContext(ctx context.Context) PasswordValidationPolicyComplexityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PasswordValidationPolicyComplexity) *PasswordValidationPolicyComplexity {
		return &v
	}).(PasswordValidationPolicyComplexityPtrOutput)
}

func (o PasswordValidationPolicyComplexityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PasswordValidationPolicyComplexityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PasswordValidationPolicyComplexity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PasswordValidationPolicyComplexityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PasswordValidationPolicyComplexityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PasswordValidationPolicyComplexity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PasswordValidationPolicyComplexityPtrOutput struct{ *pulumi.OutputState }

func (PasswordValidationPolicyComplexityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PasswordValidationPolicyComplexity)(nil)).Elem()
}

func (o PasswordValidationPolicyComplexityPtrOutput) ToPasswordValidationPolicyComplexityPtrOutput() PasswordValidationPolicyComplexityPtrOutput {
	return o
}

func (o PasswordValidationPolicyComplexityPtrOutput) ToPasswordValidationPolicyComplexityPtrOutputWithContext(ctx context.Context) PasswordValidationPolicyComplexityPtrOutput {
	return o
}

func (o PasswordValidationPolicyComplexityPtrOutput) Elem() PasswordValidationPolicyComplexityOutput {
	return o.ApplyT(func(v *PasswordValidationPolicyComplexity) PasswordValidationPolicyComplexity {
		if v != nil {
			return *v
		}
		var ret PasswordValidationPolicyComplexity
		return ret
	}).(PasswordValidationPolicyComplexityOutput)
}

func (o PasswordValidationPolicyComplexityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PasswordValidationPolicyComplexityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PasswordValidationPolicyComplexity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PasswordValidationPolicyComplexityInput is an input type that accepts PasswordValidationPolicyComplexityArgs and PasswordValidationPolicyComplexityOutput values.
// You can construct a concrete instance of `PasswordValidationPolicyComplexityInput` via:
//
//          PasswordValidationPolicyComplexityArgs{...}
type PasswordValidationPolicyComplexityInput interface {
	pulumi.Input

	ToPasswordValidationPolicyComplexityOutput() PasswordValidationPolicyComplexityOutput
	ToPasswordValidationPolicyComplexityOutputWithContext(context.Context) PasswordValidationPolicyComplexityOutput
}

var passwordValidationPolicyComplexityPtrType = reflect.TypeOf((**PasswordValidationPolicyComplexity)(nil)).Elem()

type PasswordValidationPolicyComplexityPtrInput interface {
	pulumi.Input

	ToPasswordValidationPolicyComplexityPtrOutput() PasswordValidationPolicyComplexityPtrOutput
	ToPasswordValidationPolicyComplexityPtrOutputWithContext(context.Context) PasswordValidationPolicyComplexityPtrOutput
}

type passwordValidationPolicyComplexityPtr string

func PasswordValidationPolicyComplexityPtr(v string) PasswordValidationPolicyComplexityPtrInput {
	return (*passwordValidationPolicyComplexityPtr)(&v)
}

func (*passwordValidationPolicyComplexityPtr) ElementType() reflect.Type {
	return passwordValidationPolicyComplexityPtrType
}

func (in *passwordValidationPolicyComplexityPtr) ToPasswordValidationPolicyComplexityPtrOutput() PasswordValidationPolicyComplexityPtrOutput {
	return pulumi.ToOutput(in).(PasswordValidationPolicyComplexityPtrOutput)
}

func (in *passwordValidationPolicyComplexityPtr) ToPasswordValidationPolicyComplexityPtrOutputWithContext(ctx context.Context) PasswordValidationPolicyComplexityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PasswordValidationPolicyComplexityPtrOutput)
}

// The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
type SettingsActivationPolicy string

const (
	// Unknown activation plan.
	SettingsActivationPolicySqlActivationPolicyUnspecified = SettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED")
	// The instance is always up and running.
	SettingsActivationPolicyAlways = SettingsActivationPolicy("ALWAYS")
	// The instance never starts.
	SettingsActivationPolicyNever = SettingsActivationPolicy("NEVER")
	// The instance starts upon receiving requests.
	SettingsActivationPolicyOnDemand = SettingsActivationPolicy("ON_DEMAND")
)

func (SettingsActivationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsActivationPolicy)(nil)).Elem()
}

func (e SettingsActivationPolicy) ToSettingsActivationPolicyOutput() SettingsActivationPolicyOutput {
	return pulumi.ToOutput(e).(SettingsActivationPolicyOutput)
}

func (e SettingsActivationPolicy) ToSettingsActivationPolicyOutputWithContext(ctx context.Context) SettingsActivationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SettingsActivationPolicyOutput)
}

func (e SettingsActivationPolicy) ToSettingsActivationPolicyPtrOutput() SettingsActivationPolicyPtrOutput {
	return e.ToSettingsActivationPolicyPtrOutputWithContext(context.Background())
}

func (e SettingsActivationPolicy) ToSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) SettingsActivationPolicyPtrOutput {
	return SettingsActivationPolicy(e).ToSettingsActivationPolicyOutputWithContext(ctx).ToSettingsActivationPolicyPtrOutputWithContext(ctx)
}

func (e SettingsActivationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsActivationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsActivationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsActivationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SettingsActivationPolicyOutput struct{ *pulumi.OutputState }

func (SettingsActivationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsActivationPolicy)(nil)).Elem()
}

func (o SettingsActivationPolicyOutput) ToSettingsActivationPolicyOutput() SettingsActivationPolicyOutput {
	return o
}

func (o SettingsActivationPolicyOutput) ToSettingsActivationPolicyOutputWithContext(ctx context.Context) SettingsActivationPolicyOutput {
	return o
}

func (o SettingsActivationPolicyOutput) ToSettingsActivationPolicyPtrOutput() SettingsActivationPolicyPtrOutput {
	return o.ToSettingsActivationPolicyPtrOutputWithContext(context.Background())
}

func (o SettingsActivationPolicyOutput) ToSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) SettingsActivationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsActivationPolicy) *SettingsActivationPolicy {
		return &v
	}).(SettingsActivationPolicyPtrOutput)
}

func (o SettingsActivationPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SettingsActivationPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsActivationPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SettingsActivationPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsActivationPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsActivationPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SettingsActivationPolicyPtrOutput struct{ *pulumi.OutputState }

func (SettingsActivationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsActivationPolicy)(nil)).Elem()
}

func (o SettingsActivationPolicyPtrOutput) ToSettingsActivationPolicyPtrOutput() SettingsActivationPolicyPtrOutput {
	return o
}

func (o SettingsActivationPolicyPtrOutput) ToSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) SettingsActivationPolicyPtrOutput {
	return o
}

func (o SettingsActivationPolicyPtrOutput) Elem() SettingsActivationPolicyOutput {
	return o.ApplyT(func(v *SettingsActivationPolicy) SettingsActivationPolicy {
		if v != nil {
			return *v
		}
		var ret SettingsActivationPolicy
		return ret
	}).(SettingsActivationPolicyOutput)
}

func (o SettingsActivationPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsActivationPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SettingsActivationPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SettingsActivationPolicyInput is an input type that accepts SettingsActivationPolicyArgs and SettingsActivationPolicyOutput values.
// You can construct a concrete instance of `SettingsActivationPolicyInput` via:
//
//          SettingsActivationPolicyArgs{...}
type SettingsActivationPolicyInput interface {
	pulumi.Input

	ToSettingsActivationPolicyOutput() SettingsActivationPolicyOutput
	ToSettingsActivationPolicyOutputWithContext(context.Context) SettingsActivationPolicyOutput
}

var settingsActivationPolicyPtrType = reflect.TypeOf((**SettingsActivationPolicy)(nil)).Elem()

type SettingsActivationPolicyPtrInput interface {
	pulumi.Input

	ToSettingsActivationPolicyPtrOutput() SettingsActivationPolicyPtrOutput
	ToSettingsActivationPolicyPtrOutputWithContext(context.Context) SettingsActivationPolicyPtrOutput
}

type settingsActivationPolicyPtr string

func SettingsActivationPolicyPtr(v string) SettingsActivationPolicyPtrInput {
	return (*settingsActivationPolicyPtr)(&v)
}

func (*settingsActivationPolicyPtr) ElementType() reflect.Type {
	return settingsActivationPolicyPtrType
}

func (in *settingsActivationPolicyPtr) ToSettingsActivationPolicyPtrOutput() SettingsActivationPolicyPtrOutput {
	return pulumi.ToOutput(in).(SettingsActivationPolicyPtrOutput)
}

func (in *settingsActivationPolicyPtr) ToSettingsActivationPolicyPtrOutputWithContext(ctx context.Context) SettingsActivationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SettingsActivationPolicyPtrOutput)
}

// Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).
type SettingsAvailabilityType string

const (
	// This is an unknown Availability type.
	SettingsAvailabilityTypeSqlAvailabilityTypeUnspecified = SettingsAvailabilityType("SQL_AVAILABILITY_TYPE_UNSPECIFIED")
	// Zonal available instance.
	SettingsAvailabilityTypeZonal = SettingsAvailabilityType("ZONAL")
	// Regional available instance.
	SettingsAvailabilityTypeRegional = SettingsAvailabilityType("REGIONAL")
)

func (SettingsAvailabilityType) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAvailabilityType)(nil)).Elem()
}

func (e SettingsAvailabilityType) ToSettingsAvailabilityTypeOutput() SettingsAvailabilityTypeOutput {
	return pulumi.ToOutput(e).(SettingsAvailabilityTypeOutput)
}

func (e SettingsAvailabilityType) ToSettingsAvailabilityTypeOutputWithContext(ctx context.Context) SettingsAvailabilityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SettingsAvailabilityTypeOutput)
}

func (e SettingsAvailabilityType) ToSettingsAvailabilityTypePtrOutput() SettingsAvailabilityTypePtrOutput {
	return e.ToSettingsAvailabilityTypePtrOutputWithContext(context.Background())
}

func (e SettingsAvailabilityType) ToSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) SettingsAvailabilityTypePtrOutput {
	return SettingsAvailabilityType(e).ToSettingsAvailabilityTypeOutputWithContext(ctx).ToSettingsAvailabilityTypePtrOutputWithContext(ctx)
}

func (e SettingsAvailabilityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsAvailabilityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsAvailabilityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsAvailabilityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SettingsAvailabilityTypeOutput struct{ *pulumi.OutputState }

func (SettingsAvailabilityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsAvailabilityType)(nil)).Elem()
}

func (o SettingsAvailabilityTypeOutput) ToSettingsAvailabilityTypeOutput() SettingsAvailabilityTypeOutput {
	return o
}

func (o SettingsAvailabilityTypeOutput) ToSettingsAvailabilityTypeOutputWithContext(ctx context.Context) SettingsAvailabilityTypeOutput {
	return o
}

func (o SettingsAvailabilityTypeOutput) ToSettingsAvailabilityTypePtrOutput() SettingsAvailabilityTypePtrOutput {
	return o.ToSettingsAvailabilityTypePtrOutputWithContext(context.Background())
}

func (o SettingsAvailabilityTypeOutput) ToSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) SettingsAvailabilityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsAvailabilityType) *SettingsAvailabilityType {
		return &v
	}).(SettingsAvailabilityTypePtrOutput)
}

func (o SettingsAvailabilityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SettingsAvailabilityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsAvailabilityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SettingsAvailabilityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsAvailabilityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsAvailabilityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SettingsAvailabilityTypePtrOutput struct{ *pulumi.OutputState }

func (SettingsAvailabilityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsAvailabilityType)(nil)).Elem()
}

func (o SettingsAvailabilityTypePtrOutput) ToSettingsAvailabilityTypePtrOutput() SettingsAvailabilityTypePtrOutput {
	return o
}

func (o SettingsAvailabilityTypePtrOutput) ToSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) SettingsAvailabilityTypePtrOutput {
	return o
}

func (o SettingsAvailabilityTypePtrOutput) Elem() SettingsAvailabilityTypeOutput {
	return o.ApplyT(func(v *SettingsAvailabilityType) SettingsAvailabilityType {
		if v != nil {
			return *v
		}
		var ret SettingsAvailabilityType
		return ret
	}).(SettingsAvailabilityTypeOutput)
}

func (o SettingsAvailabilityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsAvailabilityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SettingsAvailabilityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SettingsAvailabilityTypeInput is an input type that accepts SettingsAvailabilityTypeArgs and SettingsAvailabilityTypeOutput values.
// You can construct a concrete instance of `SettingsAvailabilityTypeInput` via:
//
//          SettingsAvailabilityTypeArgs{...}
type SettingsAvailabilityTypeInput interface {
	pulumi.Input

	ToSettingsAvailabilityTypeOutput() SettingsAvailabilityTypeOutput
	ToSettingsAvailabilityTypeOutputWithContext(context.Context) SettingsAvailabilityTypeOutput
}

var settingsAvailabilityTypePtrType = reflect.TypeOf((**SettingsAvailabilityType)(nil)).Elem()

type SettingsAvailabilityTypePtrInput interface {
	pulumi.Input

	ToSettingsAvailabilityTypePtrOutput() SettingsAvailabilityTypePtrOutput
	ToSettingsAvailabilityTypePtrOutputWithContext(context.Context) SettingsAvailabilityTypePtrOutput
}

type settingsAvailabilityTypePtr string

func SettingsAvailabilityTypePtr(v string) SettingsAvailabilityTypePtrInput {
	return (*settingsAvailabilityTypePtr)(&v)
}

func (*settingsAvailabilityTypePtr) ElementType() reflect.Type {
	return settingsAvailabilityTypePtrType
}

func (in *settingsAvailabilityTypePtr) ToSettingsAvailabilityTypePtrOutput() SettingsAvailabilityTypePtrOutput {
	return pulumi.ToOutput(in).(SettingsAvailabilityTypePtrOutput)
}

func (in *settingsAvailabilityTypePtr) ToSettingsAvailabilityTypePtrOutputWithContext(ctx context.Context) SettingsAvailabilityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SettingsAvailabilityTypePtrOutput)
}

// The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances.
type SettingsDataDiskType string

const (
	// This is an unknown data disk type.
	SettingsDataDiskTypeSqlDataDiskTypeUnspecified = SettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED")
	// An SSD data disk.
	SettingsDataDiskTypePdSsd = SettingsDataDiskType("PD_SSD")
	// An HDD data disk.
	SettingsDataDiskTypePdHdd = SettingsDataDiskType("PD_HDD")
	// This field is deprecated and will be removed from a future version of the API.
	SettingsDataDiskTypeObsoleteLocalSsd = SettingsDataDiskType("OBSOLETE_LOCAL_SSD")
)

func (SettingsDataDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsDataDiskType)(nil)).Elem()
}

func (e SettingsDataDiskType) ToSettingsDataDiskTypeOutput() SettingsDataDiskTypeOutput {
	return pulumi.ToOutput(e).(SettingsDataDiskTypeOutput)
}

func (e SettingsDataDiskType) ToSettingsDataDiskTypeOutputWithContext(ctx context.Context) SettingsDataDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SettingsDataDiskTypeOutput)
}

func (e SettingsDataDiskType) ToSettingsDataDiskTypePtrOutput() SettingsDataDiskTypePtrOutput {
	return e.ToSettingsDataDiskTypePtrOutputWithContext(context.Background())
}

func (e SettingsDataDiskType) ToSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) SettingsDataDiskTypePtrOutput {
	return SettingsDataDiskType(e).ToSettingsDataDiskTypeOutputWithContext(ctx).ToSettingsDataDiskTypePtrOutputWithContext(ctx)
}

func (e SettingsDataDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsDataDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsDataDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsDataDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SettingsDataDiskTypeOutput struct{ *pulumi.OutputState }

func (SettingsDataDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsDataDiskType)(nil)).Elem()
}

func (o SettingsDataDiskTypeOutput) ToSettingsDataDiskTypeOutput() SettingsDataDiskTypeOutput {
	return o
}

func (o SettingsDataDiskTypeOutput) ToSettingsDataDiskTypeOutputWithContext(ctx context.Context) SettingsDataDiskTypeOutput {
	return o
}

func (o SettingsDataDiskTypeOutput) ToSettingsDataDiskTypePtrOutput() SettingsDataDiskTypePtrOutput {
	return o.ToSettingsDataDiskTypePtrOutputWithContext(context.Background())
}

func (o SettingsDataDiskTypeOutput) ToSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) SettingsDataDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsDataDiskType) *SettingsDataDiskType {
		return &v
	}).(SettingsDataDiskTypePtrOutput)
}

func (o SettingsDataDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SettingsDataDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsDataDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SettingsDataDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsDataDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsDataDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SettingsDataDiskTypePtrOutput struct{ *pulumi.OutputState }

func (SettingsDataDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsDataDiskType)(nil)).Elem()
}

func (o SettingsDataDiskTypePtrOutput) ToSettingsDataDiskTypePtrOutput() SettingsDataDiskTypePtrOutput {
	return o
}

func (o SettingsDataDiskTypePtrOutput) ToSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) SettingsDataDiskTypePtrOutput {
	return o
}

func (o SettingsDataDiskTypePtrOutput) Elem() SettingsDataDiskTypeOutput {
	return o.ApplyT(func(v *SettingsDataDiskType) SettingsDataDiskType {
		if v != nil {
			return *v
		}
		var ret SettingsDataDiskType
		return ret
	}).(SettingsDataDiskTypeOutput)
}

func (o SettingsDataDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsDataDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SettingsDataDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SettingsDataDiskTypeInput is an input type that accepts SettingsDataDiskTypeArgs and SettingsDataDiskTypeOutput values.
// You can construct a concrete instance of `SettingsDataDiskTypeInput` via:
//
//          SettingsDataDiskTypeArgs{...}
type SettingsDataDiskTypeInput interface {
	pulumi.Input

	ToSettingsDataDiskTypeOutput() SettingsDataDiskTypeOutput
	ToSettingsDataDiskTypeOutputWithContext(context.Context) SettingsDataDiskTypeOutput
}

var settingsDataDiskTypePtrType = reflect.TypeOf((**SettingsDataDiskType)(nil)).Elem()

type SettingsDataDiskTypePtrInput interface {
	pulumi.Input

	ToSettingsDataDiskTypePtrOutput() SettingsDataDiskTypePtrOutput
	ToSettingsDataDiskTypePtrOutputWithContext(context.Context) SettingsDataDiskTypePtrOutput
}

type settingsDataDiskTypePtr string

func SettingsDataDiskTypePtr(v string) SettingsDataDiskTypePtrInput {
	return (*settingsDataDiskTypePtr)(&v)
}

func (*settingsDataDiskTypePtr) ElementType() reflect.Type {
	return settingsDataDiskTypePtrType
}

func (in *settingsDataDiskTypePtr) ToSettingsDataDiskTypePtrOutput() SettingsDataDiskTypePtrOutput {
	return pulumi.ToOutput(in).(SettingsDataDiskTypePtrOutput)
}

func (in *settingsDataDiskTypePtr) ToSettingsDataDiskTypePtrOutputWithContext(ctx context.Context) SettingsDataDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SettingsDataDiskTypePtrOutput)
}

// The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.
type SettingsPricingPlan string

const (
	// This is an unknown pricing plan for this instance.
	SettingsPricingPlanSqlPricingPlanUnspecified = SettingsPricingPlan("SQL_PRICING_PLAN_UNSPECIFIED")
	// The instance is billed at a monthly flat rate.
	SettingsPricingPlanPackage = SettingsPricingPlan("PACKAGE")
	// The instance is billed per usage.
	SettingsPricingPlanPerUse = SettingsPricingPlan("PER_USE")
)

func (SettingsPricingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPricingPlan)(nil)).Elem()
}

func (e SettingsPricingPlan) ToSettingsPricingPlanOutput() SettingsPricingPlanOutput {
	return pulumi.ToOutput(e).(SettingsPricingPlanOutput)
}

func (e SettingsPricingPlan) ToSettingsPricingPlanOutputWithContext(ctx context.Context) SettingsPricingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SettingsPricingPlanOutput)
}

func (e SettingsPricingPlan) ToSettingsPricingPlanPtrOutput() SettingsPricingPlanPtrOutput {
	return e.ToSettingsPricingPlanPtrOutputWithContext(context.Background())
}

func (e SettingsPricingPlan) ToSettingsPricingPlanPtrOutputWithContext(ctx context.Context) SettingsPricingPlanPtrOutput {
	return SettingsPricingPlan(e).ToSettingsPricingPlanOutputWithContext(ctx).ToSettingsPricingPlanPtrOutputWithContext(ctx)
}

func (e SettingsPricingPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsPricingPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsPricingPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsPricingPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SettingsPricingPlanOutput struct{ *pulumi.OutputState }

func (SettingsPricingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsPricingPlan)(nil)).Elem()
}

func (o SettingsPricingPlanOutput) ToSettingsPricingPlanOutput() SettingsPricingPlanOutput {
	return o
}

func (o SettingsPricingPlanOutput) ToSettingsPricingPlanOutputWithContext(ctx context.Context) SettingsPricingPlanOutput {
	return o
}

func (o SettingsPricingPlanOutput) ToSettingsPricingPlanPtrOutput() SettingsPricingPlanPtrOutput {
	return o.ToSettingsPricingPlanPtrOutputWithContext(context.Background())
}

func (o SettingsPricingPlanOutput) ToSettingsPricingPlanPtrOutputWithContext(ctx context.Context) SettingsPricingPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsPricingPlan) *SettingsPricingPlan {
		return &v
	}).(SettingsPricingPlanPtrOutput)
}

func (o SettingsPricingPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SettingsPricingPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsPricingPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SettingsPricingPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsPricingPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsPricingPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SettingsPricingPlanPtrOutput struct{ *pulumi.OutputState }

func (SettingsPricingPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsPricingPlan)(nil)).Elem()
}

func (o SettingsPricingPlanPtrOutput) ToSettingsPricingPlanPtrOutput() SettingsPricingPlanPtrOutput {
	return o
}

func (o SettingsPricingPlanPtrOutput) ToSettingsPricingPlanPtrOutputWithContext(ctx context.Context) SettingsPricingPlanPtrOutput {
	return o
}

func (o SettingsPricingPlanPtrOutput) Elem() SettingsPricingPlanOutput {
	return o.ApplyT(func(v *SettingsPricingPlan) SettingsPricingPlan {
		if v != nil {
			return *v
		}
		var ret SettingsPricingPlan
		return ret
	}).(SettingsPricingPlanOutput)
}

func (o SettingsPricingPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsPricingPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SettingsPricingPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SettingsPricingPlanInput is an input type that accepts SettingsPricingPlanArgs and SettingsPricingPlanOutput values.
// You can construct a concrete instance of `SettingsPricingPlanInput` via:
//
//          SettingsPricingPlanArgs{...}
type SettingsPricingPlanInput interface {
	pulumi.Input

	ToSettingsPricingPlanOutput() SettingsPricingPlanOutput
	ToSettingsPricingPlanOutputWithContext(context.Context) SettingsPricingPlanOutput
}

var settingsPricingPlanPtrType = reflect.TypeOf((**SettingsPricingPlan)(nil)).Elem()

type SettingsPricingPlanPtrInput interface {
	pulumi.Input

	ToSettingsPricingPlanPtrOutput() SettingsPricingPlanPtrOutput
	ToSettingsPricingPlanPtrOutputWithContext(context.Context) SettingsPricingPlanPtrOutput
}

type settingsPricingPlanPtr string

func SettingsPricingPlanPtr(v string) SettingsPricingPlanPtrInput {
	return (*settingsPricingPlanPtr)(&v)
}

func (*settingsPricingPlanPtr) ElementType() reflect.Type {
	return settingsPricingPlanPtrType
}

func (in *settingsPricingPlanPtr) ToSettingsPricingPlanPtrOutput() SettingsPricingPlanPtrOutput {
	return pulumi.ToOutput(in).(SettingsPricingPlanPtrOutput)
}

func (in *settingsPricingPlanPtr) ToSettingsPricingPlanPtrOutputWithContext(ctx context.Context) SettingsPricingPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SettingsPricingPlanPtrOutput)
}

// The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.
type SettingsReplicationType string

const (
	// This is an unknown replication type for a Cloud SQL instance.
	SettingsReplicationTypeSqlReplicationTypeUnspecified = SettingsReplicationType("SQL_REPLICATION_TYPE_UNSPECIFIED")
	// The synchronous replication mode for First Generation instances. It is the default value.
	SettingsReplicationTypeSynchronous = SettingsReplicationType("SYNCHRONOUS")
	// The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data.
	SettingsReplicationTypeAsynchronous = SettingsReplicationType("ASYNCHRONOUS")
)

func (SettingsReplicationType) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsReplicationType)(nil)).Elem()
}

func (e SettingsReplicationType) ToSettingsReplicationTypeOutput() SettingsReplicationTypeOutput {
	return pulumi.ToOutput(e).(SettingsReplicationTypeOutput)
}

func (e SettingsReplicationType) ToSettingsReplicationTypeOutputWithContext(ctx context.Context) SettingsReplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SettingsReplicationTypeOutput)
}

func (e SettingsReplicationType) ToSettingsReplicationTypePtrOutput() SettingsReplicationTypePtrOutput {
	return e.ToSettingsReplicationTypePtrOutputWithContext(context.Background())
}

func (e SettingsReplicationType) ToSettingsReplicationTypePtrOutputWithContext(ctx context.Context) SettingsReplicationTypePtrOutput {
	return SettingsReplicationType(e).ToSettingsReplicationTypeOutputWithContext(ctx).ToSettingsReplicationTypePtrOutputWithContext(ctx)
}

func (e SettingsReplicationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsReplicationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsReplicationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsReplicationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SettingsReplicationTypeOutput struct{ *pulumi.OutputState }

func (SettingsReplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingsReplicationType)(nil)).Elem()
}

func (o SettingsReplicationTypeOutput) ToSettingsReplicationTypeOutput() SettingsReplicationTypeOutput {
	return o
}

func (o SettingsReplicationTypeOutput) ToSettingsReplicationTypeOutputWithContext(ctx context.Context) SettingsReplicationTypeOutput {
	return o
}

func (o SettingsReplicationTypeOutput) ToSettingsReplicationTypePtrOutput() SettingsReplicationTypePtrOutput {
	return o.ToSettingsReplicationTypePtrOutputWithContext(context.Background())
}

func (o SettingsReplicationTypeOutput) ToSettingsReplicationTypePtrOutputWithContext(ctx context.Context) SettingsReplicationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SettingsReplicationType) *SettingsReplicationType {
		return &v
	}).(SettingsReplicationTypePtrOutput)
}

func (o SettingsReplicationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SettingsReplicationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsReplicationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SettingsReplicationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsReplicationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SettingsReplicationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SettingsReplicationTypePtrOutput struct{ *pulumi.OutputState }

func (SettingsReplicationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingsReplicationType)(nil)).Elem()
}

func (o SettingsReplicationTypePtrOutput) ToSettingsReplicationTypePtrOutput() SettingsReplicationTypePtrOutput {
	return o
}

func (o SettingsReplicationTypePtrOutput) ToSettingsReplicationTypePtrOutputWithContext(ctx context.Context) SettingsReplicationTypePtrOutput {
	return o
}

func (o SettingsReplicationTypePtrOutput) Elem() SettingsReplicationTypeOutput {
	return o.ApplyT(func(v *SettingsReplicationType) SettingsReplicationType {
		if v != nil {
			return *v
		}
		var ret SettingsReplicationType
		return ret
	}).(SettingsReplicationTypeOutput)
}

func (o SettingsReplicationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SettingsReplicationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SettingsReplicationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SettingsReplicationTypeInput is an input type that accepts SettingsReplicationTypeArgs and SettingsReplicationTypeOutput values.
// You can construct a concrete instance of `SettingsReplicationTypeInput` via:
//
//          SettingsReplicationTypeArgs{...}
type SettingsReplicationTypeInput interface {
	pulumi.Input

	ToSettingsReplicationTypeOutput() SettingsReplicationTypeOutput
	ToSettingsReplicationTypeOutputWithContext(context.Context) SettingsReplicationTypeOutput
}

var settingsReplicationTypePtrType = reflect.TypeOf((**SettingsReplicationType)(nil)).Elem()

type SettingsReplicationTypePtrInput interface {
	pulumi.Input

	ToSettingsReplicationTypePtrOutput() SettingsReplicationTypePtrOutput
	ToSettingsReplicationTypePtrOutputWithContext(context.Context) SettingsReplicationTypePtrOutput
}

type settingsReplicationTypePtr string

func SettingsReplicationTypePtr(v string) SettingsReplicationTypePtrInput {
	return (*settingsReplicationTypePtr)(&v)
}

func (*settingsReplicationTypePtr) ElementType() reflect.Type {
	return settingsReplicationTypePtrType
}

func (in *settingsReplicationTypePtr) ToSettingsReplicationTypePtrOutput() SettingsReplicationTypePtrOutput {
	return pulumi.ToOutput(in).(SettingsReplicationTypePtrOutput)
}

func (in *settingsReplicationTypePtr) ToSettingsReplicationTypePtrOutputWithContext(ctx context.Context) SettingsReplicationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SettingsReplicationTypePtrOutput)
}

// This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job
type SqlOutOfDiskReportSqlOutOfDiskState string

const (
	// Unspecified state
	SqlOutOfDiskReportSqlOutOfDiskStateSqlOutOfDiskStateUnspecified = SqlOutOfDiskReportSqlOutOfDiskState("SQL_OUT_OF_DISK_STATE_UNSPECIFIED")
	// The instance has plenty space on data disk
	SqlOutOfDiskReportSqlOutOfDiskStateNormal = SqlOutOfDiskReportSqlOutOfDiskState("NORMAL")
	// Data disk is almost used up. It is shutdown to prevent data corruption.
	SqlOutOfDiskReportSqlOutOfDiskStateSoftShutdown = SqlOutOfDiskReportSqlOutOfDiskState("SOFT_SHUTDOWN")
)

func (SqlOutOfDiskReportSqlOutOfDiskState) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlOutOfDiskReportSqlOutOfDiskState)(nil)).Elem()
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToSqlOutOfDiskReportSqlOutOfDiskStateOutput() SqlOutOfDiskReportSqlOutOfDiskStateOutput {
	return pulumi.ToOutput(e).(SqlOutOfDiskReportSqlOutOfDiskStateOutput)
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToSqlOutOfDiskReportSqlOutOfDiskStateOutputWithContext(ctx context.Context) SqlOutOfDiskReportSqlOutOfDiskStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SqlOutOfDiskReportSqlOutOfDiskStateOutput)
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutput() SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return e.ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(context.Background())
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(ctx context.Context) SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return SqlOutOfDiskReportSqlOutOfDiskState(e).ToSqlOutOfDiskReportSqlOutOfDiskStateOutputWithContext(ctx).ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(ctx)
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SqlOutOfDiskReportSqlOutOfDiskStateOutput struct{ *pulumi.OutputState }

func (SqlOutOfDiskReportSqlOutOfDiskStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlOutOfDiskReportSqlOutOfDiskState)(nil)).Elem()
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToSqlOutOfDiskReportSqlOutOfDiskStateOutput() SqlOutOfDiskReportSqlOutOfDiskStateOutput {
	return o
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToSqlOutOfDiskReportSqlOutOfDiskStateOutputWithContext(ctx context.Context) SqlOutOfDiskReportSqlOutOfDiskStateOutput {
	return o
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutput() SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return o.ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(context.Background())
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(ctx context.Context) SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlOutOfDiskReportSqlOutOfDiskState) *SqlOutOfDiskReportSqlOutOfDiskState {
		return &v
	}).(SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput)
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlOutOfDiskReportSqlOutOfDiskState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlOutOfDiskReportSqlOutOfDiskStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SqlOutOfDiskReportSqlOutOfDiskState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput struct{ *pulumi.OutputState }

func (SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlOutOfDiskReportSqlOutOfDiskState)(nil)).Elem()
}

func (o SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutput() SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return o
}

func (o SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(ctx context.Context) SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return o
}

func (o SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput) Elem() SqlOutOfDiskReportSqlOutOfDiskStateOutput {
	return o.ApplyT(func(v *SqlOutOfDiskReportSqlOutOfDiskState) SqlOutOfDiskReportSqlOutOfDiskState {
		if v != nil {
			return *v
		}
		var ret SqlOutOfDiskReportSqlOutOfDiskState
		return ret
	}).(SqlOutOfDiskReportSqlOutOfDiskStateOutput)
}

func (o SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SqlOutOfDiskReportSqlOutOfDiskState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SqlOutOfDiskReportSqlOutOfDiskStateInput is an input type that accepts SqlOutOfDiskReportSqlOutOfDiskStateArgs and SqlOutOfDiskReportSqlOutOfDiskStateOutput values.
// You can construct a concrete instance of `SqlOutOfDiskReportSqlOutOfDiskStateInput` via:
//
//          SqlOutOfDiskReportSqlOutOfDiskStateArgs{...}
type SqlOutOfDiskReportSqlOutOfDiskStateInput interface {
	pulumi.Input

	ToSqlOutOfDiskReportSqlOutOfDiskStateOutput() SqlOutOfDiskReportSqlOutOfDiskStateOutput
	ToSqlOutOfDiskReportSqlOutOfDiskStateOutputWithContext(context.Context) SqlOutOfDiskReportSqlOutOfDiskStateOutput
}

var sqlOutOfDiskReportSqlOutOfDiskStatePtrType = reflect.TypeOf((**SqlOutOfDiskReportSqlOutOfDiskState)(nil)).Elem()

type SqlOutOfDiskReportSqlOutOfDiskStatePtrInput interface {
	pulumi.Input

	ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutput() SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput
	ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(context.Context) SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput
}

type sqlOutOfDiskReportSqlOutOfDiskStatePtr string

func SqlOutOfDiskReportSqlOutOfDiskStatePtr(v string) SqlOutOfDiskReportSqlOutOfDiskStatePtrInput {
	return (*sqlOutOfDiskReportSqlOutOfDiskStatePtr)(&v)
}

func (*sqlOutOfDiskReportSqlOutOfDiskStatePtr) ElementType() reflect.Type {
	return sqlOutOfDiskReportSqlOutOfDiskStatePtrType
}

func (in *sqlOutOfDiskReportSqlOutOfDiskStatePtr) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutput() SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return pulumi.ToOutput(in).(SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput)
}

func (in *sqlOutOfDiskReportSqlOutOfDiskStatePtr) ToSqlOutOfDiskReportSqlOutOfDiskStatePtrOutputWithContext(ctx context.Context) SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupRetentionSettingsRetentionUnitInput)(nil)).Elem(), BackupRetentionSettingsRetentionUnit("RETENTION_UNIT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackupRetentionSettingsRetentionUnitPtrInput)(nil)).Elem(), BackupRetentionSettingsRetentionUnit("RETENTION_UNIT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackupRunBackupKindInput)(nil)).Elem(), BackupRunBackupKind("SQL_BACKUP_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackupRunBackupKindPtrInput)(nil)).Elem(), BackupRunBackupKind("SQL_BACKUP_KIND_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackupRunTypeInput)(nil)).Elem(), BackupRunType("SQL_BACKUP_RUN_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackupRunTypePtrInput)(nil)).Elem(), BackupRunType("SQL_BACKUP_RUN_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackendTypeInput)(nil)).Elem(), InstanceBackendType("SQL_BACKEND_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackendTypePtrInput)(nil)).Elem(), InstanceBackendType("SQL_BACKEND_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDatabaseVersionInput)(nil)).Elem(), InstanceDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDatabaseVersionPtrInput)(nil)).Elem(), InstanceDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInstanceTypeInput)(nil)).Elem(), InstanceInstanceType("SQL_INSTANCE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInstanceTypePtrInput)(nil)).Elem(), InstanceInstanceType("SQL_INSTANCE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateEnumInput)(nil)).Elem(), InstanceStateEnum("SQL_INSTANCE_STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateEnumPtrInput)(nil)).Elem(), InstanceStateEnum("SQL_INSTANCE_STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSuspensionReasonItemInput)(nil)).Elem(), InstanceSuspensionReasonItem("SQL_SUSPENSION_REASON_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSuspensionReasonItemPtrInput)(nil)).Elem(), InstanceSuspensionReasonItem("SQL_SUSPENSION_REASON_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSuspensionReasonItemArrayInput)(nil)).Elem(), InstanceSuspensionReasonItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpMappingTypeInput)(nil)).Elem(), IpMappingType("SQL_IP_ADDRESS_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*IpMappingTypePtrInput)(nil)).Elem(), IpMappingType("SQL_IP_ADDRESS_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowUpdateTrackInput)(nil)).Elem(), MaintenanceWindowUpdateTrack("SQL_UPDATE_TRACK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowUpdateTrackPtrInput)(nil)).Elem(), MaintenanceWindowUpdateTrack("SQL_UPDATE_TRACK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordValidationPolicyComplexityInput)(nil)).Elem(), PasswordValidationPolicyComplexity("COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PasswordValidationPolicyComplexityPtrInput)(nil)).Elem(), PasswordValidationPolicyComplexity("COMPLEXITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsActivationPolicyInput)(nil)).Elem(), SettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsActivationPolicyPtrInput)(nil)).Elem(), SettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAvailabilityTypeInput)(nil)).Elem(), SettingsAvailabilityType("SQL_AVAILABILITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsAvailabilityTypePtrInput)(nil)).Elem(), SettingsAvailabilityType("SQL_AVAILABILITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsDataDiskTypeInput)(nil)).Elem(), SettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsDataDiskTypePtrInput)(nil)).Elem(), SettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPricingPlanInput)(nil)).Elem(), SettingsPricingPlan("SQL_PRICING_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsPricingPlanPtrInput)(nil)).Elem(), SettingsPricingPlan("SQL_PRICING_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsReplicationTypeInput)(nil)).Elem(), SettingsReplicationType("SQL_REPLICATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SettingsReplicationTypePtrInput)(nil)).Elem(), SettingsReplicationType("SQL_REPLICATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SqlOutOfDiskReportSqlOutOfDiskStateInput)(nil)).Elem(), SqlOutOfDiskReportSqlOutOfDiskState("SQL_OUT_OF_DISK_STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SqlOutOfDiskReportSqlOutOfDiskStatePtrInput)(nil)).Elem(), SqlOutOfDiskReportSqlOutOfDiskState("SQL_OUT_OF_DISK_STATE_UNSPECIFIED"))
	pulumi.RegisterOutputType(BackupRetentionSettingsRetentionUnitOutput{})
	pulumi.RegisterOutputType(BackupRetentionSettingsRetentionUnitPtrOutput{})
	pulumi.RegisterOutputType(BackupRunBackupKindOutput{})
	pulumi.RegisterOutputType(BackupRunBackupKindPtrOutput{})
	pulumi.RegisterOutputType(BackupRunTypeOutput{})
	pulumi.RegisterOutputType(BackupRunTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceBackendTypeOutput{})
	pulumi.RegisterOutputType(InstanceBackendTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceDatabaseVersionOutput{})
	pulumi.RegisterOutputType(InstanceDatabaseVersionPtrOutput{})
	pulumi.RegisterOutputType(InstanceInstanceTypeOutput{})
	pulumi.RegisterOutputType(InstanceInstanceTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceStateEnumOutput{})
	pulumi.RegisterOutputType(InstanceStateEnumPtrOutput{})
	pulumi.RegisterOutputType(InstanceSuspensionReasonItemOutput{})
	pulumi.RegisterOutputType(InstanceSuspensionReasonItemPtrOutput{})
	pulumi.RegisterOutputType(InstanceSuspensionReasonItemArrayOutput{})
	pulumi.RegisterOutputType(IpMappingTypeOutput{})
	pulumi.RegisterOutputType(IpMappingTypePtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowUpdateTrackOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowUpdateTrackPtrOutput{})
	pulumi.RegisterOutputType(PasswordValidationPolicyComplexityOutput{})
	pulumi.RegisterOutputType(PasswordValidationPolicyComplexityPtrOutput{})
	pulumi.RegisterOutputType(SettingsActivationPolicyOutput{})
	pulumi.RegisterOutputType(SettingsActivationPolicyPtrOutput{})
	pulumi.RegisterOutputType(SettingsAvailabilityTypeOutput{})
	pulumi.RegisterOutputType(SettingsAvailabilityTypePtrOutput{})
	pulumi.RegisterOutputType(SettingsDataDiskTypeOutput{})
	pulumi.RegisterOutputType(SettingsDataDiskTypePtrOutput{})
	pulumi.RegisterOutputType(SettingsPricingPlanOutput{})
	pulumi.RegisterOutputType(SettingsPricingPlanPtrOutput{})
	pulumi.RegisterOutputType(SettingsReplicationTypeOutput{})
	pulumi.RegisterOutputType(SettingsReplicationTypePtrOutput{})
	pulumi.RegisterOutputType(SqlOutOfDiskReportSqlOutOfDiskStateOutput{})
	pulumi.RegisterOutputType(SqlOutOfDiskReportSqlOutOfDiskStatePtrOutput{})
}
