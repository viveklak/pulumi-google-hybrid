// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//          AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

type CompositeTypeStatus string

const (
	CompositeTypeStatusUnknownStatus = CompositeTypeStatus("UNKNOWN_STATUS")
	CompositeTypeStatusDeprecated    = CompositeTypeStatus("DEPRECATED")
	CompositeTypeStatusExperimental  = CompositeTypeStatus("EXPERIMENTAL")
	CompositeTypeStatusSupported     = CompositeTypeStatus("SUPPORTED")
)

// Level to record this diagnostic.
type DiagnosticLevel string

const (
	DiagnosticLevelUnknown = DiagnosticLevel("UNKNOWN")
	// If level is informational, it only gets displayed as part of the resource.
	DiagnosticLevelInformation = DiagnosticLevel("INFORMATION")
	// If level is warning, will end up in the resource as a warning.
	DiagnosticLevelWarning = DiagnosticLevel("WARNING")
	// If level is error, it will indicate an error occurred after finishCondition is set, and this field will populate resource errors and operation errors.
	DiagnosticLevelError = DiagnosticLevel("ERROR")
)

func (DiagnosticLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticLevel)(nil)).Elem()
}

func (e DiagnosticLevel) ToDiagnosticLevelOutput() DiagnosticLevelOutput {
	return pulumi.ToOutput(e).(DiagnosticLevelOutput)
}

func (e DiagnosticLevel) ToDiagnosticLevelOutputWithContext(ctx context.Context) DiagnosticLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiagnosticLevelOutput)
}

func (e DiagnosticLevel) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return e.ToDiagnosticLevelPtrOutputWithContext(context.Background())
}

func (e DiagnosticLevel) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return DiagnosticLevel(e).ToDiagnosticLevelOutputWithContext(ctx).ToDiagnosticLevelPtrOutputWithContext(ctx)
}

func (e DiagnosticLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiagnosticLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiagnosticLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiagnosticLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiagnosticLevelOutput struct{ *pulumi.OutputState }

func (DiagnosticLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticLevel)(nil)).Elem()
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelOutput() DiagnosticLevelOutput {
	return o
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelOutputWithContext(ctx context.Context) DiagnosticLevelOutput {
	return o
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return o.ToDiagnosticLevelPtrOutputWithContext(context.Background())
}

func (o DiagnosticLevelOutput) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticLevel) *DiagnosticLevel {
		return &v
	}).(DiagnosticLevelPtrOutput)
}

func (o DiagnosticLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiagnosticLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiagnosticLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiagnosticLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiagnosticLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiagnosticLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiagnosticLevelPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticLevel)(nil)).Elem()
}

func (o DiagnosticLevelPtrOutput) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return o
}

func (o DiagnosticLevelPtrOutput) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return o
}

func (o DiagnosticLevelPtrOutput) Elem() DiagnosticLevelOutput {
	return o.ApplyT(func(v *DiagnosticLevel) DiagnosticLevel {
		if v != nil {
			return *v
		}
		var ret DiagnosticLevel
		return ret
	}).(DiagnosticLevelOutput)
}

func (o DiagnosticLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiagnosticLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiagnosticLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiagnosticLevelInput is an input type that accepts DiagnosticLevelArgs and DiagnosticLevelOutput values.
// You can construct a concrete instance of `DiagnosticLevelInput` via:
//
//          DiagnosticLevelArgs{...}
type DiagnosticLevelInput interface {
	pulumi.Input

	ToDiagnosticLevelOutput() DiagnosticLevelOutput
	ToDiagnosticLevelOutputWithContext(context.Context) DiagnosticLevelOutput
}

var diagnosticLevelPtrType = reflect.TypeOf((**DiagnosticLevel)(nil)).Elem()

type DiagnosticLevelPtrInput interface {
	pulumi.Input

	ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput
	ToDiagnosticLevelPtrOutputWithContext(context.Context) DiagnosticLevelPtrOutput
}

type diagnosticLevelPtr string

func DiagnosticLevelPtr(v string) DiagnosticLevelPtrInput {
	return (*diagnosticLevelPtr)(&v)
}

func (*diagnosticLevelPtr) ElementType() reflect.Type {
	return diagnosticLevelPtrType
}

func (in *diagnosticLevelPtr) ToDiagnosticLevelPtrOutput() DiagnosticLevelPtrOutput {
	return pulumi.ToOutput(in).(DiagnosticLevelPtrOutput)
}

func (in *diagnosticLevelPtr) ToDiagnosticLevelPtrOutputWithContext(ctx context.Context) DiagnosticLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiagnosticLevelPtrOutput)
}

// The location where this mapping applies.
type InputMappingLocation string

const (
	InputMappingLocationUnknown = InputMappingLocation("UNKNOWN")
	InputMappingLocationPath    = InputMappingLocation("PATH")
	InputMappingLocationQuery   = InputMappingLocation("QUERY")
	InputMappingLocationBody    = InputMappingLocation("BODY")
	InputMappingLocationHeader  = InputMappingLocation("HEADER")
)

func (InputMappingLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*InputMappingLocation)(nil)).Elem()
}

func (e InputMappingLocation) ToInputMappingLocationOutput() InputMappingLocationOutput {
	return pulumi.ToOutput(e).(InputMappingLocationOutput)
}

func (e InputMappingLocation) ToInputMappingLocationOutputWithContext(ctx context.Context) InputMappingLocationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InputMappingLocationOutput)
}

func (e InputMappingLocation) ToInputMappingLocationPtrOutput() InputMappingLocationPtrOutput {
	return e.ToInputMappingLocationPtrOutputWithContext(context.Background())
}

func (e InputMappingLocation) ToInputMappingLocationPtrOutputWithContext(ctx context.Context) InputMappingLocationPtrOutput {
	return InputMappingLocation(e).ToInputMappingLocationOutputWithContext(ctx).ToInputMappingLocationPtrOutputWithContext(ctx)
}

func (e InputMappingLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputMappingLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InputMappingLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InputMappingLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InputMappingLocationOutput struct{ *pulumi.OutputState }

func (InputMappingLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputMappingLocation)(nil)).Elem()
}

func (o InputMappingLocationOutput) ToInputMappingLocationOutput() InputMappingLocationOutput {
	return o
}

func (o InputMappingLocationOutput) ToInputMappingLocationOutputWithContext(ctx context.Context) InputMappingLocationOutput {
	return o
}

func (o InputMappingLocationOutput) ToInputMappingLocationPtrOutput() InputMappingLocationPtrOutput {
	return o.ToInputMappingLocationPtrOutputWithContext(context.Background())
}

func (o InputMappingLocationOutput) ToInputMappingLocationPtrOutputWithContext(ctx context.Context) InputMappingLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputMappingLocation) *InputMappingLocation {
		return &v
	}).(InputMappingLocationPtrOutput)
}

func (o InputMappingLocationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InputMappingLocationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputMappingLocation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InputMappingLocationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputMappingLocationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InputMappingLocation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InputMappingLocationPtrOutput struct{ *pulumi.OutputState }

func (InputMappingLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputMappingLocation)(nil)).Elem()
}

func (o InputMappingLocationPtrOutput) ToInputMappingLocationPtrOutput() InputMappingLocationPtrOutput {
	return o
}

func (o InputMappingLocationPtrOutput) ToInputMappingLocationPtrOutputWithContext(ctx context.Context) InputMappingLocationPtrOutput {
	return o
}

func (o InputMappingLocationPtrOutput) Elem() InputMappingLocationOutput {
	return o.ApplyT(func(v *InputMappingLocation) InputMappingLocation {
		if v != nil {
			return *v
		}
		var ret InputMappingLocation
		return ret
	}).(InputMappingLocationOutput)
}

func (o InputMappingLocationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InputMappingLocationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InputMappingLocation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InputMappingLocationInput is an input type that accepts InputMappingLocationArgs and InputMappingLocationOutput values.
// You can construct a concrete instance of `InputMappingLocationInput` via:
//
//          InputMappingLocationArgs{...}
type InputMappingLocationInput interface {
	pulumi.Input

	ToInputMappingLocationOutput() InputMappingLocationOutput
	ToInputMappingLocationOutputWithContext(context.Context) InputMappingLocationOutput
}

var inputMappingLocationPtrType = reflect.TypeOf((**InputMappingLocation)(nil)).Elem()

type InputMappingLocationPtrInput interface {
	pulumi.Input

	ToInputMappingLocationPtrOutput() InputMappingLocationPtrOutput
	ToInputMappingLocationPtrOutputWithContext(context.Context) InputMappingLocationPtrOutput
}

type inputMappingLocationPtr string

func InputMappingLocationPtr(v string) InputMappingLocationPtrInput {
	return (*inputMappingLocationPtr)(&v)
}

func (*inputMappingLocationPtr) ElementType() reflect.Type {
	return inputMappingLocationPtrType
}

func (in *inputMappingLocationPtr) ToInputMappingLocationPtrOutput() InputMappingLocationPtrOutput {
	return pulumi.ToOutput(in).(InputMappingLocationPtrOutput)
}

func (in *inputMappingLocationPtr) ToInputMappingLocationPtrOutputWithContext(ctx context.Context) InputMappingLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InputMappingLocationPtrOutput)
}

// Which interpreter (python or jinja) should be used during expansion.
type TemplateContentsInterpreter string

const (
	TemplateContentsInterpreterUnknownInterpreter = TemplateContentsInterpreter("UNKNOWN_INTERPRETER")
	TemplateContentsInterpreterPython             = TemplateContentsInterpreter("PYTHON")
	TemplateContentsInterpreterJinja              = TemplateContentsInterpreter("JINJA")
)

func (TemplateContentsInterpreter) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateContentsInterpreter)(nil)).Elem()
}

func (e TemplateContentsInterpreter) ToTemplateContentsInterpreterOutput() TemplateContentsInterpreterOutput {
	return pulumi.ToOutput(e).(TemplateContentsInterpreterOutput)
}

func (e TemplateContentsInterpreter) ToTemplateContentsInterpreterOutputWithContext(ctx context.Context) TemplateContentsInterpreterOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateContentsInterpreterOutput)
}

func (e TemplateContentsInterpreter) ToTemplateContentsInterpreterPtrOutput() TemplateContentsInterpreterPtrOutput {
	return e.ToTemplateContentsInterpreterPtrOutputWithContext(context.Background())
}

func (e TemplateContentsInterpreter) ToTemplateContentsInterpreterPtrOutputWithContext(ctx context.Context) TemplateContentsInterpreterPtrOutput {
	return TemplateContentsInterpreter(e).ToTemplateContentsInterpreterOutputWithContext(ctx).ToTemplateContentsInterpreterPtrOutputWithContext(ctx)
}

func (e TemplateContentsInterpreter) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateContentsInterpreter) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateContentsInterpreter) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateContentsInterpreter) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateContentsInterpreterOutput struct{ *pulumi.OutputState }

func (TemplateContentsInterpreterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateContentsInterpreter)(nil)).Elem()
}

func (o TemplateContentsInterpreterOutput) ToTemplateContentsInterpreterOutput() TemplateContentsInterpreterOutput {
	return o
}

func (o TemplateContentsInterpreterOutput) ToTemplateContentsInterpreterOutputWithContext(ctx context.Context) TemplateContentsInterpreterOutput {
	return o
}

func (o TemplateContentsInterpreterOutput) ToTemplateContentsInterpreterPtrOutput() TemplateContentsInterpreterPtrOutput {
	return o.ToTemplateContentsInterpreterPtrOutputWithContext(context.Background())
}

func (o TemplateContentsInterpreterOutput) ToTemplateContentsInterpreterPtrOutputWithContext(ctx context.Context) TemplateContentsInterpreterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateContentsInterpreter) *TemplateContentsInterpreter {
		return &v
	}).(TemplateContentsInterpreterPtrOutput)
}

func (o TemplateContentsInterpreterOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateContentsInterpreterOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateContentsInterpreter) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateContentsInterpreterOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateContentsInterpreterOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateContentsInterpreter) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateContentsInterpreterPtrOutput struct{ *pulumi.OutputState }

func (TemplateContentsInterpreterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateContentsInterpreter)(nil)).Elem()
}

func (o TemplateContentsInterpreterPtrOutput) ToTemplateContentsInterpreterPtrOutput() TemplateContentsInterpreterPtrOutput {
	return o
}

func (o TemplateContentsInterpreterPtrOutput) ToTemplateContentsInterpreterPtrOutputWithContext(ctx context.Context) TemplateContentsInterpreterPtrOutput {
	return o
}

func (o TemplateContentsInterpreterPtrOutput) Elem() TemplateContentsInterpreterOutput {
	return o.ApplyT(func(v *TemplateContentsInterpreter) TemplateContentsInterpreter {
		if v != nil {
			return *v
		}
		var ret TemplateContentsInterpreter
		return ret
	}).(TemplateContentsInterpreterOutput)
}

func (o TemplateContentsInterpreterPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateContentsInterpreterPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateContentsInterpreter) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateContentsInterpreterInput is an input type that accepts TemplateContentsInterpreterArgs and TemplateContentsInterpreterOutput values.
// You can construct a concrete instance of `TemplateContentsInterpreterInput` via:
//
//          TemplateContentsInterpreterArgs{...}
type TemplateContentsInterpreterInput interface {
	pulumi.Input

	ToTemplateContentsInterpreterOutput() TemplateContentsInterpreterOutput
	ToTemplateContentsInterpreterOutputWithContext(context.Context) TemplateContentsInterpreterOutput
}

var templateContentsInterpreterPtrType = reflect.TypeOf((**TemplateContentsInterpreter)(nil)).Elem()

type TemplateContentsInterpreterPtrInput interface {
	pulumi.Input

	ToTemplateContentsInterpreterPtrOutput() TemplateContentsInterpreterPtrOutput
	ToTemplateContentsInterpreterPtrOutputWithContext(context.Context) TemplateContentsInterpreterPtrOutput
}

type templateContentsInterpreterPtr string

func TemplateContentsInterpreterPtr(v string) TemplateContentsInterpreterPtrInput {
	return (*templateContentsInterpreterPtr)(&v)
}

func (*templateContentsInterpreterPtr) ElementType() reflect.Type {
	return templateContentsInterpreterPtrType
}

func (in *templateContentsInterpreterPtr) ToTemplateContentsInterpreterPtrOutput() TemplateContentsInterpreterPtrOutput {
	return pulumi.ToOutput(in).(TemplateContentsInterpreterPtrOutput)
}

func (in *templateContentsInterpreterPtr) ToTemplateContentsInterpreterPtrOutputWithContext(ctx context.Context) TemplateContentsInterpreterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateContentsInterpreterPtrOutput)
}

// Customize how deployment manager will validate the resource against schema errors.
type ValidationOptionsSchemaValidation string

const (
	ValidationOptionsSchemaValidationUnknown = ValidationOptionsSchemaValidation("UNKNOWN")
	// Ignore schema failures.
	ValidationOptionsSchemaValidationIgnore = ValidationOptionsSchemaValidation("IGNORE")
	// Ignore schema failures but display them as warnings.
	ValidationOptionsSchemaValidationIgnoreWithWarnings = ValidationOptionsSchemaValidation("IGNORE_WITH_WARNINGS")
	// Fail the resource if the schema is not valid, this is the default behavior.
	ValidationOptionsSchemaValidationFail = ValidationOptionsSchemaValidation("FAIL")
)

func (ValidationOptionsSchemaValidation) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationOptionsSchemaValidation)(nil)).Elem()
}

func (e ValidationOptionsSchemaValidation) ToValidationOptionsSchemaValidationOutput() ValidationOptionsSchemaValidationOutput {
	return pulumi.ToOutput(e).(ValidationOptionsSchemaValidationOutput)
}

func (e ValidationOptionsSchemaValidation) ToValidationOptionsSchemaValidationOutputWithContext(ctx context.Context) ValidationOptionsSchemaValidationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ValidationOptionsSchemaValidationOutput)
}

func (e ValidationOptionsSchemaValidation) ToValidationOptionsSchemaValidationPtrOutput() ValidationOptionsSchemaValidationPtrOutput {
	return e.ToValidationOptionsSchemaValidationPtrOutputWithContext(context.Background())
}

func (e ValidationOptionsSchemaValidation) ToValidationOptionsSchemaValidationPtrOutputWithContext(ctx context.Context) ValidationOptionsSchemaValidationPtrOutput {
	return ValidationOptionsSchemaValidation(e).ToValidationOptionsSchemaValidationOutputWithContext(ctx).ToValidationOptionsSchemaValidationPtrOutputWithContext(ctx)
}

func (e ValidationOptionsSchemaValidation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsSchemaValidation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsSchemaValidation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValidationOptionsSchemaValidation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ValidationOptionsSchemaValidationOutput struct{ *pulumi.OutputState }

func (ValidationOptionsSchemaValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationOptionsSchemaValidation)(nil)).Elem()
}

func (o ValidationOptionsSchemaValidationOutput) ToValidationOptionsSchemaValidationOutput() ValidationOptionsSchemaValidationOutput {
	return o
}

func (o ValidationOptionsSchemaValidationOutput) ToValidationOptionsSchemaValidationOutputWithContext(ctx context.Context) ValidationOptionsSchemaValidationOutput {
	return o
}

func (o ValidationOptionsSchemaValidationOutput) ToValidationOptionsSchemaValidationPtrOutput() ValidationOptionsSchemaValidationPtrOutput {
	return o.ToValidationOptionsSchemaValidationPtrOutputWithContext(context.Background())
}

func (o ValidationOptionsSchemaValidationOutput) ToValidationOptionsSchemaValidationPtrOutputWithContext(ctx context.Context) ValidationOptionsSchemaValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidationOptionsSchemaValidation) *ValidationOptionsSchemaValidation {
		return &v
	}).(ValidationOptionsSchemaValidationPtrOutput)
}

func (o ValidationOptionsSchemaValidationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ValidationOptionsSchemaValidationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationOptionsSchemaValidation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ValidationOptionsSchemaValidationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationOptionsSchemaValidationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationOptionsSchemaValidation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ValidationOptionsSchemaValidationPtrOutput struct{ *pulumi.OutputState }

func (ValidationOptionsSchemaValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationOptionsSchemaValidation)(nil)).Elem()
}

func (o ValidationOptionsSchemaValidationPtrOutput) ToValidationOptionsSchemaValidationPtrOutput() ValidationOptionsSchemaValidationPtrOutput {
	return o
}

func (o ValidationOptionsSchemaValidationPtrOutput) ToValidationOptionsSchemaValidationPtrOutputWithContext(ctx context.Context) ValidationOptionsSchemaValidationPtrOutput {
	return o
}

func (o ValidationOptionsSchemaValidationPtrOutput) Elem() ValidationOptionsSchemaValidationOutput {
	return o.ApplyT(func(v *ValidationOptionsSchemaValidation) ValidationOptionsSchemaValidation {
		if v != nil {
			return *v
		}
		var ret ValidationOptionsSchemaValidation
		return ret
	}).(ValidationOptionsSchemaValidationOutput)
}

func (o ValidationOptionsSchemaValidationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationOptionsSchemaValidationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ValidationOptionsSchemaValidation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ValidationOptionsSchemaValidationInput is an input type that accepts ValidationOptionsSchemaValidationArgs and ValidationOptionsSchemaValidationOutput values.
// You can construct a concrete instance of `ValidationOptionsSchemaValidationInput` via:
//
//          ValidationOptionsSchemaValidationArgs{...}
type ValidationOptionsSchemaValidationInput interface {
	pulumi.Input

	ToValidationOptionsSchemaValidationOutput() ValidationOptionsSchemaValidationOutput
	ToValidationOptionsSchemaValidationOutputWithContext(context.Context) ValidationOptionsSchemaValidationOutput
}

var validationOptionsSchemaValidationPtrType = reflect.TypeOf((**ValidationOptionsSchemaValidation)(nil)).Elem()

type ValidationOptionsSchemaValidationPtrInput interface {
	pulumi.Input

	ToValidationOptionsSchemaValidationPtrOutput() ValidationOptionsSchemaValidationPtrOutput
	ToValidationOptionsSchemaValidationPtrOutputWithContext(context.Context) ValidationOptionsSchemaValidationPtrOutput
}

type validationOptionsSchemaValidationPtr string

func ValidationOptionsSchemaValidationPtr(v string) ValidationOptionsSchemaValidationPtrInput {
	return (*validationOptionsSchemaValidationPtr)(&v)
}

func (*validationOptionsSchemaValidationPtr) ElementType() reflect.Type {
	return validationOptionsSchemaValidationPtrType
}

func (in *validationOptionsSchemaValidationPtr) ToValidationOptionsSchemaValidationPtrOutput() ValidationOptionsSchemaValidationPtrOutput {
	return pulumi.ToOutput(in).(ValidationOptionsSchemaValidationPtrOutput)
}

func (in *validationOptionsSchemaValidationPtr) ToValidationOptionsSchemaValidationPtrOutputWithContext(ctx context.Context) ValidationOptionsSchemaValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ValidationOptionsSchemaValidationPtrOutput)
}

// Specify what to do with extra properties when executing a request.
type ValidationOptionsUndeclaredProperties string

const (
	ValidationOptionsUndeclaredPropertiesUnknown = ValidationOptionsUndeclaredProperties("UNKNOWN")
	// Always include even if not present on discovery doc.
	ValidationOptionsUndeclaredPropertiesInclude = ValidationOptionsUndeclaredProperties("INCLUDE")
	// Always ignore if not present on discovery doc.
	ValidationOptionsUndeclaredPropertiesIgnore = ValidationOptionsUndeclaredProperties("IGNORE")
	// Include on request, but emit a warning.
	ValidationOptionsUndeclaredPropertiesIncludeWithWarnings = ValidationOptionsUndeclaredProperties("INCLUDE_WITH_WARNINGS")
	// Ignore properties, but emit a warning.
	ValidationOptionsUndeclaredPropertiesIgnoreWithWarnings = ValidationOptionsUndeclaredProperties("IGNORE_WITH_WARNINGS")
	// Always fail if undeclared properties are present.
	ValidationOptionsUndeclaredPropertiesFail = ValidationOptionsUndeclaredProperties("FAIL")
)

func (ValidationOptionsUndeclaredProperties) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationOptionsUndeclaredProperties)(nil)).Elem()
}

func (e ValidationOptionsUndeclaredProperties) ToValidationOptionsUndeclaredPropertiesOutput() ValidationOptionsUndeclaredPropertiesOutput {
	return pulumi.ToOutput(e).(ValidationOptionsUndeclaredPropertiesOutput)
}

func (e ValidationOptionsUndeclaredProperties) ToValidationOptionsUndeclaredPropertiesOutputWithContext(ctx context.Context) ValidationOptionsUndeclaredPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ValidationOptionsUndeclaredPropertiesOutput)
}

func (e ValidationOptionsUndeclaredProperties) ToValidationOptionsUndeclaredPropertiesPtrOutput() ValidationOptionsUndeclaredPropertiesPtrOutput {
	return e.ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(context.Background())
}

func (e ValidationOptionsUndeclaredProperties) ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(ctx context.Context) ValidationOptionsUndeclaredPropertiesPtrOutput {
	return ValidationOptionsUndeclaredProperties(e).ToValidationOptionsUndeclaredPropertiesOutputWithContext(ctx).ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(ctx)
}

func (e ValidationOptionsUndeclaredProperties) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsUndeclaredProperties) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ValidationOptionsUndeclaredProperties) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ValidationOptionsUndeclaredProperties) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ValidationOptionsUndeclaredPropertiesOutput struct{ *pulumi.OutputState }

func (ValidationOptionsUndeclaredPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationOptionsUndeclaredProperties)(nil)).Elem()
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToValidationOptionsUndeclaredPropertiesOutput() ValidationOptionsUndeclaredPropertiesOutput {
	return o
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToValidationOptionsUndeclaredPropertiesOutputWithContext(ctx context.Context) ValidationOptionsUndeclaredPropertiesOutput {
	return o
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToValidationOptionsUndeclaredPropertiesPtrOutput() ValidationOptionsUndeclaredPropertiesPtrOutput {
	return o.ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(context.Background())
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(ctx context.Context) ValidationOptionsUndeclaredPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValidationOptionsUndeclaredProperties) *ValidationOptionsUndeclaredProperties {
		return &v
	}).(ValidationOptionsUndeclaredPropertiesPtrOutput)
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationOptionsUndeclaredProperties) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationOptionsUndeclaredPropertiesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ValidationOptionsUndeclaredProperties) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ValidationOptionsUndeclaredPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ValidationOptionsUndeclaredPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidationOptionsUndeclaredProperties)(nil)).Elem()
}

func (o ValidationOptionsUndeclaredPropertiesPtrOutput) ToValidationOptionsUndeclaredPropertiesPtrOutput() ValidationOptionsUndeclaredPropertiesPtrOutput {
	return o
}

func (o ValidationOptionsUndeclaredPropertiesPtrOutput) ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(ctx context.Context) ValidationOptionsUndeclaredPropertiesPtrOutput {
	return o
}

func (o ValidationOptionsUndeclaredPropertiesPtrOutput) Elem() ValidationOptionsUndeclaredPropertiesOutput {
	return o.ApplyT(func(v *ValidationOptionsUndeclaredProperties) ValidationOptionsUndeclaredProperties {
		if v != nil {
			return *v
		}
		var ret ValidationOptionsUndeclaredProperties
		return ret
	}).(ValidationOptionsUndeclaredPropertiesOutput)
}

func (o ValidationOptionsUndeclaredPropertiesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ValidationOptionsUndeclaredPropertiesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ValidationOptionsUndeclaredProperties) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ValidationOptionsUndeclaredPropertiesInput is an input type that accepts ValidationOptionsUndeclaredPropertiesArgs and ValidationOptionsUndeclaredPropertiesOutput values.
// You can construct a concrete instance of `ValidationOptionsUndeclaredPropertiesInput` via:
//
//          ValidationOptionsUndeclaredPropertiesArgs{...}
type ValidationOptionsUndeclaredPropertiesInput interface {
	pulumi.Input

	ToValidationOptionsUndeclaredPropertiesOutput() ValidationOptionsUndeclaredPropertiesOutput
	ToValidationOptionsUndeclaredPropertiesOutputWithContext(context.Context) ValidationOptionsUndeclaredPropertiesOutput
}

var validationOptionsUndeclaredPropertiesPtrType = reflect.TypeOf((**ValidationOptionsUndeclaredProperties)(nil)).Elem()

type ValidationOptionsUndeclaredPropertiesPtrInput interface {
	pulumi.Input

	ToValidationOptionsUndeclaredPropertiesPtrOutput() ValidationOptionsUndeclaredPropertiesPtrOutput
	ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(context.Context) ValidationOptionsUndeclaredPropertiesPtrOutput
}

type validationOptionsUndeclaredPropertiesPtr string

func ValidationOptionsUndeclaredPropertiesPtr(v string) ValidationOptionsUndeclaredPropertiesPtrInput {
	return (*validationOptionsUndeclaredPropertiesPtr)(&v)
}

func (*validationOptionsUndeclaredPropertiesPtr) ElementType() reflect.Type {
	return validationOptionsUndeclaredPropertiesPtrType
}

func (in *validationOptionsUndeclaredPropertiesPtr) ToValidationOptionsUndeclaredPropertiesPtrOutput() ValidationOptionsUndeclaredPropertiesPtrOutput {
	return pulumi.ToOutput(in).(ValidationOptionsUndeclaredPropertiesPtrOutput)
}

func (in *validationOptionsUndeclaredPropertiesPtr) ToValidationOptionsUndeclaredPropertiesPtrOutputWithContext(ctx context.Context) ValidationOptionsUndeclaredPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ValidationOptionsUndeclaredPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticLevelInput)(nil)).Elem(), DiagnosticLevel("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticLevelPtrInput)(nil)).Elem(), DiagnosticLevel("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*InputMappingLocationInput)(nil)).Elem(), InputMappingLocation("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*InputMappingLocationPtrInput)(nil)).Elem(), InputMappingLocation("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateContentsInterpreterInput)(nil)).Elem(), TemplateContentsInterpreter("UNKNOWN_INTERPRETER"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateContentsInterpreterPtrInput)(nil)).Elem(), TemplateContentsInterpreter("UNKNOWN_INTERPRETER"))
	pulumi.RegisterInputType(reflect.TypeOf((*ValidationOptionsSchemaValidationInput)(nil)).Elem(), ValidationOptionsSchemaValidation("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*ValidationOptionsSchemaValidationPtrInput)(nil)).Elem(), ValidationOptionsSchemaValidation("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*ValidationOptionsUndeclaredPropertiesInput)(nil)).Elem(), ValidationOptionsUndeclaredProperties("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*ValidationOptionsUndeclaredPropertiesPtrInput)(nil)).Elem(), ValidationOptionsUndeclaredProperties("UNKNOWN"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticLevelOutput{})
	pulumi.RegisterOutputType(DiagnosticLevelPtrOutput{})
	pulumi.RegisterOutputType(InputMappingLocationOutput{})
	pulumi.RegisterOutputType(InputMappingLocationPtrOutput{})
	pulumi.RegisterOutputType(TemplateContentsInterpreterOutput{})
	pulumi.RegisterOutputType(TemplateContentsInterpreterPtrOutput{})
	pulumi.RegisterOutputType(ValidationOptionsSchemaValidationOutput{})
	pulumi.RegisterOutputType(ValidationOptionsSchemaValidationPtrOutput{})
	pulumi.RegisterOutputType(ValidationOptionsUndeclaredPropertiesOutput{})
	pulumi.RegisterOutputType(ValidationOptionsUndeclaredPropertiesPtrOutput{})
}
