// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.
type AccessConfigNetworkTier string

const (
	// Public internet quality with fixed bandwidth.
	AccessConfigNetworkTierFixedStandard = AccessConfigNetworkTier("FIXED_STANDARD")
	// High quality, Google-grade network tier, support for all networking products.
	AccessConfigNetworkTierPremium = AccessConfigNetworkTier("PREMIUM")
	// Price competitive network tier, support for all networking products.
	AccessConfigNetworkTierSelect = AccessConfigNetworkTier("SELECT")
	// Public internet quality, only limited support for other networking products.
	AccessConfigNetworkTierStandard = AccessConfigNetworkTier("STANDARD")
	// (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
	AccessConfigNetworkTierStandardOverridesFixedStandard = AccessConfigNetworkTier("STANDARD_OVERRIDES_FIXED_STANDARD")
)

func (AccessConfigNetworkTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessConfigNetworkTier)(nil)).Elem()
}

func (e AccessConfigNetworkTier) ToAccessConfigNetworkTierOutput() AccessConfigNetworkTierOutput {
	return pulumi.ToOutput(e).(AccessConfigNetworkTierOutput)
}

func (e AccessConfigNetworkTier) ToAccessConfigNetworkTierOutputWithContext(ctx context.Context) AccessConfigNetworkTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessConfigNetworkTierOutput)
}

func (e AccessConfigNetworkTier) ToAccessConfigNetworkTierPtrOutput() AccessConfigNetworkTierPtrOutput {
	return e.ToAccessConfigNetworkTierPtrOutputWithContext(context.Background())
}

func (e AccessConfigNetworkTier) ToAccessConfigNetworkTierPtrOutputWithContext(ctx context.Context) AccessConfigNetworkTierPtrOutput {
	return AccessConfigNetworkTier(e).ToAccessConfigNetworkTierOutputWithContext(ctx).ToAccessConfigNetworkTierPtrOutputWithContext(ctx)
}

func (e AccessConfigNetworkTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessConfigNetworkTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessConfigNetworkTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessConfigNetworkTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessConfigNetworkTierOutput struct{ *pulumi.OutputState }

func (AccessConfigNetworkTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessConfigNetworkTier)(nil)).Elem()
}

func (o AccessConfigNetworkTierOutput) ToAccessConfigNetworkTierOutput() AccessConfigNetworkTierOutput {
	return o
}

func (o AccessConfigNetworkTierOutput) ToAccessConfigNetworkTierOutputWithContext(ctx context.Context) AccessConfigNetworkTierOutput {
	return o
}

func (o AccessConfigNetworkTierOutput) ToAccessConfigNetworkTierPtrOutput() AccessConfigNetworkTierPtrOutput {
	return o.ToAccessConfigNetworkTierPtrOutputWithContext(context.Background())
}

func (o AccessConfigNetworkTierOutput) ToAccessConfigNetworkTierPtrOutputWithContext(ctx context.Context) AccessConfigNetworkTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessConfigNetworkTier) *AccessConfigNetworkTier {
		return &v
	}).(AccessConfigNetworkTierPtrOutput)
}

func (o AccessConfigNetworkTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessConfigNetworkTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessConfigNetworkTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessConfigNetworkTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessConfigNetworkTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessConfigNetworkTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessConfigNetworkTierPtrOutput struct{ *pulumi.OutputState }

func (AccessConfigNetworkTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessConfigNetworkTier)(nil)).Elem()
}

func (o AccessConfigNetworkTierPtrOutput) ToAccessConfigNetworkTierPtrOutput() AccessConfigNetworkTierPtrOutput {
	return o
}

func (o AccessConfigNetworkTierPtrOutput) ToAccessConfigNetworkTierPtrOutputWithContext(ctx context.Context) AccessConfigNetworkTierPtrOutput {
	return o
}

func (o AccessConfigNetworkTierPtrOutput) Elem() AccessConfigNetworkTierOutput {
	return o.ApplyT(func(v *AccessConfigNetworkTier) AccessConfigNetworkTier {
		if v != nil {
			return *v
		}
		var ret AccessConfigNetworkTier
		return ret
	}).(AccessConfigNetworkTierOutput)
}

func (o AccessConfigNetworkTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessConfigNetworkTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessConfigNetworkTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessConfigNetworkTierInput is an input type that accepts AccessConfigNetworkTierArgs and AccessConfigNetworkTierOutput values.
// You can construct a concrete instance of `AccessConfigNetworkTierInput` via:
//
//          AccessConfigNetworkTierArgs{...}
type AccessConfigNetworkTierInput interface {
	pulumi.Input

	ToAccessConfigNetworkTierOutput() AccessConfigNetworkTierOutput
	ToAccessConfigNetworkTierOutputWithContext(context.Context) AccessConfigNetworkTierOutput
}

var accessConfigNetworkTierPtrType = reflect.TypeOf((**AccessConfigNetworkTier)(nil)).Elem()

type AccessConfigNetworkTierPtrInput interface {
	pulumi.Input

	ToAccessConfigNetworkTierPtrOutput() AccessConfigNetworkTierPtrOutput
	ToAccessConfigNetworkTierPtrOutputWithContext(context.Context) AccessConfigNetworkTierPtrOutput
}

type accessConfigNetworkTierPtr string

func AccessConfigNetworkTierPtr(v string) AccessConfigNetworkTierPtrInput {
	return (*accessConfigNetworkTierPtr)(&v)
}

func (*accessConfigNetworkTierPtr) ElementType() reflect.Type {
	return accessConfigNetworkTierPtrType
}

func (in *accessConfigNetworkTierPtr) ToAccessConfigNetworkTierPtrOutput() AccessConfigNetworkTierPtrOutput {
	return pulumi.ToOutput(in).(AccessConfigNetworkTierPtrOutput)
}

func (in *accessConfigNetworkTierPtr) ToAccessConfigNetworkTierPtrOutputWithContext(ctx context.Context) AccessConfigNetworkTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessConfigNetworkTierPtrOutput)
}

// The type of configuration. The default and only option is ONE_TO_ONE_NAT.
type AccessConfigType string

const (
	AccessConfigTypeDirectIpv6  = AccessConfigType("DIRECT_IPV6")
	AccessConfigTypeOneToOneNat = AccessConfigType("ONE_TO_ONE_NAT")
)

func (AccessConfigType) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessConfigType)(nil)).Elem()
}

func (e AccessConfigType) ToAccessConfigTypeOutput() AccessConfigTypeOutput {
	return pulumi.ToOutput(e).(AccessConfigTypeOutput)
}

func (e AccessConfigType) ToAccessConfigTypeOutputWithContext(ctx context.Context) AccessConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessConfigTypeOutput)
}

func (e AccessConfigType) ToAccessConfigTypePtrOutput() AccessConfigTypePtrOutput {
	return e.ToAccessConfigTypePtrOutputWithContext(context.Background())
}

func (e AccessConfigType) ToAccessConfigTypePtrOutputWithContext(ctx context.Context) AccessConfigTypePtrOutput {
	return AccessConfigType(e).ToAccessConfigTypeOutputWithContext(ctx).ToAccessConfigTypePtrOutputWithContext(ctx)
}

func (e AccessConfigType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessConfigType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessConfigType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessConfigType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessConfigTypeOutput struct{ *pulumi.OutputState }

func (AccessConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessConfigType)(nil)).Elem()
}

func (o AccessConfigTypeOutput) ToAccessConfigTypeOutput() AccessConfigTypeOutput {
	return o
}

func (o AccessConfigTypeOutput) ToAccessConfigTypeOutputWithContext(ctx context.Context) AccessConfigTypeOutput {
	return o
}

func (o AccessConfigTypeOutput) ToAccessConfigTypePtrOutput() AccessConfigTypePtrOutput {
	return o.ToAccessConfigTypePtrOutputWithContext(context.Background())
}

func (o AccessConfigTypeOutput) ToAccessConfigTypePtrOutputWithContext(ctx context.Context) AccessConfigTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessConfigType) *AccessConfigType {
		return &v
	}).(AccessConfigTypePtrOutput)
}

func (o AccessConfigTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessConfigTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessConfigType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessConfigTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessConfigTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessConfigType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessConfigTypePtrOutput struct{ *pulumi.OutputState }

func (AccessConfigTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessConfigType)(nil)).Elem()
}

func (o AccessConfigTypePtrOutput) ToAccessConfigTypePtrOutput() AccessConfigTypePtrOutput {
	return o
}

func (o AccessConfigTypePtrOutput) ToAccessConfigTypePtrOutputWithContext(ctx context.Context) AccessConfigTypePtrOutput {
	return o
}

func (o AccessConfigTypePtrOutput) Elem() AccessConfigTypeOutput {
	return o.ApplyT(func(v *AccessConfigType) AccessConfigType {
		if v != nil {
			return *v
		}
		var ret AccessConfigType
		return ret
	}).(AccessConfigTypeOutput)
}

func (o AccessConfigTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessConfigTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessConfigType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessConfigTypeInput is an input type that accepts AccessConfigTypeArgs and AccessConfigTypeOutput values.
// You can construct a concrete instance of `AccessConfigTypeInput` via:
//
//          AccessConfigTypeArgs{...}
type AccessConfigTypeInput interface {
	pulumi.Input

	ToAccessConfigTypeOutput() AccessConfigTypeOutput
	ToAccessConfigTypeOutputWithContext(context.Context) AccessConfigTypeOutput
}

var accessConfigTypePtrType = reflect.TypeOf((**AccessConfigType)(nil)).Elem()

type AccessConfigTypePtrInput interface {
	pulumi.Input

	ToAccessConfigTypePtrOutput() AccessConfigTypePtrOutput
	ToAccessConfigTypePtrOutputWithContext(context.Context) AccessConfigTypePtrOutput
}

type accessConfigTypePtr string

func AccessConfigTypePtr(v string) AccessConfigTypePtrInput {
	return (*accessConfigTypePtr)(&v)
}

func (*accessConfigTypePtr) ElementType() reflect.Type {
	return accessConfigTypePtrType
}

func (in *accessConfigTypePtr) ToAccessConfigTypePtrOutput() AccessConfigTypePtrOutput {
	return pulumi.ToOutput(in).(AccessConfigTypePtrOutput)
}

func (in *accessConfigTypePtr) ToAccessConfigTypePtrOutputWithContext(ctx context.Context) AccessConfigTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessConfigTypePtrOutput)
}

// The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
type AddressAddressType string

const (
	// DNS resolver address in the subnetwork.
	AddressAddressTypeDnsForwarding = AddressAddressType("DNS_FORWARDING")
	// A publicly visible external IP address.
	AddressAddressTypeExternal = AddressAddressType("EXTERNAL")
	// A private network IP address, for use with an Instance or Internal Load Balancer forwarding rule.
	AddressAddressTypeInternal        = AddressAddressType("INTERNAL")
	AddressAddressTypeUnspecifiedType = AddressAddressType("UNSPECIFIED_TYPE")
)

func (AddressAddressType) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressAddressType)(nil)).Elem()
}

func (e AddressAddressType) ToAddressAddressTypeOutput() AddressAddressTypeOutput {
	return pulumi.ToOutput(e).(AddressAddressTypeOutput)
}

func (e AddressAddressType) ToAddressAddressTypeOutputWithContext(ctx context.Context) AddressAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressAddressTypeOutput)
}

func (e AddressAddressType) ToAddressAddressTypePtrOutput() AddressAddressTypePtrOutput {
	return e.ToAddressAddressTypePtrOutputWithContext(context.Background())
}

func (e AddressAddressType) ToAddressAddressTypePtrOutputWithContext(ctx context.Context) AddressAddressTypePtrOutput {
	return AddressAddressType(e).ToAddressAddressTypeOutputWithContext(ctx).ToAddressAddressTypePtrOutputWithContext(ctx)
}

func (e AddressAddressType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressAddressType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressAddressType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressAddressType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressAddressTypeOutput struct{ *pulumi.OutputState }

func (AddressAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressAddressType)(nil)).Elem()
}

func (o AddressAddressTypeOutput) ToAddressAddressTypeOutput() AddressAddressTypeOutput {
	return o
}

func (o AddressAddressTypeOutput) ToAddressAddressTypeOutputWithContext(ctx context.Context) AddressAddressTypeOutput {
	return o
}

func (o AddressAddressTypeOutput) ToAddressAddressTypePtrOutput() AddressAddressTypePtrOutput {
	return o.ToAddressAddressTypePtrOutputWithContext(context.Background())
}

func (o AddressAddressTypeOutput) ToAddressAddressTypePtrOutputWithContext(ctx context.Context) AddressAddressTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressAddressType) *AddressAddressType {
		return &v
	}).(AddressAddressTypePtrOutput)
}

func (o AddressAddressTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressAddressTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressAddressType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressAddressTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressAddressTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressAddressType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressAddressTypePtrOutput struct{ *pulumi.OutputState }

func (AddressAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressAddressType)(nil)).Elem()
}

func (o AddressAddressTypePtrOutput) ToAddressAddressTypePtrOutput() AddressAddressTypePtrOutput {
	return o
}

func (o AddressAddressTypePtrOutput) ToAddressAddressTypePtrOutputWithContext(ctx context.Context) AddressAddressTypePtrOutput {
	return o
}

func (o AddressAddressTypePtrOutput) Elem() AddressAddressTypeOutput {
	return o.ApplyT(func(v *AddressAddressType) AddressAddressType {
		if v != nil {
			return *v
		}
		var ret AddressAddressType
		return ret
	}).(AddressAddressTypeOutput)
}

func (o AddressAddressTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressAddressTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressAddressType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressAddressTypeInput is an input type that accepts AddressAddressTypeArgs and AddressAddressTypeOutput values.
// You can construct a concrete instance of `AddressAddressTypeInput` via:
//
//          AddressAddressTypeArgs{...}
type AddressAddressTypeInput interface {
	pulumi.Input

	ToAddressAddressTypeOutput() AddressAddressTypeOutput
	ToAddressAddressTypeOutputWithContext(context.Context) AddressAddressTypeOutput
}

var addressAddressTypePtrType = reflect.TypeOf((**AddressAddressType)(nil)).Elem()

type AddressAddressTypePtrInput interface {
	pulumi.Input

	ToAddressAddressTypePtrOutput() AddressAddressTypePtrOutput
	ToAddressAddressTypePtrOutputWithContext(context.Context) AddressAddressTypePtrOutput
}

type addressAddressTypePtr string

func AddressAddressTypePtr(v string) AddressAddressTypePtrInput {
	return (*addressAddressTypePtr)(&v)
}

func (*addressAddressTypePtr) ElementType() reflect.Type {
	return addressAddressTypePtrType
}

func (in *addressAddressTypePtr) ToAddressAddressTypePtrOutput() AddressAddressTypePtrOutput {
	return pulumi.ToOutput(in).(AddressAddressTypePtrOutput)
}

func (in *addressAddressTypePtr) ToAddressAddressTypePtrOutputWithContext(ctx context.Context) AddressAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressAddressTypePtrOutput)
}

// The IP version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
type AddressIpVersion string

const (
	AddressIpVersionIpv4               = AddressIpVersion("IPV4")
	AddressIpVersionIpv6               = AddressIpVersion("IPV6")
	AddressIpVersionUnspecifiedVersion = AddressIpVersion("UNSPECIFIED_VERSION")
)

func (AddressIpVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressIpVersion)(nil)).Elem()
}

func (e AddressIpVersion) ToAddressIpVersionOutput() AddressIpVersionOutput {
	return pulumi.ToOutput(e).(AddressIpVersionOutput)
}

func (e AddressIpVersion) ToAddressIpVersionOutputWithContext(ctx context.Context) AddressIpVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressIpVersionOutput)
}

func (e AddressIpVersion) ToAddressIpVersionPtrOutput() AddressIpVersionPtrOutput {
	return e.ToAddressIpVersionPtrOutputWithContext(context.Background())
}

func (e AddressIpVersion) ToAddressIpVersionPtrOutputWithContext(ctx context.Context) AddressIpVersionPtrOutput {
	return AddressIpVersion(e).ToAddressIpVersionOutputWithContext(ctx).ToAddressIpVersionPtrOutputWithContext(ctx)
}

func (e AddressIpVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressIpVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressIpVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressIpVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressIpVersionOutput struct{ *pulumi.OutputState }

func (AddressIpVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressIpVersion)(nil)).Elem()
}

func (o AddressIpVersionOutput) ToAddressIpVersionOutput() AddressIpVersionOutput {
	return o
}

func (o AddressIpVersionOutput) ToAddressIpVersionOutputWithContext(ctx context.Context) AddressIpVersionOutput {
	return o
}

func (o AddressIpVersionOutput) ToAddressIpVersionPtrOutput() AddressIpVersionPtrOutput {
	return o.ToAddressIpVersionPtrOutputWithContext(context.Background())
}

func (o AddressIpVersionOutput) ToAddressIpVersionPtrOutputWithContext(ctx context.Context) AddressIpVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressIpVersion) *AddressIpVersion {
		return &v
	}).(AddressIpVersionPtrOutput)
}

func (o AddressIpVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressIpVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressIpVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressIpVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressIpVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressIpVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressIpVersionPtrOutput struct{ *pulumi.OutputState }

func (AddressIpVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressIpVersion)(nil)).Elem()
}

func (o AddressIpVersionPtrOutput) ToAddressIpVersionPtrOutput() AddressIpVersionPtrOutput {
	return o
}

func (o AddressIpVersionPtrOutput) ToAddressIpVersionPtrOutputWithContext(ctx context.Context) AddressIpVersionPtrOutput {
	return o
}

func (o AddressIpVersionPtrOutput) Elem() AddressIpVersionOutput {
	return o.ApplyT(func(v *AddressIpVersion) AddressIpVersion {
		if v != nil {
			return *v
		}
		var ret AddressIpVersion
		return ret
	}).(AddressIpVersionOutput)
}

func (o AddressIpVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressIpVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressIpVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressIpVersionInput is an input type that accepts AddressIpVersionArgs and AddressIpVersionOutput values.
// You can construct a concrete instance of `AddressIpVersionInput` via:
//
//          AddressIpVersionArgs{...}
type AddressIpVersionInput interface {
	pulumi.Input

	ToAddressIpVersionOutput() AddressIpVersionOutput
	ToAddressIpVersionOutputWithContext(context.Context) AddressIpVersionOutput
}

var addressIpVersionPtrType = reflect.TypeOf((**AddressIpVersion)(nil)).Elem()

type AddressIpVersionPtrInput interface {
	pulumi.Input

	ToAddressIpVersionPtrOutput() AddressIpVersionPtrOutput
	ToAddressIpVersionPtrOutputWithContext(context.Context) AddressIpVersionPtrOutput
}

type addressIpVersionPtr string

func AddressIpVersionPtr(v string) AddressIpVersionPtrInput {
	return (*addressIpVersionPtr)(&v)
}

func (*addressIpVersionPtr) ElementType() reflect.Type {
	return addressIpVersionPtrType
}

func (in *addressIpVersionPtr) ToAddressIpVersionPtrOutput() AddressIpVersionPtrOutput {
	return pulumi.ToOutput(in).(AddressIpVersionPtrOutput)
}

func (in *addressIpVersionPtr) ToAddressIpVersionPtrOutputWithContext(ctx context.Context) AddressIpVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressIpVersionPtrOutput)
}

// The endpoint type of this address, which should be VM. This is used for deciding which endpoint this address will be assigned to during the IPv6 external IP address reservation.
type AddressIpv6EndpointType string

const (
	// Reserved IPv6 address will be assigned to VM.
	AddressIpv6EndpointTypeVm = AddressIpv6EndpointType("VM")
)

func (AddressIpv6EndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressIpv6EndpointType)(nil)).Elem()
}

func (e AddressIpv6EndpointType) ToAddressIpv6EndpointTypeOutput() AddressIpv6EndpointTypeOutput {
	return pulumi.ToOutput(e).(AddressIpv6EndpointTypeOutput)
}

func (e AddressIpv6EndpointType) ToAddressIpv6EndpointTypeOutputWithContext(ctx context.Context) AddressIpv6EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressIpv6EndpointTypeOutput)
}

func (e AddressIpv6EndpointType) ToAddressIpv6EndpointTypePtrOutput() AddressIpv6EndpointTypePtrOutput {
	return e.ToAddressIpv6EndpointTypePtrOutputWithContext(context.Background())
}

func (e AddressIpv6EndpointType) ToAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) AddressIpv6EndpointTypePtrOutput {
	return AddressIpv6EndpointType(e).ToAddressIpv6EndpointTypeOutputWithContext(ctx).ToAddressIpv6EndpointTypePtrOutputWithContext(ctx)
}

func (e AddressIpv6EndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressIpv6EndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressIpv6EndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressIpv6EndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressIpv6EndpointTypeOutput struct{ *pulumi.OutputState }

func (AddressIpv6EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressIpv6EndpointType)(nil)).Elem()
}

func (o AddressIpv6EndpointTypeOutput) ToAddressIpv6EndpointTypeOutput() AddressIpv6EndpointTypeOutput {
	return o
}

func (o AddressIpv6EndpointTypeOutput) ToAddressIpv6EndpointTypeOutputWithContext(ctx context.Context) AddressIpv6EndpointTypeOutput {
	return o
}

func (o AddressIpv6EndpointTypeOutput) ToAddressIpv6EndpointTypePtrOutput() AddressIpv6EndpointTypePtrOutput {
	return o.ToAddressIpv6EndpointTypePtrOutputWithContext(context.Background())
}

func (o AddressIpv6EndpointTypeOutput) ToAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) AddressIpv6EndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressIpv6EndpointType) *AddressIpv6EndpointType {
		return &v
	}).(AddressIpv6EndpointTypePtrOutput)
}

func (o AddressIpv6EndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressIpv6EndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressIpv6EndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressIpv6EndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressIpv6EndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressIpv6EndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressIpv6EndpointTypePtrOutput struct{ *pulumi.OutputState }

func (AddressIpv6EndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressIpv6EndpointType)(nil)).Elem()
}

func (o AddressIpv6EndpointTypePtrOutput) ToAddressIpv6EndpointTypePtrOutput() AddressIpv6EndpointTypePtrOutput {
	return o
}

func (o AddressIpv6EndpointTypePtrOutput) ToAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) AddressIpv6EndpointTypePtrOutput {
	return o
}

func (o AddressIpv6EndpointTypePtrOutput) Elem() AddressIpv6EndpointTypeOutput {
	return o.ApplyT(func(v *AddressIpv6EndpointType) AddressIpv6EndpointType {
		if v != nil {
			return *v
		}
		var ret AddressIpv6EndpointType
		return ret
	}).(AddressIpv6EndpointTypeOutput)
}

func (o AddressIpv6EndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressIpv6EndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressIpv6EndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressIpv6EndpointTypeInput is an input type that accepts AddressIpv6EndpointTypeArgs and AddressIpv6EndpointTypeOutput values.
// You can construct a concrete instance of `AddressIpv6EndpointTypeInput` via:
//
//          AddressIpv6EndpointTypeArgs{...}
type AddressIpv6EndpointTypeInput interface {
	pulumi.Input

	ToAddressIpv6EndpointTypeOutput() AddressIpv6EndpointTypeOutput
	ToAddressIpv6EndpointTypeOutputWithContext(context.Context) AddressIpv6EndpointTypeOutput
}

var addressIpv6EndpointTypePtrType = reflect.TypeOf((**AddressIpv6EndpointType)(nil)).Elem()

type AddressIpv6EndpointTypePtrInput interface {
	pulumi.Input

	ToAddressIpv6EndpointTypePtrOutput() AddressIpv6EndpointTypePtrOutput
	ToAddressIpv6EndpointTypePtrOutputWithContext(context.Context) AddressIpv6EndpointTypePtrOutput
}

type addressIpv6EndpointTypePtr string

func AddressIpv6EndpointTypePtr(v string) AddressIpv6EndpointTypePtrInput {
	return (*addressIpv6EndpointTypePtr)(&v)
}

func (*addressIpv6EndpointTypePtr) ElementType() reflect.Type {
	return addressIpv6EndpointTypePtrType
}

func (in *addressIpv6EndpointTypePtr) ToAddressIpv6EndpointTypePtrOutput() AddressIpv6EndpointTypePtrOutput {
	return pulumi.ToOutput(in).(AddressIpv6EndpointTypePtrOutput)
}

func (in *addressIpv6EndpointTypePtr) ToAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) AddressIpv6EndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressIpv6EndpointTypePtrOutput)
}

// This signifies the networking tier used for configuring this address and can only take the following values: PREMIUM or STANDARD. Internal IP addresses are always Premium Tier; global external IP addresses are always Premium Tier; regional external IP addresses can be either Standard or Premium Tier. If this field is not specified, it is assumed to be PREMIUM.
type AddressNetworkTier string

const (
	// Public internet quality with fixed bandwidth.
	AddressNetworkTierFixedStandard = AddressNetworkTier("FIXED_STANDARD")
	// High quality, Google-grade network tier, support for all networking products.
	AddressNetworkTierPremium = AddressNetworkTier("PREMIUM")
	// Price competitive network tier, support for all networking products.
	AddressNetworkTierSelect = AddressNetworkTier("SELECT")
	// Public internet quality, only limited support for other networking products.
	AddressNetworkTierStandard = AddressNetworkTier("STANDARD")
	// (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
	AddressNetworkTierStandardOverridesFixedStandard = AddressNetworkTier("STANDARD_OVERRIDES_FIXED_STANDARD")
)

func (AddressNetworkTier) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressNetworkTier)(nil)).Elem()
}

func (e AddressNetworkTier) ToAddressNetworkTierOutput() AddressNetworkTierOutput {
	return pulumi.ToOutput(e).(AddressNetworkTierOutput)
}

func (e AddressNetworkTier) ToAddressNetworkTierOutputWithContext(ctx context.Context) AddressNetworkTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressNetworkTierOutput)
}

func (e AddressNetworkTier) ToAddressNetworkTierPtrOutput() AddressNetworkTierPtrOutput {
	return e.ToAddressNetworkTierPtrOutputWithContext(context.Background())
}

func (e AddressNetworkTier) ToAddressNetworkTierPtrOutputWithContext(ctx context.Context) AddressNetworkTierPtrOutput {
	return AddressNetworkTier(e).ToAddressNetworkTierOutputWithContext(ctx).ToAddressNetworkTierPtrOutputWithContext(ctx)
}

func (e AddressNetworkTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressNetworkTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressNetworkTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressNetworkTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressNetworkTierOutput struct{ *pulumi.OutputState }

func (AddressNetworkTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressNetworkTier)(nil)).Elem()
}

func (o AddressNetworkTierOutput) ToAddressNetworkTierOutput() AddressNetworkTierOutput {
	return o
}

func (o AddressNetworkTierOutput) ToAddressNetworkTierOutputWithContext(ctx context.Context) AddressNetworkTierOutput {
	return o
}

func (o AddressNetworkTierOutput) ToAddressNetworkTierPtrOutput() AddressNetworkTierPtrOutput {
	return o.ToAddressNetworkTierPtrOutputWithContext(context.Background())
}

func (o AddressNetworkTierOutput) ToAddressNetworkTierPtrOutputWithContext(ctx context.Context) AddressNetworkTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressNetworkTier) *AddressNetworkTier {
		return &v
	}).(AddressNetworkTierPtrOutput)
}

func (o AddressNetworkTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressNetworkTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressNetworkTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressNetworkTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressNetworkTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressNetworkTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressNetworkTierPtrOutput struct{ *pulumi.OutputState }

func (AddressNetworkTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressNetworkTier)(nil)).Elem()
}

func (o AddressNetworkTierPtrOutput) ToAddressNetworkTierPtrOutput() AddressNetworkTierPtrOutput {
	return o
}

func (o AddressNetworkTierPtrOutput) ToAddressNetworkTierPtrOutputWithContext(ctx context.Context) AddressNetworkTierPtrOutput {
	return o
}

func (o AddressNetworkTierPtrOutput) Elem() AddressNetworkTierOutput {
	return o.ApplyT(func(v *AddressNetworkTier) AddressNetworkTier {
		if v != nil {
			return *v
		}
		var ret AddressNetworkTier
		return ret
	}).(AddressNetworkTierOutput)
}

func (o AddressNetworkTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressNetworkTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressNetworkTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressNetworkTierInput is an input type that accepts AddressNetworkTierArgs and AddressNetworkTierOutput values.
// You can construct a concrete instance of `AddressNetworkTierInput` via:
//
//          AddressNetworkTierArgs{...}
type AddressNetworkTierInput interface {
	pulumi.Input

	ToAddressNetworkTierOutput() AddressNetworkTierOutput
	ToAddressNetworkTierOutputWithContext(context.Context) AddressNetworkTierOutput
}

var addressNetworkTierPtrType = reflect.TypeOf((**AddressNetworkTier)(nil)).Elem()

type AddressNetworkTierPtrInput interface {
	pulumi.Input

	ToAddressNetworkTierPtrOutput() AddressNetworkTierPtrOutput
	ToAddressNetworkTierPtrOutputWithContext(context.Context) AddressNetworkTierPtrOutput
}

type addressNetworkTierPtr string

func AddressNetworkTierPtr(v string) AddressNetworkTierPtrInput {
	return (*addressNetworkTierPtr)(&v)
}

func (*addressNetworkTierPtr) ElementType() reflect.Type {
	return addressNetworkTierPtrType
}

func (in *addressNetworkTierPtr) ToAddressNetworkTierPtrOutput() AddressNetworkTierPtrOutput {
	return pulumi.ToOutput(in).(AddressNetworkTierPtrOutput)
}

func (in *addressNetworkTierPtr) ToAddressNetworkTierPtrOutputWithContext(ctx context.Context) AddressNetworkTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressNetworkTierPtrOutput)
}

// The purpose of this resource, which can be one of the following values: - GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver address in a subnetwork for a Cloud DNS inbound forwarder IP addresses (regional internal IP address in a subnet of a VPC network) - VPC_PEERING for global internal IP addresses used for private services access allocated ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT when allocating addresses using automatic NAT IP address allocation. - IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an *IPsec-encrypted Cloud Interconnect* configuration. These addresses are regional resources. Not currently available publicly. - `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a private network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose.
type AddressPurpose string

const (
	// DNS resolver address in the subnetwork.
	AddressPurposeDnsResolver = AddressPurpose("DNS_RESOLVER")
	// VM internal/alias IP, Internal LB service IP, etc.
	AddressPurposeGceEndpoint = AddressPurpose("GCE_ENDPOINT")
	// A regional internal IP address range reserved for the VLAN attachment that is used in IPsec-encrypted Cloud Interconnect. This regional internal IP address range must not overlap with any IP address range of subnet/route in the VPC network and its peering networks. After the VLAN attachment is created with the reserved IP address range, when creating a new VPN gateway, its interface IP address is allocated from the associated VLAN attachment’s IP address range.
	AddressPurposeIpsecInterconnect = AddressPurpose("IPSEC_INTERCONNECT")
	// External IP automatically reserved for Cloud NAT.
	AddressPurposeNatAuto = AddressPurpose("NAT_AUTO")
	// A private network IP address that can be used to configure Private Service Connect. This purpose can be specified only for GLOBAL addresses of Type INTERNAL
	AddressPurposePrivateServiceConnect = AddressPurpose("PRIVATE_SERVICE_CONNECT")
	// A private network IP address that can be shared by multiple Internal Load Balancer forwarding rules.
	AddressPurposeSharedLoadbalancerVip = AddressPurpose("SHARED_LOADBALANCER_VIP")
	// IP range for peer networks.
	AddressPurposeVpcPeering = AddressPurpose("VPC_PEERING")
)

func (AddressPurpose) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPurpose)(nil)).Elem()
}

func (e AddressPurpose) ToAddressPurposeOutput() AddressPurposeOutput {
	return pulumi.ToOutput(e).(AddressPurposeOutput)
}

func (e AddressPurpose) ToAddressPurposeOutputWithContext(ctx context.Context) AddressPurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AddressPurposeOutput)
}

func (e AddressPurpose) ToAddressPurposePtrOutput() AddressPurposePtrOutput {
	return e.ToAddressPurposePtrOutputWithContext(context.Background())
}

func (e AddressPurpose) ToAddressPurposePtrOutputWithContext(ctx context.Context) AddressPurposePtrOutput {
	return AddressPurpose(e).ToAddressPurposeOutputWithContext(ctx).ToAddressPurposePtrOutputWithContext(ctx)
}

func (e AddressPurpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressPurpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AddressPurpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AddressPurpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AddressPurposeOutput struct{ *pulumi.OutputState }

func (AddressPurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPurpose)(nil)).Elem()
}

func (o AddressPurposeOutput) ToAddressPurposeOutput() AddressPurposeOutput {
	return o
}

func (o AddressPurposeOutput) ToAddressPurposeOutputWithContext(ctx context.Context) AddressPurposeOutput {
	return o
}

func (o AddressPurposeOutput) ToAddressPurposePtrOutput() AddressPurposePtrOutput {
	return o.ToAddressPurposePtrOutputWithContext(context.Background())
}

func (o AddressPurposeOutput) ToAddressPurposePtrOutputWithContext(ctx context.Context) AddressPurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddressPurpose) *AddressPurpose {
		return &v
	}).(AddressPurposePtrOutput)
}

func (o AddressPurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AddressPurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressPurpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AddressPurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressPurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AddressPurpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AddressPurposePtrOutput struct{ *pulumi.OutputState }

func (AddressPurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressPurpose)(nil)).Elem()
}

func (o AddressPurposePtrOutput) ToAddressPurposePtrOutput() AddressPurposePtrOutput {
	return o
}

func (o AddressPurposePtrOutput) ToAddressPurposePtrOutputWithContext(ctx context.Context) AddressPurposePtrOutput {
	return o
}

func (o AddressPurposePtrOutput) Elem() AddressPurposeOutput {
	return o.ApplyT(func(v *AddressPurpose) AddressPurpose {
		if v != nil {
			return *v
		}
		var ret AddressPurpose
		return ret
	}).(AddressPurposeOutput)
}

func (o AddressPurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AddressPurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AddressPurpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AddressPurposeInput is an input type that accepts AddressPurposeArgs and AddressPurposeOutput values.
// You can construct a concrete instance of `AddressPurposeInput` via:
//
//          AddressPurposeArgs{...}
type AddressPurposeInput interface {
	pulumi.Input

	ToAddressPurposeOutput() AddressPurposeOutput
	ToAddressPurposeOutputWithContext(context.Context) AddressPurposeOutput
}

var addressPurposePtrType = reflect.TypeOf((**AddressPurpose)(nil)).Elem()

type AddressPurposePtrInput interface {
	pulumi.Input

	ToAddressPurposePtrOutput() AddressPurposePtrOutput
	ToAddressPurposePtrOutputWithContext(context.Context) AddressPurposePtrOutput
}

type addressPurposePtr string

func AddressPurposePtr(v string) AddressPurposePtrInput {
	return (*addressPurposePtr)(&v)
}

func (*addressPurposePtr) ElementType() reflect.Type {
	return addressPurposePtrType
}

func (in *addressPurposePtr) ToAddressPurposePtrOutput() AddressPurposePtrOutput {
	return pulumi.ToOutput(in).(AddressPurposePtrOutput)
}

func (in *addressPurposePtr) ToAddressPurposePtrOutputWithContext(ctx context.Context) AddressPurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AddressPurposePtrOutput)
}

// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
type AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface string

const (
	AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceNvdimm = AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface("NVDIMM")
	AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceNvme   = AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface("NVME")
	AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceScsi   = AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface("SCSI")
)

func (AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface)(nil)).Elem()
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput {
	return pulumi.ToOutput(e).(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput)
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput)
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return e.ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(context.Background())
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface(e).ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutputWithContext(ctx).ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(ctx)
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput struct{ *pulumi.OutputState }

func (AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface)(nil)).Elem()
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput {
	return o
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput {
	return o
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return o.ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) *AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface {
		return &v
	}).(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput)
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput struct{ *pulumi.OutputState }

func (AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface)(nil)).Elem()
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return o
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return o
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput) Elem() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput {
	return o.ApplyT(func(v *AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface {
		if v != nil {
			return *v
		}
		var ret AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface
		return ret
	}).(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput)
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceInput is an input type that accepts AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceArgs and AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput values.
// You can construct a concrete instance of `AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceInput` via:
//
//          AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceArgs{...}
type AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceInput interface {
	pulumi.Input

	ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput
	ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutputWithContext(context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput
}

var allocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrType = reflect.TypeOf((**AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface)(nil)).Elem()

type AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrInput interface {
	pulumi.Input

	ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput
	ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput
}

type allocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtr string

func AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtr(v string) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrInput {
	return (*allocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtr)(&v)
}

func (*allocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtr) ElementType() reflect.Type {
	return allocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrType
}

func (in *allocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtr) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput() AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return pulumi.ToOutput(in).(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput)
}

func (in *allocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtr) ToAllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput)
}

// For more information about maintenance intervals, see Setting maintenance intervals.
type AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval string

const (
	// VMs receive infrastructure and hypervisor updates on a periodic basis, minimizing the number of maintenance operations (live migrations or terminations) on an individual VM. This may mean a VM will take longer to receive an update than if it was configured for AS_NEEDED. Security updates will still be applied as soon as they are available.
	AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPeriodic = AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval("PERIODIC")
)

func (AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ElementType() reflect.Type {
	return reflect.TypeOf((*AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval)(nil)).Elem()
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput {
	return pulumi.ToOutput(e).(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput)
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput)
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return e.ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(context.Background())
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval(e).ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutputWithContext(ctx).ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(ctx)
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput struct{ *pulumi.OutputState }

func (AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval)(nil)).Elem()
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput {
	return o
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput {
	return o
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return o.ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) *AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval {
		return &v
	}).(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput)
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput struct{ *pulumi.OutputState }

func (AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval)(nil)).Elem()
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return o
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return o
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput) Elem() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput {
	return o.ApplyT(func(v *AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval {
		if v != nil {
			return *v
		}
		var ret AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval
		return ret
	}).(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput)
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalInput is an input type that accepts AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalArgs and AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput values.
// You can construct a concrete instance of `AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalInput` via:
//
//          AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalArgs{...}
type AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalInput interface {
	pulumi.Input

	ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput
	ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutputWithContext(context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput
}

var allocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrType = reflect.TypeOf((**AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval)(nil)).Elem()

type AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrInput interface {
	pulumi.Input

	ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput
	ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput
}

type allocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtr string

func AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtr(v string) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrInput {
	return (*allocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtr)(&v)
}

func (*allocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtr) ElementType() reflect.Type {
	return allocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrType
}

func (in *allocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtr) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput() AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return pulumi.ToOutput(in).(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput)
}

func (in *allocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtr) ToAllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutputWithContext(ctx context.Context) AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput)
}

// The architecture of the attached disk. Valid values are arm64 or x86_64.
type AttachedDiskInitializeParamsArchitecture string

const (
	// Default value indicating Architecture is not set.
	AttachedDiskInitializeParamsArchitectureArchitectureUnspecified = AttachedDiskInitializeParamsArchitecture("ARCHITECTURE_UNSPECIFIED")
	// Machines with architecture ARM64
	AttachedDiskInitializeParamsArchitectureArm64 = AttachedDiskInitializeParamsArchitecture("ARM64")
	// Machines with architecture X86_64
	AttachedDiskInitializeParamsArchitectureX8664 = AttachedDiskInitializeParamsArchitecture("X86_64")
)

func (AttachedDiskInitializeParamsArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInitializeParamsArchitecture)(nil)).Elem()
}

func (e AttachedDiskInitializeParamsArchitecture) ToAttachedDiskInitializeParamsArchitectureOutput() AttachedDiskInitializeParamsArchitectureOutput {
	return pulumi.ToOutput(e).(AttachedDiskInitializeParamsArchitectureOutput)
}

func (e AttachedDiskInitializeParamsArchitecture) ToAttachedDiskInitializeParamsArchitectureOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttachedDiskInitializeParamsArchitectureOutput)
}

func (e AttachedDiskInitializeParamsArchitecture) ToAttachedDiskInitializeParamsArchitecturePtrOutput() AttachedDiskInitializeParamsArchitecturePtrOutput {
	return e.ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(context.Background())
}

func (e AttachedDiskInitializeParamsArchitecture) ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsArchitecturePtrOutput {
	return AttachedDiskInitializeParamsArchitecture(e).ToAttachedDiskInitializeParamsArchitectureOutputWithContext(ctx).ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(ctx)
}

func (e AttachedDiskInitializeParamsArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInitializeParamsArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInitializeParamsArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttachedDiskInitializeParamsArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttachedDiskInitializeParamsArchitectureOutput struct{ *pulumi.OutputState }

func (AttachedDiskInitializeParamsArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInitializeParamsArchitecture)(nil)).Elem()
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToAttachedDiskInitializeParamsArchitectureOutput() AttachedDiskInitializeParamsArchitectureOutput {
	return o
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToAttachedDiskInitializeParamsArchitectureOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsArchitectureOutput {
	return o
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToAttachedDiskInitializeParamsArchitecturePtrOutput() AttachedDiskInitializeParamsArchitecturePtrOutput {
	return o.ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDiskInitializeParamsArchitecture) *AttachedDiskInitializeParamsArchitecture {
		return &v
	}).(AttachedDiskInitializeParamsArchitecturePtrOutput)
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInitializeParamsArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInitializeParamsArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttachedDiskInitializeParamsArchitecturePtrOutput struct{ *pulumi.OutputState }

func (AttachedDiskInitializeParamsArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDiskInitializeParamsArchitecture)(nil)).Elem()
}

func (o AttachedDiskInitializeParamsArchitecturePtrOutput) ToAttachedDiskInitializeParamsArchitecturePtrOutput() AttachedDiskInitializeParamsArchitecturePtrOutput {
	return o
}

func (o AttachedDiskInitializeParamsArchitecturePtrOutput) ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsArchitecturePtrOutput {
	return o
}

func (o AttachedDiskInitializeParamsArchitecturePtrOutput) Elem() AttachedDiskInitializeParamsArchitectureOutput {
	return o.ApplyT(func(v *AttachedDiskInitializeParamsArchitecture) AttachedDiskInitializeParamsArchitecture {
		if v != nil {
			return *v
		}
		var ret AttachedDiskInitializeParamsArchitecture
		return ret
	}).(AttachedDiskInitializeParamsArchitectureOutput)
}

func (o AttachedDiskInitializeParamsArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttachedDiskInitializeParamsArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttachedDiskInitializeParamsArchitectureInput is an input type that accepts AttachedDiskInitializeParamsArchitectureArgs and AttachedDiskInitializeParamsArchitectureOutput values.
// You can construct a concrete instance of `AttachedDiskInitializeParamsArchitectureInput` via:
//
//          AttachedDiskInitializeParamsArchitectureArgs{...}
type AttachedDiskInitializeParamsArchitectureInput interface {
	pulumi.Input

	ToAttachedDiskInitializeParamsArchitectureOutput() AttachedDiskInitializeParamsArchitectureOutput
	ToAttachedDiskInitializeParamsArchitectureOutputWithContext(context.Context) AttachedDiskInitializeParamsArchitectureOutput
}

var attachedDiskInitializeParamsArchitecturePtrType = reflect.TypeOf((**AttachedDiskInitializeParamsArchitecture)(nil)).Elem()

type AttachedDiskInitializeParamsArchitecturePtrInput interface {
	pulumi.Input

	ToAttachedDiskInitializeParamsArchitecturePtrOutput() AttachedDiskInitializeParamsArchitecturePtrOutput
	ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(context.Context) AttachedDiskInitializeParamsArchitecturePtrOutput
}

type attachedDiskInitializeParamsArchitecturePtr string

func AttachedDiskInitializeParamsArchitecturePtr(v string) AttachedDiskInitializeParamsArchitecturePtrInput {
	return (*attachedDiskInitializeParamsArchitecturePtr)(&v)
}

func (*attachedDiskInitializeParamsArchitecturePtr) ElementType() reflect.Type {
	return attachedDiskInitializeParamsArchitecturePtrType
}

func (in *attachedDiskInitializeParamsArchitecturePtr) ToAttachedDiskInitializeParamsArchitecturePtrOutput() AttachedDiskInitializeParamsArchitecturePtrOutput {
	return pulumi.ToOutput(in).(AttachedDiskInitializeParamsArchitecturePtrOutput)
}

func (in *attachedDiskInitializeParamsArchitecturePtr) ToAttachedDiskInitializeParamsArchitecturePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttachedDiskInitializeParamsArchitecturePtrOutput)
}

// [Deprecated] Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
type AttachedDiskInitializeParamsInterface string

const (
	AttachedDiskInitializeParamsInterfaceNvme        = AttachedDiskInitializeParamsInterface("NVME")
	AttachedDiskInitializeParamsInterfaceScsi        = AttachedDiskInitializeParamsInterface("SCSI")
	AttachedDiskInitializeParamsInterfaceUnspecified = AttachedDiskInitializeParamsInterface("UNSPECIFIED")
)

func (AttachedDiskInitializeParamsInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInitializeParamsInterface)(nil)).Elem()
}

func (e AttachedDiskInitializeParamsInterface) ToAttachedDiskInitializeParamsInterfaceOutput() AttachedDiskInitializeParamsInterfaceOutput {
	return pulumi.ToOutput(e).(AttachedDiskInitializeParamsInterfaceOutput)
}

func (e AttachedDiskInitializeParamsInterface) ToAttachedDiskInitializeParamsInterfaceOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttachedDiskInitializeParamsInterfaceOutput)
}

func (e AttachedDiskInitializeParamsInterface) ToAttachedDiskInitializeParamsInterfacePtrOutput() AttachedDiskInitializeParamsInterfacePtrOutput {
	return e.ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(context.Background())
}

func (e AttachedDiskInitializeParamsInterface) ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsInterfacePtrOutput {
	return AttachedDiskInitializeParamsInterface(e).ToAttachedDiskInitializeParamsInterfaceOutputWithContext(ctx).ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(ctx)
}

func (e AttachedDiskInitializeParamsInterface) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInitializeParamsInterface) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInitializeParamsInterface) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttachedDiskInitializeParamsInterface) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttachedDiskInitializeParamsInterfaceOutput struct{ *pulumi.OutputState }

func (AttachedDiskInitializeParamsInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInitializeParamsInterface)(nil)).Elem()
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToAttachedDiskInitializeParamsInterfaceOutput() AttachedDiskInitializeParamsInterfaceOutput {
	return o
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToAttachedDiskInitializeParamsInterfaceOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsInterfaceOutput {
	return o
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToAttachedDiskInitializeParamsInterfacePtrOutput() AttachedDiskInitializeParamsInterfacePtrOutput {
	return o.ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsInterfacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDiskInitializeParamsInterface) *AttachedDiskInitializeParamsInterface {
		return &v
	}).(AttachedDiskInitializeParamsInterfacePtrOutput)
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInitializeParamsInterface) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsInterfaceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInitializeParamsInterface) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttachedDiskInitializeParamsInterfacePtrOutput struct{ *pulumi.OutputState }

func (AttachedDiskInitializeParamsInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDiskInitializeParamsInterface)(nil)).Elem()
}

func (o AttachedDiskInitializeParamsInterfacePtrOutput) ToAttachedDiskInitializeParamsInterfacePtrOutput() AttachedDiskInitializeParamsInterfacePtrOutput {
	return o
}

func (o AttachedDiskInitializeParamsInterfacePtrOutput) ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsInterfacePtrOutput {
	return o
}

func (o AttachedDiskInitializeParamsInterfacePtrOutput) Elem() AttachedDiskInitializeParamsInterfaceOutput {
	return o.ApplyT(func(v *AttachedDiskInitializeParamsInterface) AttachedDiskInitializeParamsInterface {
		if v != nil {
			return *v
		}
		var ret AttachedDiskInitializeParamsInterface
		return ret
	}).(AttachedDiskInitializeParamsInterfaceOutput)
}

func (o AttachedDiskInitializeParamsInterfacePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsInterfacePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttachedDiskInitializeParamsInterface) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttachedDiskInitializeParamsInterfaceInput is an input type that accepts AttachedDiskInitializeParamsInterfaceArgs and AttachedDiskInitializeParamsInterfaceOutput values.
// You can construct a concrete instance of `AttachedDiskInitializeParamsInterfaceInput` via:
//
//          AttachedDiskInitializeParamsInterfaceArgs{...}
type AttachedDiskInitializeParamsInterfaceInput interface {
	pulumi.Input

	ToAttachedDiskInitializeParamsInterfaceOutput() AttachedDiskInitializeParamsInterfaceOutput
	ToAttachedDiskInitializeParamsInterfaceOutputWithContext(context.Context) AttachedDiskInitializeParamsInterfaceOutput
}

var attachedDiskInitializeParamsInterfacePtrType = reflect.TypeOf((**AttachedDiskInitializeParamsInterface)(nil)).Elem()

type AttachedDiskInitializeParamsInterfacePtrInput interface {
	pulumi.Input

	ToAttachedDiskInitializeParamsInterfacePtrOutput() AttachedDiskInitializeParamsInterfacePtrOutput
	ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(context.Context) AttachedDiskInitializeParamsInterfacePtrOutput
}

type attachedDiskInitializeParamsInterfacePtr string

func AttachedDiskInitializeParamsInterfacePtr(v string) AttachedDiskInitializeParamsInterfacePtrInput {
	return (*attachedDiskInitializeParamsInterfacePtr)(&v)
}

func (*attachedDiskInitializeParamsInterfacePtr) ElementType() reflect.Type {
	return attachedDiskInitializeParamsInterfacePtrType
}

func (in *attachedDiskInitializeParamsInterfacePtr) ToAttachedDiskInitializeParamsInterfacePtrOutput() AttachedDiskInitializeParamsInterfacePtrOutput {
	return pulumi.ToOutput(in).(AttachedDiskInitializeParamsInterfacePtrOutput)
}

func (in *attachedDiskInitializeParamsInterfacePtr) ToAttachedDiskInitializeParamsInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttachedDiskInitializeParamsInterfacePtrOutput)
}

// Specifies which action to take on instance update with this disk. Default is to use the existing disk.
type AttachedDiskInitializeParamsOnUpdateAction string

const (
	// Always recreate the disk.
	AttachedDiskInitializeParamsOnUpdateActionRecreateDisk = AttachedDiskInitializeParamsOnUpdateAction("RECREATE_DISK")
	// Recreate the disk if source (image, snapshot) of this disk is different from source of existing disk.
	AttachedDiskInitializeParamsOnUpdateActionRecreateDiskIfSourceChanged = AttachedDiskInitializeParamsOnUpdateAction("RECREATE_DISK_IF_SOURCE_CHANGED")
	// Use the existing disk, this is the default behaviour.
	AttachedDiskInitializeParamsOnUpdateActionUseExistingDisk = AttachedDiskInitializeParamsOnUpdateAction("USE_EXISTING_DISK")
)

func (AttachedDiskInitializeParamsOnUpdateAction) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInitializeParamsOnUpdateAction)(nil)).Elem()
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToAttachedDiskInitializeParamsOnUpdateActionOutput() AttachedDiskInitializeParamsOnUpdateActionOutput {
	return pulumi.ToOutput(e).(AttachedDiskInitializeParamsOnUpdateActionOutput)
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToAttachedDiskInitializeParamsOnUpdateActionOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsOnUpdateActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttachedDiskInitializeParamsOnUpdateActionOutput)
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutput() AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return e.ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(context.Background())
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return AttachedDiskInitializeParamsOnUpdateAction(e).ToAttachedDiskInitializeParamsOnUpdateActionOutputWithContext(ctx).ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(ctx)
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttachedDiskInitializeParamsOnUpdateAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttachedDiskInitializeParamsOnUpdateActionOutput struct{ *pulumi.OutputState }

func (AttachedDiskInitializeParamsOnUpdateActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInitializeParamsOnUpdateAction)(nil)).Elem()
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToAttachedDiskInitializeParamsOnUpdateActionOutput() AttachedDiskInitializeParamsOnUpdateActionOutput {
	return o
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToAttachedDiskInitializeParamsOnUpdateActionOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsOnUpdateActionOutput {
	return o
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutput() AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return o.ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDiskInitializeParamsOnUpdateAction) *AttachedDiskInitializeParamsOnUpdateAction {
		return &v
	}).(AttachedDiskInitializeParamsOnUpdateActionPtrOutput)
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInitializeParamsOnUpdateAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsOnUpdateActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInitializeParamsOnUpdateAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttachedDiskInitializeParamsOnUpdateActionPtrOutput struct{ *pulumi.OutputState }

func (AttachedDiskInitializeParamsOnUpdateActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDiskInitializeParamsOnUpdateAction)(nil)).Elem()
}

func (o AttachedDiskInitializeParamsOnUpdateActionPtrOutput) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutput() AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return o
}

func (o AttachedDiskInitializeParamsOnUpdateActionPtrOutput) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return o
}

func (o AttachedDiskInitializeParamsOnUpdateActionPtrOutput) Elem() AttachedDiskInitializeParamsOnUpdateActionOutput {
	return o.ApplyT(func(v *AttachedDiskInitializeParamsOnUpdateAction) AttachedDiskInitializeParamsOnUpdateAction {
		if v != nil {
			return *v
		}
		var ret AttachedDiskInitializeParamsOnUpdateAction
		return ret
	}).(AttachedDiskInitializeParamsOnUpdateActionOutput)
}

func (o AttachedDiskInitializeParamsOnUpdateActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInitializeParamsOnUpdateActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttachedDiskInitializeParamsOnUpdateAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttachedDiskInitializeParamsOnUpdateActionInput is an input type that accepts AttachedDiskInitializeParamsOnUpdateActionArgs and AttachedDiskInitializeParamsOnUpdateActionOutput values.
// You can construct a concrete instance of `AttachedDiskInitializeParamsOnUpdateActionInput` via:
//
//          AttachedDiskInitializeParamsOnUpdateActionArgs{...}
type AttachedDiskInitializeParamsOnUpdateActionInput interface {
	pulumi.Input

	ToAttachedDiskInitializeParamsOnUpdateActionOutput() AttachedDiskInitializeParamsOnUpdateActionOutput
	ToAttachedDiskInitializeParamsOnUpdateActionOutputWithContext(context.Context) AttachedDiskInitializeParamsOnUpdateActionOutput
}

var attachedDiskInitializeParamsOnUpdateActionPtrType = reflect.TypeOf((**AttachedDiskInitializeParamsOnUpdateAction)(nil)).Elem()

type AttachedDiskInitializeParamsOnUpdateActionPtrInput interface {
	pulumi.Input

	ToAttachedDiskInitializeParamsOnUpdateActionPtrOutput() AttachedDiskInitializeParamsOnUpdateActionPtrOutput
	ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(context.Context) AttachedDiskInitializeParamsOnUpdateActionPtrOutput
}

type attachedDiskInitializeParamsOnUpdateActionPtr string

func AttachedDiskInitializeParamsOnUpdateActionPtr(v string) AttachedDiskInitializeParamsOnUpdateActionPtrInput {
	return (*attachedDiskInitializeParamsOnUpdateActionPtr)(&v)
}

func (*attachedDiskInitializeParamsOnUpdateActionPtr) ElementType() reflect.Type {
	return attachedDiskInitializeParamsOnUpdateActionPtrType
}

func (in *attachedDiskInitializeParamsOnUpdateActionPtr) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutput() AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return pulumi.ToOutput(in).(AttachedDiskInitializeParamsOnUpdateActionPtrOutput)
}

func (in *attachedDiskInitializeParamsOnUpdateActionPtr) ToAttachedDiskInitializeParamsOnUpdateActionPtrOutputWithContext(ctx context.Context) AttachedDiskInitializeParamsOnUpdateActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttachedDiskInitializeParamsOnUpdateActionPtrOutput)
}

// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
type AttachedDiskInterface string

const (
	AttachedDiskInterfaceNvdimm = AttachedDiskInterface("NVDIMM")
	AttachedDiskInterfaceNvme   = AttachedDiskInterface("NVME")
	AttachedDiskInterfaceScsi   = AttachedDiskInterface("SCSI")
)

func (AttachedDiskInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInterface)(nil)).Elem()
}

func (e AttachedDiskInterface) ToAttachedDiskInterfaceOutput() AttachedDiskInterfaceOutput {
	return pulumi.ToOutput(e).(AttachedDiskInterfaceOutput)
}

func (e AttachedDiskInterface) ToAttachedDiskInterfaceOutputWithContext(ctx context.Context) AttachedDiskInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttachedDiskInterfaceOutput)
}

func (e AttachedDiskInterface) ToAttachedDiskInterfacePtrOutput() AttachedDiskInterfacePtrOutput {
	return e.ToAttachedDiskInterfacePtrOutputWithContext(context.Background())
}

func (e AttachedDiskInterface) ToAttachedDiskInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInterfacePtrOutput {
	return AttachedDiskInterface(e).ToAttachedDiskInterfaceOutputWithContext(ctx).ToAttachedDiskInterfacePtrOutputWithContext(ctx)
}

func (e AttachedDiskInterface) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInterface) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskInterface) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttachedDiskInterface) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttachedDiskInterfaceOutput struct{ *pulumi.OutputState }

func (AttachedDiskInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskInterface)(nil)).Elem()
}

func (o AttachedDiskInterfaceOutput) ToAttachedDiskInterfaceOutput() AttachedDiskInterfaceOutput {
	return o
}

func (o AttachedDiskInterfaceOutput) ToAttachedDiskInterfaceOutputWithContext(ctx context.Context) AttachedDiskInterfaceOutput {
	return o
}

func (o AttachedDiskInterfaceOutput) ToAttachedDiskInterfacePtrOutput() AttachedDiskInterfacePtrOutput {
	return o.ToAttachedDiskInterfacePtrOutputWithContext(context.Background())
}

func (o AttachedDiskInterfaceOutput) ToAttachedDiskInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInterfacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDiskInterface) *AttachedDiskInterface {
		return &v
	}).(AttachedDiskInterfacePtrOutput)
}

func (o AttachedDiskInterfaceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttachedDiskInterfaceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInterface) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttachedDiskInterfaceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInterfaceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskInterface) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttachedDiskInterfacePtrOutput struct{ *pulumi.OutputState }

func (AttachedDiskInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDiskInterface)(nil)).Elem()
}

func (o AttachedDiskInterfacePtrOutput) ToAttachedDiskInterfacePtrOutput() AttachedDiskInterfacePtrOutput {
	return o
}

func (o AttachedDiskInterfacePtrOutput) ToAttachedDiskInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInterfacePtrOutput {
	return o
}

func (o AttachedDiskInterfacePtrOutput) Elem() AttachedDiskInterfaceOutput {
	return o.ApplyT(func(v *AttachedDiskInterface) AttachedDiskInterface {
		if v != nil {
			return *v
		}
		var ret AttachedDiskInterface
		return ret
	}).(AttachedDiskInterfaceOutput)
}

func (o AttachedDiskInterfacePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskInterfacePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttachedDiskInterface) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttachedDiskInterfaceInput is an input type that accepts AttachedDiskInterfaceArgs and AttachedDiskInterfaceOutput values.
// You can construct a concrete instance of `AttachedDiskInterfaceInput` via:
//
//          AttachedDiskInterfaceArgs{...}
type AttachedDiskInterfaceInput interface {
	pulumi.Input

	ToAttachedDiskInterfaceOutput() AttachedDiskInterfaceOutput
	ToAttachedDiskInterfaceOutputWithContext(context.Context) AttachedDiskInterfaceOutput
}

var attachedDiskInterfacePtrType = reflect.TypeOf((**AttachedDiskInterface)(nil)).Elem()

type AttachedDiskInterfacePtrInput interface {
	pulumi.Input

	ToAttachedDiskInterfacePtrOutput() AttachedDiskInterfacePtrOutput
	ToAttachedDiskInterfacePtrOutputWithContext(context.Context) AttachedDiskInterfacePtrOutput
}

type attachedDiskInterfacePtr string

func AttachedDiskInterfacePtr(v string) AttachedDiskInterfacePtrInput {
	return (*attachedDiskInterfacePtr)(&v)
}

func (*attachedDiskInterfacePtr) ElementType() reflect.Type {
	return attachedDiskInterfacePtrType
}

func (in *attachedDiskInterfacePtr) ToAttachedDiskInterfacePtrOutput() AttachedDiskInterfacePtrOutput {
	return pulumi.ToOutput(in).(AttachedDiskInterfacePtrOutput)
}

func (in *attachedDiskInterfacePtr) ToAttachedDiskInterfacePtrOutputWithContext(ctx context.Context) AttachedDiskInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttachedDiskInterfacePtrOutput)
}

// The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
type AttachedDiskMode string

const (
	// Attaches this disk in read-only mode. Multiple virtual machines can use a disk in read-only mode at a time.
	AttachedDiskModeReadOnly = AttachedDiskMode("READ_ONLY")
	// *[Default]* Attaches this disk in read-write mode. Only one virtual machine at a time can be attached to a disk in read-write mode.
	AttachedDiskModeReadWrite = AttachedDiskMode("READ_WRITE")
)

func (AttachedDiskMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskMode)(nil)).Elem()
}

func (e AttachedDiskMode) ToAttachedDiskModeOutput() AttachedDiskModeOutput {
	return pulumi.ToOutput(e).(AttachedDiskModeOutput)
}

func (e AttachedDiskMode) ToAttachedDiskModeOutputWithContext(ctx context.Context) AttachedDiskModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttachedDiskModeOutput)
}

func (e AttachedDiskMode) ToAttachedDiskModePtrOutput() AttachedDiskModePtrOutput {
	return e.ToAttachedDiskModePtrOutputWithContext(context.Background())
}

func (e AttachedDiskMode) ToAttachedDiskModePtrOutputWithContext(ctx context.Context) AttachedDiskModePtrOutput {
	return AttachedDiskMode(e).ToAttachedDiskModeOutputWithContext(ctx).ToAttachedDiskModePtrOutputWithContext(ctx)
}

func (e AttachedDiskMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttachedDiskMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttachedDiskModeOutput struct{ *pulumi.OutputState }

func (AttachedDiskModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskMode)(nil)).Elem()
}

func (o AttachedDiskModeOutput) ToAttachedDiskModeOutput() AttachedDiskModeOutput {
	return o
}

func (o AttachedDiskModeOutput) ToAttachedDiskModeOutputWithContext(ctx context.Context) AttachedDiskModeOutput {
	return o
}

func (o AttachedDiskModeOutput) ToAttachedDiskModePtrOutput() AttachedDiskModePtrOutput {
	return o.ToAttachedDiskModePtrOutputWithContext(context.Background())
}

func (o AttachedDiskModeOutput) ToAttachedDiskModePtrOutputWithContext(ctx context.Context) AttachedDiskModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDiskMode) *AttachedDiskMode {
		return &v
	}).(AttachedDiskModePtrOutput)
}

func (o AttachedDiskModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttachedDiskModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttachedDiskModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttachedDiskModePtrOutput struct{ *pulumi.OutputState }

func (AttachedDiskModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDiskMode)(nil)).Elem()
}

func (o AttachedDiskModePtrOutput) ToAttachedDiskModePtrOutput() AttachedDiskModePtrOutput {
	return o
}

func (o AttachedDiskModePtrOutput) ToAttachedDiskModePtrOutputWithContext(ctx context.Context) AttachedDiskModePtrOutput {
	return o
}

func (o AttachedDiskModePtrOutput) Elem() AttachedDiskModeOutput {
	return o.ApplyT(func(v *AttachedDiskMode) AttachedDiskMode {
		if v != nil {
			return *v
		}
		var ret AttachedDiskMode
		return ret
	}).(AttachedDiskModeOutput)
}

func (o AttachedDiskModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttachedDiskMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttachedDiskModeInput is an input type that accepts AttachedDiskModeArgs and AttachedDiskModeOutput values.
// You can construct a concrete instance of `AttachedDiskModeInput` via:
//
//          AttachedDiskModeArgs{...}
type AttachedDiskModeInput interface {
	pulumi.Input

	ToAttachedDiskModeOutput() AttachedDiskModeOutput
	ToAttachedDiskModeOutputWithContext(context.Context) AttachedDiskModeOutput
}

var attachedDiskModePtrType = reflect.TypeOf((**AttachedDiskMode)(nil)).Elem()

type AttachedDiskModePtrInput interface {
	pulumi.Input

	ToAttachedDiskModePtrOutput() AttachedDiskModePtrOutput
	ToAttachedDiskModePtrOutputWithContext(context.Context) AttachedDiskModePtrOutput
}

type attachedDiskModePtr string

func AttachedDiskModePtr(v string) AttachedDiskModePtrInput {
	return (*attachedDiskModePtr)(&v)
}

func (*attachedDiskModePtr) ElementType() reflect.Type {
	return attachedDiskModePtrType
}

func (in *attachedDiskModePtr) ToAttachedDiskModePtrOutput() AttachedDiskModePtrOutput {
	return pulumi.ToOutput(in).(AttachedDiskModePtrOutput)
}

func (in *attachedDiskModePtr) ToAttachedDiskModePtrOutputWithContext(ctx context.Context) AttachedDiskModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttachedDiskModePtrOutput)
}

// For LocalSSD disks on VM Instances in STOPPED or SUSPENDED state, this field is set to PRESERVED if the LocalSSD data has been saved to a persistent location by customer request. (see the discard_local_ssd option on Stop/Suspend). Read-only in the api.
type AttachedDiskSavedState string

const (
	// *[Default]* Disk state has not been preserved.
	AttachedDiskSavedStateDiskSavedStateUnspecified = AttachedDiskSavedState("DISK_SAVED_STATE_UNSPECIFIED")
	// Disk state has been preserved.
	AttachedDiskSavedStatePreserved = AttachedDiskSavedState("PRESERVED")
)

func (AttachedDiskSavedState) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskSavedState)(nil)).Elem()
}

func (e AttachedDiskSavedState) ToAttachedDiskSavedStateOutput() AttachedDiskSavedStateOutput {
	return pulumi.ToOutput(e).(AttachedDiskSavedStateOutput)
}

func (e AttachedDiskSavedState) ToAttachedDiskSavedStateOutputWithContext(ctx context.Context) AttachedDiskSavedStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttachedDiskSavedStateOutput)
}

func (e AttachedDiskSavedState) ToAttachedDiskSavedStatePtrOutput() AttachedDiskSavedStatePtrOutput {
	return e.ToAttachedDiskSavedStatePtrOutputWithContext(context.Background())
}

func (e AttachedDiskSavedState) ToAttachedDiskSavedStatePtrOutputWithContext(ctx context.Context) AttachedDiskSavedStatePtrOutput {
	return AttachedDiskSavedState(e).ToAttachedDiskSavedStateOutputWithContext(ctx).ToAttachedDiskSavedStatePtrOutputWithContext(ctx)
}

func (e AttachedDiskSavedState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskSavedState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskSavedState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttachedDiskSavedState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttachedDiskSavedStateOutput struct{ *pulumi.OutputState }

func (AttachedDiskSavedStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskSavedState)(nil)).Elem()
}

func (o AttachedDiskSavedStateOutput) ToAttachedDiskSavedStateOutput() AttachedDiskSavedStateOutput {
	return o
}

func (o AttachedDiskSavedStateOutput) ToAttachedDiskSavedStateOutputWithContext(ctx context.Context) AttachedDiskSavedStateOutput {
	return o
}

func (o AttachedDiskSavedStateOutput) ToAttachedDiskSavedStatePtrOutput() AttachedDiskSavedStatePtrOutput {
	return o.ToAttachedDiskSavedStatePtrOutputWithContext(context.Background())
}

func (o AttachedDiskSavedStateOutput) ToAttachedDiskSavedStatePtrOutputWithContext(ctx context.Context) AttachedDiskSavedStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDiskSavedState) *AttachedDiskSavedState {
		return &v
	}).(AttachedDiskSavedStatePtrOutput)
}

func (o AttachedDiskSavedStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttachedDiskSavedStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskSavedState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttachedDiskSavedStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskSavedStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskSavedState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttachedDiskSavedStatePtrOutput struct{ *pulumi.OutputState }

func (AttachedDiskSavedStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDiskSavedState)(nil)).Elem()
}

func (o AttachedDiskSavedStatePtrOutput) ToAttachedDiskSavedStatePtrOutput() AttachedDiskSavedStatePtrOutput {
	return o
}

func (o AttachedDiskSavedStatePtrOutput) ToAttachedDiskSavedStatePtrOutputWithContext(ctx context.Context) AttachedDiskSavedStatePtrOutput {
	return o
}

func (o AttachedDiskSavedStatePtrOutput) Elem() AttachedDiskSavedStateOutput {
	return o.ApplyT(func(v *AttachedDiskSavedState) AttachedDiskSavedState {
		if v != nil {
			return *v
		}
		var ret AttachedDiskSavedState
		return ret
	}).(AttachedDiskSavedStateOutput)
}

func (o AttachedDiskSavedStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskSavedStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttachedDiskSavedState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttachedDiskSavedStateInput is an input type that accepts AttachedDiskSavedStateArgs and AttachedDiskSavedStateOutput values.
// You can construct a concrete instance of `AttachedDiskSavedStateInput` via:
//
//          AttachedDiskSavedStateArgs{...}
type AttachedDiskSavedStateInput interface {
	pulumi.Input

	ToAttachedDiskSavedStateOutput() AttachedDiskSavedStateOutput
	ToAttachedDiskSavedStateOutputWithContext(context.Context) AttachedDiskSavedStateOutput
}

var attachedDiskSavedStatePtrType = reflect.TypeOf((**AttachedDiskSavedState)(nil)).Elem()

type AttachedDiskSavedStatePtrInput interface {
	pulumi.Input

	ToAttachedDiskSavedStatePtrOutput() AttachedDiskSavedStatePtrOutput
	ToAttachedDiskSavedStatePtrOutputWithContext(context.Context) AttachedDiskSavedStatePtrOutput
}

type attachedDiskSavedStatePtr string

func AttachedDiskSavedStatePtr(v string) AttachedDiskSavedStatePtrInput {
	return (*attachedDiskSavedStatePtr)(&v)
}

func (*attachedDiskSavedStatePtr) ElementType() reflect.Type {
	return attachedDiskSavedStatePtrType
}

func (in *attachedDiskSavedStatePtr) ToAttachedDiskSavedStatePtrOutput() AttachedDiskSavedStatePtrOutput {
	return pulumi.ToOutput(in).(AttachedDiskSavedStatePtrOutput)
}

func (in *attachedDiskSavedStatePtr) ToAttachedDiskSavedStatePtrOutputWithContext(ctx context.Context) AttachedDiskSavedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttachedDiskSavedStatePtrOutput)
}

// Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
type AttachedDiskType string

const (
	AttachedDiskTypePersistent = AttachedDiskType("PERSISTENT")
	AttachedDiskTypeScratch    = AttachedDiskType("SCRATCH")
)

func (AttachedDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskType)(nil)).Elem()
}

func (e AttachedDiskType) ToAttachedDiskTypeOutput() AttachedDiskTypeOutput {
	return pulumi.ToOutput(e).(AttachedDiskTypeOutput)
}

func (e AttachedDiskType) ToAttachedDiskTypeOutputWithContext(ctx context.Context) AttachedDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AttachedDiskTypeOutput)
}

func (e AttachedDiskType) ToAttachedDiskTypePtrOutput() AttachedDiskTypePtrOutput {
	return e.ToAttachedDiskTypePtrOutputWithContext(context.Background())
}

func (e AttachedDiskType) ToAttachedDiskTypePtrOutputWithContext(ctx context.Context) AttachedDiskTypePtrOutput {
	return AttachedDiskType(e).ToAttachedDiskTypeOutputWithContext(ctx).ToAttachedDiskTypePtrOutputWithContext(ctx)
}

func (e AttachedDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AttachedDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AttachedDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AttachedDiskTypeOutput struct{ *pulumi.OutputState }

func (AttachedDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDiskType)(nil)).Elem()
}

func (o AttachedDiskTypeOutput) ToAttachedDiskTypeOutput() AttachedDiskTypeOutput {
	return o
}

func (o AttachedDiskTypeOutput) ToAttachedDiskTypeOutputWithContext(ctx context.Context) AttachedDiskTypeOutput {
	return o
}

func (o AttachedDiskTypeOutput) ToAttachedDiskTypePtrOutput() AttachedDiskTypePtrOutput {
	return o.ToAttachedDiskTypePtrOutputWithContext(context.Background())
}

func (o AttachedDiskTypeOutput) ToAttachedDiskTypePtrOutputWithContext(ctx context.Context) AttachedDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDiskType) *AttachedDiskType {
		return &v
	}).(AttachedDiskTypePtrOutput)
}

func (o AttachedDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AttachedDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AttachedDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AttachedDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AttachedDiskTypePtrOutput struct{ *pulumi.OutputState }

func (AttachedDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDiskType)(nil)).Elem()
}

func (o AttachedDiskTypePtrOutput) ToAttachedDiskTypePtrOutput() AttachedDiskTypePtrOutput {
	return o
}

func (o AttachedDiskTypePtrOutput) ToAttachedDiskTypePtrOutputWithContext(ctx context.Context) AttachedDiskTypePtrOutput {
	return o
}

func (o AttachedDiskTypePtrOutput) Elem() AttachedDiskTypeOutput {
	return o.ApplyT(func(v *AttachedDiskType) AttachedDiskType {
		if v != nil {
			return *v
		}
		var ret AttachedDiskType
		return ret
	}).(AttachedDiskTypeOutput)
}

func (o AttachedDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AttachedDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AttachedDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AttachedDiskTypeInput is an input type that accepts AttachedDiskTypeArgs and AttachedDiskTypeOutput values.
// You can construct a concrete instance of `AttachedDiskTypeInput` via:
//
//          AttachedDiskTypeArgs{...}
type AttachedDiskTypeInput interface {
	pulumi.Input

	ToAttachedDiskTypeOutput() AttachedDiskTypeOutput
	ToAttachedDiskTypeOutputWithContext(context.Context) AttachedDiskTypeOutput
}

var attachedDiskTypePtrType = reflect.TypeOf((**AttachedDiskType)(nil)).Elem()

type AttachedDiskTypePtrInput interface {
	pulumi.Input

	ToAttachedDiskTypePtrOutput() AttachedDiskTypePtrOutput
	ToAttachedDiskTypePtrOutputWithContext(context.Context) AttachedDiskTypePtrOutput
}

type attachedDiskTypePtr string

func AttachedDiskTypePtr(v string) AttachedDiskTypePtrInput {
	return (*attachedDiskTypePtr)(&v)
}

func (*attachedDiskTypePtr) ElementType() reflect.Type {
	return attachedDiskTypePtrType
}

func (in *attachedDiskTypePtr) ToAttachedDiskTypePtrOutput() AttachedDiskTypePtrOutput {
	return pulumi.ToOutput(in).(AttachedDiskTypePtrOutput)
}

func (in *attachedDiskTypePtr) ToAttachedDiskTypePtrOutputWithContext(ctx context.Context) AttachedDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AttachedDiskTypePtrOutput)
}

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//          AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

// Define whether peer or origin identity should be used for principal. Default value is USE_PEER. If peer (or origin) identity is not available, either because peer/origin authentication is not defined, or failed, principal will be left unset. In other words, binding rule does not affect the decision to accept or reject request. This field can be set to one of the following: USE_PEER: Principal will be set to the identity from peer authentication. USE_ORIGIN: Principal will be set to the identity from origin authentication.
type AuthenticationPolicyPrincipalBinding string

const (
	AuthenticationPolicyPrincipalBindingInvalid = AuthenticationPolicyPrincipalBinding("INVALID")
	// Principal will be set to the identity from origin authentication.
	AuthenticationPolicyPrincipalBindingUseOrigin = AuthenticationPolicyPrincipalBinding("USE_ORIGIN")
	// Principal will be set to the identity from peer authentication.
	AuthenticationPolicyPrincipalBindingUsePeer = AuthenticationPolicyPrincipalBinding("USE_PEER")
)

func (AuthenticationPolicyPrincipalBinding) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationPolicyPrincipalBinding)(nil)).Elem()
}

func (e AuthenticationPolicyPrincipalBinding) ToAuthenticationPolicyPrincipalBindingOutput() AuthenticationPolicyPrincipalBindingOutput {
	return pulumi.ToOutput(e).(AuthenticationPolicyPrincipalBindingOutput)
}

func (e AuthenticationPolicyPrincipalBinding) ToAuthenticationPolicyPrincipalBindingOutputWithContext(ctx context.Context) AuthenticationPolicyPrincipalBindingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthenticationPolicyPrincipalBindingOutput)
}

func (e AuthenticationPolicyPrincipalBinding) ToAuthenticationPolicyPrincipalBindingPtrOutput() AuthenticationPolicyPrincipalBindingPtrOutput {
	return e.ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(context.Background())
}

func (e AuthenticationPolicyPrincipalBinding) ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(ctx context.Context) AuthenticationPolicyPrincipalBindingPtrOutput {
	return AuthenticationPolicyPrincipalBinding(e).ToAuthenticationPolicyPrincipalBindingOutputWithContext(ctx).ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(ctx)
}

func (e AuthenticationPolicyPrincipalBinding) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationPolicyPrincipalBinding) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationPolicyPrincipalBinding) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthenticationPolicyPrincipalBinding) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthenticationPolicyPrincipalBindingOutput struct{ *pulumi.OutputState }

func (AuthenticationPolicyPrincipalBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationPolicyPrincipalBinding)(nil)).Elem()
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToAuthenticationPolicyPrincipalBindingOutput() AuthenticationPolicyPrincipalBindingOutput {
	return o
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToAuthenticationPolicyPrincipalBindingOutputWithContext(ctx context.Context) AuthenticationPolicyPrincipalBindingOutput {
	return o
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToAuthenticationPolicyPrincipalBindingPtrOutput() AuthenticationPolicyPrincipalBindingPtrOutput {
	return o.ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(context.Background())
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(ctx context.Context) AuthenticationPolicyPrincipalBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationPolicyPrincipalBinding) *AuthenticationPolicyPrincipalBinding {
		return &v
	}).(AuthenticationPolicyPrincipalBindingPtrOutput)
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationPolicyPrincipalBinding) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationPolicyPrincipalBindingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationPolicyPrincipalBinding) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthenticationPolicyPrincipalBindingPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationPolicyPrincipalBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationPolicyPrincipalBinding)(nil)).Elem()
}

func (o AuthenticationPolicyPrincipalBindingPtrOutput) ToAuthenticationPolicyPrincipalBindingPtrOutput() AuthenticationPolicyPrincipalBindingPtrOutput {
	return o
}

func (o AuthenticationPolicyPrincipalBindingPtrOutput) ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(ctx context.Context) AuthenticationPolicyPrincipalBindingPtrOutput {
	return o
}

func (o AuthenticationPolicyPrincipalBindingPtrOutput) Elem() AuthenticationPolicyPrincipalBindingOutput {
	return o.ApplyT(func(v *AuthenticationPolicyPrincipalBinding) AuthenticationPolicyPrincipalBinding {
		if v != nil {
			return *v
		}
		var ret AuthenticationPolicyPrincipalBinding
		return ret
	}).(AuthenticationPolicyPrincipalBindingOutput)
}

func (o AuthenticationPolicyPrincipalBindingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationPolicyPrincipalBindingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthenticationPolicyPrincipalBinding) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthenticationPolicyPrincipalBindingInput is an input type that accepts AuthenticationPolicyPrincipalBindingArgs and AuthenticationPolicyPrincipalBindingOutput values.
// You can construct a concrete instance of `AuthenticationPolicyPrincipalBindingInput` via:
//
//          AuthenticationPolicyPrincipalBindingArgs{...}
type AuthenticationPolicyPrincipalBindingInput interface {
	pulumi.Input

	ToAuthenticationPolicyPrincipalBindingOutput() AuthenticationPolicyPrincipalBindingOutput
	ToAuthenticationPolicyPrincipalBindingOutputWithContext(context.Context) AuthenticationPolicyPrincipalBindingOutput
}

var authenticationPolicyPrincipalBindingPtrType = reflect.TypeOf((**AuthenticationPolicyPrincipalBinding)(nil)).Elem()

type AuthenticationPolicyPrincipalBindingPtrInput interface {
	pulumi.Input

	ToAuthenticationPolicyPrincipalBindingPtrOutput() AuthenticationPolicyPrincipalBindingPtrOutput
	ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(context.Context) AuthenticationPolicyPrincipalBindingPtrOutput
}

type authenticationPolicyPrincipalBindingPtr string

func AuthenticationPolicyPrincipalBindingPtr(v string) AuthenticationPolicyPrincipalBindingPtrInput {
	return (*authenticationPolicyPrincipalBindingPtr)(&v)
}

func (*authenticationPolicyPrincipalBindingPtr) ElementType() reflect.Type {
	return authenticationPolicyPrincipalBindingPtrType
}

func (in *authenticationPolicyPrincipalBindingPtr) ToAuthenticationPolicyPrincipalBindingPtrOutput() AuthenticationPolicyPrincipalBindingPtrOutput {
	return pulumi.ToOutput(in).(AuthenticationPolicyPrincipalBindingPtrOutput)
}

func (in *authenticationPolicyPrincipalBindingPtr) ToAuthenticationPolicyPrincipalBindingPtrOutputWithContext(ctx context.Context) AuthenticationPolicyPrincipalBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthenticationPolicyPrincipalBindingPtrOutput)
}

// This is deprecated and has no effect. Do not use.
type AuthorizationLoggingOptionsPermissionType string

const (
	// This is deprecated and has no effect. Do not use.
	AuthorizationLoggingOptionsPermissionTypeAdminRead = AuthorizationLoggingOptionsPermissionType("ADMIN_READ")
	// This is deprecated and has no effect. Do not use.
	AuthorizationLoggingOptionsPermissionTypeAdminWrite = AuthorizationLoggingOptionsPermissionType("ADMIN_WRITE")
	// This is deprecated and has no effect. Do not use.
	AuthorizationLoggingOptionsPermissionTypeDataRead = AuthorizationLoggingOptionsPermissionType("DATA_READ")
	// This is deprecated and has no effect. Do not use.
	AuthorizationLoggingOptionsPermissionTypeDataWrite = AuthorizationLoggingOptionsPermissionType("DATA_WRITE")
	// This is deprecated and has no effect. Do not use.
	AuthorizationLoggingOptionsPermissionTypePermissionTypeUnspecified = AuthorizationLoggingOptionsPermissionType("PERMISSION_TYPE_UNSPECIFIED")
)

func (AuthorizationLoggingOptionsPermissionType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationLoggingOptionsPermissionType)(nil)).Elem()
}

func (e AuthorizationLoggingOptionsPermissionType) ToAuthorizationLoggingOptionsPermissionTypeOutput() AuthorizationLoggingOptionsPermissionTypeOutput {
	return pulumi.ToOutput(e).(AuthorizationLoggingOptionsPermissionTypeOutput)
}

func (e AuthorizationLoggingOptionsPermissionType) ToAuthorizationLoggingOptionsPermissionTypeOutputWithContext(ctx context.Context) AuthorizationLoggingOptionsPermissionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthorizationLoggingOptionsPermissionTypeOutput)
}

func (e AuthorizationLoggingOptionsPermissionType) ToAuthorizationLoggingOptionsPermissionTypePtrOutput() AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return e.ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(context.Background())
}

func (e AuthorizationLoggingOptionsPermissionType) ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(ctx context.Context) AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return AuthorizationLoggingOptionsPermissionType(e).ToAuthorizationLoggingOptionsPermissionTypeOutputWithContext(ctx).ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(ctx)
}

func (e AuthorizationLoggingOptionsPermissionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthorizationLoggingOptionsPermissionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthorizationLoggingOptionsPermissionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthorizationLoggingOptionsPermissionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthorizationLoggingOptionsPermissionTypeOutput struct{ *pulumi.OutputState }

func (AuthorizationLoggingOptionsPermissionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationLoggingOptionsPermissionType)(nil)).Elem()
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToAuthorizationLoggingOptionsPermissionTypeOutput() AuthorizationLoggingOptionsPermissionTypeOutput {
	return o
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToAuthorizationLoggingOptionsPermissionTypeOutputWithContext(ctx context.Context) AuthorizationLoggingOptionsPermissionTypeOutput {
	return o
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToAuthorizationLoggingOptionsPermissionTypePtrOutput() AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return o.ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(context.Background())
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(ctx context.Context) AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorizationLoggingOptionsPermissionType) *AuthorizationLoggingOptionsPermissionType {
		return &v
	}).(AuthorizationLoggingOptionsPermissionTypePtrOutput)
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthorizationLoggingOptionsPermissionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthorizationLoggingOptionsPermissionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthorizationLoggingOptionsPermissionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthorizationLoggingOptionsPermissionTypePtrOutput struct{ *pulumi.OutputState }

func (AuthorizationLoggingOptionsPermissionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizationLoggingOptionsPermissionType)(nil)).Elem()
}

func (o AuthorizationLoggingOptionsPermissionTypePtrOutput) ToAuthorizationLoggingOptionsPermissionTypePtrOutput() AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return o
}

func (o AuthorizationLoggingOptionsPermissionTypePtrOutput) ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(ctx context.Context) AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return o
}

func (o AuthorizationLoggingOptionsPermissionTypePtrOutput) Elem() AuthorizationLoggingOptionsPermissionTypeOutput {
	return o.ApplyT(func(v *AuthorizationLoggingOptionsPermissionType) AuthorizationLoggingOptionsPermissionType {
		if v != nil {
			return *v
		}
		var ret AuthorizationLoggingOptionsPermissionType
		return ret
	}).(AuthorizationLoggingOptionsPermissionTypeOutput)
}

func (o AuthorizationLoggingOptionsPermissionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthorizationLoggingOptionsPermissionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthorizationLoggingOptionsPermissionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthorizationLoggingOptionsPermissionTypeInput is an input type that accepts AuthorizationLoggingOptionsPermissionTypeArgs and AuthorizationLoggingOptionsPermissionTypeOutput values.
// You can construct a concrete instance of `AuthorizationLoggingOptionsPermissionTypeInput` via:
//
//          AuthorizationLoggingOptionsPermissionTypeArgs{...}
type AuthorizationLoggingOptionsPermissionTypeInput interface {
	pulumi.Input

	ToAuthorizationLoggingOptionsPermissionTypeOutput() AuthorizationLoggingOptionsPermissionTypeOutput
	ToAuthorizationLoggingOptionsPermissionTypeOutputWithContext(context.Context) AuthorizationLoggingOptionsPermissionTypeOutput
}

var authorizationLoggingOptionsPermissionTypePtrType = reflect.TypeOf((**AuthorizationLoggingOptionsPermissionType)(nil)).Elem()

type AuthorizationLoggingOptionsPermissionTypePtrInput interface {
	pulumi.Input

	ToAuthorizationLoggingOptionsPermissionTypePtrOutput() AuthorizationLoggingOptionsPermissionTypePtrOutput
	ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(context.Context) AuthorizationLoggingOptionsPermissionTypePtrOutput
}

type authorizationLoggingOptionsPermissionTypePtr string

func AuthorizationLoggingOptionsPermissionTypePtr(v string) AuthorizationLoggingOptionsPermissionTypePtrInput {
	return (*authorizationLoggingOptionsPermissionTypePtr)(&v)
}

func (*authorizationLoggingOptionsPermissionTypePtr) ElementType() reflect.Type {
	return authorizationLoggingOptionsPermissionTypePtrType
}

func (in *authorizationLoggingOptionsPermissionTypePtr) ToAuthorizationLoggingOptionsPermissionTypePtrOutput() AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return pulumi.ToOutput(in).(AuthorizationLoggingOptionsPermissionTypePtrOutput)
}

func (in *authorizationLoggingOptionsPermissionTypePtr) ToAuthorizationLoggingOptionsPermissionTypePtrOutputWithContext(ctx context.Context) AuthorizationLoggingOptionsPermissionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthorizationLoggingOptionsPermissionTypePtrOutput)
}

// Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: * NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.
type AutoscalingPolicyCpuUtilizationPredictiveMethod string

const (
	// No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics
	AutoscalingPolicyCpuUtilizationPredictiveMethodNone = AutoscalingPolicyCpuUtilizationPredictiveMethod("NONE")
	// Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.
	AutoscalingPolicyCpuUtilizationPredictiveMethodOptimizeAvailability        = AutoscalingPolicyCpuUtilizationPredictiveMethod("OPTIMIZE_AVAILABILITY")
	AutoscalingPolicyCpuUtilizationPredictiveMethodPredictiveMethodUnspecified = AutoscalingPolicyCpuUtilizationPredictiveMethod("PREDICTIVE_METHOD_UNSPECIFIED")
	// Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand. This value is being DEPRECATED - it won't be promoted to beta and v1. Use OPTIMIZE_AVAILABILITY instead.
	AutoscalingPolicyCpuUtilizationPredictiveMethodStandard = AutoscalingPolicyCpuUtilizationPredictiveMethod("STANDARD")
)

func (AutoscalingPolicyCpuUtilizationPredictiveMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyCpuUtilizationPredictiveMethod)(nil)).Elem()
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToAutoscalingPolicyCpuUtilizationPredictiveMethodOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodOutput {
	return pulumi.ToOutput(e).(AutoscalingPolicyCpuUtilizationPredictiveMethodOutput)
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToAutoscalingPolicyCpuUtilizationPredictiveMethodOutputWithContext(ctx context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoscalingPolicyCpuUtilizationPredictiveMethodOutput)
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return e.ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(context.Background())
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(ctx context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return AutoscalingPolicyCpuUtilizationPredictiveMethod(e).ToAutoscalingPolicyCpuUtilizationPredictiveMethodOutputWithContext(ctx).ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(ctx)
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoscalingPolicyCpuUtilizationPredictiveMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoscalingPolicyCpuUtilizationPredictiveMethodOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyCpuUtilizationPredictiveMethod)(nil)).Elem()
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToAutoscalingPolicyCpuUtilizationPredictiveMethodOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodOutput {
	return o
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToAutoscalingPolicyCpuUtilizationPredictiveMethodOutputWithContext(ctx context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodOutput {
	return o
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return o.ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(ctx context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingPolicyCpuUtilizationPredictiveMethod) *AutoscalingPolicyCpuUtilizationPredictiveMethod {
		return &v
	}).(AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput)
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscalingPolicyCpuUtilizationPredictiveMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscalingPolicyCpuUtilizationPredictiveMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyCpuUtilizationPredictiveMethod)(nil)).Elem()
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return o
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(ctx context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return o
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput) Elem() AutoscalingPolicyCpuUtilizationPredictiveMethodOutput {
	return o.ApplyT(func(v *AutoscalingPolicyCpuUtilizationPredictiveMethod) AutoscalingPolicyCpuUtilizationPredictiveMethod {
		if v != nil {
			return *v
		}
		var ret AutoscalingPolicyCpuUtilizationPredictiveMethod
		return ret
	}).(AutoscalingPolicyCpuUtilizationPredictiveMethodOutput)
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoscalingPolicyCpuUtilizationPredictiveMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoscalingPolicyCpuUtilizationPredictiveMethodInput is an input type that accepts AutoscalingPolicyCpuUtilizationPredictiveMethodArgs and AutoscalingPolicyCpuUtilizationPredictiveMethodOutput values.
// You can construct a concrete instance of `AutoscalingPolicyCpuUtilizationPredictiveMethodInput` via:
//
//          AutoscalingPolicyCpuUtilizationPredictiveMethodArgs{...}
type AutoscalingPolicyCpuUtilizationPredictiveMethodInput interface {
	pulumi.Input

	ToAutoscalingPolicyCpuUtilizationPredictiveMethodOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodOutput
	ToAutoscalingPolicyCpuUtilizationPredictiveMethodOutputWithContext(context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodOutput
}

var autoscalingPolicyCpuUtilizationPredictiveMethodPtrType = reflect.TypeOf((**AutoscalingPolicyCpuUtilizationPredictiveMethod)(nil)).Elem()

type AutoscalingPolicyCpuUtilizationPredictiveMethodPtrInput interface {
	pulumi.Input

	ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput
	ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput
}

type autoscalingPolicyCpuUtilizationPredictiveMethodPtr string

func AutoscalingPolicyCpuUtilizationPredictiveMethodPtr(v string) AutoscalingPolicyCpuUtilizationPredictiveMethodPtrInput {
	return (*autoscalingPolicyCpuUtilizationPredictiveMethodPtr)(&v)
}

func (*autoscalingPolicyCpuUtilizationPredictiveMethodPtr) ElementType() reflect.Type {
	return autoscalingPolicyCpuUtilizationPredictiveMethodPtrType
}

func (in *autoscalingPolicyCpuUtilizationPredictiveMethodPtr) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput() AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return pulumi.ToOutput(in).(AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput)
}

func (in *autoscalingPolicyCpuUtilizationPredictiveMethodPtr) ToAutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutputWithContext(ctx context.Context) AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput)
}

// Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
type AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType string

const (
	// Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per minute.
	AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeDeltaPerMinute = AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType("DELTA_PER_MINUTE")
	// Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per second.
	AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeDeltaPerSecond = AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType("DELTA_PER_SECOND")
	// Sets the utilization target value for a gauge metric. The autoscaler will collect the average utilization of the virtual machines from the last couple of minutes, and compare the value to the utilization target value to perform autoscaling.
	AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeGauge = AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType("GAUGE")
)

func (AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType)(nil)).Elem()
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput {
	return pulumi.ToOutput(e).(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput)
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutputWithContext(ctx context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput)
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return e.ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(context.Background())
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(ctx context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType(e).ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutputWithContext(ctx).ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(ctx)
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType)(nil)).Elem()
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput {
	return o
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutputWithContext(ctx context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput {
	return o
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return o.ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(ctx context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) *AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType {
		return &v
	}).(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput)
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType)(nil)).Elem()
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return o
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(ctx context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return o
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput) Elem() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput {
	return o.ApplyT(func(v *AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType {
		if v != nil {
			return *v
		}
		var ret AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType
		return ret
	}).(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput)
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeInput is an input type that accepts AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeArgs and AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput values.
// You can construct a concrete instance of `AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeInput` via:
//
//          AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeArgs{...}
type AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeInput interface {
	pulumi.Input

	ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput
	ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutputWithContext(context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput
}

var autoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrType = reflect.TypeOf((**AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType)(nil)).Elem()

type AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrInput interface {
	pulumi.Input

	ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput
	ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput
}

type autoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtr string

func AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtr(v string) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrInput {
	return (*autoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtr)(&v)
}

func (*autoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtr) ElementType() reflect.Type {
	return autoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrType
}

func (in *autoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtr) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput() AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return pulumi.ToOutput(in).(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput)
}

func (in *autoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtr) ToAutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutputWithContext(ctx context.Context) AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput)
}

// Defines operating mode for this policy.
type AutoscalingPolicyMode string

const (
	// Do not automatically scale the MIG in or out. The recommended_size field contains the size of MIG that would be set if the actuation mode was enabled.
	AutoscalingPolicyModeOff = AutoscalingPolicyMode("OFF")
	// Automatically scale the MIG in and out according to the policy.
	AutoscalingPolicyModeOn = AutoscalingPolicyMode("ON")
	// Automatically create VMs according to the policy, but do not scale the MIG in.
	AutoscalingPolicyModeOnlyScaleOut = AutoscalingPolicyMode("ONLY_SCALE_OUT")
	// Automatically create VMs according to the policy, but do not scale the MIG in.
	AutoscalingPolicyModeOnlyUp = AutoscalingPolicyMode("ONLY_UP")
)

func (AutoscalingPolicyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyMode)(nil)).Elem()
}

func (e AutoscalingPolicyMode) ToAutoscalingPolicyModeOutput() AutoscalingPolicyModeOutput {
	return pulumi.ToOutput(e).(AutoscalingPolicyModeOutput)
}

func (e AutoscalingPolicyMode) ToAutoscalingPolicyModeOutputWithContext(ctx context.Context) AutoscalingPolicyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AutoscalingPolicyModeOutput)
}

func (e AutoscalingPolicyMode) ToAutoscalingPolicyModePtrOutput() AutoscalingPolicyModePtrOutput {
	return e.ToAutoscalingPolicyModePtrOutputWithContext(context.Background())
}

func (e AutoscalingPolicyMode) ToAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) AutoscalingPolicyModePtrOutput {
	return AutoscalingPolicyMode(e).ToAutoscalingPolicyModeOutputWithContext(ctx).ToAutoscalingPolicyModePtrOutputWithContext(ctx)
}

func (e AutoscalingPolicyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscalingPolicyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AutoscalingPolicyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AutoscalingPolicyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AutoscalingPolicyModeOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyMode)(nil)).Elem()
}

func (o AutoscalingPolicyModeOutput) ToAutoscalingPolicyModeOutput() AutoscalingPolicyModeOutput {
	return o
}

func (o AutoscalingPolicyModeOutput) ToAutoscalingPolicyModeOutputWithContext(ctx context.Context) AutoscalingPolicyModeOutput {
	return o
}

func (o AutoscalingPolicyModeOutput) ToAutoscalingPolicyModePtrOutput() AutoscalingPolicyModePtrOutput {
	return o.ToAutoscalingPolicyModePtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyModeOutput) ToAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) AutoscalingPolicyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingPolicyMode) *AutoscalingPolicyMode {
		return &v
	}).(AutoscalingPolicyModePtrOutput)
}

func (o AutoscalingPolicyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AutoscalingPolicyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscalingPolicyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AutoscalingPolicyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AutoscalingPolicyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AutoscalingPolicyModePtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyMode)(nil)).Elem()
}

func (o AutoscalingPolicyModePtrOutput) ToAutoscalingPolicyModePtrOutput() AutoscalingPolicyModePtrOutput {
	return o
}

func (o AutoscalingPolicyModePtrOutput) ToAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) AutoscalingPolicyModePtrOutput {
	return o
}

func (o AutoscalingPolicyModePtrOutput) Elem() AutoscalingPolicyModeOutput {
	return o.ApplyT(func(v *AutoscalingPolicyMode) AutoscalingPolicyMode {
		if v != nil {
			return *v
		}
		var ret AutoscalingPolicyMode
		return ret
	}).(AutoscalingPolicyModeOutput)
}

func (o AutoscalingPolicyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AutoscalingPolicyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AutoscalingPolicyModeInput is an input type that accepts AutoscalingPolicyModeArgs and AutoscalingPolicyModeOutput values.
// You can construct a concrete instance of `AutoscalingPolicyModeInput` via:
//
//          AutoscalingPolicyModeArgs{...}
type AutoscalingPolicyModeInput interface {
	pulumi.Input

	ToAutoscalingPolicyModeOutput() AutoscalingPolicyModeOutput
	ToAutoscalingPolicyModeOutputWithContext(context.Context) AutoscalingPolicyModeOutput
}

var autoscalingPolicyModePtrType = reflect.TypeOf((**AutoscalingPolicyMode)(nil)).Elem()

type AutoscalingPolicyModePtrInput interface {
	pulumi.Input

	ToAutoscalingPolicyModePtrOutput() AutoscalingPolicyModePtrOutput
	ToAutoscalingPolicyModePtrOutputWithContext(context.Context) AutoscalingPolicyModePtrOutput
}

type autoscalingPolicyModePtr string

func AutoscalingPolicyModePtr(v string) AutoscalingPolicyModePtrInput {
	return (*autoscalingPolicyModePtr)(&v)
}

func (*autoscalingPolicyModePtr) ElementType() reflect.Type {
	return autoscalingPolicyModePtrType
}

func (in *autoscalingPolicyModePtr) ToAutoscalingPolicyModePtrOutput() AutoscalingPolicyModePtrOutput {
	return pulumi.ToOutput(in).(AutoscalingPolicyModePtrOutput)
}

func (in *autoscalingPolicyModePtr) ToAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) AutoscalingPolicyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AutoscalingPolicyModePtrOutput)
}

// Specifies how to determine whether the backend of a load balancer can handle additional traffic or is fully loaded. For usage guidelines, see Connection balancing mode. Backends must use compatible balancing modes. For more information, see Supported balancing modes and target capacity settings and Restrictions and guidance for instance groups. Note: Currently, if you use the API to configure incompatible balancing modes, the configuration might be accepted even though it has no impact and is ignored. Specifically, Backend.maxUtilization is ignored when Backend.balancingMode is RATE. In the future, this incompatible combination will be rejected.
type BackendBalancingMode string

const (
	// Balance based on the number of simultaneous connections.
	BackendBalancingModeConnection = BackendBalancingMode("CONNECTION")
	// Balance based on requests per second (RPS).
	BackendBalancingModeRate = BackendBalancingMode("RATE")
	// Balance based on the backend utilization.
	BackendBalancingModeUtilization = BackendBalancingMode("UTILIZATION")
)

func (BackendBalancingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendBalancingMode)(nil)).Elem()
}

func (e BackendBalancingMode) ToBackendBalancingModeOutput() BackendBalancingModeOutput {
	return pulumi.ToOutput(e).(BackendBalancingModeOutput)
}

func (e BackendBalancingMode) ToBackendBalancingModeOutputWithContext(ctx context.Context) BackendBalancingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendBalancingModeOutput)
}

func (e BackendBalancingMode) ToBackendBalancingModePtrOutput() BackendBalancingModePtrOutput {
	return e.ToBackendBalancingModePtrOutputWithContext(context.Background())
}

func (e BackendBalancingMode) ToBackendBalancingModePtrOutputWithContext(ctx context.Context) BackendBalancingModePtrOutput {
	return BackendBalancingMode(e).ToBackendBalancingModeOutputWithContext(ctx).ToBackendBalancingModePtrOutputWithContext(ctx)
}

func (e BackendBalancingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendBalancingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendBalancingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendBalancingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendBalancingModeOutput struct{ *pulumi.OutputState }

func (BackendBalancingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendBalancingMode)(nil)).Elem()
}

func (o BackendBalancingModeOutput) ToBackendBalancingModeOutput() BackendBalancingModeOutput {
	return o
}

func (o BackendBalancingModeOutput) ToBackendBalancingModeOutputWithContext(ctx context.Context) BackendBalancingModeOutput {
	return o
}

func (o BackendBalancingModeOutput) ToBackendBalancingModePtrOutput() BackendBalancingModePtrOutput {
	return o.ToBackendBalancingModePtrOutputWithContext(context.Background())
}

func (o BackendBalancingModeOutput) ToBackendBalancingModePtrOutputWithContext(ctx context.Context) BackendBalancingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendBalancingMode) *BackendBalancingMode {
		return &v
	}).(BackendBalancingModePtrOutput)
}

func (o BackendBalancingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendBalancingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendBalancingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendBalancingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendBalancingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendBalancingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendBalancingModePtrOutput struct{ *pulumi.OutputState }

func (BackendBalancingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendBalancingMode)(nil)).Elem()
}

func (o BackendBalancingModePtrOutput) ToBackendBalancingModePtrOutput() BackendBalancingModePtrOutput {
	return o
}

func (o BackendBalancingModePtrOutput) ToBackendBalancingModePtrOutputWithContext(ctx context.Context) BackendBalancingModePtrOutput {
	return o
}

func (o BackendBalancingModePtrOutput) Elem() BackendBalancingModeOutput {
	return o.ApplyT(func(v *BackendBalancingMode) BackendBalancingMode {
		if v != nil {
			return *v
		}
		var ret BackendBalancingMode
		return ret
	}).(BackendBalancingModeOutput)
}

func (o BackendBalancingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendBalancingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendBalancingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendBalancingModeInput is an input type that accepts BackendBalancingModeArgs and BackendBalancingModeOutput values.
// You can construct a concrete instance of `BackendBalancingModeInput` via:
//
//          BackendBalancingModeArgs{...}
type BackendBalancingModeInput interface {
	pulumi.Input

	ToBackendBalancingModeOutput() BackendBalancingModeOutput
	ToBackendBalancingModeOutputWithContext(context.Context) BackendBalancingModeOutput
}

var backendBalancingModePtrType = reflect.TypeOf((**BackendBalancingMode)(nil)).Elem()

type BackendBalancingModePtrInput interface {
	pulumi.Input

	ToBackendBalancingModePtrOutput() BackendBalancingModePtrOutput
	ToBackendBalancingModePtrOutputWithContext(context.Context) BackendBalancingModePtrOutput
}

type backendBalancingModePtr string

func BackendBalancingModePtr(v string) BackendBalancingModePtrInput {
	return (*backendBalancingModePtr)(&v)
}

func (*backendBalancingModePtr) ElementType() reflect.Type {
	return backendBalancingModePtrType
}

func (in *backendBalancingModePtr) ToBackendBalancingModePtrOutput() BackendBalancingModePtrOutput {
	return pulumi.ToOutput(in).(BackendBalancingModePtrOutput)
}

func (in *backendBalancingModePtr) ToBackendBalancingModePtrOutputWithContext(ctx context.Context) BackendBalancingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendBalancingModePtrOutput)
}

// Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
type BackendBucketCdnPolicyCacheMode string

const (
	// Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
	BackendBucketCdnPolicyCacheModeCacheAllStatic = BackendBucketCdnPolicyCacheMode("CACHE_ALL_STATIC")
	// Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content.
	BackendBucketCdnPolicyCacheModeForceCacheAll    = BackendBucketCdnPolicyCacheMode("FORCE_CACHE_ALL")
	BackendBucketCdnPolicyCacheModeInvalidCacheMode = BackendBucketCdnPolicyCacheMode("INVALID_CACHE_MODE")
	// Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server.
	BackendBucketCdnPolicyCacheModeUseOriginHeaders = BackendBucketCdnPolicyCacheMode("USE_ORIGIN_HEADERS")
)

func (BackendBucketCdnPolicyCacheMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendBucketCdnPolicyCacheMode)(nil)).Elem()
}

func (e BackendBucketCdnPolicyCacheMode) ToBackendBucketCdnPolicyCacheModeOutput() BackendBucketCdnPolicyCacheModeOutput {
	return pulumi.ToOutput(e).(BackendBucketCdnPolicyCacheModeOutput)
}

func (e BackendBucketCdnPolicyCacheMode) ToBackendBucketCdnPolicyCacheModeOutputWithContext(ctx context.Context) BackendBucketCdnPolicyCacheModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendBucketCdnPolicyCacheModeOutput)
}

func (e BackendBucketCdnPolicyCacheMode) ToBackendBucketCdnPolicyCacheModePtrOutput() BackendBucketCdnPolicyCacheModePtrOutput {
	return e.ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(context.Background())
}

func (e BackendBucketCdnPolicyCacheMode) ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendBucketCdnPolicyCacheModePtrOutput {
	return BackendBucketCdnPolicyCacheMode(e).ToBackendBucketCdnPolicyCacheModeOutputWithContext(ctx).ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(ctx)
}

func (e BackendBucketCdnPolicyCacheMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendBucketCdnPolicyCacheMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendBucketCdnPolicyCacheMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendBucketCdnPolicyCacheMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendBucketCdnPolicyCacheModeOutput struct{ *pulumi.OutputState }

func (BackendBucketCdnPolicyCacheModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendBucketCdnPolicyCacheMode)(nil)).Elem()
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToBackendBucketCdnPolicyCacheModeOutput() BackendBucketCdnPolicyCacheModeOutput {
	return o
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToBackendBucketCdnPolicyCacheModeOutputWithContext(ctx context.Context) BackendBucketCdnPolicyCacheModeOutput {
	return o
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToBackendBucketCdnPolicyCacheModePtrOutput() BackendBucketCdnPolicyCacheModePtrOutput {
	return o.ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(context.Background())
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendBucketCdnPolicyCacheModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendBucketCdnPolicyCacheMode) *BackendBucketCdnPolicyCacheMode {
		return &v
	}).(BackendBucketCdnPolicyCacheModePtrOutput)
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendBucketCdnPolicyCacheMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendBucketCdnPolicyCacheModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendBucketCdnPolicyCacheMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendBucketCdnPolicyCacheModePtrOutput struct{ *pulumi.OutputState }

func (BackendBucketCdnPolicyCacheModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendBucketCdnPolicyCacheMode)(nil)).Elem()
}

func (o BackendBucketCdnPolicyCacheModePtrOutput) ToBackendBucketCdnPolicyCacheModePtrOutput() BackendBucketCdnPolicyCacheModePtrOutput {
	return o
}

func (o BackendBucketCdnPolicyCacheModePtrOutput) ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendBucketCdnPolicyCacheModePtrOutput {
	return o
}

func (o BackendBucketCdnPolicyCacheModePtrOutput) Elem() BackendBucketCdnPolicyCacheModeOutput {
	return o.ApplyT(func(v *BackendBucketCdnPolicyCacheMode) BackendBucketCdnPolicyCacheMode {
		if v != nil {
			return *v
		}
		var ret BackendBucketCdnPolicyCacheMode
		return ret
	}).(BackendBucketCdnPolicyCacheModeOutput)
}

func (o BackendBucketCdnPolicyCacheModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendBucketCdnPolicyCacheModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendBucketCdnPolicyCacheMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendBucketCdnPolicyCacheModeInput is an input type that accepts BackendBucketCdnPolicyCacheModeArgs and BackendBucketCdnPolicyCacheModeOutput values.
// You can construct a concrete instance of `BackendBucketCdnPolicyCacheModeInput` via:
//
//          BackendBucketCdnPolicyCacheModeArgs{...}
type BackendBucketCdnPolicyCacheModeInput interface {
	pulumi.Input

	ToBackendBucketCdnPolicyCacheModeOutput() BackendBucketCdnPolicyCacheModeOutput
	ToBackendBucketCdnPolicyCacheModeOutputWithContext(context.Context) BackendBucketCdnPolicyCacheModeOutput
}

var backendBucketCdnPolicyCacheModePtrType = reflect.TypeOf((**BackendBucketCdnPolicyCacheMode)(nil)).Elem()

type BackendBucketCdnPolicyCacheModePtrInput interface {
	pulumi.Input

	ToBackendBucketCdnPolicyCacheModePtrOutput() BackendBucketCdnPolicyCacheModePtrOutput
	ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(context.Context) BackendBucketCdnPolicyCacheModePtrOutput
}

type backendBucketCdnPolicyCacheModePtr string

func BackendBucketCdnPolicyCacheModePtr(v string) BackendBucketCdnPolicyCacheModePtrInput {
	return (*backendBucketCdnPolicyCacheModePtr)(&v)
}

func (*backendBucketCdnPolicyCacheModePtr) ElementType() reflect.Type {
	return backendBucketCdnPolicyCacheModePtrType
}

func (in *backendBucketCdnPolicyCacheModePtr) ToBackendBucketCdnPolicyCacheModePtrOutput() BackendBucketCdnPolicyCacheModePtrOutput {
	return pulumi.ToOutput(in).(BackendBucketCdnPolicyCacheModePtrOutput)
}

func (in *backendBucketCdnPolicyCacheModePtr) ToBackendBucketCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendBucketCdnPolicyCacheModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendBucketCdnPolicyCacheModePtrOutput)
}

// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
type BackendBucketCompressionMode string

const (
	// Automatically uses the best compression based on the Accept-Encoding header sent by the client.
	BackendBucketCompressionModeAutomatic = BackendBucketCompressionMode("AUTOMATIC")
	// Disables compression. Existing compressed responses cached by Cloud CDN will not be served to clients.
	BackendBucketCompressionModeDisabled = BackendBucketCompressionMode("DISABLED")
)

func (BackendBucketCompressionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendBucketCompressionMode)(nil)).Elem()
}

func (e BackendBucketCompressionMode) ToBackendBucketCompressionModeOutput() BackendBucketCompressionModeOutput {
	return pulumi.ToOutput(e).(BackendBucketCompressionModeOutput)
}

func (e BackendBucketCompressionMode) ToBackendBucketCompressionModeOutputWithContext(ctx context.Context) BackendBucketCompressionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendBucketCompressionModeOutput)
}

func (e BackendBucketCompressionMode) ToBackendBucketCompressionModePtrOutput() BackendBucketCompressionModePtrOutput {
	return e.ToBackendBucketCompressionModePtrOutputWithContext(context.Background())
}

func (e BackendBucketCompressionMode) ToBackendBucketCompressionModePtrOutputWithContext(ctx context.Context) BackendBucketCompressionModePtrOutput {
	return BackendBucketCompressionMode(e).ToBackendBucketCompressionModeOutputWithContext(ctx).ToBackendBucketCompressionModePtrOutputWithContext(ctx)
}

func (e BackendBucketCompressionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendBucketCompressionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendBucketCompressionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendBucketCompressionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendBucketCompressionModeOutput struct{ *pulumi.OutputState }

func (BackendBucketCompressionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendBucketCompressionMode)(nil)).Elem()
}

func (o BackendBucketCompressionModeOutput) ToBackendBucketCompressionModeOutput() BackendBucketCompressionModeOutput {
	return o
}

func (o BackendBucketCompressionModeOutput) ToBackendBucketCompressionModeOutputWithContext(ctx context.Context) BackendBucketCompressionModeOutput {
	return o
}

func (o BackendBucketCompressionModeOutput) ToBackendBucketCompressionModePtrOutput() BackendBucketCompressionModePtrOutput {
	return o.ToBackendBucketCompressionModePtrOutputWithContext(context.Background())
}

func (o BackendBucketCompressionModeOutput) ToBackendBucketCompressionModePtrOutputWithContext(ctx context.Context) BackendBucketCompressionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendBucketCompressionMode) *BackendBucketCompressionMode {
		return &v
	}).(BackendBucketCompressionModePtrOutput)
}

func (o BackendBucketCompressionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendBucketCompressionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendBucketCompressionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendBucketCompressionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendBucketCompressionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendBucketCompressionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendBucketCompressionModePtrOutput struct{ *pulumi.OutputState }

func (BackendBucketCompressionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendBucketCompressionMode)(nil)).Elem()
}

func (o BackendBucketCompressionModePtrOutput) ToBackendBucketCompressionModePtrOutput() BackendBucketCompressionModePtrOutput {
	return o
}

func (o BackendBucketCompressionModePtrOutput) ToBackendBucketCompressionModePtrOutputWithContext(ctx context.Context) BackendBucketCompressionModePtrOutput {
	return o
}

func (o BackendBucketCompressionModePtrOutput) Elem() BackendBucketCompressionModeOutput {
	return o.ApplyT(func(v *BackendBucketCompressionMode) BackendBucketCompressionMode {
		if v != nil {
			return *v
		}
		var ret BackendBucketCompressionMode
		return ret
	}).(BackendBucketCompressionModeOutput)
}

func (o BackendBucketCompressionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendBucketCompressionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendBucketCompressionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendBucketCompressionModeInput is an input type that accepts BackendBucketCompressionModeArgs and BackendBucketCompressionModeOutput values.
// You can construct a concrete instance of `BackendBucketCompressionModeInput` via:
//
//          BackendBucketCompressionModeArgs{...}
type BackendBucketCompressionModeInput interface {
	pulumi.Input

	ToBackendBucketCompressionModeOutput() BackendBucketCompressionModeOutput
	ToBackendBucketCompressionModeOutputWithContext(context.Context) BackendBucketCompressionModeOutput
}

var backendBucketCompressionModePtrType = reflect.TypeOf((**BackendBucketCompressionMode)(nil)).Elem()

type BackendBucketCompressionModePtrInput interface {
	pulumi.Input

	ToBackendBucketCompressionModePtrOutput() BackendBucketCompressionModePtrOutput
	ToBackendBucketCompressionModePtrOutputWithContext(context.Context) BackendBucketCompressionModePtrOutput
}

type backendBucketCompressionModePtr string

func BackendBucketCompressionModePtr(v string) BackendBucketCompressionModePtrInput {
	return (*backendBucketCompressionModePtr)(&v)
}

func (*backendBucketCompressionModePtr) ElementType() reflect.Type {
	return backendBucketCompressionModePtrType
}

func (in *backendBucketCompressionModePtr) ToBackendBucketCompressionModePtrOutput() BackendBucketCompressionModePtrOutput {
	return pulumi.ToOutput(in).(BackendBucketCompressionModePtrOutput)
}

func (in *backendBucketCompressionModePtr) ToBackendBucketCompressionModePtrOutputWithContext(ctx context.Context) BackendBucketCompressionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendBucketCompressionModePtrOutput)
}

// Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
type BackendServiceCdnPolicyCacheMode string

const (
	// Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
	BackendServiceCdnPolicyCacheModeCacheAllStatic = BackendServiceCdnPolicyCacheMode("CACHE_ALL_STATIC")
	// Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content.
	BackendServiceCdnPolicyCacheModeForceCacheAll    = BackendServiceCdnPolicyCacheMode("FORCE_CACHE_ALL")
	BackendServiceCdnPolicyCacheModeInvalidCacheMode = BackendServiceCdnPolicyCacheMode("INVALID_CACHE_MODE")
	// Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server.
	BackendServiceCdnPolicyCacheModeUseOriginHeaders = BackendServiceCdnPolicyCacheMode("USE_ORIGIN_HEADERS")
)

func (BackendServiceCdnPolicyCacheMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceCdnPolicyCacheMode)(nil)).Elem()
}

func (e BackendServiceCdnPolicyCacheMode) ToBackendServiceCdnPolicyCacheModeOutput() BackendServiceCdnPolicyCacheModeOutput {
	return pulumi.ToOutput(e).(BackendServiceCdnPolicyCacheModeOutput)
}

func (e BackendServiceCdnPolicyCacheMode) ToBackendServiceCdnPolicyCacheModeOutputWithContext(ctx context.Context) BackendServiceCdnPolicyCacheModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceCdnPolicyCacheModeOutput)
}

func (e BackendServiceCdnPolicyCacheMode) ToBackendServiceCdnPolicyCacheModePtrOutput() BackendServiceCdnPolicyCacheModePtrOutput {
	return e.ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(context.Background())
}

func (e BackendServiceCdnPolicyCacheMode) ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendServiceCdnPolicyCacheModePtrOutput {
	return BackendServiceCdnPolicyCacheMode(e).ToBackendServiceCdnPolicyCacheModeOutputWithContext(ctx).ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(ctx)
}

func (e BackendServiceCdnPolicyCacheMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceCdnPolicyCacheMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceCdnPolicyCacheMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceCdnPolicyCacheMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceCdnPolicyCacheModeOutput struct{ *pulumi.OutputState }

func (BackendServiceCdnPolicyCacheModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceCdnPolicyCacheMode)(nil)).Elem()
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToBackendServiceCdnPolicyCacheModeOutput() BackendServiceCdnPolicyCacheModeOutput {
	return o
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToBackendServiceCdnPolicyCacheModeOutputWithContext(ctx context.Context) BackendServiceCdnPolicyCacheModeOutput {
	return o
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToBackendServiceCdnPolicyCacheModePtrOutput() BackendServiceCdnPolicyCacheModePtrOutput {
	return o.ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(context.Background())
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendServiceCdnPolicyCacheModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceCdnPolicyCacheMode) *BackendServiceCdnPolicyCacheMode {
		return &v
	}).(BackendServiceCdnPolicyCacheModePtrOutput)
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceCdnPolicyCacheMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceCdnPolicyCacheModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceCdnPolicyCacheMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceCdnPolicyCacheModePtrOutput struct{ *pulumi.OutputState }

func (BackendServiceCdnPolicyCacheModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceCdnPolicyCacheMode)(nil)).Elem()
}

func (o BackendServiceCdnPolicyCacheModePtrOutput) ToBackendServiceCdnPolicyCacheModePtrOutput() BackendServiceCdnPolicyCacheModePtrOutput {
	return o
}

func (o BackendServiceCdnPolicyCacheModePtrOutput) ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendServiceCdnPolicyCacheModePtrOutput {
	return o
}

func (o BackendServiceCdnPolicyCacheModePtrOutput) Elem() BackendServiceCdnPolicyCacheModeOutput {
	return o.ApplyT(func(v *BackendServiceCdnPolicyCacheMode) BackendServiceCdnPolicyCacheMode {
		if v != nil {
			return *v
		}
		var ret BackendServiceCdnPolicyCacheMode
		return ret
	}).(BackendServiceCdnPolicyCacheModeOutput)
}

func (o BackendServiceCdnPolicyCacheModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceCdnPolicyCacheModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceCdnPolicyCacheMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceCdnPolicyCacheModeInput is an input type that accepts BackendServiceCdnPolicyCacheModeArgs and BackendServiceCdnPolicyCacheModeOutput values.
// You can construct a concrete instance of `BackendServiceCdnPolicyCacheModeInput` via:
//
//          BackendServiceCdnPolicyCacheModeArgs{...}
type BackendServiceCdnPolicyCacheModeInput interface {
	pulumi.Input

	ToBackendServiceCdnPolicyCacheModeOutput() BackendServiceCdnPolicyCacheModeOutput
	ToBackendServiceCdnPolicyCacheModeOutputWithContext(context.Context) BackendServiceCdnPolicyCacheModeOutput
}

var backendServiceCdnPolicyCacheModePtrType = reflect.TypeOf((**BackendServiceCdnPolicyCacheMode)(nil)).Elem()

type BackendServiceCdnPolicyCacheModePtrInput interface {
	pulumi.Input

	ToBackendServiceCdnPolicyCacheModePtrOutput() BackendServiceCdnPolicyCacheModePtrOutput
	ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(context.Context) BackendServiceCdnPolicyCacheModePtrOutput
}

type backendServiceCdnPolicyCacheModePtr string

func BackendServiceCdnPolicyCacheModePtr(v string) BackendServiceCdnPolicyCacheModePtrInput {
	return (*backendServiceCdnPolicyCacheModePtr)(&v)
}

func (*backendServiceCdnPolicyCacheModePtr) ElementType() reflect.Type {
	return backendServiceCdnPolicyCacheModePtrType
}

func (in *backendServiceCdnPolicyCacheModePtr) ToBackendServiceCdnPolicyCacheModePtrOutput() BackendServiceCdnPolicyCacheModePtrOutput {
	return pulumi.ToOutput(in).(BackendServiceCdnPolicyCacheModePtrOutput)
}

func (in *backendServiceCdnPolicyCacheModePtr) ToBackendServiceCdnPolicyCacheModePtrOutputWithContext(ctx context.Context) BackendServiceCdnPolicyCacheModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceCdnPolicyCacheModePtrOutput)
}

// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
type BackendServiceCompressionMode string

const (
	// Automatically uses the best compression based on the Accept-Encoding header sent by the client.
	BackendServiceCompressionModeAutomatic = BackendServiceCompressionMode("AUTOMATIC")
	// Disables compression. Existing compressed responses cached by Cloud CDN will not be served to clients.
	BackendServiceCompressionModeDisabled = BackendServiceCompressionMode("DISABLED")
)

func (BackendServiceCompressionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceCompressionMode)(nil)).Elem()
}

func (e BackendServiceCompressionMode) ToBackendServiceCompressionModeOutput() BackendServiceCompressionModeOutput {
	return pulumi.ToOutput(e).(BackendServiceCompressionModeOutput)
}

func (e BackendServiceCompressionMode) ToBackendServiceCompressionModeOutputWithContext(ctx context.Context) BackendServiceCompressionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceCompressionModeOutput)
}

func (e BackendServiceCompressionMode) ToBackendServiceCompressionModePtrOutput() BackendServiceCompressionModePtrOutput {
	return e.ToBackendServiceCompressionModePtrOutputWithContext(context.Background())
}

func (e BackendServiceCompressionMode) ToBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) BackendServiceCompressionModePtrOutput {
	return BackendServiceCompressionMode(e).ToBackendServiceCompressionModeOutputWithContext(ctx).ToBackendServiceCompressionModePtrOutputWithContext(ctx)
}

func (e BackendServiceCompressionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceCompressionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceCompressionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceCompressionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceCompressionModeOutput struct{ *pulumi.OutputState }

func (BackendServiceCompressionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceCompressionMode)(nil)).Elem()
}

func (o BackendServiceCompressionModeOutput) ToBackendServiceCompressionModeOutput() BackendServiceCompressionModeOutput {
	return o
}

func (o BackendServiceCompressionModeOutput) ToBackendServiceCompressionModeOutputWithContext(ctx context.Context) BackendServiceCompressionModeOutput {
	return o
}

func (o BackendServiceCompressionModeOutput) ToBackendServiceCompressionModePtrOutput() BackendServiceCompressionModePtrOutput {
	return o.ToBackendServiceCompressionModePtrOutputWithContext(context.Background())
}

func (o BackendServiceCompressionModeOutput) ToBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) BackendServiceCompressionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceCompressionMode) *BackendServiceCompressionMode {
		return &v
	}).(BackendServiceCompressionModePtrOutput)
}

func (o BackendServiceCompressionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceCompressionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceCompressionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceCompressionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceCompressionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceCompressionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceCompressionModePtrOutput struct{ *pulumi.OutputState }

func (BackendServiceCompressionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceCompressionMode)(nil)).Elem()
}

func (o BackendServiceCompressionModePtrOutput) ToBackendServiceCompressionModePtrOutput() BackendServiceCompressionModePtrOutput {
	return o
}

func (o BackendServiceCompressionModePtrOutput) ToBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) BackendServiceCompressionModePtrOutput {
	return o
}

func (o BackendServiceCompressionModePtrOutput) Elem() BackendServiceCompressionModeOutput {
	return o.ApplyT(func(v *BackendServiceCompressionMode) BackendServiceCompressionMode {
		if v != nil {
			return *v
		}
		var ret BackendServiceCompressionMode
		return ret
	}).(BackendServiceCompressionModeOutput)
}

func (o BackendServiceCompressionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceCompressionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceCompressionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceCompressionModeInput is an input type that accepts BackendServiceCompressionModeArgs and BackendServiceCompressionModeOutput values.
// You can construct a concrete instance of `BackendServiceCompressionModeInput` via:
//
//          BackendServiceCompressionModeArgs{...}
type BackendServiceCompressionModeInput interface {
	pulumi.Input

	ToBackendServiceCompressionModeOutput() BackendServiceCompressionModeOutput
	ToBackendServiceCompressionModeOutputWithContext(context.Context) BackendServiceCompressionModeOutput
}

var backendServiceCompressionModePtrType = reflect.TypeOf((**BackendServiceCompressionMode)(nil)).Elem()

type BackendServiceCompressionModePtrInput interface {
	pulumi.Input

	ToBackendServiceCompressionModePtrOutput() BackendServiceCompressionModePtrOutput
	ToBackendServiceCompressionModePtrOutputWithContext(context.Context) BackendServiceCompressionModePtrOutput
}

type backendServiceCompressionModePtr string

func BackendServiceCompressionModePtr(v string) BackendServiceCompressionModePtrInput {
	return (*backendServiceCompressionModePtr)(&v)
}

func (*backendServiceCompressionModePtr) ElementType() reflect.Type {
	return backendServiceCompressionModePtrType
}

func (in *backendServiceCompressionModePtr) ToBackendServiceCompressionModePtrOutput() BackendServiceCompressionModePtrOutput {
	return pulumi.ToOutput(in).(BackendServiceCompressionModePtrOutput)
}

func (in *backendServiceCompressionModePtr) ToBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) BackendServiceCompressionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceCompressionModePtrOutput)
}

// Specifies connection persistence when backends are unhealthy. The default value is DEFAULT_FOR_PROTOCOL. If set to DEFAULT_FOR_PROTOCOL, the existing connections persist on unhealthy backends only for connection-oriented protocols (TCP and SCTP) and only if the Tracking Mode is PER_CONNECTION (default tracking mode) or the Session Affinity is configured for 5-tuple. They do not persist for UDP. If set to NEVER_PERSIST, after a backend becomes unhealthy, the existing connections on the unhealthy backend are never persisted on the unhealthy backend. They are always diverted to newly selected healthy backends (unless all backends are unhealthy). If set to ALWAYS_PERSIST, existing connections always persist on unhealthy backends regardless of protocol and session affinity. It is generally not recommended to use this mode overriding the default. For more details, see [Connection Persistence for Network Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#connection-persistence) and [Connection Persistence for Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal#connection-persistence).
type BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends string

const (
	BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsAlwaysPersist      = BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends("ALWAYS_PERSIST")
	BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsDefaultForProtocol = BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends("DEFAULT_FOR_PROTOCOL")
	BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsNeverPersist       = BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends("NEVER_PERSIST")
)

func (BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends)(nil)).Elem()
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput {
	return pulumi.ToOutput(e).(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput)
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput)
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return e.ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(context.Background())
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends(e).ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutputWithContext(ctx).ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(ctx)
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput struct{ *pulumi.OutputState }

func (BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends)(nil)).Elem()
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return o.ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) *BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends {
		return &v
	}).(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput)
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput struct{ *pulumi.OutputState }

func (BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends)(nil)).Elem()
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput) Elem() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput {
	return o.ApplyT(func(v *BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends {
		if v != nil {
			return *v
		}
		var ret BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends
		return ret
	}).(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput)
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsInput is an input type that accepts BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsArgs and BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput values.
// You can construct a concrete instance of `BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsInput` via:
//
//          BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsArgs{...}
type BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsInput interface {
	pulumi.Input

	ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput
	ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutputWithContext(context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput
}

var backendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrType = reflect.TypeOf((**BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends)(nil)).Elem()

type BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrInput interface {
	pulumi.Input

	ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput
	ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput
}

type backendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtr string

func BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtr(v string) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrInput {
	return (*backendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtr)(&v)
}

func (*backendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtr) ElementType() reflect.Type {
	return backendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrType
}

func (in *backendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtr) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput() BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return pulumi.ToOutput(in).(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput)
}

func (in *backendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtr) ToBackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput)
}

// Specifies the key used for connection tracking. There are two options: - PER_CONNECTION: This is the default mode. The Connection Tracking is performed as per the Connection Key (default Hash Method) for the specific protocol. - PER_SESSION: The Connection Tracking is performed as per the configured Session Affinity. It matches the configured Session Affinity. For more details, see [Tracking Mode for Network Load Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#tracking-mode) and [Tracking Mode for Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal#tracking-mode).
type BackendServiceConnectionTrackingPolicyTrackingMode string

const (
	BackendServiceConnectionTrackingPolicyTrackingModeInvalidTrackingMode = BackendServiceConnectionTrackingPolicyTrackingMode("INVALID_TRACKING_MODE")
	BackendServiceConnectionTrackingPolicyTrackingModePerConnection       = BackendServiceConnectionTrackingPolicyTrackingMode("PER_CONNECTION")
	BackendServiceConnectionTrackingPolicyTrackingModePerSession          = BackendServiceConnectionTrackingPolicyTrackingMode("PER_SESSION")
)

func (BackendServiceConnectionTrackingPolicyTrackingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceConnectionTrackingPolicyTrackingMode)(nil)).Elem()
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToBackendServiceConnectionTrackingPolicyTrackingModeOutput() BackendServiceConnectionTrackingPolicyTrackingModeOutput {
	return pulumi.ToOutput(e).(BackendServiceConnectionTrackingPolicyTrackingModeOutput)
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToBackendServiceConnectionTrackingPolicyTrackingModeOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyTrackingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceConnectionTrackingPolicyTrackingModeOutput)
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutput() BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return e.ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(context.Background())
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return BackendServiceConnectionTrackingPolicyTrackingMode(e).ToBackendServiceConnectionTrackingPolicyTrackingModeOutputWithContext(ctx).ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(ctx)
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceConnectionTrackingPolicyTrackingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceConnectionTrackingPolicyTrackingModeOutput struct{ *pulumi.OutputState }

func (BackendServiceConnectionTrackingPolicyTrackingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceConnectionTrackingPolicyTrackingMode)(nil)).Elem()
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToBackendServiceConnectionTrackingPolicyTrackingModeOutput() BackendServiceConnectionTrackingPolicyTrackingModeOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToBackendServiceConnectionTrackingPolicyTrackingModeOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyTrackingModeOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutput() BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return o.ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceConnectionTrackingPolicyTrackingMode) *BackendServiceConnectionTrackingPolicyTrackingMode {
		return &v
	}).(BackendServiceConnectionTrackingPolicyTrackingModePtrOutput)
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceConnectionTrackingPolicyTrackingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyTrackingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceConnectionTrackingPolicyTrackingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceConnectionTrackingPolicyTrackingModePtrOutput struct{ *pulumi.OutputState }

func (BackendServiceConnectionTrackingPolicyTrackingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceConnectionTrackingPolicyTrackingMode)(nil)).Elem()
}

func (o BackendServiceConnectionTrackingPolicyTrackingModePtrOutput) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutput() BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyTrackingModePtrOutput) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return o
}

func (o BackendServiceConnectionTrackingPolicyTrackingModePtrOutput) Elem() BackendServiceConnectionTrackingPolicyTrackingModeOutput {
	return o.ApplyT(func(v *BackendServiceConnectionTrackingPolicyTrackingMode) BackendServiceConnectionTrackingPolicyTrackingMode {
		if v != nil {
			return *v
		}
		var ret BackendServiceConnectionTrackingPolicyTrackingMode
		return ret
	}).(BackendServiceConnectionTrackingPolicyTrackingModeOutput)
}

func (o BackendServiceConnectionTrackingPolicyTrackingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceConnectionTrackingPolicyTrackingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceConnectionTrackingPolicyTrackingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceConnectionTrackingPolicyTrackingModeInput is an input type that accepts BackendServiceConnectionTrackingPolicyTrackingModeArgs and BackendServiceConnectionTrackingPolicyTrackingModeOutput values.
// You can construct a concrete instance of `BackendServiceConnectionTrackingPolicyTrackingModeInput` via:
//
//          BackendServiceConnectionTrackingPolicyTrackingModeArgs{...}
type BackendServiceConnectionTrackingPolicyTrackingModeInput interface {
	pulumi.Input

	ToBackendServiceConnectionTrackingPolicyTrackingModeOutput() BackendServiceConnectionTrackingPolicyTrackingModeOutput
	ToBackendServiceConnectionTrackingPolicyTrackingModeOutputWithContext(context.Context) BackendServiceConnectionTrackingPolicyTrackingModeOutput
}

var backendServiceConnectionTrackingPolicyTrackingModePtrType = reflect.TypeOf((**BackendServiceConnectionTrackingPolicyTrackingMode)(nil)).Elem()

type BackendServiceConnectionTrackingPolicyTrackingModePtrInput interface {
	pulumi.Input

	ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutput() BackendServiceConnectionTrackingPolicyTrackingModePtrOutput
	ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(context.Context) BackendServiceConnectionTrackingPolicyTrackingModePtrOutput
}

type backendServiceConnectionTrackingPolicyTrackingModePtr string

func BackendServiceConnectionTrackingPolicyTrackingModePtr(v string) BackendServiceConnectionTrackingPolicyTrackingModePtrInput {
	return (*backendServiceConnectionTrackingPolicyTrackingModePtr)(&v)
}

func (*backendServiceConnectionTrackingPolicyTrackingModePtr) ElementType() reflect.Type {
	return backendServiceConnectionTrackingPolicyTrackingModePtrType
}

func (in *backendServiceConnectionTrackingPolicyTrackingModePtr) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutput() BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return pulumi.ToOutput(in).(BackendServiceConnectionTrackingPolicyTrackingModePtrOutput)
}

func (in *backendServiceConnectionTrackingPolicyTrackingModePtr) ToBackendServiceConnectionTrackingPolicyTrackingModePtrOutputWithContext(ctx context.Context) BackendServiceConnectionTrackingPolicyTrackingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceConnectionTrackingPolicyTrackingModePtrOutput)
}

// Specifies the load balancer type. A backend service created for one type of load balancer cannot be used with another. For more information, refer to Choosing a load balancer.
type BackendServiceLoadBalancingScheme string

const (
	// Signifies that this will be used for external HTTP(S), SSL Proxy, TCP Proxy, or Network Load Balancing
	BackendServiceLoadBalancingSchemeExternal = BackendServiceLoadBalancingScheme("EXTERNAL")
	// Signifies that this will be used for External Managed HTTP(S) Load Balancing.
	BackendServiceLoadBalancingSchemeExternalManaged = BackendServiceLoadBalancingScheme("EXTERNAL_MANAGED")
	// Signifies that this will be used for Internal TCP/UDP Load Balancing.
	BackendServiceLoadBalancingSchemeInternal = BackendServiceLoadBalancingScheme("INTERNAL")
	// Signifies that this will be used for Internal HTTP(S) Load Balancing.
	BackendServiceLoadBalancingSchemeInternalManaged = BackendServiceLoadBalancingScheme("INTERNAL_MANAGED")
	// Signifies that this will be used by Traffic Director.
	BackendServiceLoadBalancingSchemeInternalSelfManaged        = BackendServiceLoadBalancingScheme("INTERNAL_SELF_MANAGED")
	BackendServiceLoadBalancingSchemeInvalidLoadBalancingScheme = BackendServiceLoadBalancingScheme("INVALID_LOAD_BALANCING_SCHEME")
)

func (BackendServiceLoadBalancingScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceLoadBalancingScheme)(nil)).Elem()
}

func (e BackendServiceLoadBalancingScheme) ToBackendServiceLoadBalancingSchemeOutput() BackendServiceLoadBalancingSchemeOutput {
	return pulumi.ToOutput(e).(BackendServiceLoadBalancingSchemeOutput)
}

func (e BackendServiceLoadBalancingScheme) ToBackendServiceLoadBalancingSchemeOutputWithContext(ctx context.Context) BackendServiceLoadBalancingSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceLoadBalancingSchemeOutput)
}

func (e BackendServiceLoadBalancingScheme) ToBackendServiceLoadBalancingSchemePtrOutput() BackendServiceLoadBalancingSchemePtrOutput {
	return e.ToBackendServiceLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (e BackendServiceLoadBalancingScheme) ToBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) BackendServiceLoadBalancingSchemePtrOutput {
	return BackendServiceLoadBalancingScheme(e).ToBackendServiceLoadBalancingSchemeOutputWithContext(ctx).ToBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx)
}

func (e BackendServiceLoadBalancingScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceLoadBalancingScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceLoadBalancingScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceLoadBalancingScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceLoadBalancingSchemeOutput struct{ *pulumi.OutputState }

func (BackendServiceLoadBalancingSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceLoadBalancingScheme)(nil)).Elem()
}

func (o BackendServiceLoadBalancingSchemeOutput) ToBackendServiceLoadBalancingSchemeOutput() BackendServiceLoadBalancingSchemeOutput {
	return o
}

func (o BackendServiceLoadBalancingSchemeOutput) ToBackendServiceLoadBalancingSchemeOutputWithContext(ctx context.Context) BackendServiceLoadBalancingSchemeOutput {
	return o
}

func (o BackendServiceLoadBalancingSchemeOutput) ToBackendServiceLoadBalancingSchemePtrOutput() BackendServiceLoadBalancingSchemePtrOutput {
	return o.ToBackendServiceLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (o BackendServiceLoadBalancingSchemeOutput) ToBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) BackendServiceLoadBalancingSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceLoadBalancingScheme) *BackendServiceLoadBalancingScheme {
		return &v
	}).(BackendServiceLoadBalancingSchemePtrOutput)
}

func (o BackendServiceLoadBalancingSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceLoadBalancingSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceLoadBalancingScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceLoadBalancingSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceLoadBalancingSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceLoadBalancingScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceLoadBalancingSchemePtrOutput struct{ *pulumi.OutputState }

func (BackendServiceLoadBalancingSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceLoadBalancingScheme)(nil)).Elem()
}

func (o BackendServiceLoadBalancingSchemePtrOutput) ToBackendServiceLoadBalancingSchemePtrOutput() BackendServiceLoadBalancingSchemePtrOutput {
	return o
}

func (o BackendServiceLoadBalancingSchemePtrOutput) ToBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) BackendServiceLoadBalancingSchemePtrOutput {
	return o
}

func (o BackendServiceLoadBalancingSchemePtrOutput) Elem() BackendServiceLoadBalancingSchemeOutput {
	return o.ApplyT(func(v *BackendServiceLoadBalancingScheme) BackendServiceLoadBalancingScheme {
		if v != nil {
			return *v
		}
		var ret BackendServiceLoadBalancingScheme
		return ret
	}).(BackendServiceLoadBalancingSchemeOutput)
}

func (o BackendServiceLoadBalancingSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceLoadBalancingSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceLoadBalancingScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceLoadBalancingSchemeInput is an input type that accepts BackendServiceLoadBalancingSchemeArgs and BackendServiceLoadBalancingSchemeOutput values.
// You can construct a concrete instance of `BackendServiceLoadBalancingSchemeInput` via:
//
//          BackendServiceLoadBalancingSchemeArgs{...}
type BackendServiceLoadBalancingSchemeInput interface {
	pulumi.Input

	ToBackendServiceLoadBalancingSchemeOutput() BackendServiceLoadBalancingSchemeOutput
	ToBackendServiceLoadBalancingSchemeOutputWithContext(context.Context) BackendServiceLoadBalancingSchemeOutput
}

var backendServiceLoadBalancingSchemePtrType = reflect.TypeOf((**BackendServiceLoadBalancingScheme)(nil)).Elem()

type BackendServiceLoadBalancingSchemePtrInput interface {
	pulumi.Input

	ToBackendServiceLoadBalancingSchemePtrOutput() BackendServiceLoadBalancingSchemePtrOutput
	ToBackendServiceLoadBalancingSchemePtrOutputWithContext(context.Context) BackendServiceLoadBalancingSchemePtrOutput
}

type backendServiceLoadBalancingSchemePtr string

func BackendServiceLoadBalancingSchemePtr(v string) BackendServiceLoadBalancingSchemePtrInput {
	return (*backendServiceLoadBalancingSchemePtr)(&v)
}

func (*backendServiceLoadBalancingSchemePtr) ElementType() reflect.Type {
	return backendServiceLoadBalancingSchemePtrType
}

func (in *backendServiceLoadBalancingSchemePtr) ToBackendServiceLoadBalancingSchemePtrOutput() BackendServiceLoadBalancingSchemePtrOutput {
	return pulumi.ToOutput(in).(BackendServiceLoadBalancingSchemePtrOutput)
}

func (in *backendServiceLoadBalancingSchemePtr) ToBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) BackendServiceLoadBalancingSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceLoadBalancingSchemePtrOutput)
}

// The load balancing algorithm used within the scope of the locality. The possible values are: - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. - RANDOM: The load balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824 This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. If sessionAffinity is not NONE, and this field is not set to MAGLEV or RING_HASH, session affinity settings will not take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
type BackendServiceLocalityLbPolicy string

const (
	BackendServiceLocalityLbPolicyInvalidLbPolicy = BackendServiceLocalityLbPolicy("INVALID_LB_POLICY")
	// An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests.
	BackendServiceLocalityLbPolicyLeastRequest = BackendServiceLocalityLbPolicy("LEAST_REQUEST")
	// This algorithm implements consistent hashing to backends. Maglev can be used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824
	BackendServiceLocalityLbPolicyMaglev = BackendServiceLocalityLbPolicy("MAGLEV")
	// Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.
	BackendServiceLocalityLbPolicyOriginalDestination = BackendServiceLocalityLbPolicy("ORIGINAL_DESTINATION")
	// The load balancer selects a random healthy host.
	BackendServiceLocalityLbPolicyRandom = BackendServiceLocalityLbPolicy("RANDOM")
	// The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests.
	BackendServiceLocalityLbPolicyRingHash = BackendServiceLocalityLbPolicy("RING_HASH")
	// This is a simple policy in which each healthy backend is selected in round robin order. This is the default.
	BackendServiceLocalityLbPolicyRoundRobin = BackendServiceLocalityLbPolicy("ROUND_ROBIN")
	// Per-instance weighted Load Balancing via health check reported weights. If set, the Backend Service must configure a non legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weighted based on the per-instance weights reported in the last processed health check replies, as long as every instance either reported a valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. This option is only supported in Network Load Balancing.
	BackendServiceLocalityLbPolicyWeightedMaglev = BackendServiceLocalityLbPolicy("WEIGHTED_MAGLEV")
)

func (BackendServiceLocalityLbPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceLocalityLbPolicy)(nil)).Elem()
}

func (e BackendServiceLocalityLbPolicy) ToBackendServiceLocalityLbPolicyOutput() BackendServiceLocalityLbPolicyOutput {
	return pulumi.ToOutput(e).(BackendServiceLocalityLbPolicyOutput)
}

func (e BackendServiceLocalityLbPolicy) ToBackendServiceLocalityLbPolicyOutputWithContext(ctx context.Context) BackendServiceLocalityLbPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceLocalityLbPolicyOutput)
}

func (e BackendServiceLocalityLbPolicy) ToBackendServiceLocalityLbPolicyPtrOutput() BackendServiceLocalityLbPolicyPtrOutput {
	return e.ToBackendServiceLocalityLbPolicyPtrOutputWithContext(context.Background())
}

func (e BackendServiceLocalityLbPolicy) ToBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) BackendServiceLocalityLbPolicyPtrOutput {
	return BackendServiceLocalityLbPolicy(e).ToBackendServiceLocalityLbPolicyOutputWithContext(ctx).ToBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx)
}

func (e BackendServiceLocalityLbPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceLocalityLbPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceLocalityLbPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceLocalityLbPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceLocalityLbPolicyOutput struct{ *pulumi.OutputState }

func (BackendServiceLocalityLbPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceLocalityLbPolicy)(nil)).Elem()
}

func (o BackendServiceLocalityLbPolicyOutput) ToBackendServiceLocalityLbPolicyOutput() BackendServiceLocalityLbPolicyOutput {
	return o
}

func (o BackendServiceLocalityLbPolicyOutput) ToBackendServiceLocalityLbPolicyOutputWithContext(ctx context.Context) BackendServiceLocalityLbPolicyOutput {
	return o
}

func (o BackendServiceLocalityLbPolicyOutput) ToBackendServiceLocalityLbPolicyPtrOutput() BackendServiceLocalityLbPolicyPtrOutput {
	return o.ToBackendServiceLocalityLbPolicyPtrOutputWithContext(context.Background())
}

func (o BackendServiceLocalityLbPolicyOutput) ToBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) BackendServiceLocalityLbPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceLocalityLbPolicy) *BackendServiceLocalityLbPolicy {
		return &v
	}).(BackendServiceLocalityLbPolicyPtrOutput)
}

func (o BackendServiceLocalityLbPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceLocalityLbPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceLocalityLbPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceLocalityLbPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceLocalityLbPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceLocalityLbPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceLocalityLbPolicyPtrOutput struct{ *pulumi.OutputState }

func (BackendServiceLocalityLbPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceLocalityLbPolicy)(nil)).Elem()
}

func (o BackendServiceLocalityLbPolicyPtrOutput) ToBackendServiceLocalityLbPolicyPtrOutput() BackendServiceLocalityLbPolicyPtrOutput {
	return o
}

func (o BackendServiceLocalityLbPolicyPtrOutput) ToBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) BackendServiceLocalityLbPolicyPtrOutput {
	return o
}

func (o BackendServiceLocalityLbPolicyPtrOutput) Elem() BackendServiceLocalityLbPolicyOutput {
	return o.ApplyT(func(v *BackendServiceLocalityLbPolicy) BackendServiceLocalityLbPolicy {
		if v != nil {
			return *v
		}
		var ret BackendServiceLocalityLbPolicy
		return ret
	}).(BackendServiceLocalityLbPolicyOutput)
}

func (o BackendServiceLocalityLbPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceLocalityLbPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceLocalityLbPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceLocalityLbPolicyInput is an input type that accepts BackendServiceLocalityLbPolicyArgs and BackendServiceLocalityLbPolicyOutput values.
// You can construct a concrete instance of `BackendServiceLocalityLbPolicyInput` via:
//
//          BackendServiceLocalityLbPolicyArgs{...}
type BackendServiceLocalityLbPolicyInput interface {
	pulumi.Input

	ToBackendServiceLocalityLbPolicyOutput() BackendServiceLocalityLbPolicyOutput
	ToBackendServiceLocalityLbPolicyOutputWithContext(context.Context) BackendServiceLocalityLbPolicyOutput
}

var backendServiceLocalityLbPolicyPtrType = reflect.TypeOf((**BackendServiceLocalityLbPolicy)(nil)).Elem()

type BackendServiceLocalityLbPolicyPtrInput interface {
	pulumi.Input

	ToBackendServiceLocalityLbPolicyPtrOutput() BackendServiceLocalityLbPolicyPtrOutput
	ToBackendServiceLocalityLbPolicyPtrOutputWithContext(context.Context) BackendServiceLocalityLbPolicyPtrOutput
}

type backendServiceLocalityLbPolicyPtr string

func BackendServiceLocalityLbPolicyPtr(v string) BackendServiceLocalityLbPolicyPtrInput {
	return (*backendServiceLocalityLbPolicyPtr)(&v)
}

func (*backendServiceLocalityLbPolicyPtr) ElementType() reflect.Type {
	return backendServiceLocalityLbPolicyPtrType
}

func (in *backendServiceLocalityLbPolicyPtr) ToBackendServiceLocalityLbPolicyPtrOutput() BackendServiceLocalityLbPolicyPtrOutput {
	return pulumi.ToOutput(in).(BackendServiceLocalityLbPolicyPtrOutput)
}

func (in *backendServiceLocalityLbPolicyPtr) ToBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) BackendServiceLocalityLbPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceLocalityLbPolicyPtrOutput)
}

// The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancers or for Traffic Director for more information. Must be set to GRPC when the backend service is referenced by a URL map that is bound to target gRPC proxy.
type BackendServiceProtocol string

const (
	// ALL includes TCP, UDP, ICMP, ESP, AH and SCTP. Note that this should never be used together with target_xx_proxies.
	BackendServiceProtocolAll = BackendServiceProtocol("ALL")
	// gRPC (available for Traffic Director).
	BackendServiceProtocolGrpc = BackendServiceProtocol("GRPC")
	BackendServiceProtocolHttp = BackendServiceProtocol("HTTP")
	// HTTP/2 with SSL.
	BackendServiceProtocolHttp2 = BackendServiceProtocol("HTTP2")
	BackendServiceProtocolHttps = BackendServiceProtocol("HTTPS")
	// TCP proxying with SSL.
	BackendServiceProtocolSsl = BackendServiceProtocol("SSL")
	// TCP proxying or TCP pass-through.
	BackendServiceProtocolTcp = BackendServiceProtocol("TCP")
	// UDP.
	BackendServiceProtocolUdp = BackendServiceProtocol("UDP")
	// If a Backend Service has UNSPECIFIED as its protocol, it can be used with any L3/L4 Forwarding Rules.
	BackendServiceProtocolUnspecified = BackendServiceProtocol("UNSPECIFIED")
)

func (BackendServiceProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceProtocol)(nil)).Elem()
}

func (e BackendServiceProtocol) ToBackendServiceProtocolOutput() BackendServiceProtocolOutput {
	return pulumi.ToOutput(e).(BackendServiceProtocolOutput)
}

func (e BackendServiceProtocol) ToBackendServiceProtocolOutputWithContext(ctx context.Context) BackendServiceProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceProtocolOutput)
}

func (e BackendServiceProtocol) ToBackendServiceProtocolPtrOutput() BackendServiceProtocolPtrOutput {
	return e.ToBackendServiceProtocolPtrOutputWithContext(context.Background())
}

func (e BackendServiceProtocol) ToBackendServiceProtocolPtrOutputWithContext(ctx context.Context) BackendServiceProtocolPtrOutput {
	return BackendServiceProtocol(e).ToBackendServiceProtocolOutputWithContext(ctx).ToBackendServiceProtocolPtrOutputWithContext(ctx)
}

func (e BackendServiceProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceProtocolOutput struct{ *pulumi.OutputState }

func (BackendServiceProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceProtocol)(nil)).Elem()
}

func (o BackendServiceProtocolOutput) ToBackendServiceProtocolOutput() BackendServiceProtocolOutput {
	return o
}

func (o BackendServiceProtocolOutput) ToBackendServiceProtocolOutputWithContext(ctx context.Context) BackendServiceProtocolOutput {
	return o
}

func (o BackendServiceProtocolOutput) ToBackendServiceProtocolPtrOutput() BackendServiceProtocolPtrOutput {
	return o.ToBackendServiceProtocolPtrOutputWithContext(context.Background())
}

func (o BackendServiceProtocolOutput) ToBackendServiceProtocolPtrOutputWithContext(ctx context.Context) BackendServiceProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceProtocol) *BackendServiceProtocol {
		return &v
	}).(BackendServiceProtocolPtrOutput)
}

func (o BackendServiceProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceProtocolPtrOutput struct{ *pulumi.OutputState }

func (BackendServiceProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceProtocol)(nil)).Elem()
}

func (o BackendServiceProtocolPtrOutput) ToBackendServiceProtocolPtrOutput() BackendServiceProtocolPtrOutput {
	return o
}

func (o BackendServiceProtocolPtrOutput) ToBackendServiceProtocolPtrOutputWithContext(ctx context.Context) BackendServiceProtocolPtrOutput {
	return o
}

func (o BackendServiceProtocolPtrOutput) Elem() BackendServiceProtocolOutput {
	return o.ApplyT(func(v *BackendServiceProtocol) BackendServiceProtocol {
		if v != nil {
			return *v
		}
		var ret BackendServiceProtocol
		return ret
	}).(BackendServiceProtocolOutput)
}

func (o BackendServiceProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceProtocolInput is an input type that accepts BackendServiceProtocolArgs and BackendServiceProtocolOutput values.
// You can construct a concrete instance of `BackendServiceProtocolInput` via:
//
//          BackendServiceProtocolArgs{...}
type BackendServiceProtocolInput interface {
	pulumi.Input

	ToBackendServiceProtocolOutput() BackendServiceProtocolOutput
	ToBackendServiceProtocolOutputWithContext(context.Context) BackendServiceProtocolOutput
}

var backendServiceProtocolPtrType = reflect.TypeOf((**BackendServiceProtocol)(nil)).Elem()

type BackendServiceProtocolPtrInput interface {
	pulumi.Input

	ToBackendServiceProtocolPtrOutput() BackendServiceProtocolPtrOutput
	ToBackendServiceProtocolPtrOutputWithContext(context.Context) BackendServiceProtocolPtrOutput
}

type backendServiceProtocolPtr string

func BackendServiceProtocolPtr(v string) BackendServiceProtocolPtrInput {
	return (*backendServiceProtocolPtr)(&v)
}

func (*backendServiceProtocolPtr) ElementType() reflect.Type {
	return backendServiceProtocolPtrType
}

func (in *backendServiceProtocolPtr) ToBackendServiceProtocolPtrOutput() BackendServiceProtocolPtrOutput {
	return pulumi.ToOutput(in).(BackendServiceProtocolPtrOutput)
}

func (in *backendServiceProtocolPtr) ToBackendServiceProtocolPtrOutputWithContext(ctx context.Context) BackendServiceProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceProtocolPtrOutput)
}

// Type of session affinity to use. The default is NONE. Only NONE and HEADER_FIELD are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true. For more details, see: [Session Affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity).
type BackendServiceSessionAffinity string

const (
	// 2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy.
	BackendServiceSessionAffinityClientIp = BackendServiceSessionAffinity("CLIENT_IP")
	// 1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing.
	BackendServiceSessionAffinityClientIpNoDestination = BackendServiceSessionAffinity("CLIENT_IP_NO_DESTINATION")
	// 5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
	BackendServiceSessionAffinityClientIpPortProto = BackendServiceSessionAffinity("CLIENT_IP_PORT_PROTO")
	// 3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
	BackendServiceSessionAffinityClientIpProto = BackendServiceSessionAffinity("CLIENT_IP_PROTO")
	// Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing.
	BackendServiceSessionAffinityGeneratedCookie = BackendServiceSessionAffinity("GENERATED_COOKIE")
	// The hash is based on a user specified header field.
	BackendServiceSessionAffinityHeaderField = BackendServiceSessionAffinity("HEADER_FIELD")
	// The hash is based on a user provided cookie.
	BackendServiceSessionAffinityHttpCookie = BackendServiceSessionAffinity("HTTP_COOKIE")
	// No session affinity. Connections from the same client IP may go to any instance in the pool.
	BackendServiceSessionAffinityNone = BackendServiceSessionAffinity("NONE")
)

func (BackendServiceSessionAffinity) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceSessionAffinity)(nil)).Elem()
}

func (e BackendServiceSessionAffinity) ToBackendServiceSessionAffinityOutput() BackendServiceSessionAffinityOutput {
	return pulumi.ToOutput(e).(BackendServiceSessionAffinityOutput)
}

func (e BackendServiceSessionAffinity) ToBackendServiceSessionAffinityOutputWithContext(ctx context.Context) BackendServiceSessionAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackendServiceSessionAffinityOutput)
}

func (e BackendServiceSessionAffinity) ToBackendServiceSessionAffinityPtrOutput() BackendServiceSessionAffinityPtrOutput {
	return e.ToBackendServiceSessionAffinityPtrOutputWithContext(context.Background())
}

func (e BackendServiceSessionAffinity) ToBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) BackendServiceSessionAffinityPtrOutput {
	return BackendServiceSessionAffinity(e).ToBackendServiceSessionAffinityOutputWithContext(ctx).ToBackendServiceSessionAffinityPtrOutputWithContext(ctx)
}

func (e BackendServiceSessionAffinity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceSessionAffinity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackendServiceSessionAffinity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackendServiceSessionAffinity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackendServiceSessionAffinityOutput struct{ *pulumi.OutputState }

func (BackendServiceSessionAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceSessionAffinity)(nil)).Elem()
}

func (o BackendServiceSessionAffinityOutput) ToBackendServiceSessionAffinityOutput() BackendServiceSessionAffinityOutput {
	return o
}

func (o BackendServiceSessionAffinityOutput) ToBackendServiceSessionAffinityOutputWithContext(ctx context.Context) BackendServiceSessionAffinityOutput {
	return o
}

func (o BackendServiceSessionAffinityOutput) ToBackendServiceSessionAffinityPtrOutput() BackendServiceSessionAffinityPtrOutput {
	return o.ToBackendServiceSessionAffinityPtrOutputWithContext(context.Background())
}

func (o BackendServiceSessionAffinityOutput) ToBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) BackendServiceSessionAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceSessionAffinity) *BackendServiceSessionAffinity {
		return &v
	}).(BackendServiceSessionAffinityPtrOutput)
}

func (o BackendServiceSessionAffinityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackendServiceSessionAffinityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceSessionAffinity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackendServiceSessionAffinityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceSessionAffinityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackendServiceSessionAffinity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackendServiceSessionAffinityPtrOutput struct{ *pulumi.OutputState }

func (BackendServiceSessionAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceSessionAffinity)(nil)).Elem()
}

func (o BackendServiceSessionAffinityPtrOutput) ToBackendServiceSessionAffinityPtrOutput() BackendServiceSessionAffinityPtrOutput {
	return o
}

func (o BackendServiceSessionAffinityPtrOutput) ToBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) BackendServiceSessionAffinityPtrOutput {
	return o
}

func (o BackendServiceSessionAffinityPtrOutput) Elem() BackendServiceSessionAffinityOutput {
	return o.ApplyT(func(v *BackendServiceSessionAffinity) BackendServiceSessionAffinity {
		if v != nil {
			return *v
		}
		var ret BackendServiceSessionAffinity
		return ret
	}).(BackendServiceSessionAffinityOutput)
}

func (o BackendServiceSessionAffinityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackendServiceSessionAffinityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackendServiceSessionAffinity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackendServiceSessionAffinityInput is an input type that accepts BackendServiceSessionAffinityArgs and BackendServiceSessionAffinityOutput values.
// You can construct a concrete instance of `BackendServiceSessionAffinityInput` via:
//
//          BackendServiceSessionAffinityArgs{...}
type BackendServiceSessionAffinityInput interface {
	pulumi.Input

	ToBackendServiceSessionAffinityOutput() BackendServiceSessionAffinityOutput
	ToBackendServiceSessionAffinityOutputWithContext(context.Context) BackendServiceSessionAffinityOutput
}

var backendServiceSessionAffinityPtrType = reflect.TypeOf((**BackendServiceSessionAffinity)(nil)).Elem()

type BackendServiceSessionAffinityPtrInput interface {
	pulumi.Input

	ToBackendServiceSessionAffinityPtrOutput() BackendServiceSessionAffinityPtrOutput
	ToBackendServiceSessionAffinityPtrOutputWithContext(context.Context) BackendServiceSessionAffinityPtrOutput
}

type backendServiceSessionAffinityPtr string

func BackendServiceSessionAffinityPtr(v string) BackendServiceSessionAffinityPtrInput {
	return (*backendServiceSessionAffinityPtr)(&v)
}

func (*backendServiceSessionAffinityPtr) ElementType() reflect.Type {
	return backendServiceSessionAffinityPtrType
}

func (in *backendServiceSessionAffinityPtr) ToBackendServiceSessionAffinityPtrOutput() BackendServiceSessionAffinityPtrOutput {
	return pulumi.ToOutput(in).(BackendServiceSessionAffinityPtrOutput)
}

func (in *backendServiceSessionAffinityPtr) ToBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) BackendServiceSessionAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackendServiceSessionAffinityPtrOutput)
}

// The type of call credentials to use for GRPC requests to the SDS server. This field can be set to one of the following: - GCE_VM: The local GCE VM service account credentials are used to access the SDS server. - FROM_PLUGIN: Custom authenticator credentials are used to access the SDS server.
type CallCredentialsCallCredentialType string

const (
	// Custom authenticator credentials are used to access the SDS server.
	CallCredentialsCallCredentialTypeFromPlugin = CallCredentialsCallCredentialType("FROM_PLUGIN")
	// The local GCE VM service account credentials are used to access the SDS server.
	CallCredentialsCallCredentialTypeGceVm   = CallCredentialsCallCredentialType("GCE_VM")
	CallCredentialsCallCredentialTypeInvalid = CallCredentialsCallCredentialType("INVALID")
)

func (CallCredentialsCallCredentialType) ElementType() reflect.Type {
	return reflect.TypeOf((*CallCredentialsCallCredentialType)(nil)).Elem()
}

func (e CallCredentialsCallCredentialType) ToCallCredentialsCallCredentialTypeOutput() CallCredentialsCallCredentialTypeOutput {
	return pulumi.ToOutput(e).(CallCredentialsCallCredentialTypeOutput)
}

func (e CallCredentialsCallCredentialType) ToCallCredentialsCallCredentialTypeOutputWithContext(ctx context.Context) CallCredentialsCallCredentialTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CallCredentialsCallCredentialTypeOutput)
}

func (e CallCredentialsCallCredentialType) ToCallCredentialsCallCredentialTypePtrOutput() CallCredentialsCallCredentialTypePtrOutput {
	return e.ToCallCredentialsCallCredentialTypePtrOutputWithContext(context.Background())
}

func (e CallCredentialsCallCredentialType) ToCallCredentialsCallCredentialTypePtrOutputWithContext(ctx context.Context) CallCredentialsCallCredentialTypePtrOutput {
	return CallCredentialsCallCredentialType(e).ToCallCredentialsCallCredentialTypeOutputWithContext(ctx).ToCallCredentialsCallCredentialTypePtrOutputWithContext(ctx)
}

func (e CallCredentialsCallCredentialType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CallCredentialsCallCredentialType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CallCredentialsCallCredentialType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CallCredentialsCallCredentialType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CallCredentialsCallCredentialTypeOutput struct{ *pulumi.OutputState }

func (CallCredentialsCallCredentialTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CallCredentialsCallCredentialType)(nil)).Elem()
}

func (o CallCredentialsCallCredentialTypeOutput) ToCallCredentialsCallCredentialTypeOutput() CallCredentialsCallCredentialTypeOutput {
	return o
}

func (o CallCredentialsCallCredentialTypeOutput) ToCallCredentialsCallCredentialTypeOutputWithContext(ctx context.Context) CallCredentialsCallCredentialTypeOutput {
	return o
}

func (o CallCredentialsCallCredentialTypeOutput) ToCallCredentialsCallCredentialTypePtrOutput() CallCredentialsCallCredentialTypePtrOutput {
	return o.ToCallCredentialsCallCredentialTypePtrOutputWithContext(context.Background())
}

func (o CallCredentialsCallCredentialTypeOutput) ToCallCredentialsCallCredentialTypePtrOutputWithContext(ctx context.Context) CallCredentialsCallCredentialTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CallCredentialsCallCredentialType) *CallCredentialsCallCredentialType {
		return &v
	}).(CallCredentialsCallCredentialTypePtrOutput)
}

func (o CallCredentialsCallCredentialTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CallCredentialsCallCredentialTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CallCredentialsCallCredentialType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CallCredentialsCallCredentialTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CallCredentialsCallCredentialTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CallCredentialsCallCredentialType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CallCredentialsCallCredentialTypePtrOutput struct{ *pulumi.OutputState }

func (CallCredentialsCallCredentialTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CallCredentialsCallCredentialType)(nil)).Elem()
}

func (o CallCredentialsCallCredentialTypePtrOutput) ToCallCredentialsCallCredentialTypePtrOutput() CallCredentialsCallCredentialTypePtrOutput {
	return o
}

func (o CallCredentialsCallCredentialTypePtrOutput) ToCallCredentialsCallCredentialTypePtrOutputWithContext(ctx context.Context) CallCredentialsCallCredentialTypePtrOutput {
	return o
}

func (o CallCredentialsCallCredentialTypePtrOutput) Elem() CallCredentialsCallCredentialTypeOutput {
	return o.ApplyT(func(v *CallCredentialsCallCredentialType) CallCredentialsCallCredentialType {
		if v != nil {
			return *v
		}
		var ret CallCredentialsCallCredentialType
		return ret
	}).(CallCredentialsCallCredentialTypeOutput)
}

func (o CallCredentialsCallCredentialTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CallCredentialsCallCredentialTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CallCredentialsCallCredentialType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CallCredentialsCallCredentialTypeInput is an input type that accepts CallCredentialsCallCredentialTypeArgs and CallCredentialsCallCredentialTypeOutput values.
// You can construct a concrete instance of `CallCredentialsCallCredentialTypeInput` via:
//
//          CallCredentialsCallCredentialTypeArgs{...}
type CallCredentialsCallCredentialTypeInput interface {
	pulumi.Input

	ToCallCredentialsCallCredentialTypeOutput() CallCredentialsCallCredentialTypeOutput
	ToCallCredentialsCallCredentialTypeOutputWithContext(context.Context) CallCredentialsCallCredentialTypeOutput
}

var callCredentialsCallCredentialTypePtrType = reflect.TypeOf((**CallCredentialsCallCredentialType)(nil)).Elem()

type CallCredentialsCallCredentialTypePtrInput interface {
	pulumi.Input

	ToCallCredentialsCallCredentialTypePtrOutput() CallCredentialsCallCredentialTypePtrOutput
	ToCallCredentialsCallCredentialTypePtrOutputWithContext(context.Context) CallCredentialsCallCredentialTypePtrOutput
}

type callCredentialsCallCredentialTypePtr string

func CallCredentialsCallCredentialTypePtr(v string) CallCredentialsCallCredentialTypePtrInput {
	return (*callCredentialsCallCredentialTypePtr)(&v)
}

func (*callCredentialsCallCredentialTypePtr) ElementType() reflect.Type {
	return callCredentialsCallCredentialTypePtrType
}

func (in *callCredentialsCallCredentialTypePtr) ToCallCredentialsCallCredentialTypePtrOutput() CallCredentialsCallCredentialTypePtrOutput {
	return pulumi.ToOutput(in).(CallCredentialsCallCredentialTypePtrOutput)
}

func (in *callCredentialsCallCredentialTypePtr) ToCallCredentialsCallCredentialTypePtrOutputWithContext(ctx context.Context) CallCredentialsCallCredentialTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CallCredentialsCallCredentialTypePtrOutput)
}

// The channel credentials to access the SDS server. This field can be set to one of the following: CERTIFICATES: Use TLS certificates to access the SDS server. GCE_VM: Use local GCE VM credentials to access the SDS server.
type ChannelCredentialsChannelCredentialType string

const (
	// Use TLS certificates to access the SDS server.
	ChannelCredentialsChannelCredentialTypeCertificates = ChannelCredentialsChannelCredentialType("CERTIFICATES")
	// Use local GCE VM credentials to access the SDS server.
	ChannelCredentialsChannelCredentialTypeGceVm   = ChannelCredentialsChannelCredentialType("GCE_VM")
	ChannelCredentialsChannelCredentialTypeInvalid = ChannelCredentialsChannelCredentialType("INVALID")
)

func (ChannelCredentialsChannelCredentialType) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCredentialsChannelCredentialType)(nil)).Elem()
}

func (e ChannelCredentialsChannelCredentialType) ToChannelCredentialsChannelCredentialTypeOutput() ChannelCredentialsChannelCredentialTypeOutput {
	return pulumi.ToOutput(e).(ChannelCredentialsChannelCredentialTypeOutput)
}

func (e ChannelCredentialsChannelCredentialType) ToChannelCredentialsChannelCredentialTypeOutputWithContext(ctx context.Context) ChannelCredentialsChannelCredentialTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ChannelCredentialsChannelCredentialTypeOutput)
}

func (e ChannelCredentialsChannelCredentialType) ToChannelCredentialsChannelCredentialTypePtrOutput() ChannelCredentialsChannelCredentialTypePtrOutput {
	return e.ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(context.Background())
}

func (e ChannelCredentialsChannelCredentialType) ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(ctx context.Context) ChannelCredentialsChannelCredentialTypePtrOutput {
	return ChannelCredentialsChannelCredentialType(e).ToChannelCredentialsChannelCredentialTypeOutputWithContext(ctx).ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(ctx)
}

func (e ChannelCredentialsChannelCredentialType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelCredentialsChannelCredentialType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ChannelCredentialsChannelCredentialType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ChannelCredentialsChannelCredentialType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ChannelCredentialsChannelCredentialTypeOutput struct{ *pulumi.OutputState }

func (ChannelCredentialsChannelCredentialTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCredentialsChannelCredentialType)(nil)).Elem()
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToChannelCredentialsChannelCredentialTypeOutput() ChannelCredentialsChannelCredentialTypeOutput {
	return o
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToChannelCredentialsChannelCredentialTypeOutputWithContext(ctx context.Context) ChannelCredentialsChannelCredentialTypeOutput {
	return o
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToChannelCredentialsChannelCredentialTypePtrOutput() ChannelCredentialsChannelCredentialTypePtrOutput {
	return o.ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(context.Background())
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(ctx context.Context) ChannelCredentialsChannelCredentialTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCredentialsChannelCredentialType) *ChannelCredentialsChannelCredentialType {
		return &v
	}).(ChannelCredentialsChannelCredentialTypePtrOutput)
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelCredentialsChannelCredentialType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelCredentialsChannelCredentialTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ChannelCredentialsChannelCredentialType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ChannelCredentialsChannelCredentialTypePtrOutput struct{ *pulumi.OutputState }

func (ChannelCredentialsChannelCredentialTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCredentialsChannelCredentialType)(nil)).Elem()
}

func (o ChannelCredentialsChannelCredentialTypePtrOutput) ToChannelCredentialsChannelCredentialTypePtrOutput() ChannelCredentialsChannelCredentialTypePtrOutput {
	return o
}

func (o ChannelCredentialsChannelCredentialTypePtrOutput) ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(ctx context.Context) ChannelCredentialsChannelCredentialTypePtrOutput {
	return o
}

func (o ChannelCredentialsChannelCredentialTypePtrOutput) Elem() ChannelCredentialsChannelCredentialTypeOutput {
	return o.ApplyT(func(v *ChannelCredentialsChannelCredentialType) ChannelCredentialsChannelCredentialType {
		if v != nil {
			return *v
		}
		var ret ChannelCredentialsChannelCredentialType
		return ret
	}).(ChannelCredentialsChannelCredentialTypeOutput)
}

func (o ChannelCredentialsChannelCredentialTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ChannelCredentialsChannelCredentialTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ChannelCredentialsChannelCredentialType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ChannelCredentialsChannelCredentialTypeInput is an input type that accepts ChannelCredentialsChannelCredentialTypeArgs and ChannelCredentialsChannelCredentialTypeOutput values.
// You can construct a concrete instance of `ChannelCredentialsChannelCredentialTypeInput` via:
//
//          ChannelCredentialsChannelCredentialTypeArgs{...}
type ChannelCredentialsChannelCredentialTypeInput interface {
	pulumi.Input

	ToChannelCredentialsChannelCredentialTypeOutput() ChannelCredentialsChannelCredentialTypeOutput
	ToChannelCredentialsChannelCredentialTypeOutputWithContext(context.Context) ChannelCredentialsChannelCredentialTypeOutput
}

var channelCredentialsChannelCredentialTypePtrType = reflect.TypeOf((**ChannelCredentialsChannelCredentialType)(nil)).Elem()

type ChannelCredentialsChannelCredentialTypePtrInput interface {
	pulumi.Input

	ToChannelCredentialsChannelCredentialTypePtrOutput() ChannelCredentialsChannelCredentialTypePtrOutput
	ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(context.Context) ChannelCredentialsChannelCredentialTypePtrOutput
}

type channelCredentialsChannelCredentialTypePtr string

func ChannelCredentialsChannelCredentialTypePtr(v string) ChannelCredentialsChannelCredentialTypePtrInput {
	return (*channelCredentialsChannelCredentialTypePtr)(&v)
}

func (*channelCredentialsChannelCredentialTypePtr) ElementType() reflect.Type {
	return channelCredentialsChannelCredentialTypePtrType
}

func (in *channelCredentialsChannelCredentialTypePtr) ToChannelCredentialsChannelCredentialTypePtrOutput() ChannelCredentialsChannelCredentialTypePtrOutput {
	return pulumi.ToOutput(in).(ChannelCredentialsChannelCredentialTypePtrOutput)
}

func (in *channelCredentialsChannelCredentialTypePtr) ToChannelCredentialsChannelCredentialTypePtrOutputWithContext(ctx context.Context) ChannelCredentialsChannelCredentialTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ChannelCredentialsChannelCredentialTypePtrOutput)
}

// Indicates whether connections to this port should be secured using TLS. The value of this field determines how TLS is enforced. This can be set to one of the following values: DISABLE: Do not setup a TLS connection to the backends. SIMPLE: Originate a TLS connection to the backends. MUTUAL: Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
type ClientTlsSettingsMode string

const (
	// Do not setup a TLS connection to the backends.
	ClientTlsSettingsModeDisable = ClientTlsSettingsMode("DISABLE")
	ClientTlsSettingsModeInvalid = ClientTlsSettingsMode("INVALID")
	// Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
	ClientTlsSettingsModeMutual = ClientTlsSettingsMode("MUTUAL")
	// Originate a TLS connection to the backends.
	ClientTlsSettingsModeSimple = ClientTlsSettingsMode("SIMPLE")
)

func (ClientTlsSettingsMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientTlsSettingsMode)(nil)).Elem()
}

func (e ClientTlsSettingsMode) ToClientTlsSettingsModeOutput() ClientTlsSettingsModeOutput {
	return pulumi.ToOutput(e).(ClientTlsSettingsModeOutput)
}

func (e ClientTlsSettingsMode) ToClientTlsSettingsModeOutputWithContext(ctx context.Context) ClientTlsSettingsModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClientTlsSettingsModeOutput)
}

func (e ClientTlsSettingsMode) ToClientTlsSettingsModePtrOutput() ClientTlsSettingsModePtrOutput {
	return e.ToClientTlsSettingsModePtrOutputWithContext(context.Background())
}

func (e ClientTlsSettingsMode) ToClientTlsSettingsModePtrOutputWithContext(ctx context.Context) ClientTlsSettingsModePtrOutput {
	return ClientTlsSettingsMode(e).ToClientTlsSettingsModeOutputWithContext(ctx).ToClientTlsSettingsModePtrOutputWithContext(ctx)
}

func (e ClientTlsSettingsMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientTlsSettingsMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClientTlsSettingsMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClientTlsSettingsMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClientTlsSettingsModeOutput struct{ *pulumi.OutputState }

func (ClientTlsSettingsModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientTlsSettingsMode)(nil)).Elem()
}

func (o ClientTlsSettingsModeOutput) ToClientTlsSettingsModeOutput() ClientTlsSettingsModeOutput {
	return o
}

func (o ClientTlsSettingsModeOutput) ToClientTlsSettingsModeOutputWithContext(ctx context.Context) ClientTlsSettingsModeOutput {
	return o
}

func (o ClientTlsSettingsModeOutput) ToClientTlsSettingsModePtrOutput() ClientTlsSettingsModePtrOutput {
	return o.ToClientTlsSettingsModePtrOutputWithContext(context.Background())
}

func (o ClientTlsSettingsModeOutput) ToClientTlsSettingsModePtrOutputWithContext(ctx context.Context) ClientTlsSettingsModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientTlsSettingsMode) *ClientTlsSettingsMode {
		return &v
	}).(ClientTlsSettingsModePtrOutput)
}

func (o ClientTlsSettingsModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClientTlsSettingsModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientTlsSettingsMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClientTlsSettingsModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientTlsSettingsModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClientTlsSettingsMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClientTlsSettingsModePtrOutput struct{ *pulumi.OutputState }

func (ClientTlsSettingsModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientTlsSettingsMode)(nil)).Elem()
}

func (o ClientTlsSettingsModePtrOutput) ToClientTlsSettingsModePtrOutput() ClientTlsSettingsModePtrOutput {
	return o
}

func (o ClientTlsSettingsModePtrOutput) ToClientTlsSettingsModePtrOutputWithContext(ctx context.Context) ClientTlsSettingsModePtrOutput {
	return o
}

func (o ClientTlsSettingsModePtrOutput) Elem() ClientTlsSettingsModeOutput {
	return o.ApplyT(func(v *ClientTlsSettingsMode) ClientTlsSettingsMode {
		if v != nil {
			return *v
		}
		var ret ClientTlsSettingsMode
		return ret
	}).(ClientTlsSettingsModeOutput)
}

func (o ClientTlsSettingsModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClientTlsSettingsModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClientTlsSettingsMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClientTlsSettingsModeInput is an input type that accepts ClientTlsSettingsModeArgs and ClientTlsSettingsModeOutput values.
// You can construct a concrete instance of `ClientTlsSettingsModeInput` via:
//
//          ClientTlsSettingsModeArgs{...}
type ClientTlsSettingsModeInput interface {
	pulumi.Input

	ToClientTlsSettingsModeOutput() ClientTlsSettingsModeOutput
	ToClientTlsSettingsModeOutputWithContext(context.Context) ClientTlsSettingsModeOutput
}

var clientTlsSettingsModePtrType = reflect.TypeOf((**ClientTlsSettingsMode)(nil)).Elem()

type ClientTlsSettingsModePtrInput interface {
	pulumi.Input

	ToClientTlsSettingsModePtrOutput() ClientTlsSettingsModePtrOutput
	ToClientTlsSettingsModePtrOutputWithContext(context.Context) ClientTlsSettingsModePtrOutput
}

type clientTlsSettingsModePtr string

func ClientTlsSettingsModePtr(v string) ClientTlsSettingsModePtrInput {
	return (*clientTlsSettingsModePtr)(&v)
}

func (*clientTlsSettingsModePtr) ElementType() reflect.Type {
	return clientTlsSettingsModePtrType
}

func (in *clientTlsSettingsModePtr) ToClientTlsSettingsModePtrOutput() ClientTlsSettingsModePtrOutput {
	return pulumi.ToOutput(in).(ClientTlsSettingsModePtrOutput)
}

func (in *clientTlsSettingsModePtr) ToClientTlsSettingsModePtrOutputWithContext(ctx context.Context) ClientTlsSettingsModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClientTlsSettingsModePtrOutput)
}

// This is deprecated and has no effect. Do not use.
type ConditionIam string

const (
	// This is deprecated and has no effect. Do not use.
	ConditionIamApprover = ConditionIam("APPROVER")
	// This is deprecated and has no effect. Do not use.
	ConditionIamAttribution = ConditionIam("ATTRIBUTION")
	// This is deprecated and has no effect. Do not use.
	ConditionIamAuthority = ConditionIam("AUTHORITY")
	// This is deprecated and has no effect. Do not use.
	ConditionIamCredentialsType = ConditionIam("CREDENTIALS_TYPE")
	// This is deprecated and has no effect. Do not use.
	ConditionIamCredsAssertion = ConditionIam("CREDS_ASSERTION")
	// This is deprecated and has no effect. Do not use.
	ConditionIamJustificationType = ConditionIam("JUSTIFICATION_TYPE")
	// This is deprecated and has no effect. Do not use.
	ConditionIamNoAttr = ConditionIam("NO_ATTR")
	// This is deprecated and has no effect. Do not use.
	ConditionIamSecurityRealm = ConditionIam("SECURITY_REALM")
)

func (ConditionIam) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionIam)(nil)).Elem()
}

func (e ConditionIam) ToConditionIamOutput() ConditionIamOutput {
	return pulumi.ToOutput(e).(ConditionIamOutput)
}

func (e ConditionIam) ToConditionIamOutputWithContext(ctx context.Context) ConditionIamOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConditionIamOutput)
}

func (e ConditionIam) ToConditionIamPtrOutput() ConditionIamPtrOutput {
	return e.ToConditionIamPtrOutputWithContext(context.Background())
}

func (e ConditionIam) ToConditionIamPtrOutputWithContext(ctx context.Context) ConditionIamPtrOutput {
	return ConditionIam(e).ToConditionIamOutputWithContext(ctx).ToConditionIamPtrOutputWithContext(ctx)
}

func (e ConditionIam) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionIam) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionIam) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConditionIam) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConditionIamOutput struct{ *pulumi.OutputState }

func (ConditionIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionIam)(nil)).Elem()
}

func (o ConditionIamOutput) ToConditionIamOutput() ConditionIamOutput {
	return o
}

func (o ConditionIamOutput) ToConditionIamOutputWithContext(ctx context.Context) ConditionIamOutput {
	return o
}

func (o ConditionIamOutput) ToConditionIamPtrOutput() ConditionIamPtrOutput {
	return o.ToConditionIamPtrOutputWithContext(context.Background())
}

func (o ConditionIamOutput) ToConditionIamPtrOutputWithContext(ctx context.Context) ConditionIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionIam) *ConditionIam {
		return &v
	}).(ConditionIamPtrOutput)
}

func (o ConditionIamOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConditionIamOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionIam) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConditionIamOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionIamOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionIam) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConditionIamPtrOutput struct{ *pulumi.OutputState }

func (ConditionIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionIam)(nil)).Elem()
}

func (o ConditionIamPtrOutput) ToConditionIamPtrOutput() ConditionIamPtrOutput {
	return o
}

func (o ConditionIamPtrOutput) ToConditionIamPtrOutputWithContext(ctx context.Context) ConditionIamPtrOutput {
	return o
}

func (o ConditionIamPtrOutput) Elem() ConditionIamOutput {
	return o.ApplyT(func(v *ConditionIam) ConditionIam {
		if v != nil {
			return *v
		}
		var ret ConditionIam
		return ret
	}).(ConditionIamOutput)
}

func (o ConditionIamPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionIamPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConditionIam) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConditionIamInput is an input type that accepts ConditionIamArgs and ConditionIamOutput values.
// You can construct a concrete instance of `ConditionIamInput` via:
//
//          ConditionIamArgs{...}
type ConditionIamInput interface {
	pulumi.Input

	ToConditionIamOutput() ConditionIamOutput
	ToConditionIamOutputWithContext(context.Context) ConditionIamOutput
}

var conditionIamPtrType = reflect.TypeOf((**ConditionIam)(nil)).Elem()

type ConditionIamPtrInput interface {
	pulumi.Input

	ToConditionIamPtrOutput() ConditionIamPtrOutput
	ToConditionIamPtrOutputWithContext(context.Context) ConditionIamPtrOutput
}

type conditionIamPtr string

func ConditionIamPtr(v string) ConditionIamPtrInput {
	return (*conditionIamPtr)(&v)
}

func (*conditionIamPtr) ElementType() reflect.Type {
	return conditionIamPtrType
}

func (in *conditionIamPtr) ToConditionIamPtrOutput() ConditionIamPtrOutput {
	return pulumi.ToOutput(in).(ConditionIamPtrOutput)
}

func (in *conditionIamPtr) ToConditionIamPtrOutputWithContext(ctx context.Context) ConditionIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConditionIamPtrOutput)
}

// This is deprecated and has no effect. Do not use.
type ConditionOp string

const (
	// This is deprecated and has no effect. Do not use.
	ConditionOpDischarged = ConditionOp("DISCHARGED")
	// This is deprecated and has no effect. Do not use.
	ConditionOpEquals = ConditionOp("EQUALS")
	// This is deprecated and has no effect. Do not use.
	ConditionOpIn = ConditionOp("IN")
	// This is deprecated and has no effect. Do not use.
	ConditionOpNotEquals = ConditionOp("NOT_EQUALS")
	// This is deprecated and has no effect. Do not use.
	ConditionOpNotIn = ConditionOp("NOT_IN")
	// This is deprecated and has no effect. Do not use.
	ConditionOpNoOp = ConditionOp("NO_OP")
)

func (ConditionOp) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionOp)(nil)).Elem()
}

func (e ConditionOp) ToConditionOpOutput() ConditionOpOutput {
	return pulumi.ToOutput(e).(ConditionOpOutput)
}

func (e ConditionOp) ToConditionOpOutputWithContext(ctx context.Context) ConditionOpOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConditionOpOutput)
}

func (e ConditionOp) ToConditionOpPtrOutput() ConditionOpPtrOutput {
	return e.ToConditionOpPtrOutputWithContext(context.Background())
}

func (e ConditionOp) ToConditionOpPtrOutputWithContext(ctx context.Context) ConditionOpPtrOutput {
	return ConditionOp(e).ToConditionOpOutputWithContext(ctx).ToConditionOpPtrOutputWithContext(ctx)
}

func (e ConditionOp) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionOp) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionOp) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConditionOp) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConditionOpOutput struct{ *pulumi.OutputState }

func (ConditionOpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionOp)(nil)).Elem()
}

func (o ConditionOpOutput) ToConditionOpOutput() ConditionOpOutput {
	return o
}

func (o ConditionOpOutput) ToConditionOpOutputWithContext(ctx context.Context) ConditionOpOutput {
	return o
}

func (o ConditionOpOutput) ToConditionOpPtrOutput() ConditionOpPtrOutput {
	return o.ToConditionOpPtrOutputWithContext(context.Background())
}

func (o ConditionOpOutput) ToConditionOpPtrOutputWithContext(ctx context.Context) ConditionOpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionOp) *ConditionOp {
		return &v
	}).(ConditionOpPtrOutput)
}

func (o ConditionOpOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConditionOpOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionOp) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConditionOpOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionOpOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionOp) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConditionOpPtrOutput struct{ *pulumi.OutputState }

func (ConditionOpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionOp)(nil)).Elem()
}

func (o ConditionOpPtrOutput) ToConditionOpPtrOutput() ConditionOpPtrOutput {
	return o
}

func (o ConditionOpPtrOutput) ToConditionOpPtrOutputWithContext(ctx context.Context) ConditionOpPtrOutput {
	return o
}

func (o ConditionOpPtrOutput) Elem() ConditionOpOutput {
	return o.ApplyT(func(v *ConditionOp) ConditionOp {
		if v != nil {
			return *v
		}
		var ret ConditionOp
		return ret
	}).(ConditionOpOutput)
}

func (o ConditionOpPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionOpPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConditionOp) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConditionOpInput is an input type that accepts ConditionOpArgs and ConditionOpOutput values.
// You can construct a concrete instance of `ConditionOpInput` via:
//
//          ConditionOpArgs{...}
type ConditionOpInput interface {
	pulumi.Input

	ToConditionOpOutput() ConditionOpOutput
	ToConditionOpOutputWithContext(context.Context) ConditionOpOutput
}

var conditionOpPtrType = reflect.TypeOf((**ConditionOp)(nil)).Elem()

type ConditionOpPtrInput interface {
	pulumi.Input

	ToConditionOpPtrOutput() ConditionOpPtrOutput
	ToConditionOpPtrOutputWithContext(context.Context) ConditionOpPtrOutput
}

type conditionOpPtr string

func ConditionOpPtr(v string) ConditionOpPtrInput {
	return (*conditionOpPtr)(&v)
}

func (*conditionOpPtr) ElementType() reflect.Type {
	return conditionOpPtrType
}

func (in *conditionOpPtr) ToConditionOpPtrOutput() ConditionOpPtrOutput {
	return pulumi.ToOutput(in).(ConditionOpPtrOutput)
}

func (in *conditionOpPtr) ToConditionOpPtrOutputWithContext(ctx context.Context) ConditionOpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConditionOpPtrOutput)
}

// This is deprecated and has no effect. Do not use.
type ConditionSys string

const (
	// This is deprecated and has no effect. Do not use.
	ConditionSysIp = ConditionSys("IP")
	// This is deprecated and has no effect. Do not use.
	ConditionSysName = ConditionSys("NAME")
	// This is deprecated and has no effect. Do not use.
	ConditionSysNoAttr = ConditionSys("NO_ATTR")
	// This is deprecated and has no effect. Do not use.
	ConditionSysRegion = ConditionSys("REGION")
	// This is deprecated and has no effect. Do not use.
	ConditionSysService = ConditionSys("SERVICE")
)

func (ConditionSys) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionSys)(nil)).Elem()
}

func (e ConditionSys) ToConditionSysOutput() ConditionSysOutput {
	return pulumi.ToOutput(e).(ConditionSysOutput)
}

func (e ConditionSys) ToConditionSysOutputWithContext(ctx context.Context) ConditionSysOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConditionSysOutput)
}

func (e ConditionSys) ToConditionSysPtrOutput() ConditionSysPtrOutput {
	return e.ToConditionSysPtrOutputWithContext(context.Background())
}

func (e ConditionSys) ToConditionSysPtrOutputWithContext(ctx context.Context) ConditionSysPtrOutput {
	return ConditionSys(e).ToConditionSysOutputWithContext(ctx).ToConditionSysPtrOutputWithContext(ctx)
}

func (e ConditionSys) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionSys) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConditionSys) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConditionSys) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConditionSysOutput struct{ *pulumi.OutputState }

func (ConditionSysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConditionSys)(nil)).Elem()
}

func (o ConditionSysOutput) ToConditionSysOutput() ConditionSysOutput {
	return o
}

func (o ConditionSysOutput) ToConditionSysOutputWithContext(ctx context.Context) ConditionSysOutput {
	return o
}

func (o ConditionSysOutput) ToConditionSysPtrOutput() ConditionSysPtrOutput {
	return o.ToConditionSysPtrOutputWithContext(context.Background())
}

func (o ConditionSysOutput) ToConditionSysPtrOutputWithContext(ctx context.Context) ConditionSysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConditionSys) *ConditionSys {
		return &v
	}).(ConditionSysPtrOutput)
}

func (o ConditionSysOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConditionSysOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionSys) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConditionSysOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionSysOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConditionSys) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConditionSysPtrOutput struct{ *pulumi.OutputState }

func (ConditionSysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConditionSys)(nil)).Elem()
}

func (o ConditionSysPtrOutput) ToConditionSysPtrOutput() ConditionSysPtrOutput {
	return o
}

func (o ConditionSysPtrOutput) ToConditionSysPtrOutputWithContext(ctx context.Context) ConditionSysPtrOutput {
	return o
}

func (o ConditionSysPtrOutput) Elem() ConditionSysOutput {
	return o.ApplyT(func(v *ConditionSys) ConditionSys {
		if v != nil {
			return *v
		}
		var ret ConditionSys
		return ret
	}).(ConditionSysOutput)
}

func (o ConditionSysPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConditionSysPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConditionSys) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConditionSysInput is an input type that accepts ConditionSysArgs and ConditionSysOutput values.
// You can construct a concrete instance of `ConditionSysInput` via:
//
//          ConditionSysArgs{...}
type ConditionSysInput interface {
	pulumi.Input

	ToConditionSysOutput() ConditionSysOutput
	ToConditionSysOutputWithContext(context.Context) ConditionSysOutput
}

var conditionSysPtrType = reflect.TypeOf((**ConditionSys)(nil)).Elem()

type ConditionSysPtrInput interface {
	pulumi.Input

	ToConditionSysPtrOutput() ConditionSysPtrOutput
	ToConditionSysPtrOutputWithContext(context.Context) ConditionSysPtrOutput
}

type conditionSysPtr string

func ConditionSysPtr(v string) ConditionSysPtrInput {
	return (*conditionSysPtr)(&v)
}

func (*conditionSysPtr) ElementType() reflect.Type {
	return conditionSysPtrType
}

func (in *conditionSysPtr) ToConditionSysPtrOutput() ConditionSysPtrOutput {
	return pulumi.ToOutput(in).(ConditionSysPtrOutput)
}

func (in *conditionSysPtr) ToConditionSysPtrOutputWithContext(ctx context.Context) ConditionSysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConditionSysPtrOutput)
}

// The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.
type DeprecationStatusState string

const (
	DeprecationStatusStateActive     = DeprecationStatusState("ACTIVE")
	DeprecationStatusStateDeleted    = DeprecationStatusState("DELETED")
	DeprecationStatusStateDeprecated = DeprecationStatusState("DEPRECATED")
	DeprecationStatusStateObsolete   = DeprecationStatusState("OBSOLETE")
)

func (DeprecationStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*DeprecationStatusState)(nil)).Elem()
}

func (e DeprecationStatusState) ToDeprecationStatusStateOutput() DeprecationStatusStateOutput {
	return pulumi.ToOutput(e).(DeprecationStatusStateOutput)
}

func (e DeprecationStatusState) ToDeprecationStatusStateOutputWithContext(ctx context.Context) DeprecationStatusStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DeprecationStatusStateOutput)
}

func (e DeprecationStatusState) ToDeprecationStatusStatePtrOutput() DeprecationStatusStatePtrOutput {
	return e.ToDeprecationStatusStatePtrOutputWithContext(context.Background())
}

func (e DeprecationStatusState) ToDeprecationStatusStatePtrOutputWithContext(ctx context.Context) DeprecationStatusStatePtrOutput {
	return DeprecationStatusState(e).ToDeprecationStatusStateOutputWithContext(ctx).ToDeprecationStatusStatePtrOutputWithContext(ctx)
}

func (e DeprecationStatusState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeprecationStatusState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DeprecationStatusState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DeprecationStatusState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DeprecationStatusStateOutput struct{ *pulumi.OutputState }

func (DeprecationStatusStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeprecationStatusState)(nil)).Elem()
}

func (o DeprecationStatusStateOutput) ToDeprecationStatusStateOutput() DeprecationStatusStateOutput {
	return o
}

func (o DeprecationStatusStateOutput) ToDeprecationStatusStateOutputWithContext(ctx context.Context) DeprecationStatusStateOutput {
	return o
}

func (o DeprecationStatusStateOutput) ToDeprecationStatusStatePtrOutput() DeprecationStatusStatePtrOutput {
	return o.ToDeprecationStatusStatePtrOutputWithContext(context.Background())
}

func (o DeprecationStatusStateOutput) ToDeprecationStatusStatePtrOutputWithContext(ctx context.Context) DeprecationStatusStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeprecationStatusState) *DeprecationStatusState {
		return &v
	}).(DeprecationStatusStatePtrOutput)
}

func (o DeprecationStatusStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DeprecationStatusStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeprecationStatusState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DeprecationStatusStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeprecationStatusStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DeprecationStatusState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DeprecationStatusStatePtrOutput struct{ *pulumi.OutputState }

func (DeprecationStatusStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeprecationStatusState)(nil)).Elem()
}

func (o DeprecationStatusStatePtrOutput) ToDeprecationStatusStatePtrOutput() DeprecationStatusStatePtrOutput {
	return o
}

func (o DeprecationStatusStatePtrOutput) ToDeprecationStatusStatePtrOutputWithContext(ctx context.Context) DeprecationStatusStatePtrOutput {
	return o
}

func (o DeprecationStatusStatePtrOutput) Elem() DeprecationStatusStateOutput {
	return o.ApplyT(func(v *DeprecationStatusState) DeprecationStatusState {
		if v != nil {
			return *v
		}
		var ret DeprecationStatusState
		return ret
	}).(DeprecationStatusStateOutput)
}

func (o DeprecationStatusStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DeprecationStatusStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DeprecationStatusState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DeprecationStatusStateInput is an input type that accepts DeprecationStatusStateArgs and DeprecationStatusStateOutput values.
// You can construct a concrete instance of `DeprecationStatusStateInput` via:
//
//          DeprecationStatusStateArgs{...}
type DeprecationStatusStateInput interface {
	pulumi.Input

	ToDeprecationStatusStateOutput() DeprecationStatusStateOutput
	ToDeprecationStatusStateOutputWithContext(context.Context) DeprecationStatusStateOutput
}

var deprecationStatusStatePtrType = reflect.TypeOf((**DeprecationStatusState)(nil)).Elem()

type DeprecationStatusStatePtrInput interface {
	pulumi.Input

	ToDeprecationStatusStatePtrOutput() DeprecationStatusStatePtrOutput
	ToDeprecationStatusStatePtrOutputWithContext(context.Context) DeprecationStatusStatePtrOutput
}

type deprecationStatusStatePtr string

func DeprecationStatusStatePtr(v string) DeprecationStatusStatePtrInput {
	return (*deprecationStatusStatePtr)(&v)
}

func (*deprecationStatusStatePtr) ElementType() reflect.Type {
	return deprecationStatusStatePtrType
}

func (in *deprecationStatusStatePtr) ToDeprecationStatusStatePtrOutput() DeprecationStatusStatePtrOutput {
	return pulumi.ToOutput(in).(DeprecationStatusStatePtrOutput)
}

func (in *deprecationStatusStatePtr) ToDeprecationStatusStatePtrOutputWithContext(ctx context.Context) DeprecationStatusStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DeprecationStatusStatePtrOutput)
}

// The architecture of the disk. Valid values are ARM64 or X86_64.
type DiskArchitecture string

const (
	// Default value indicating Architecture is not set.
	DiskArchitectureArchitectureUnspecified = DiskArchitecture("ARCHITECTURE_UNSPECIFIED")
	// Machines with architecture ARM64
	DiskArchitectureArm64 = DiskArchitecture("ARM64")
	// Machines with architecture X86_64
	DiskArchitectureX8664 = DiskArchitecture("X86_64")
)

func (DiskArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskArchitecture)(nil)).Elem()
}

func (e DiskArchitecture) ToDiskArchitectureOutput() DiskArchitectureOutput {
	return pulumi.ToOutput(e).(DiskArchitectureOutput)
}

func (e DiskArchitecture) ToDiskArchitectureOutputWithContext(ctx context.Context) DiskArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskArchitectureOutput)
}

func (e DiskArchitecture) ToDiskArchitecturePtrOutput() DiskArchitecturePtrOutput {
	return e.ToDiskArchitecturePtrOutputWithContext(context.Background())
}

func (e DiskArchitecture) ToDiskArchitecturePtrOutputWithContext(ctx context.Context) DiskArchitecturePtrOutput {
	return DiskArchitecture(e).ToDiskArchitectureOutputWithContext(ctx).ToDiskArchitecturePtrOutputWithContext(ctx)
}

func (e DiskArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskArchitectureOutput struct{ *pulumi.OutputState }

func (DiskArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskArchitecture)(nil)).Elem()
}

func (o DiskArchitectureOutput) ToDiskArchitectureOutput() DiskArchitectureOutput {
	return o
}

func (o DiskArchitectureOutput) ToDiskArchitectureOutputWithContext(ctx context.Context) DiskArchitectureOutput {
	return o
}

func (o DiskArchitectureOutput) ToDiskArchitecturePtrOutput() DiskArchitecturePtrOutput {
	return o.ToDiskArchitecturePtrOutputWithContext(context.Background())
}

func (o DiskArchitectureOutput) ToDiskArchitecturePtrOutputWithContext(ctx context.Context) DiskArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskArchitecture) *DiskArchitecture {
		return &v
	}).(DiskArchitecturePtrOutput)
}

func (o DiskArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskArchitecturePtrOutput struct{ *pulumi.OutputState }

func (DiskArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskArchitecture)(nil)).Elem()
}

func (o DiskArchitecturePtrOutput) ToDiskArchitecturePtrOutput() DiskArchitecturePtrOutput {
	return o
}

func (o DiskArchitecturePtrOutput) ToDiskArchitecturePtrOutputWithContext(ctx context.Context) DiskArchitecturePtrOutput {
	return o
}

func (o DiskArchitecturePtrOutput) Elem() DiskArchitectureOutput {
	return o.ApplyT(func(v *DiskArchitecture) DiskArchitecture {
		if v != nil {
			return *v
		}
		var ret DiskArchitecture
		return ret
	}).(DiskArchitectureOutput)
}

func (o DiskArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskArchitectureInput is an input type that accepts DiskArchitectureArgs and DiskArchitectureOutput values.
// You can construct a concrete instance of `DiskArchitectureInput` via:
//
//          DiskArchitectureArgs{...}
type DiskArchitectureInput interface {
	pulumi.Input

	ToDiskArchitectureOutput() DiskArchitectureOutput
	ToDiskArchitectureOutputWithContext(context.Context) DiskArchitectureOutput
}

var diskArchitecturePtrType = reflect.TypeOf((**DiskArchitecture)(nil)).Elem()

type DiskArchitecturePtrInput interface {
	pulumi.Input

	ToDiskArchitecturePtrOutput() DiskArchitecturePtrOutput
	ToDiskArchitecturePtrOutputWithContext(context.Context) DiskArchitecturePtrOutput
}

type diskArchitecturePtr string

func DiskArchitecturePtr(v string) DiskArchitecturePtrInput {
	return (*diskArchitecturePtr)(&v)
}

func (*diskArchitecturePtr) ElementType() reflect.Type {
	return diskArchitecturePtrType
}

func (in *diskArchitecturePtr) ToDiskArchitecturePtrOutput() DiskArchitecturePtrOutput {
	return pulumi.ToOutput(in).(DiskArchitecturePtrOutput)
}

func (in *diskArchitecturePtr) ToDiskArchitecturePtrOutputWithContext(ctx context.Context) DiskArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskArchitecturePtrOutput)
}

// Specifies whether to include the disk and what image to use. Possible values are: - source-image: to use the same image that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - source-image-family: to use the same image family that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - custom-image: to use a user-provided image url for disk creation. Applicable to the boot disk and additional read-write disks. - attach-read-only: to attach a read-only disk. Applicable to read-only disks. - do-not-include: to exclude a disk from the template. Applicable to additional read-write disks, local SSDs, and read-only disks.
type DiskInstantiationConfigInstantiateFrom string

const (
	// Attach the existing disk in read-only mode. The request will fail if the disk was attached in read-write mode on the source instance. Applicable to: read-only disks.
	DiskInstantiationConfigInstantiateFromAttachReadOnly = DiskInstantiationConfigInstantiateFrom("ATTACH_READ_ONLY")
	// Create a blank disk. The disk will be created unformatted. Applicable to: additional read-write disks, local SSDs.
	DiskInstantiationConfigInstantiateFromBlank = DiskInstantiationConfigInstantiateFrom("BLANK")
	// Use the custom image specified in the custom_image field. Applicable to: boot disk, additional read-write disks.
	DiskInstantiationConfigInstantiateFromCustomImage = DiskInstantiationConfigInstantiateFrom("CUSTOM_IMAGE")
	// Use the default instantiation option for the corresponding type of disk. For boot disk and any other R/W disks, new custom images will be created from each disk. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
	DiskInstantiationConfigInstantiateFromDefault = DiskInstantiationConfigInstantiateFrom("DEFAULT")
	// Do not include the disk in the instance template. Applicable to: additional read-write disks, local SSDs, read-only disks.
	DiskInstantiationConfigInstantiateFromDoNotInclude = DiskInstantiationConfigInstantiateFrom("DO_NOT_INCLUDE")
	// Use the same source image used for creation of the source instance's corresponding disk. The request will fail if the source VM's disk was created from a snapshot. Applicable to: boot disk, additional read-write disks.
	DiskInstantiationConfigInstantiateFromSourceImage = DiskInstantiationConfigInstantiateFrom("SOURCE_IMAGE")
	// Use the same source image family used for creation of the source instance's corresponding disk. The request will fail if the source image of the source disk does not belong to any image family. Applicable to: boot disk, additional read-write disks.
	DiskInstantiationConfigInstantiateFromSourceImageFamily = DiskInstantiationConfigInstantiateFrom("SOURCE_IMAGE_FAMILY")
)

func (DiskInstantiationConfigInstantiateFrom) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInstantiationConfigInstantiateFrom)(nil)).Elem()
}

func (e DiskInstantiationConfigInstantiateFrom) ToDiskInstantiationConfigInstantiateFromOutput() DiskInstantiationConfigInstantiateFromOutput {
	return pulumi.ToOutput(e).(DiskInstantiationConfigInstantiateFromOutput)
}

func (e DiskInstantiationConfigInstantiateFrom) ToDiskInstantiationConfigInstantiateFromOutputWithContext(ctx context.Context) DiskInstantiationConfigInstantiateFromOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskInstantiationConfigInstantiateFromOutput)
}

func (e DiskInstantiationConfigInstantiateFrom) ToDiskInstantiationConfigInstantiateFromPtrOutput() DiskInstantiationConfigInstantiateFromPtrOutput {
	return e.ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(context.Background())
}

func (e DiskInstantiationConfigInstantiateFrom) ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(ctx context.Context) DiskInstantiationConfigInstantiateFromPtrOutput {
	return DiskInstantiationConfigInstantiateFrom(e).ToDiskInstantiationConfigInstantiateFromOutputWithContext(ctx).ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(ctx)
}

func (e DiskInstantiationConfigInstantiateFrom) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskInstantiationConfigInstantiateFrom) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskInstantiationConfigInstantiateFrom) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskInstantiationConfigInstantiateFrom) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskInstantiationConfigInstantiateFromOutput struct{ *pulumi.OutputState }

func (DiskInstantiationConfigInstantiateFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInstantiationConfigInstantiateFrom)(nil)).Elem()
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToDiskInstantiationConfigInstantiateFromOutput() DiskInstantiationConfigInstantiateFromOutput {
	return o
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToDiskInstantiationConfigInstantiateFromOutputWithContext(ctx context.Context) DiskInstantiationConfigInstantiateFromOutput {
	return o
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToDiskInstantiationConfigInstantiateFromPtrOutput() DiskInstantiationConfigInstantiateFromPtrOutput {
	return o.ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(context.Background())
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(ctx context.Context) DiskInstantiationConfigInstantiateFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskInstantiationConfigInstantiateFrom) *DiskInstantiationConfigInstantiateFrom {
		return &v
	}).(DiskInstantiationConfigInstantiateFromPtrOutput)
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskInstantiationConfigInstantiateFrom) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskInstantiationConfigInstantiateFromOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskInstantiationConfigInstantiateFrom) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskInstantiationConfigInstantiateFromPtrOutput struct{ *pulumi.OutputState }

func (DiskInstantiationConfigInstantiateFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskInstantiationConfigInstantiateFrom)(nil)).Elem()
}

func (o DiskInstantiationConfigInstantiateFromPtrOutput) ToDiskInstantiationConfigInstantiateFromPtrOutput() DiskInstantiationConfigInstantiateFromPtrOutput {
	return o
}

func (o DiskInstantiationConfigInstantiateFromPtrOutput) ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(ctx context.Context) DiskInstantiationConfigInstantiateFromPtrOutput {
	return o
}

func (o DiskInstantiationConfigInstantiateFromPtrOutput) Elem() DiskInstantiationConfigInstantiateFromOutput {
	return o.ApplyT(func(v *DiskInstantiationConfigInstantiateFrom) DiskInstantiationConfigInstantiateFrom {
		if v != nil {
			return *v
		}
		var ret DiskInstantiationConfigInstantiateFrom
		return ret
	}).(DiskInstantiationConfigInstantiateFromOutput)
}

func (o DiskInstantiationConfigInstantiateFromPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskInstantiationConfigInstantiateFromPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskInstantiationConfigInstantiateFrom) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskInstantiationConfigInstantiateFromInput is an input type that accepts DiskInstantiationConfigInstantiateFromArgs and DiskInstantiationConfigInstantiateFromOutput values.
// You can construct a concrete instance of `DiskInstantiationConfigInstantiateFromInput` via:
//
//          DiskInstantiationConfigInstantiateFromArgs{...}
type DiskInstantiationConfigInstantiateFromInput interface {
	pulumi.Input

	ToDiskInstantiationConfigInstantiateFromOutput() DiskInstantiationConfigInstantiateFromOutput
	ToDiskInstantiationConfigInstantiateFromOutputWithContext(context.Context) DiskInstantiationConfigInstantiateFromOutput
}

var diskInstantiationConfigInstantiateFromPtrType = reflect.TypeOf((**DiskInstantiationConfigInstantiateFrom)(nil)).Elem()

type DiskInstantiationConfigInstantiateFromPtrInput interface {
	pulumi.Input

	ToDiskInstantiationConfigInstantiateFromPtrOutput() DiskInstantiationConfigInstantiateFromPtrOutput
	ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(context.Context) DiskInstantiationConfigInstantiateFromPtrOutput
}

type diskInstantiationConfigInstantiateFromPtr string

func DiskInstantiationConfigInstantiateFromPtr(v string) DiskInstantiationConfigInstantiateFromPtrInput {
	return (*diskInstantiationConfigInstantiateFromPtr)(&v)
}

func (*diskInstantiationConfigInstantiateFromPtr) ElementType() reflect.Type {
	return diskInstantiationConfigInstantiateFromPtrType
}

func (in *diskInstantiationConfigInstantiateFromPtr) ToDiskInstantiationConfigInstantiateFromPtrOutput() DiskInstantiationConfigInstantiateFromPtrOutput {
	return pulumi.ToOutput(in).(DiskInstantiationConfigInstantiateFromPtrOutput)
}

func (in *diskInstantiationConfigInstantiateFromPtr) ToDiskInstantiationConfigInstantiateFromPtrOutputWithContext(ctx context.Context) DiskInstantiationConfigInstantiateFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskInstantiationConfigInstantiateFromPtrOutput)
}

// [Deprecated] Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
type DiskInterface string

const (
	DiskInterfaceNvme        = DiskInterface("NVME")
	DiskInterfaceScsi        = DiskInterface("SCSI")
	DiskInterfaceUnspecified = DiskInterface("UNSPECIFIED")
)

func (DiskInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInterface)(nil)).Elem()
}

func (e DiskInterface) ToDiskInterfaceOutput() DiskInterfaceOutput {
	return pulumi.ToOutput(e).(DiskInterfaceOutput)
}

func (e DiskInterface) ToDiskInterfaceOutputWithContext(ctx context.Context) DiskInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskInterfaceOutput)
}

func (e DiskInterface) ToDiskInterfacePtrOutput() DiskInterfacePtrOutput {
	return e.ToDiskInterfacePtrOutputWithContext(context.Background())
}

func (e DiskInterface) ToDiskInterfacePtrOutputWithContext(ctx context.Context) DiskInterfacePtrOutput {
	return DiskInterface(e).ToDiskInterfaceOutputWithContext(ctx).ToDiskInterfacePtrOutputWithContext(ctx)
}

func (e DiskInterface) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskInterface) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskInterface) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskInterface) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskInterfaceOutput struct{ *pulumi.OutputState }

func (DiskInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskInterface)(nil)).Elem()
}

func (o DiskInterfaceOutput) ToDiskInterfaceOutput() DiskInterfaceOutput {
	return o
}

func (o DiskInterfaceOutput) ToDiskInterfaceOutputWithContext(ctx context.Context) DiskInterfaceOutput {
	return o
}

func (o DiskInterfaceOutput) ToDiskInterfacePtrOutput() DiskInterfacePtrOutput {
	return o.ToDiskInterfacePtrOutputWithContext(context.Background())
}

func (o DiskInterfaceOutput) ToDiskInterfacePtrOutputWithContext(ctx context.Context) DiskInterfacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskInterface) *DiskInterface {
		return &v
	}).(DiskInterfacePtrOutput)
}

func (o DiskInterfaceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskInterfaceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskInterface) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskInterfaceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskInterfaceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskInterface) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskInterfacePtrOutput struct{ *pulumi.OutputState }

func (DiskInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskInterface)(nil)).Elem()
}

func (o DiskInterfacePtrOutput) ToDiskInterfacePtrOutput() DiskInterfacePtrOutput {
	return o
}

func (o DiskInterfacePtrOutput) ToDiskInterfacePtrOutputWithContext(ctx context.Context) DiskInterfacePtrOutput {
	return o
}

func (o DiskInterfacePtrOutput) Elem() DiskInterfaceOutput {
	return o.ApplyT(func(v *DiskInterface) DiskInterface {
		if v != nil {
			return *v
		}
		var ret DiskInterface
		return ret
	}).(DiskInterfaceOutput)
}

func (o DiskInterfacePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskInterfacePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskInterface) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskInterfaceInput is an input type that accepts DiskInterfaceArgs and DiskInterfaceOutput values.
// You can construct a concrete instance of `DiskInterfaceInput` via:
//
//          DiskInterfaceArgs{...}
type DiskInterfaceInput interface {
	pulumi.Input

	ToDiskInterfaceOutput() DiskInterfaceOutput
	ToDiskInterfaceOutputWithContext(context.Context) DiskInterfaceOutput
}

var diskInterfacePtrType = reflect.TypeOf((**DiskInterface)(nil)).Elem()

type DiskInterfacePtrInput interface {
	pulumi.Input

	ToDiskInterfacePtrOutput() DiskInterfacePtrOutput
	ToDiskInterfacePtrOutputWithContext(context.Context) DiskInterfacePtrOutput
}

type diskInterfacePtr string

func DiskInterfacePtr(v string) DiskInterfacePtrInput {
	return (*diskInterfacePtr)(&v)
}

func (*diskInterfacePtr) ElementType() reflect.Type {
	return diskInterfacePtrType
}

func (in *diskInterfacePtr) ToDiskInterfacePtrOutput() DiskInterfacePtrOutput {
	return pulumi.ToOutput(in).(DiskInterfacePtrOutput)
}

func (in *diskInterfacePtr) ToDiskInterfacePtrOutputWithContext(ctx context.Context) DiskInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskInterfacePtrOutput)
}

// [Deprecated] Storage type of the persistent disk.
type DiskStorageType string

const (
	DiskStorageTypeHdd = DiskStorageType("HDD")
	DiskStorageTypeSsd = DiskStorageType("SSD")
)

func (DiskStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageType)(nil)).Elem()
}

func (e DiskStorageType) ToDiskStorageTypeOutput() DiskStorageTypeOutput {
	return pulumi.ToOutput(e).(DiskStorageTypeOutput)
}

func (e DiskStorageType) ToDiskStorageTypeOutputWithContext(ctx context.Context) DiskStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DiskStorageTypeOutput)
}

func (e DiskStorageType) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return e.ToDiskStorageTypePtrOutputWithContext(context.Background())
}

func (e DiskStorageType) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return DiskStorageType(e).ToDiskStorageTypeOutputWithContext(ctx).ToDiskStorageTypePtrOutputWithContext(ctx)
}

func (e DiskStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DiskStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DiskStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DiskStorageTypeOutput struct{ *pulumi.OutputState }

func (DiskStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskStorageType)(nil)).Elem()
}

func (o DiskStorageTypeOutput) ToDiskStorageTypeOutput() DiskStorageTypeOutput {
	return o
}

func (o DiskStorageTypeOutput) ToDiskStorageTypeOutputWithContext(ctx context.Context) DiskStorageTypeOutput {
	return o
}

func (o DiskStorageTypeOutput) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return o.ToDiskStorageTypePtrOutputWithContext(context.Background())
}

func (o DiskStorageTypeOutput) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskStorageType) *DiskStorageType {
		return &v
	}).(DiskStorageTypePtrOutput)
}

func (o DiskStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DiskStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DiskStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DiskStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DiskStorageTypePtrOutput struct{ *pulumi.OutputState }

func (DiskStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskStorageType)(nil)).Elem()
}

func (o DiskStorageTypePtrOutput) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return o
}

func (o DiskStorageTypePtrOutput) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return o
}

func (o DiskStorageTypePtrOutput) Elem() DiskStorageTypeOutput {
	return o.ApplyT(func(v *DiskStorageType) DiskStorageType {
		if v != nil {
			return *v
		}
		var ret DiskStorageType
		return ret
	}).(DiskStorageTypeOutput)
}

func (o DiskStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DiskStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DiskStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DiskStorageTypeInput is an input type that accepts DiskStorageTypeArgs and DiskStorageTypeOutput values.
// You can construct a concrete instance of `DiskStorageTypeInput` via:
//
//          DiskStorageTypeArgs{...}
type DiskStorageTypeInput interface {
	pulumi.Input

	ToDiskStorageTypeOutput() DiskStorageTypeOutput
	ToDiskStorageTypeOutputWithContext(context.Context) DiskStorageTypeOutput
}

var diskStorageTypePtrType = reflect.TypeOf((**DiskStorageType)(nil)).Elem()

type DiskStorageTypePtrInput interface {
	pulumi.Input

	ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput
	ToDiskStorageTypePtrOutputWithContext(context.Context) DiskStorageTypePtrOutput
}

type diskStorageTypePtr string

func DiskStorageTypePtr(v string) DiskStorageTypePtrInput {
	return (*diskStorageTypePtr)(&v)
}

func (*diskStorageTypePtr) ElementType() reflect.Type {
	return diskStorageTypePtrType
}

func (in *diskStorageTypePtr) ToDiskStorageTypePtrOutput() DiskStorageTypePtrOutput {
	return pulumi.ToOutput(in).(DiskStorageTypePtrOutput)
}

func (in *diskStorageTypePtr) ToDiskStorageTypePtrOutputWithContext(ctx context.Context) DiskStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DiskStorageTypePtrOutput)
}

// The distribution shape to which the group converges either proactively or on resize events (depending on the value set in updatePolicy.instanceRedistributionType).
type DistributionPolicyTargetShape string

const (
	// The group picks zones for creating VM instances to fulfill the requested number of VMs within present resource constraints and to maximize utilization of unused zonal reservations. Recommended for batch workloads that do not require high availability.
	DistributionPolicyTargetShapeAny = DistributionPolicyTargetShape("ANY")
	// The group prioritizes acquisition of resources, scheduling VMs in zones where resources are available while distributing VMs as evenly as possible across selected zones to minimize the impact of zonal failure. Recommended for highly available serving workloads.
	DistributionPolicyTargetShapeBalanced = DistributionPolicyTargetShape("BALANCED")
	// The group schedules VM instance creation and deletion to achieve and maintain an even number of managed instances across the selected zones. The distribution is even when the number of managed instances does not differ by more than 1 between any two zones. Recommended for highly available serving workloads.
	DistributionPolicyTargetShapeEven = DistributionPolicyTargetShape("EVEN")
)

func (DistributionPolicyTargetShape) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionPolicyTargetShape)(nil)).Elem()
}

func (e DistributionPolicyTargetShape) ToDistributionPolicyTargetShapeOutput() DistributionPolicyTargetShapeOutput {
	return pulumi.ToOutput(e).(DistributionPolicyTargetShapeOutput)
}

func (e DistributionPolicyTargetShape) ToDistributionPolicyTargetShapeOutputWithContext(ctx context.Context) DistributionPolicyTargetShapeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DistributionPolicyTargetShapeOutput)
}

func (e DistributionPolicyTargetShape) ToDistributionPolicyTargetShapePtrOutput() DistributionPolicyTargetShapePtrOutput {
	return e.ToDistributionPolicyTargetShapePtrOutputWithContext(context.Background())
}

func (e DistributionPolicyTargetShape) ToDistributionPolicyTargetShapePtrOutputWithContext(ctx context.Context) DistributionPolicyTargetShapePtrOutput {
	return DistributionPolicyTargetShape(e).ToDistributionPolicyTargetShapeOutputWithContext(ctx).ToDistributionPolicyTargetShapePtrOutputWithContext(ctx)
}

func (e DistributionPolicyTargetShape) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionPolicyTargetShape) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DistributionPolicyTargetShape) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DistributionPolicyTargetShape) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DistributionPolicyTargetShapeOutput struct{ *pulumi.OutputState }

func (DistributionPolicyTargetShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionPolicyTargetShape)(nil)).Elem()
}

func (o DistributionPolicyTargetShapeOutput) ToDistributionPolicyTargetShapeOutput() DistributionPolicyTargetShapeOutput {
	return o
}

func (o DistributionPolicyTargetShapeOutput) ToDistributionPolicyTargetShapeOutputWithContext(ctx context.Context) DistributionPolicyTargetShapeOutput {
	return o
}

func (o DistributionPolicyTargetShapeOutput) ToDistributionPolicyTargetShapePtrOutput() DistributionPolicyTargetShapePtrOutput {
	return o.ToDistributionPolicyTargetShapePtrOutputWithContext(context.Background())
}

func (o DistributionPolicyTargetShapeOutput) ToDistributionPolicyTargetShapePtrOutputWithContext(ctx context.Context) DistributionPolicyTargetShapePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionPolicyTargetShape) *DistributionPolicyTargetShape {
		return &v
	}).(DistributionPolicyTargetShapePtrOutput)
}

func (o DistributionPolicyTargetShapeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DistributionPolicyTargetShapeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionPolicyTargetShape) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DistributionPolicyTargetShapeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionPolicyTargetShapeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DistributionPolicyTargetShape) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DistributionPolicyTargetShapePtrOutput struct{ *pulumi.OutputState }

func (DistributionPolicyTargetShapePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionPolicyTargetShape)(nil)).Elem()
}

func (o DistributionPolicyTargetShapePtrOutput) ToDistributionPolicyTargetShapePtrOutput() DistributionPolicyTargetShapePtrOutput {
	return o
}

func (o DistributionPolicyTargetShapePtrOutput) ToDistributionPolicyTargetShapePtrOutputWithContext(ctx context.Context) DistributionPolicyTargetShapePtrOutput {
	return o
}

func (o DistributionPolicyTargetShapePtrOutput) Elem() DistributionPolicyTargetShapeOutput {
	return o.ApplyT(func(v *DistributionPolicyTargetShape) DistributionPolicyTargetShape {
		if v != nil {
			return *v
		}
		var ret DistributionPolicyTargetShape
		return ret
	}).(DistributionPolicyTargetShapeOutput)
}

func (o DistributionPolicyTargetShapePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DistributionPolicyTargetShapePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DistributionPolicyTargetShape) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DistributionPolicyTargetShapeInput is an input type that accepts DistributionPolicyTargetShapeArgs and DistributionPolicyTargetShapeOutput values.
// You can construct a concrete instance of `DistributionPolicyTargetShapeInput` via:
//
//          DistributionPolicyTargetShapeArgs{...}
type DistributionPolicyTargetShapeInput interface {
	pulumi.Input

	ToDistributionPolicyTargetShapeOutput() DistributionPolicyTargetShapeOutput
	ToDistributionPolicyTargetShapeOutputWithContext(context.Context) DistributionPolicyTargetShapeOutput
}

var distributionPolicyTargetShapePtrType = reflect.TypeOf((**DistributionPolicyTargetShape)(nil)).Elem()

type DistributionPolicyTargetShapePtrInput interface {
	pulumi.Input

	ToDistributionPolicyTargetShapePtrOutput() DistributionPolicyTargetShapePtrOutput
	ToDistributionPolicyTargetShapePtrOutputWithContext(context.Context) DistributionPolicyTargetShapePtrOutput
}

type distributionPolicyTargetShapePtr string

func DistributionPolicyTargetShapePtr(v string) DistributionPolicyTargetShapePtrInput {
	return (*distributionPolicyTargetShapePtr)(&v)
}

func (*distributionPolicyTargetShapePtr) ElementType() reflect.Type {
	return distributionPolicyTargetShapePtrType
}

func (in *distributionPolicyTargetShapePtr) ToDistributionPolicyTargetShapePtrOutput() DistributionPolicyTargetShapePtrOutput {
	return pulumi.ToOutput(in).(DistributionPolicyTargetShapePtrOutput)
}

func (in *distributionPolicyTargetShapePtr) ToDistributionPolicyTargetShapePtrOutputWithContext(ctx context.Context) DistributionPolicyTargetShapePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DistributionPolicyTargetShapePtrOutput)
}

// Indicates the user-supplied redundancy type of this external VPN gateway.
type ExternalVpnGatewayRedundancyType string

const (
	// The external VPN gateway has four public IP addresses; at the time of writing this API, the AWS virtual private gateway is an example which has four public IP addresses for high availability connections; there should be two VPN connections in the AWS virtual private gateway , each AWS VPN connection has two public IP addresses; please make sure to put two public IP addresses from one AWS VPN connection into interfaces 0 and 1 of this external VPN gateway, and put the other two public IP addresses from another AWS VPN connection into interfaces 2 and 3 of this external VPN gateway. When displaying highly available configuration status for the VPN tunnels connected to FOUR_IPS_REDUNDANCY external VPN gateway, Google will always detect whether interfaces 0 and 1 are connected on one interface of HA Cloud VPN gateway, and detect whether interfaces 2 and 3 are connected to another interface of the HA Cloud VPN gateway.
	ExternalVpnGatewayRedundancyTypeFourIpsRedundancy = ExternalVpnGatewayRedundancyType("FOUR_IPS_REDUNDANCY")
	// The external VPN gateway has only one public IP address which internally provide redundancy or failover.
	ExternalVpnGatewayRedundancyTypeSingleIpInternallyRedundant = ExternalVpnGatewayRedundancyType("SINGLE_IP_INTERNALLY_REDUNDANT")
	// The external VPN gateway has two public IP addresses which are redundant with each other, the following two types of setup on your on-premises side would have this type of redundancy: (1) Two separate on-premises gateways, each with one public IP address, the two on-premises gateways are redundant with each other. (2) A single on-premise gateway with two public IP addresses that are redundant with eatch other.
	ExternalVpnGatewayRedundancyTypeTwoIpsRedundancy = ExternalVpnGatewayRedundancyType("TWO_IPS_REDUNDANCY")
)

func (ExternalVpnGatewayRedundancyType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalVpnGatewayRedundancyType)(nil)).Elem()
}

func (e ExternalVpnGatewayRedundancyType) ToExternalVpnGatewayRedundancyTypeOutput() ExternalVpnGatewayRedundancyTypeOutput {
	return pulumi.ToOutput(e).(ExternalVpnGatewayRedundancyTypeOutput)
}

func (e ExternalVpnGatewayRedundancyType) ToExternalVpnGatewayRedundancyTypeOutputWithContext(ctx context.Context) ExternalVpnGatewayRedundancyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExternalVpnGatewayRedundancyTypeOutput)
}

func (e ExternalVpnGatewayRedundancyType) ToExternalVpnGatewayRedundancyTypePtrOutput() ExternalVpnGatewayRedundancyTypePtrOutput {
	return e.ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(context.Background())
}

func (e ExternalVpnGatewayRedundancyType) ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(ctx context.Context) ExternalVpnGatewayRedundancyTypePtrOutput {
	return ExternalVpnGatewayRedundancyType(e).ToExternalVpnGatewayRedundancyTypeOutputWithContext(ctx).ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(ctx)
}

func (e ExternalVpnGatewayRedundancyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExternalVpnGatewayRedundancyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExternalVpnGatewayRedundancyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExternalVpnGatewayRedundancyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExternalVpnGatewayRedundancyTypeOutput struct{ *pulumi.OutputState }

func (ExternalVpnGatewayRedundancyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalVpnGatewayRedundancyType)(nil)).Elem()
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToExternalVpnGatewayRedundancyTypeOutput() ExternalVpnGatewayRedundancyTypeOutput {
	return o
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToExternalVpnGatewayRedundancyTypeOutputWithContext(ctx context.Context) ExternalVpnGatewayRedundancyTypeOutput {
	return o
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToExternalVpnGatewayRedundancyTypePtrOutput() ExternalVpnGatewayRedundancyTypePtrOutput {
	return o.ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(context.Background())
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(ctx context.Context) ExternalVpnGatewayRedundancyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalVpnGatewayRedundancyType) *ExternalVpnGatewayRedundancyType {
		return &v
	}).(ExternalVpnGatewayRedundancyTypePtrOutput)
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExternalVpnGatewayRedundancyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExternalVpnGatewayRedundancyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExternalVpnGatewayRedundancyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExternalVpnGatewayRedundancyTypePtrOutput struct{ *pulumi.OutputState }

func (ExternalVpnGatewayRedundancyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalVpnGatewayRedundancyType)(nil)).Elem()
}

func (o ExternalVpnGatewayRedundancyTypePtrOutput) ToExternalVpnGatewayRedundancyTypePtrOutput() ExternalVpnGatewayRedundancyTypePtrOutput {
	return o
}

func (o ExternalVpnGatewayRedundancyTypePtrOutput) ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(ctx context.Context) ExternalVpnGatewayRedundancyTypePtrOutput {
	return o
}

func (o ExternalVpnGatewayRedundancyTypePtrOutput) Elem() ExternalVpnGatewayRedundancyTypeOutput {
	return o.ApplyT(func(v *ExternalVpnGatewayRedundancyType) ExternalVpnGatewayRedundancyType {
		if v != nil {
			return *v
		}
		var ret ExternalVpnGatewayRedundancyType
		return ret
	}).(ExternalVpnGatewayRedundancyTypeOutput)
}

func (o ExternalVpnGatewayRedundancyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExternalVpnGatewayRedundancyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExternalVpnGatewayRedundancyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExternalVpnGatewayRedundancyTypeInput is an input type that accepts ExternalVpnGatewayRedundancyTypeArgs and ExternalVpnGatewayRedundancyTypeOutput values.
// You can construct a concrete instance of `ExternalVpnGatewayRedundancyTypeInput` via:
//
//          ExternalVpnGatewayRedundancyTypeArgs{...}
type ExternalVpnGatewayRedundancyTypeInput interface {
	pulumi.Input

	ToExternalVpnGatewayRedundancyTypeOutput() ExternalVpnGatewayRedundancyTypeOutput
	ToExternalVpnGatewayRedundancyTypeOutputWithContext(context.Context) ExternalVpnGatewayRedundancyTypeOutput
}

var externalVpnGatewayRedundancyTypePtrType = reflect.TypeOf((**ExternalVpnGatewayRedundancyType)(nil)).Elem()

type ExternalVpnGatewayRedundancyTypePtrInput interface {
	pulumi.Input

	ToExternalVpnGatewayRedundancyTypePtrOutput() ExternalVpnGatewayRedundancyTypePtrOutput
	ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(context.Context) ExternalVpnGatewayRedundancyTypePtrOutput
}

type externalVpnGatewayRedundancyTypePtr string

func ExternalVpnGatewayRedundancyTypePtr(v string) ExternalVpnGatewayRedundancyTypePtrInput {
	return (*externalVpnGatewayRedundancyTypePtr)(&v)
}

func (*externalVpnGatewayRedundancyTypePtr) ElementType() reflect.Type {
	return externalVpnGatewayRedundancyTypePtrType
}

func (in *externalVpnGatewayRedundancyTypePtr) ToExternalVpnGatewayRedundancyTypePtrOutput() ExternalVpnGatewayRedundancyTypePtrOutput {
	return pulumi.ToOutput(in).(ExternalVpnGatewayRedundancyTypePtrOutput)
}

func (in *externalVpnGatewayRedundancyTypePtr) ToExternalVpnGatewayRedundancyTypePtrOutputWithContext(ctx context.Context) ExternalVpnGatewayRedundancyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExternalVpnGatewayRedundancyTypePtrOutput)
}

// The file type of source file.
type FileContentBufferFileType string

const (
	FileContentBufferFileTypeBin       = FileContentBufferFileType("BIN")
	FileContentBufferFileTypeUndefined = FileContentBufferFileType("UNDEFINED")
	FileContentBufferFileTypeX509      = FileContentBufferFileType("X509")
)

func (FileContentBufferFileType) ElementType() reflect.Type {
	return reflect.TypeOf((*FileContentBufferFileType)(nil)).Elem()
}

func (e FileContentBufferFileType) ToFileContentBufferFileTypeOutput() FileContentBufferFileTypeOutput {
	return pulumi.ToOutput(e).(FileContentBufferFileTypeOutput)
}

func (e FileContentBufferFileType) ToFileContentBufferFileTypeOutputWithContext(ctx context.Context) FileContentBufferFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FileContentBufferFileTypeOutput)
}

func (e FileContentBufferFileType) ToFileContentBufferFileTypePtrOutput() FileContentBufferFileTypePtrOutput {
	return e.ToFileContentBufferFileTypePtrOutputWithContext(context.Background())
}

func (e FileContentBufferFileType) ToFileContentBufferFileTypePtrOutputWithContext(ctx context.Context) FileContentBufferFileTypePtrOutput {
	return FileContentBufferFileType(e).ToFileContentBufferFileTypeOutputWithContext(ctx).ToFileContentBufferFileTypePtrOutputWithContext(ctx)
}

func (e FileContentBufferFileType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FileContentBufferFileType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FileContentBufferFileType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FileContentBufferFileType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FileContentBufferFileTypeOutput struct{ *pulumi.OutputState }

func (FileContentBufferFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileContentBufferFileType)(nil)).Elem()
}

func (o FileContentBufferFileTypeOutput) ToFileContentBufferFileTypeOutput() FileContentBufferFileTypeOutput {
	return o
}

func (o FileContentBufferFileTypeOutput) ToFileContentBufferFileTypeOutputWithContext(ctx context.Context) FileContentBufferFileTypeOutput {
	return o
}

func (o FileContentBufferFileTypeOutput) ToFileContentBufferFileTypePtrOutput() FileContentBufferFileTypePtrOutput {
	return o.ToFileContentBufferFileTypePtrOutputWithContext(context.Background())
}

func (o FileContentBufferFileTypeOutput) ToFileContentBufferFileTypePtrOutputWithContext(ctx context.Context) FileContentBufferFileTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileContentBufferFileType) *FileContentBufferFileType {
		return &v
	}).(FileContentBufferFileTypePtrOutput)
}

func (o FileContentBufferFileTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FileContentBufferFileTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FileContentBufferFileType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FileContentBufferFileTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FileContentBufferFileTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FileContentBufferFileType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FileContentBufferFileTypePtrOutput struct{ *pulumi.OutputState }

func (FileContentBufferFileTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileContentBufferFileType)(nil)).Elem()
}

func (o FileContentBufferFileTypePtrOutput) ToFileContentBufferFileTypePtrOutput() FileContentBufferFileTypePtrOutput {
	return o
}

func (o FileContentBufferFileTypePtrOutput) ToFileContentBufferFileTypePtrOutputWithContext(ctx context.Context) FileContentBufferFileTypePtrOutput {
	return o
}

func (o FileContentBufferFileTypePtrOutput) Elem() FileContentBufferFileTypeOutput {
	return o.ApplyT(func(v *FileContentBufferFileType) FileContentBufferFileType {
		if v != nil {
			return *v
		}
		var ret FileContentBufferFileType
		return ret
	}).(FileContentBufferFileTypeOutput)
}

func (o FileContentBufferFileTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FileContentBufferFileTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FileContentBufferFileType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FileContentBufferFileTypeInput is an input type that accepts FileContentBufferFileTypeArgs and FileContentBufferFileTypeOutput values.
// You can construct a concrete instance of `FileContentBufferFileTypeInput` via:
//
//          FileContentBufferFileTypeArgs{...}
type FileContentBufferFileTypeInput interface {
	pulumi.Input

	ToFileContentBufferFileTypeOutput() FileContentBufferFileTypeOutput
	ToFileContentBufferFileTypeOutputWithContext(context.Context) FileContentBufferFileTypeOutput
}

var fileContentBufferFileTypePtrType = reflect.TypeOf((**FileContentBufferFileType)(nil)).Elem()

type FileContentBufferFileTypePtrInput interface {
	pulumi.Input

	ToFileContentBufferFileTypePtrOutput() FileContentBufferFileTypePtrOutput
	ToFileContentBufferFileTypePtrOutputWithContext(context.Context) FileContentBufferFileTypePtrOutput
}

type fileContentBufferFileTypePtr string

func FileContentBufferFileTypePtr(v string) FileContentBufferFileTypePtrInput {
	return (*fileContentBufferFileTypePtr)(&v)
}

func (*fileContentBufferFileTypePtr) ElementType() reflect.Type {
	return fileContentBufferFileTypePtrType
}

func (in *fileContentBufferFileTypePtr) ToFileContentBufferFileTypePtrOutput() FileContentBufferFileTypePtrOutput {
	return pulumi.ToOutput(in).(FileContentBufferFileTypePtrOutput)
}

func (in *fileContentBufferFileTypePtr) ToFileContentBufferFileTypePtrOutputWithContext(ctx context.Context) FileContentBufferFileTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FileContentBufferFileTypePtrOutput)
}

// Direction of traffic to which this firewall applies, either `INGRESS` or `EGRESS`. The default is `INGRESS`. For `INGRESS` traffic, you cannot specify the destinationRanges field, and for `EGRESS` traffic, you cannot specify the sourceRanges or sourceTags fields.
type FirewallDirection string

const (
	// Indicates that firewall should apply to outgoing traffic.
	FirewallDirectionEgress = FirewallDirection("EGRESS")
	// Indicates that firewall should apply to incoming traffic.
	FirewallDirectionIngress = FirewallDirection("INGRESS")
)

func (FirewallDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDirection)(nil)).Elem()
}

func (e FirewallDirection) ToFirewallDirectionOutput() FirewallDirectionOutput {
	return pulumi.ToOutput(e).(FirewallDirectionOutput)
}

func (e FirewallDirection) ToFirewallDirectionOutputWithContext(ctx context.Context) FirewallDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallDirectionOutput)
}

func (e FirewallDirection) ToFirewallDirectionPtrOutput() FirewallDirectionPtrOutput {
	return e.ToFirewallDirectionPtrOutputWithContext(context.Background())
}

func (e FirewallDirection) ToFirewallDirectionPtrOutputWithContext(ctx context.Context) FirewallDirectionPtrOutput {
	return FirewallDirection(e).ToFirewallDirectionOutputWithContext(ctx).ToFirewallDirectionPtrOutputWithContext(ctx)
}

func (e FirewallDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallDirectionOutput struct{ *pulumi.OutputState }

func (FirewallDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallDirection)(nil)).Elem()
}

func (o FirewallDirectionOutput) ToFirewallDirectionOutput() FirewallDirectionOutput {
	return o
}

func (o FirewallDirectionOutput) ToFirewallDirectionOutputWithContext(ctx context.Context) FirewallDirectionOutput {
	return o
}

func (o FirewallDirectionOutput) ToFirewallDirectionPtrOutput() FirewallDirectionPtrOutput {
	return o.ToFirewallDirectionPtrOutputWithContext(context.Background())
}

func (o FirewallDirectionOutput) ToFirewallDirectionPtrOutputWithContext(ctx context.Context) FirewallDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallDirection) *FirewallDirection {
		return &v
	}).(FirewallDirectionPtrOutput)
}

func (o FirewallDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallDirectionPtrOutput struct{ *pulumi.OutputState }

func (FirewallDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallDirection)(nil)).Elem()
}

func (o FirewallDirectionPtrOutput) ToFirewallDirectionPtrOutput() FirewallDirectionPtrOutput {
	return o
}

func (o FirewallDirectionPtrOutput) ToFirewallDirectionPtrOutputWithContext(ctx context.Context) FirewallDirectionPtrOutput {
	return o
}

func (o FirewallDirectionPtrOutput) Elem() FirewallDirectionOutput {
	return o.ApplyT(func(v *FirewallDirection) FirewallDirection {
		if v != nil {
			return *v
		}
		var ret FirewallDirection
		return ret
	}).(FirewallDirectionOutput)
}

func (o FirewallDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallDirectionInput is an input type that accepts FirewallDirectionArgs and FirewallDirectionOutput values.
// You can construct a concrete instance of `FirewallDirectionInput` via:
//
//          FirewallDirectionArgs{...}
type FirewallDirectionInput interface {
	pulumi.Input

	ToFirewallDirectionOutput() FirewallDirectionOutput
	ToFirewallDirectionOutputWithContext(context.Context) FirewallDirectionOutput
}

var firewallDirectionPtrType = reflect.TypeOf((**FirewallDirection)(nil)).Elem()

type FirewallDirectionPtrInput interface {
	pulumi.Input

	ToFirewallDirectionPtrOutput() FirewallDirectionPtrOutput
	ToFirewallDirectionPtrOutputWithContext(context.Context) FirewallDirectionPtrOutput
}

type firewallDirectionPtr string

func FirewallDirectionPtr(v string) FirewallDirectionPtrInput {
	return (*firewallDirectionPtr)(&v)
}

func (*firewallDirectionPtr) ElementType() reflect.Type {
	return firewallDirectionPtrType
}

func (in *firewallDirectionPtr) ToFirewallDirectionPtrOutput() FirewallDirectionPtrOutput {
	return pulumi.ToOutput(in).(FirewallDirectionPtrOutput)
}

func (in *firewallDirectionPtr) ToFirewallDirectionPtrOutputWithContext(ctx context.Context) FirewallDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallDirectionPtrOutput)
}

// This field can only be specified for a particular firewall rule if logging is enabled for that rule. This field denotes whether to include or exclude metadata for firewall logs.
type FirewallLogConfigMetadata string

const (
	FirewallLogConfigMetadataExcludeAllMetadata = FirewallLogConfigMetadata("EXCLUDE_ALL_METADATA")
	FirewallLogConfigMetadataIncludeAllMetadata = FirewallLogConfigMetadata("INCLUDE_ALL_METADATA")
)

func (FirewallLogConfigMetadata) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLogConfigMetadata)(nil)).Elem()
}

func (e FirewallLogConfigMetadata) ToFirewallLogConfigMetadataOutput() FirewallLogConfigMetadataOutput {
	return pulumi.ToOutput(e).(FirewallLogConfigMetadataOutput)
}

func (e FirewallLogConfigMetadata) ToFirewallLogConfigMetadataOutputWithContext(ctx context.Context) FirewallLogConfigMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallLogConfigMetadataOutput)
}

func (e FirewallLogConfigMetadata) ToFirewallLogConfigMetadataPtrOutput() FirewallLogConfigMetadataPtrOutput {
	return e.ToFirewallLogConfigMetadataPtrOutputWithContext(context.Background())
}

func (e FirewallLogConfigMetadata) ToFirewallLogConfigMetadataPtrOutputWithContext(ctx context.Context) FirewallLogConfigMetadataPtrOutput {
	return FirewallLogConfigMetadata(e).ToFirewallLogConfigMetadataOutputWithContext(ctx).ToFirewallLogConfigMetadataPtrOutputWithContext(ctx)
}

func (e FirewallLogConfigMetadata) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallLogConfigMetadata) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallLogConfigMetadata) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallLogConfigMetadata) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallLogConfigMetadataOutput struct{ *pulumi.OutputState }

func (FirewallLogConfigMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallLogConfigMetadata)(nil)).Elem()
}

func (o FirewallLogConfigMetadataOutput) ToFirewallLogConfigMetadataOutput() FirewallLogConfigMetadataOutput {
	return o
}

func (o FirewallLogConfigMetadataOutput) ToFirewallLogConfigMetadataOutputWithContext(ctx context.Context) FirewallLogConfigMetadataOutput {
	return o
}

func (o FirewallLogConfigMetadataOutput) ToFirewallLogConfigMetadataPtrOutput() FirewallLogConfigMetadataPtrOutput {
	return o.ToFirewallLogConfigMetadataPtrOutputWithContext(context.Background())
}

func (o FirewallLogConfigMetadataOutput) ToFirewallLogConfigMetadataPtrOutputWithContext(ctx context.Context) FirewallLogConfigMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallLogConfigMetadata) *FirewallLogConfigMetadata {
		return &v
	}).(FirewallLogConfigMetadataPtrOutput)
}

func (o FirewallLogConfigMetadataOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallLogConfigMetadataOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallLogConfigMetadata) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallLogConfigMetadataOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallLogConfigMetadataOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallLogConfigMetadata) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallLogConfigMetadataPtrOutput struct{ *pulumi.OutputState }

func (FirewallLogConfigMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallLogConfigMetadata)(nil)).Elem()
}

func (o FirewallLogConfigMetadataPtrOutput) ToFirewallLogConfigMetadataPtrOutput() FirewallLogConfigMetadataPtrOutput {
	return o
}

func (o FirewallLogConfigMetadataPtrOutput) ToFirewallLogConfigMetadataPtrOutputWithContext(ctx context.Context) FirewallLogConfigMetadataPtrOutput {
	return o
}

func (o FirewallLogConfigMetadataPtrOutput) Elem() FirewallLogConfigMetadataOutput {
	return o.ApplyT(func(v *FirewallLogConfigMetadata) FirewallLogConfigMetadata {
		if v != nil {
			return *v
		}
		var ret FirewallLogConfigMetadata
		return ret
	}).(FirewallLogConfigMetadataOutput)
}

func (o FirewallLogConfigMetadataPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallLogConfigMetadataPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallLogConfigMetadata) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallLogConfigMetadataInput is an input type that accepts FirewallLogConfigMetadataArgs and FirewallLogConfigMetadataOutput values.
// You can construct a concrete instance of `FirewallLogConfigMetadataInput` via:
//
//          FirewallLogConfigMetadataArgs{...}
type FirewallLogConfigMetadataInput interface {
	pulumi.Input

	ToFirewallLogConfigMetadataOutput() FirewallLogConfigMetadataOutput
	ToFirewallLogConfigMetadataOutputWithContext(context.Context) FirewallLogConfigMetadataOutput
}

var firewallLogConfigMetadataPtrType = reflect.TypeOf((**FirewallLogConfigMetadata)(nil)).Elem()

type FirewallLogConfigMetadataPtrInput interface {
	pulumi.Input

	ToFirewallLogConfigMetadataPtrOutput() FirewallLogConfigMetadataPtrOutput
	ToFirewallLogConfigMetadataPtrOutputWithContext(context.Context) FirewallLogConfigMetadataPtrOutput
}

type firewallLogConfigMetadataPtr string

func FirewallLogConfigMetadataPtr(v string) FirewallLogConfigMetadataPtrInput {
	return (*firewallLogConfigMetadataPtr)(&v)
}

func (*firewallLogConfigMetadataPtr) ElementType() reflect.Type {
	return firewallLogConfigMetadataPtrType
}

func (in *firewallLogConfigMetadataPtr) ToFirewallLogConfigMetadataPtrOutput() FirewallLogConfigMetadataPtrOutput {
	return pulumi.ToOutput(in).(FirewallLogConfigMetadataPtrOutput)
}

func (in *firewallLogConfigMetadataPtr) ToFirewallLogConfigMetadataPtrOutputWithContext(ctx context.Context) FirewallLogConfigMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallLogConfigMetadataPtrOutput)
}

// The direction in which this rule applies.
type FirewallPolicyRuleDirection string

const (
	FirewallPolicyRuleDirectionEgress  = FirewallPolicyRuleDirection("EGRESS")
	FirewallPolicyRuleDirectionIngress = FirewallPolicyRuleDirection("INGRESS")
)

func (FirewallPolicyRuleDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleDirection)(nil)).Elem()
}

func (e FirewallPolicyRuleDirection) ToFirewallPolicyRuleDirectionOutput() FirewallPolicyRuleDirectionOutput {
	return pulumi.ToOutput(e).(FirewallPolicyRuleDirectionOutput)
}

func (e FirewallPolicyRuleDirection) ToFirewallPolicyRuleDirectionOutputWithContext(ctx context.Context) FirewallPolicyRuleDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallPolicyRuleDirectionOutput)
}

func (e FirewallPolicyRuleDirection) ToFirewallPolicyRuleDirectionPtrOutput() FirewallPolicyRuleDirectionPtrOutput {
	return e.ToFirewallPolicyRuleDirectionPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyRuleDirection) ToFirewallPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleDirectionPtrOutput {
	return FirewallPolicyRuleDirection(e).ToFirewallPolicyRuleDirectionOutputWithContext(ctx).ToFirewallPolicyRuleDirectionPtrOutputWithContext(ctx)
}

func (e FirewallPolicyRuleDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyRuleDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyRuleDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyRuleDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallPolicyRuleDirectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleDirection)(nil)).Elem()
}

func (o FirewallPolicyRuleDirectionOutput) ToFirewallPolicyRuleDirectionOutput() FirewallPolicyRuleDirectionOutput {
	return o
}

func (o FirewallPolicyRuleDirectionOutput) ToFirewallPolicyRuleDirectionOutputWithContext(ctx context.Context) FirewallPolicyRuleDirectionOutput {
	return o
}

func (o FirewallPolicyRuleDirectionOutput) ToFirewallPolicyRuleDirectionPtrOutput() FirewallPolicyRuleDirectionPtrOutput {
	return o.ToFirewallPolicyRuleDirectionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleDirectionOutput) ToFirewallPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyRuleDirection) *FirewallPolicyRuleDirection {
		return &v
	}).(FirewallPolicyRuleDirectionPtrOutput)
}

func (o FirewallPolicyRuleDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyRuleDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallPolicyRuleDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyRuleDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleDirectionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyRuleDirection)(nil)).Elem()
}

func (o FirewallPolicyRuleDirectionPtrOutput) ToFirewallPolicyRuleDirectionPtrOutput() FirewallPolicyRuleDirectionPtrOutput {
	return o
}

func (o FirewallPolicyRuleDirectionPtrOutput) ToFirewallPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleDirectionPtrOutput {
	return o
}

func (o FirewallPolicyRuleDirectionPtrOutput) Elem() FirewallPolicyRuleDirectionOutput {
	return o.ApplyT(func(v *FirewallPolicyRuleDirection) FirewallPolicyRuleDirection {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyRuleDirection
		return ret
	}).(FirewallPolicyRuleDirectionOutput)
}

func (o FirewallPolicyRuleDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyRuleDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallPolicyRuleDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallPolicyRuleDirectionInput is an input type that accepts FirewallPolicyRuleDirectionArgs and FirewallPolicyRuleDirectionOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleDirectionInput` via:
//
//          FirewallPolicyRuleDirectionArgs{...}
type FirewallPolicyRuleDirectionInput interface {
	pulumi.Input

	ToFirewallPolicyRuleDirectionOutput() FirewallPolicyRuleDirectionOutput
	ToFirewallPolicyRuleDirectionOutputWithContext(context.Context) FirewallPolicyRuleDirectionOutput
}

var firewallPolicyRuleDirectionPtrType = reflect.TypeOf((**FirewallPolicyRuleDirection)(nil)).Elem()

type FirewallPolicyRuleDirectionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyRuleDirectionPtrOutput() FirewallPolicyRuleDirectionPtrOutput
	ToFirewallPolicyRuleDirectionPtrOutputWithContext(context.Context) FirewallPolicyRuleDirectionPtrOutput
}

type firewallPolicyRuleDirectionPtr string

func FirewallPolicyRuleDirectionPtr(v string) FirewallPolicyRuleDirectionPtrInput {
	return (*firewallPolicyRuleDirectionPtr)(&v)
}

func (*firewallPolicyRuleDirectionPtr) ElementType() reflect.Type {
	return firewallPolicyRuleDirectionPtrType
}

func (in *firewallPolicyRuleDirectionPtr) ToFirewallPolicyRuleDirectionPtrOutput() FirewallPolicyRuleDirectionPtrOutput {
	return pulumi.ToOutput(in).(FirewallPolicyRuleDirectionPtrOutput)
}

func (in *firewallPolicyRuleDirectionPtr) ToFirewallPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) FirewallPolicyRuleDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallPolicyRuleDirectionPtrOutput)
}

// The scope of networks allowed to be associated with the firewall policy. This field can be either GLOBAL_VPC_NETWORK or REGIONAL_VPC_NETWORK. A firewall policy with the VPC scope set to GLOBAL_VPC_NETWORK is allowed to be attached only to global networks. When the VPC scope is set to REGIONAL_VPC_NETWORK the firewall policy is allowed to be attached only to regional networks in the same scope as the firewall policy. Note: if not specified then GLOBAL_VPC_NETWORK will be used.
type FirewallPolicyVpcNetworkScope string

const (
	// The firewall policy is allowed to be attached only to global networks.
	FirewallPolicyVpcNetworkScopeGlobalVpcNetwork = FirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK")
	// The firewall policy is allowed to be attached only to regional networks in the same scope as the firewall policy. This option is applicable only to regional firewall policies.
	FirewallPolicyVpcNetworkScopeRegionalVpcNetwork = FirewallPolicyVpcNetworkScope("REGIONAL_VPC_NETWORK")
)

func (FirewallPolicyVpcNetworkScope) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (e FirewallPolicyVpcNetworkScope) ToFirewallPolicyVpcNetworkScopeOutput() FirewallPolicyVpcNetworkScopeOutput {
	return pulumi.ToOutput(e).(FirewallPolicyVpcNetworkScopeOutput)
}

func (e FirewallPolicyVpcNetworkScope) ToFirewallPolicyVpcNetworkScopeOutputWithContext(ctx context.Context) FirewallPolicyVpcNetworkScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FirewallPolicyVpcNetworkScopeOutput)
}

func (e FirewallPolicyVpcNetworkScope) ToFirewallPolicyVpcNetworkScopePtrOutput() FirewallPolicyVpcNetworkScopePtrOutput {
	return e.ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Background())
}

func (e FirewallPolicyVpcNetworkScope) ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) FirewallPolicyVpcNetworkScopePtrOutput {
	return FirewallPolicyVpcNetworkScope(e).ToFirewallPolicyVpcNetworkScopeOutputWithContext(ctx).ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx)
}

func (e FirewallPolicyVpcNetworkScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyVpcNetworkScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FirewallPolicyVpcNetworkScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FirewallPolicyVpcNetworkScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FirewallPolicyVpcNetworkScopeOutput struct{ *pulumi.OutputState }

func (FirewallPolicyVpcNetworkScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToFirewallPolicyVpcNetworkScopeOutput() FirewallPolicyVpcNetworkScopeOutput {
	return o
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToFirewallPolicyVpcNetworkScopeOutputWithContext(ctx context.Context) FirewallPolicyVpcNetworkScopeOutput {
	return o
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToFirewallPolicyVpcNetworkScopePtrOutput() FirewallPolicyVpcNetworkScopePtrOutput {
	return o.ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) FirewallPolicyVpcNetworkScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyVpcNetworkScope) *FirewallPolicyVpcNetworkScope {
		return &v
	}).(FirewallPolicyVpcNetworkScopePtrOutput)
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyVpcNetworkScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyVpcNetworkScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPolicyVpcNetworkScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallPolicyVpcNetworkScopePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyVpcNetworkScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (o FirewallPolicyVpcNetworkScopePtrOutput) ToFirewallPolicyVpcNetworkScopePtrOutput() FirewallPolicyVpcNetworkScopePtrOutput {
	return o
}

func (o FirewallPolicyVpcNetworkScopePtrOutput) ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) FirewallPolicyVpcNetworkScopePtrOutput {
	return o
}

func (o FirewallPolicyVpcNetworkScopePtrOutput) Elem() FirewallPolicyVpcNetworkScopeOutput {
	return o.ApplyT(func(v *FirewallPolicyVpcNetworkScope) FirewallPolicyVpcNetworkScope {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyVpcNetworkScope
		return ret
	}).(FirewallPolicyVpcNetworkScopeOutput)
}

func (o FirewallPolicyVpcNetworkScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyVpcNetworkScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallPolicyVpcNetworkScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FirewallPolicyVpcNetworkScopeInput is an input type that accepts FirewallPolicyVpcNetworkScopeArgs and FirewallPolicyVpcNetworkScopeOutput values.
// You can construct a concrete instance of `FirewallPolicyVpcNetworkScopeInput` via:
//
//          FirewallPolicyVpcNetworkScopeArgs{...}
type FirewallPolicyVpcNetworkScopeInput interface {
	pulumi.Input

	ToFirewallPolicyVpcNetworkScopeOutput() FirewallPolicyVpcNetworkScopeOutput
	ToFirewallPolicyVpcNetworkScopeOutputWithContext(context.Context) FirewallPolicyVpcNetworkScopeOutput
}

var firewallPolicyVpcNetworkScopePtrType = reflect.TypeOf((**FirewallPolicyVpcNetworkScope)(nil)).Elem()

type FirewallPolicyVpcNetworkScopePtrInput interface {
	pulumi.Input

	ToFirewallPolicyVpcNetworkScopePtrOutput() FirewallPolicyVpcNetworkScopePtrOutput
	ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Context) FirewallPolicyVpcNetworkScopePtrOutput
}

type firewallPolicyVpcNetworkScopePtr string

func FirewallPolicyVpcNetworkScopePtr(v string) FirewallPolicyVpcNetworkScopePtrInput {
	return (*firewallPolicyVpcNetworkScopePtr)(&v)
}

func (*firewallPolicyVpcNetworkScopePtr) ElementType() reflect.Type {
	return firewallPolicyVpcNetworkScopePtrType
}

func (in *firewallPolicyVpcNetworkScopePtr) ToFirewallPolicyVpcNetworkScopePtrOutput() FirewallPolicyVpcNetworkScopePtrOutput {
	return pulumi.ToOutput(in).(FirewallPolicyVpcNetworkScopePtrOutput)
}

func (in *firewallPolicyVpcNetworkScopePtr) ToFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) FirewallPolicyVpcNetworkScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FirewallPolicyVpcNetworkScopePtrOutput)
}

// The IP protocol to which this rule applies. For protocol forwarding, valid options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP protocols are different for different load balancing products as described in [Load balancing features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends).
type ForwardingRuleIpProtocol string

const (
	ForwardingRuleIpProtocolAh        = ForwardingRuleIpProtocol("AH")
	ForwardingRuleIpProtocolAll       = ForwardingRuleIpProtocol("ALL")
	ForwardingRuleIpProtocolEsp       = ForwardingRuleIpProtocol("ESP")
	ForwardingRuleIpProtocolIcmp      = ForwardingRuleIpProtocol("ICMP")
	ForwardingRuleIpProtocolL3Default = ForwardingRuleIpProtocol("L3_DEFAULT")
	ForwardingRuleIpProtocolSctp      = ForwardingRuleIpProtocol("SCTP")
	ForwardingRuleIpProtocolTcp       = ForwardingRuleIpProtocol("TCP")
	ForwardingRuleIpProtocolUdp       = ForwardingRuleIpProtocol("UDP")
)

func (ForwardingRuleIpProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleIpProtocol)(nil)).Elem()
}

func (e ForwardingRuleIpProtocol) ToForwardingRuleIpProtocolOutput() ForwardingRuleIpProtocolOutput {
	return pulumi.ToOutput(e).(ForwardingRuleIpProtocolOutput)
}

func (e ForwardingRuleIpProtocol) ToForwardingRuleIpProtocolOutputWithContext(ctx context.Context) ForwardingRuleIpProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardingRuleIpProtocolOutput)
}

func (e ForwardingRuleIpProtocol) ToForwardingRuleIpProtocolPtrOutput() ForwardingRuleIpProtocolPtrOutput {
	return e.ToForwardingRuleIpProtocolPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleIpProtocol) ToForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleIpProtocolPtrOutput {
	return ForwardingRuleIpProtocol(e).ToForwardingRuleIpProtocolOutputWithContext(ctx).ToForwardingRuleIpProtocolPtrOutputWithContext(ctx)
}

func (e ForwardingRuleIpProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleIpProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleIpProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleIpProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardingRuleIpProtocolOutput struct{ *pulumi.OutputState }

func (ForwardingRuleIpProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleIpProtocol)(nil)).Elem()
}

func (o ForwardingRuleIpProtocolOutput) ToForwardingRuleIpProtocolOutput() ForwardingRuleIpProtocolOutput {
	return o
}

func (o ForwardingRuleIpProtocolOutput) ToForwardingRuleIpProtocolOutputWithContext(ctx context.Context) ForwardingRuleIpProtocolOutput {
	return o
}

func (o ForwardingRuleIpProtocolOutput) ToForwardingRuleIpProtocolPtrOutput() ForwardingRuleIpProtocolPtrOutput {
	return o.ToForwardingRuleIpProtocolPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleIpProtocolOutput) ToForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleIpProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRuleIpProtocol) *ForwardingRuleIpProtocol {
		return &v
	}).(ForwardingRuleIpProtocolPtrOutput)
}

func (o ForwardingRuleIpProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardingRuleIpProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleIpProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardingRuleIpProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleIpProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleIpProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardingRuleIpProtocolPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleIpProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleIpProtocol)(nil)).Elem()
}

func (o ForwardingRuleIpProtocolPtrOutput) ToForwardingRuleIpProtocolPtrOutput() ForwardingRuleIpProtocolPtrOutput {
	return o
}

func (o ForwardingRuleIpProtocolPtrOutput) ToForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleIpProtocolPtrOutput {
	return o
}

func (o ForwardingRuleIpProtocolPtrOutput) Elem() ForwardingRuleIpProtocolOutput {
	return o.ApplyT(func(v *ForwardingRuleIpProtocol) ForwardingRuleIpProtocol {
		if v != nil {
			return *v
		}
		var ret ForwardingRuleIpProtocol
		return ret
	}).(ForwardingRuleIpProtocolOutput)
}

func (o ForwardingRuleIpProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleIpProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardingRuleIpProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardingRuleIpProtocolInput is an input type that accepts ForwardingRuleIpProtocolArgs and ForwardingRuleIpProtocolOutput values.
// You can construct a concrete instance of `ForwardingRuleIpProtocolInput` via:
//
//          ForwardingRuleIpProtocolArgs{...}
type ForwardingRuleIpProtocolInput interface {
	pulumi.Input

	ToForwardingRuleIpProtocolOutput() ForwardingRuleIpProtocolOutput
	ToForwardingRuleIpProtocolOutputWithContext(context.Context) ForwardingRuleIpProtocolOutput
}

var forwardingRuleIpProtocolPtrType = reflect.TypeOf((**ForwardingRuleIpProtocol)(nil)).Elem()

type ForwardingRuleIpProtocolPtrInput interface {
	pulumi.Input

	ToForwardingRuleIpProtocolPtrOutput() ForwardingRuleIpProtocolPtrOutput
	ToForwardingRuleIpProtocolPtrOutputWithContext(context.Context) ForwardingRuleIpProtocolPtrOutput
}

type forwardingRuleIpProtocolPtr string

func ForwardingRuleIpProtocolPtr(v string) ForwardingRuleIpProtocolPtrInput {
	return (*forwardingRuleIpProtocolPtr)(&v)
}

func (*forwardingRuleIpProtocolPtr) ElementType() reflect.Type {
	return forwardingRuleIpProtocolPtrType
}

func (in *forwardingRuleIpProtocolPtr) ToForwardingRuleIpProtocolPtrOutput() ForwardingRuleIpProtocolPtrOutput {
	return pulumi.ToOutput(in).(ForwardingRuleIpProtocolPtrOutput)
}

func (in *forwardingRuleIpProtocolPtr) ToForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleIpProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardingRuleIpProtocolPtrOutput)
}

// The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for an external global forwarding rule.
type ForwardingRuleIpVersion string

const (
	ForwardingRuleIpVersionIpv4               = ForwardingRuleIpVersion("IPV4")
	ForwardingRuleIpVersionIpv6               = ForwardingRuleIpVersion("IPV6")
	ForwardingRuleIpVersionUnspecifiedVersion = ForwardingRuleIpVersion("UNSPECIFIED_VERSION")
)

func (ForwardingRuleIpVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleIpVersion)(nil)).Elem()
}

func (e ForwardingRuleIpVersion) ToForwardingRuleIpVersionOutput() ForwardingRuleIpVersionOutput {
	return pulumi.ToOutput(e).(ForwardingRuleIpVersionOutput)
}

func (e ForwardingRuleIpVersion) ToForwardingRuleIpVersionOutputWithContext(ctx context.Context) ForwardingRuleIpVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardingRuleIpVersionOutput)
}

func (e ForwardingRuleIpVersion) ToForwardingRuleIpVersionPtrOutput() ForwardingRuleIpVersionPtrOutput {
	return e.ToForwardingRuleIpVersionPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleIpVersion) ToForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) ForwardingRuleIpVersionPtrOutput {
	return ForwardingRuleIpVersion(e).ToForwardingRuleIpVersionOutputWithContext(ctx).ToForwardingRuleIpVersionPtrOutputWithContext(ctx)
}

func (e ForwardingRuleIpVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleIpVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleIpVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleIpVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardingRuleIpVersionOutput struct{ *pulumi.OutputState }

func (ForwardingRuleIpVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleIpVersion)(nil)).Elem()
}

func (o ForwardingRuleIpVersionOutput) ToForwardingRuleIpVersionOutput() ForwardingRuleIpVersionOutput {
	return o
}

func (o ForwardingRuleIpVersionOutput) ToForwardingRuleIpVersionOutputWithContext(ctx context.Context) ForwardingRuleIpVersionOutput {
	return o
}

func (o ForwardingRuleIpVersionOutput) ToForwardingRuleIpVersionPtrOutput() ForwardingRuleIpVersionPtrOutput {
	return o.ToForwardingRuleIpVersionPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleIpVersionOutput) ToForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) ForwardingRuleIpVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRuleIpVersion) *ForwardingRuleIpVersion {
		return &v
	}).(ForwardingRuleIpVersionPtrOutput)
}

func (o ForwardingRuleIpVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardingRuleIpVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleIpVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardingRuleIpVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleIpVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleIpVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardingRuleIpVersionPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleIpVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleIpVersion)(nil)).Elem()
}

func (o ForwardingRuleIpVersionPtrOutput) ToForwardingRuleIpVersionPtrOutput() ForwardingRuleIpVersionPtrOutput {
	return o
}

func (o ForwardingRuleIpVersionPtrOutput) ToForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) ForwardingRuleIpVersionPtrOutput {
	return o
}

func (o ForwardingRuleIpVersionPtrOutput) Elem() ForwardingRuleIpVersionOutput {
	return o.ApplyT(func(v *ForwardingRuleIpVersion) ForwardingRuleIpVersion {
		if v != nil {
			return *v
		}
		var ret ForwardingRuleIpVersion
		return ret
	}).(ForwardingRuleIpVersionOutput)
}

func (o ForwardingRuleIpVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleIpVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardingRuleIpVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardingRuleIpVersionInput is an input type that accepts ForwardingRuleIpVersionArgs and ForwardingRuleIpVersionOutput values.
// You can construct a concrete instance of `ForwardingRuleIpVersionInput` via:
//
//          ForwardingRuleIpVersionArgs{...}
type ForwardingRuleIpVersionInput interface {
	pulumi.Input

	ToForwardingRuleIpVersionOutput() ForwardingRuleIpVersionOutput
	ToForwardingRuleIpVersionOutputWithContext(context.Context) ForwardingRuleIpVersionOutput
}

var forwardingRuleIpVersionPtrType = reflect.TypeOf((**ForwardingRuleIpVersion)(nil)).Elem()

type ForwardingRuleIpVersionPtrInput interface {
	pulumi.Input

	ToForwardingRuleIpVersionPtrOutput() ForwardingRuleIpVersionPtrOutput
	ToForwardingRuleIpVersionPtrOutputWithContext(context.Context) ForwardingRuleIpVersionPtrOutput
}

type forwardingRuleIpVersionPtr string

func ForwardingRuleIpVersionPtr(v string) ForwardingRuleIpVersionPtrInput {
	return (*forwardingRuleIpVersionPtr)(&v)
}

func (*forwardingRuleIpVersionPtr) ElementType() reflect.Type {
	return forwardingRuleIpVersionPtrType
}

func (in *forwardingRuleIpVersionPtr) ToForwardingRuleIpVersionPtrOutput() ForwardingRuleIpVersionPtrOutput {
	return pulumi.ToOutput(in).(ForwardingRuleIpVersionPtrOutput)
}

func (in *forwardingRuleIpVersionPtr) ToForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) ForwardingRuleIpVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardingRuleIpVersionPtrOutput)
}

// Specifies the forwarding rule type. For more information about forwarding rules, refer to Forwarding rule concepts.
type ForwardingRuleLoadBalancingScheme string

const (
	ForwardingRuleLoadBalancingSchemeExternal            = ForwardingRuleLoadBalancingScheme("EXTERNAL")
	ForwardingRuleLoadBalancingSchemeExternalManaged     = ForwardingRuleLoadBalancingScheme("EXTERNAL_MANAGED")
	ForwardingRuleLoadBalancingSchemeInternal            = ForwardingRuleLoadBalancingScheme("INTERNAL")
	ForwardingRuleLoadBalancingSchemeInternalManaged     = ForwardingRuleLoadBalancingScheme("INTERNAL_MANAGED")
	ForwardingRuleLoadBalancingSchemeInternalSelfManaged = ForwardingRuleLoadBalancingScheme("INTERNAL_SELF_MANAGED")
	ForwardingRuleLoadBalancingSchemeInvalid             = ForwardingRuleLoadBalancingScheme("INVALID")
)

func (ForwardingRuleLoadBalancingScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleLoadBalancingScheme)(nil)).Elem()
}

func (e ForwardingRuleLoadBalancingScheme) ToForwardingRuleLoadBalancingSchemeOutput() ForwardingRuleLoadBalancingSchemeOutput {
	return pulumi.ToOutput(e).(ForwardingRuleLoadBalancingSchemeOutput)
}

func (e ForwardingRuleLoadBalancingScheme) ToForwardingRuleLoadBalancingSchemeOutputWithContext(ctx context.Context) ForwardingRuleLoadBalancingSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardingRuleLoadBalancingSchemeOutput)
}

func (e ForwardingRuleLoadBalancingScheme) ToForwardingRuleLoadBalancingSchemePtrOutput() ForwardingRuleLoadBalancingSchemePtrOutput {
	return e.ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (e ForwardingRuleLoadBalancingScheme) ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) ForwardingRuleLoadBalancingSchemePtrOutput {
	return ForwardingRuleLoadBalancingScheme(e).ToForwardingRuleLoadBalancingSchemeOutputWithContext(ctx).ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx)
}

func (e ForwardingRuleLoadBalancingScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleLoadBalancingScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleLoadBalancingScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleLoadBalancingScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardingRuleLoadBalancingSchemeOutput struct{ *pulumi.OutputState }

func (ForwardingRuleLoadBalancingSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleLoadBalancingScheme)(nil)).Elem()
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToForwardingRuleLoadBalancingSchemeOutput() ForwardingRuleLoadBalancingSchemeOutput {
	return o
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToForwardingRuleLoadBalancingSchemeOutputWithContext(ctx context.Context) ForwardingRuleLoadBalancingSchemeOutput {
	return o
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToForwardingRuleLoadBalancingSchemePtrOutput() ForwardingRuleLoadBalancingSchemePtrOutput {
	return o.ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) ForwardingRuleLoadBalancingSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRuleLoadBalancingScheme) *ForwardingRuleLoadBalancingScheme {
		return &v
	}).(ForwardingRuleLoadBalancingSchemePtrOutput)
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleLoadBalancingScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleLoadBalancingSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleLoadBalancingScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardingRuleLoadBalancingSchemePtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleLoadBalancingSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleLoadBalancingScheme)(nil)).Elem()
}

func (o ForwardingRuleLoadBalancingSchemePtrOutput) ToForwardingRuleLoadBalancingSchemePtrOutput() ForwardingRuleLoadBalancingSchemePtrOutput {
	return o
}

func (o ForwardingRuleLoadBalancingSchemePtrOutput) ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) ForwardingRuleLoadBalancingSchemePtrOutput {
	return o
}

func (o ForwardingRuleLoadBalancingSchemePtrOutput) Elem() ForwardingRuleLoadBalancingSchemeOutput {
	return o.ApplyT(func(v *ForwardingRuleLoadBalancingScheme) ForwardingRuleLoadBalancingScheme {
		if v != nil {
			return *v
		}
		var ret ForwardingRuleLoadBalancingScheme
		return ret
	}).(ForwardingRuleLoadBalancingSchemeOutput)
}

func (o ForwardingRuleLoadBalancingSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleLoadBalancingSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardingRuleLoadBalancingScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardingRuleLoadBalancingSchemeInput is an input type that accepts ForwardingRuleLoadBalancingSchemeArgs and ForwardingRuleLoadBalancingSchemeOutput values.
// You can construct a concrete instance of `ForwardingRuleLoadBalancingSchemeInput` via:
//
//          ForwardingRuleLoadBalancingSchemeArgs{...}
type ForwardingRuleLoadBalancingSchemeInput interface {
	pulumi.Input

	ToForwardingRuleLoadBalancingSchemeOutput() ForwardingRuleLoadBalancingSchemeOutput
	ToForwardingRuleLoadBalancingSchemeOutputWithContext(context.Context) ForwardingRuleLoadBalancingSchemeOutput
}

var forwardingRuleLoadBalancingSchemePtrType = reflect.TypeOf((**ForwardingRuleLoadBalancingScheme)(nil)).Elem()

type ForwardingRuleLoadBalancingSchemePtrInput interface {
	pulumi.Input

	ToForwardingRuleLoadBalancingSchemePtrOutput() ForwardingRuleLoadBalancingSchemePtrOutput
	ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(context.Context) ForwardingRuleLoadBalancingSchemePtrOutput
}

type forwardingRuleLoadBalancingSchemePtr string

func ForwardingRuleLoadBalancingSchemePtr(v string) ForwardingRuleLoadBalancingSchemePtrInput {
	return (*forwardingRuleLoadBalancingSchemePtr)(&v)
}

func (*forwardingRuleLoadBalancingSchemePtr) ElementType() reflect.Type {
	return forwardingRuleLoadBalancingSchemePtrType
}

func (in *forwardingRuleLoadBalancingSchemePtr) ToForwardingRuleLoadBalancingSchemePtrOutput() ForwardingRuleLoadBalancingSchemePtrOutput {
	return pulumi.ToOutput(in).(ForwardingRuleLoadBalancingSchemePtrOutput)
}

func (in *forwardingRuleLoadBalancingSchemePtr) ToForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) ForwardingRuleLoadBalancingSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardingRuleLoadBalancingSchemePtrOutput)
}

// This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM, STANDARD. For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM. If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address.
type ForwardingRuleNetworkTier string

const (
	// Public internet quality with fixed bandwidth.
	ForwardingRuleNetworkTierFixedStandard = ForwardingRuleNetworkTier("FIXED_STANDARD")
	// High quality, Google-grade network tier, support for all networking products.
	ForwardingRuleNetworkTierPremium = ForwardingRuleNetworkTier("PREMIUM")
	// Price competitive network tier, support for all networking products.
	ForwardingRuleNetworkTierSelect = ForwardingRuleNetworkTier("SELECT")
	// Public internet quality, only limited support for other networking products.
	ForwardingRuleNetworkTierStandard = ForwardingRuleNetworkTier("STANDARD")
	// (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
	ForwardingRuleNetworkTierStandardOverridesFixedStandard = ForwardingRuleNetworkTier("STANDARD_OVERRIDES_FIXED_STANDARD")
)

func (ForwardingRuleNetworkTier) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleNetworkTier)(nil)).Elem()
}

func (e ForwardingRuleNetworkTier) ToForwardingRuleNetworkTierOutput() ForwardingRuleNetworkTierOutput {
	return pulumi.ToOutput(e).(ForwardingRuleNetworkTierOutput)
}

func (e ForwardingRuleNetworkTier) ToForwardingRuleNetworkTierOutputWithContext(ctx context.Context) ForwardingRuleNetworkTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardingRuleNetworkTierOutput)
}

func (e ForwardingRuleNetworkTier) ToForwardingRuleNetworkTierPtrOutput() ForwardingRuleNetworkTierPtrOutput {
	return e.ToForwardingRuleNetworkTierPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleNetworkTier) ToForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) ForwardingRuleNetworkTierPtrOutput {
	return ForwardingRuleNetworkTier(e).ToForwardingRuleNetworkTierOutputWithContext(ctx).ToForwardingRuleNetworkTierPtrOutputWithContext(ctx)
}

func (e ForwardingRuleNetworkTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleNetworkTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleNetworkTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleNetworkTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardingRuleNetworkTierOutput struct{ *pulumi.OutputState }

func (ForwardingRuleNetworkTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleNetworkTier)(nil)).Elem()
}

func (o ForwardingRuleNetworkTierOutput) ToForwardingRuleNetworkTierOutput() ForwardingRuleNetworkTierOutput {
	return o
}

func (o ForwardingRuleNetworkTierOutput) ToForwardingRuleNetworkTierOutputWithContext(ctx context.Context) ForwardingRuleNetworkTierOutput {
	return o
}

func (o ForwardingRuleNetworkTierOutput) ToForwardingRuleNetworkTierPtrOutput() ForwardingRuleNetworkTierPtrOutput {
	return o.ToForwardingRuleNetworkTierPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleNetworkTierOutput) ToForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) ForwardingRuleNetworkTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRuleNetworkTier) *ForwardingRuleNetworkTier {
		return &v
	}).(ForwardingRuleNetworkTierPtrOutput)
}

func (o ForwardingRuleNetworkTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardingRuleNetworkTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleNetworkTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardingRuleNetworkTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleNetworkTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleNetworkTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardingRuleNetworkTierPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleNetworkTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleNetworkTier)(nil)).Elem()
}

func (o ForwardingRuleNetworkTierPtrOutput) ToForwardingRuleNetworkTierPtrOutput() ForwardingRuleNetworkTierPtrOutput {
	return o
}

func (o ForwardingRuleNetworkTierPtrOutput) ToForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) ForwardingRuleNetworkTierPtrOutput {
	return o
}

func (o ForwardingRuleNetworkTierPtrOutput) Elem() ForwardingRuleNetworkTierOutput {
	return o.ApplyT(func(v *ForwardingRuleNetworkTier) ForwardingRuleNetworkTier {
		if v != nil {
			return *v
		}
		var ret ForwardingRuleNetworkTier
		return ret
	}).(ForwardingRuleNetworkTierOutput)
}

func (o ForwardingRuleNetworkTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleNetworkTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardingRuleNetworkTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardingRuleNetworkTierInput is an input type that accepts ForwardingRuleNetworkTierArgs and ForwardingRuleNetworkTierOutput values.
// You can construct a concrete instance of `ForwardingRuleNetworkTierInput` via:
//
//          ForwardingRuleNetworkTierArgs{...}
type ForwardingRuleNetworkTierInput interface {
	pulumi.Input

	ToForwardingRuleNetworkTierOutput() ForwardingRuleNetworkTierOutput
	ToForwardingRuleNetworkTierOutputWithContext(context.Context) ForwardingRuleNetworkTierOutput
}

var forwardingRuleNetworkTierPtrType = reflect.TypeOf((**ForwardingRuleNetworkTier)(nil)).Elem()

type ForwardingRuleNetworkTierPtrInput interface {
	pulumi.Input

	ToForwardingRuleNetworkTierPtrOutput() ForwardingRuleNetworkTierPtrOutput
	ToForwardingRuleNetworkTierPtrOutputWithContext(context.Context) ForwardingRuleNetworkTierPtrOutput
}

type forwardingRuleNetworkTierPtr string

func ForwardingRuleNetworkTierPtr(v string) ForwardingRuleNetworkTierPtrInput {
	return (*forwardingRuleNetworkTierPtr)(&v)
}

func (*forwardingRuleNetworkTierPtr) ElementType() reflect.Type {
	return forwardingRuleNetworkTierPtrType
}

func (in *forwardingRuleNetworkTierPtr) ToForwardingRuleNetworkTierPtrOutput() ForwardingRuleNetworkTierPtrOutput {
	return pulumi.ToOutput(in).(ForwardingRuleNetworkTierPtrOutput)
}

func (in *forwardingRuleNetworkTierPtr) ToForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) ForwardingRuleNetworkTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardingRuleNetworkTierPtrOutput)
}

type ForwardingRulePscConnectionStatus string

const (
	// The connection has been accepted by the producer.
	ForwardingRulePscConnectionStatusAccepted = ForwardingRulePscConnectionStatus("ACCEPTED")
	// The connection has been closed by the producer and will not serve traffic going forward.
	ForwardingRulePscConnectionStatusClosed = ForwardingRulePscConnectionStatus("CLOSED")
	// The connection is pending acceptance by the producer.
	ForwardingRulePscConnectionStatusPending = ForwardingRulePscConnectionStatus("PENDING")
	// The connection has been rejected by the producer.
	ForwardingRulePscConnectionStatusRejected          = ForwardingRulePscConnectionStatus("REJECTED")
	ForwardingRulePscConnectionStatusStatusUnspecified = ForwardingRulePscConnectionStatus("STATUS_UNSPECIFIED")
)

func (ForwardingRulePscConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRulePscConnectionStatus)(nil)).Elem()
}

func (e ForwardingRulePscConnectionStatus) ToForwardingRulePscConnectionStatusOutput() ForwardingRulePscConnectionStatusOutput {
	return pulumi.ToOutput(e).(ForwardingRulePscConnectionStatusOutput)
}

func (e ForwardingRulePscConnectionStatus) ToForwardingRulePscConnectionStatusOutputWithContext(ctx context.Context) ForwardingRulePscConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardingRulePscConnectionStatusOutput)
}

func (e ForwardingRulePscConnectionStatus) ToForwardingRulePscConnectionStatusPtrOutput() ForwardingRulePscConnectionStatusPtrOutput {
	return e.ToForwardingRulePscConnectionStatusPtrOutputWithContext(context.Background())
}

func (e ForwardingRulePscConnectionStatus) ToForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) ForwardingRulePscConnectionStatusPtrOutput {
	return ForwardingRulePscConnectionStatus(e).ToForwardingRulePscConnectionStatusOutputWithContext(ctx).ToForwardingRulePscConnectionStatusPtrOutputWithContext(ctx)
}

func (e ForwardingRulePscConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRulePscConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRulePscConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardingRulePscConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardingRulePscConnectionStatusOutput struct{ *pulumi.OutputState }

func (ForwardingRulePscConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRulePscConnectionStatus)(nil)).Elem()
}

func (o ForwardingRulePscConnectionStatusOutput) ToForwardingRulePscConnectionStatusOutput() ForwardingRulePscConnectionStatusOutput {
	return o
}

func (o ForwardingRulePscConnectionStatusOutput) ToForwardingRulePscConnectionStatusOutputWithContext(ctx context.Context) ForwardingRulePscConnectionStatusOutput {
	return o
}

func (o ForwardingRulePscConnectionStatusOutput) ToForwardingRulePscConnectionStatusPtrOutput() ForwardingRulePscConnectionStatusPtrOutput {
	return o.ToForwardingRulePscConnectionStatusPtrOutputWithContext(context.Background())
}

func (o ForwardingRulePscConnectionStatusOutput) ToForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) ForwardingRulePscConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRulePscConnectionStatus) *ForwardingRulePscConnectionStatus {
		return &v
	}).(ForwardingRulePscConnectionStatusPtrOutput)
}

func (o ForwardingRulePscConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardingRulePscConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRulePscConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardingRulePscConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRulePscConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRulePscConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardingRulePscConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRulePscConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRulePscConnectionStatus)(nil)).Elem()
}

func (o ForwardingRulePscConnectionStatusPtrOutput) ToForwardingRulePscConnectionStatusPtrOutput() ForwardingRulePscConnectionStatusPtrOutput {
	return o
}

func (o ForwardingRulePscConnectionStatusPtrOutput) ToForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) ForwardingRulePscConnectionStatusPtrOutput {
	return o
}

func (o ForwardingRulePscConnectionStatusPtrOutput) Elem() ForwardingRulePscConnectionStatusOutput {
	return o.ApplyT(func(v *ForwardingRulePscConnectionStatus) ForwardingRulePscConnectionStatus {
		if v != nil {
			return *v
		}
		var ret ForwardingRulePscConnectionStatus
		return ret
	}).(ForwardingRulePscConnectionStatusOutput)
}

func (o ForwardingRulePscConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRulePscConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardingRulePscConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardingRulePscConnectionStatusInput is an input type that accepts ForwardingRulePscConnectionStatusArgs and ForwardingRulePscConnectionStatusOutput values.
// You can construct a concrete instance of `ForwardingRulePscConnectionStatusInput` via:
//
//          ForwardingRulePscConnectionStatusArgs{...}
type ForwardingRulePscConnectionStatusInput interface {
	pulumi.Input

	ToForwardingRulePscConnectionStatusOutput() ForwardingRulePscConnectionStatusOutput
	ToForwardingRulePscConnectionStatusOutputWithContext(context.Context) ForwardingRulePscConnectionStatusOutput
}

var forwardingRulePscConnectionStatusPtrType = reflect.TypeOf((**ForwardingRulePscConnectionStatus)(nil)).Elem()

type ForwardingRulePscConnectionStatusPtrInput interface {
	pulumi.Input

	ToForwardingRulePscConnectionStatusPtrOutput() ForwardingRulePscConnectionStatusPtrOutput
	ToForwardingRulePscConnectionStatusPtrOutputWithContext(context.Context) ForwardingRulePscConnectionStatusPtrOutput
}

type forwardingRulePscConnectionStatusPtr string

func ForwardingRulePscConnectionStatusPtr(v string) ForwardingRulePscConnectionStatusPtrInput {
	return (*forwardingRulePscConnectionStatusPtr)(&v)
}

func (*forwardingRulePscConnectionStatusPtr) ElementType() reflect.Type {
	return forwardingRulePscConnectionStatusPtrType
}

func (in *forwardingRulePscConnectionStatusPtr) ToForwardingRulePscConnectionStatusPtrOutput() ForwardingRulePscConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(ForwardingRulePscConnectionStatusPtrOutput)
}

func (in *forwardingRulePscConnectionStatusPtr) ToForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) ForwardingRulePscConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardingRulePscConnectionStatusPtrOutput)
}

// Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, gRPC health check follows behavior specified in port and portName fields.
type GRPCHealthCheckPortSpecification string

const (
	// The port number in port is used for health checking.
	GRPCHealthCheckPortSpecificationUseFixedPort = GRPCHealthCheckPortSpecification("USE_FIXED_PORT")
	// The portName is used for health checking.
	GRPCHealthCheckPortSpecificationUseNamedPort = GRPCHealthCheckPortSpecification("USE_NAMED_PORT")
	// For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
	GRPCHealthCheckPortSpecificationUseServingPort = GRPCHealthCheckPortSpecification("USE_SERVING_PORT")
)

func (GRPCHealthCheckPortSpecification) ElementType() reflect.Type {
	return reflect.TypeOf((*GRPCHealthCheckPortSpecification)(nil)).Elem()
}

func (e GRPCHealthCheckPortSpecification) ToGRPCHealthCheckPortSpecificationOutput() GRPCHealthCheckPortSpecificationOutput {
	return pulumi.ToOutput(e).(GRPCHealthCheckPortSpecificationOutput)
}

func (e GRPCHealthCheckPortSpecification) ToGRPCHealthCheckPortSpecificationOutputWithContext(ctx context.Context) GRPCHealthCheckPortSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GRPCHealthCheckPortSpecificationOutput)
}

func (e GRPCHealthCheckPortSpecification) ToGRPCHealthCheckPortSpecificationPtrOutput() GRPCHealthCheckPortSpecificationPtrOutput {
	return e.ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (e GRPCHealthCheckPortSpecification) ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) GRPCHealthCheckPortSpecificationPtrOutput {
	return GRPCHealthCheckPortSpecification(e).ToGRPCHealthCheckPortSpecificationOutputWithContext(ctx).ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(ctx)
}

func (e GRPCHealthCheckPortSpecification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GRPCHealthCheckPortSpecification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GRPCHealthCheckPortSpecification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GRPCHealthCheckPortSpecification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GRPCHealthCheckPortSpecificationOutput struct{ *pulumi.OutputState }

func (GRPCHealthCheckPortSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GRPCHealthCheckPortSpecification)(nil)).Elem()
}

func (o GRPCHealthCheckPortSpecificationOutput) ToGRPCHealthCheckPortSpecificationOutput() GRPCHealthCheckPortSpecificationOutput {
	return o
}

func (o GRPCHealthCheckPortSpecificationOutput) ToGRPCHealthCheckPortSpecificationOutputWithContext(ctx context.Context) GRPCHealthCheckPortSpecificationOutput {
	return o
}

func (o GRPCHealthCheckPortSpecificationOutput) ToGRPCHealthCheckPortSpecificationPtrOutput() GRPCHealthCheckPortSpecificationPtrOutput {
	return o.ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (o GRPCHealthCheckPortSpecificationOutput) ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) GRPCHealthCheckPortSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GRPCHealthCheckPortSpecification) *GRPCHealthCheckPortSpecification {
		return &v
	}).(GRPCHealthCheckPortSpecificationPtrOutput)
}

func (o GRPCHealthCheckPortSpecificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GRPCHealthCheckPortSpecificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GRPCHealthCheckPortSpecification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GRPCHealthCheckPortSpecificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GRPCHealthCheckPortSpecificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GRPCHealthCheckPortSpecification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GRPCHealthCheckPortSpecificationPtrOutput struct{ *pulumi.OutputState }

func (GRPCHealthCheckPortSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GRPCHealthCheckPortSpecification)(nil)).Elem()
}

func (o GRPCHealthCheckPortSpecificationPtrOutput) ToGRPCHealthCheckPortSpecificationPtrOutput() GRPCHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o GRPCHealthCheckPortSpecificationPtrOutput) ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) GRPCHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o GRPCHealthCheckPortSpecificationPtrOutput) Elem() GRPCHealthCheckPortSpecificationOutput {
	return o.ApplyT(func(v *GRPCHealthCheckPortSpecification) GRPCHealthCheckPortSpecification {
		if v != nil {
			return *v
		}
		var ret GRPCHealthCheckPortSpecification
		return ret
	}).(GRPCHealthCheckPortSpecificationOutput)
}

func (o GRPCHealthCheckPortSpecificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GRPCHealthCheckPortSpecificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GRPCHealthCheckPortSpecification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GRPCHealthCheckPortSpecificationInput is an input type that accepts GRPCHealthCheckPortSpecificationArgs and GRPCHealthCheckPortSpecificationOutput values.
// You can construct a concrete instance of `GRPCHealthCheckPortSpecificationInput` via:
//
//          GRPCHealthCheckPortSpecificationArgs{...}
type GRPCHealthCheckPortSpecificationInput interface {
	pulumi.Input

	ToGRPCHealthCheckPortSpecificationOutput() GRPCHealthCheckPortSpecificationOutput
	ToGRPCHealthCheckPortSpecificationOutputWithContext(context.Context) GRPCHealthCheckPortSpecificationOutput
}

var grpchealthCheckPortSpecificationPtrType = reflect.TypeOf((**GRPCHealthCheckPortSpecification)(nil)).Elem()

type GRPCHealthCheckPortSpecificationPtrInput interface {
	pulumi.Input

	ToGRPCHealthCheckPortSpecificationPtrOutput() GRPCHealthCheckPortSpecificationPtrOutput
	ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(context.Context) GRPCHealthCheckPortSpecificationPtrOutput
}

type grpchealthCheckPortSpecificationPtr string

func GRPCHealthCheckPortSpecificationPtr(v string) GRPCHealthCheckPortSpecificationPtrInput {
	return (*grpchealthCheckPortSpecificationPtr)(&v)
}

func (*grpchealthCheckPortSpecificationPtr) ElementType() reflect.Type {
	return grpchealthCheckPortSpecificationPtrType
}

func (in *grpchealthCheckPortSpecificationPtr) ToGRPCHealthCheckPortSpecificationPtrOutput() GRPCHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutput(in).(GRPCHealthCheckPortSpecificationPtrOutput)
}

func (in *grpchealthCheckPortSpecificationPtr) ToGRPCHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) GRPCHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GRPCHealthCheckPortSpecificationPtrOutput)
}

// The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
type GlobalAddressAddressType string

const (
	// DNS resolver address in the subnetwork.
	GlobalAddressAddressTypeDnsForwarding = GlobalAddressAddressType("DNS_FORWARDING")
	// A publicly visible external IP address.
	GlobalAddressAddressTypeExternal = GlobalAddressAddressType("EXTERNAL")
	// A private network IP address, for use with an Instance or Internal Load Balancer forwarding rule.
	GlobalAddressAddressTypeInternal        = GlobalAddressAddressType("INTERNAL")
	GlobalAddressAddressTypeUnspecifiedType = GlobalAddressAddressType("UNSPECIFIED_TYPE")
)

func (GlobalAddressAddressType) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressAddressType)(nil)).Elem()
}

func (e GlobalAddressAddressType) ToGlobalAddressAddressTypeOutput() GlobalAddressAddressTypeOutput {
	return pulumi.ToOutput(e).(GlobalAddressAddressTypeOutput)
}

func (e GlobalAddressAddressType) ToGlobalAddressAddressTypeOutputWithContext(ctx context.Context) GlobalAddressAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalAddressAddressTypeOutput)
}

func (e GlobalAddressAddressType) ToGlobalAddressAddressTypePtrOutput() GlobalAddressAddressTypePtrOutput {
	return e.ToGlobalAddressAddressTypePtrOutputWithContext(context.Background())
}

func (e GlobalAddressAddressType) ToGlobalAddressAddressTypePtrOutputWithContext(ctx context.Context) GlobalAddressAddressTypePtrOutput {
	return GlobalAddressAddressType(e).ToGlobalAddressAddressTypeOutputWithContext(ctx).ToGlobalAddressAddressTypePtrOutputWithContext(ctx)
}

func (e GlobalAddressAddressType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressAddressType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressAddressType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalAddressAddressType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalAddressAddressTypeOutput struct{ *pulumi.OutputState }

func (GlobalAddressAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressAddressType)(nil)).Elem()
}

func (o GlobalAddressAddressTypeOutput) ToGlobalAddressAddressTypeOutput() GlobalAddressAddressTypeOutput {
	return o
}

func (o GlobalAddressAddressTypeOutput) ToGlobalAddressAddressTypeOutputWithContext(ctx context.Context) GlobalAddressAddressTypeOutput {
	return o
}

func (o GlobalAddressAddressTypeOutput) ToGlobalAddressAddressTypePtrOutput() GlobalAddressAddressTypePtrOutput {
	return o.ToGlobalAddressAddressTypePtrOutputWithContext(context.Background())
}

func (o GlobalAddressAddressTypeOutput) ToGlobalAddressAddressTypePtrOutputWithContext(ctx context.Context) GlobalAddressAddressTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalAddressAddressType) *GlobalAddressAddressType {
		return &v
	}).(GlobalAddressAddressTypePtrOutput)
}

func (o GlobalAddressAddressTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalAddressAddressTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressAddressType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalAddressAddressTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressAddressTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressAddressType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalAddressAddressTypePtrOutput struct{ *pulumi.OutputState }

func (GlobalAddressAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalAddressAddressType)(nil)).Elem()
}

func (o GlobalAddressAddressTypePtrOutput) ToGlobalAddressAddressTypePtrOutput() GlobalAddressAddressTypePtrOutput {
	return o
}

func (o GlobalAddressAddressTypePtrOutput) ToGlobalAddressAddressTypePtrOutputWithContext(ctx context.Context) GlobalAddressAddressTypePtrOutput {
	return o
}

func (o GlobalAddressAddressTypePtrOutput) Elem() GlobalAddressAddressTypeOutput {
	return o.ApplyT(func(v *GlobalAddressAddressType) GlobalAddressAddressType {
		if v != nil {
			return *v
		}
		var ret GlobalAddressAddressType
		return ret
	}).(GlobalAddressAddressTypeOutput)
}

func (o GlobalAddressAddressTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressAddressTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalAddressAddressType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalAddressAddressTypeInput is an input type that accepts GlobalAddressAddressTypeArgs and GlobalAddressAddressTypeOutput values.
// You can construct a concrete instance of `GlobalAddressAddressTypeInput` via:
//
//          GlobalAddressAddressTypeArgs{...}
type GlobalAddressAddressTypeInput interface {
	pulumi.Input

	ToGlobalAddressAddressTypeOutput() GlobalAddressAddressTypeOutput
	ToGlobalAddressAddressTypeOutputWithContext(context.Context) GlobalAddressAddressTypeOutput
}

var globalAddressAddressTypePtrType = reflect.TypeOf((**GlobalAddressAddressType)(nil)).Elem()

type GlobalAddressAddressTypePtrInput interface {
	pulumi.Input

	ToGlobalAddressAddressTypePtrOutput() GlobalAddressAddressTypePtrOutput
	ToGlobalAddressAddressTypePtrOutputWithContext(context.Context) GlobalAddressAddressTypePtrOutput
}

type globalAddressAddressTypePtr string

func GlobalAddressAddressTypePtr(v string) GlobalAddressAddressTypePtrInput {
	return (*globalAddressAddressTypePtr)(&v)
}

func (*globalAddressAddressTypePtr) ElementType() reflect.Type {
	return globalAddressAddressTypePtrType
}

func (in *globalAddressAddressTypePtr) ToGlobalAddressAddressTypePtrOutput() GlobalAddressAddressTypePtrOutput {
	return pulumi.ToOutput(in).(GlobalAddressAddressTypePtrOutput)
}

func (in *globalAddressAddressTypePtr) ToGlobalAddressAddressTypePtrOutputWithContext(ctx context.Context) GlobalAddressAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalAddressAddressTypePtrOutput)
}

// The IP version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
type GlobalAddressIpVersion string

const (
	GlobalAddressIpVersionIpv4               = GlobalAddressIpVersion("IPV4")
	GlobalAddressIpVersionIpv6               = GlobalAddressIpVersion("IPV6")
	GlobalAddressIpVersionUnspecifiedVersion = GlobalAddressIpVersion("UNSPECIFIED_VERSION")
)

func (GlobalAddressIpVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressIpVersion)(nil)).Elem()
}

func (e GlobalAddressIpVersion) ToGlobalAddressIpVersionOutput() GlobalAddressIpVersionOutput {
	return pulumi.ToOutput(e).(GlobalAddressIpVersionOutput)
}

func (e GlobalAddressIpVersion) ToGlobalAddressIpVersionOutputWithContext(ctx context.Context) GlobalAddressIpVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalAddressIpVersionOutput)
}

func (e GlobalAddressIpVersion) ToGlobalAddressIpVersionPtrOutput() GlobalAddressIpVersionPtrOutput {
	return e.ToGlobalAddressIpVersionPtrOutputWithContext(context.Background())
}

func (e GlobalAddressIpVersion) ToGlobalAddressIpVersionPtrOutputWithContext(ctx context.Context) GlobalAddressIpVersionPtrOutput {
	return GlobalAddressIpVersion(e).ToGlobalAddressIpVersionOutputWithContext(ctx).ToGlobalAddressIpVersionPtrOutputWithContext(ctx)
}

func (e GlobalAddressIpVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressIpVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressIpVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalAddressIpVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalAddressIpVersionOutput struct{ *pulumi.OutputState }

func (GlobalAddressIpVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressIpVersion)(nil)).Elem()
}

func (o GlobalAddressIpVersionOutput) ToGlobalAddressIpVersionOutput() GlobalAddressIpVersionOutput {
	return o
}

func (o GlobalAddressIpVersionOutput) ToGlobalAddressIpVersionOutputWithContext(ctx context.Context) GlobalAddressIpVersionOutput {
	return o
}

func (o GlobalAddressIpVersionOutput) ToGlobalAddressIpVersionPtrOutput() GlobalAddressIpVersionPtrOutput {
	return o.ToGlobalAddressIpVersionPtrOutputWithContext(context.Background())
}

func (o GlobalAddressIpVersionOutput) ToGlobalAddressIpVersionPtrOutputWithContext(ctx context.Context) GlobalAddressIpVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalAddressIpVersion) *GlobalAddressIpVersion {
		return &v
	}).(GlobalAddressIpVersionPtrOutput)
}

func (o GlobalAddressIpVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalAddressIpVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressIpVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalAddressIpVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressIpVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressIpVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalAddressIpVersionPtrOutput struct{ *pulumi.OutputState }

func (GlobalAddressIpVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalAddressIpVersion)(nil)).Elem()
}

func (o GlobalAddressIpVersionPtrOutput) ToGlobalAddressIpVersionPtrOutput() GlobalAddressIpVersionPtrOutput {
	return o
}

func (o GlobalAddressIpVersionPtrOutput) ToGlobalAddressIpVersionPtrOutputWithContext(ctx context.Context) GlobalAddressIpVersionPtrOutput {
	return o
}

func (o GlobalAddressIpVersionPtrOutput) Elem() GlobalAddressIpVersionOutput {
	return o.ApplyT(func(v *GlobalAddressIpVersion) GlobalAddressIpVersion {
		if v != nil {
			return *v
		}
		var ret GlobalAddressIpVersion
		return ret
	}).(GlobalAddressIpVersionOutput)
}

func (o GlobalAddressIpVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressIpVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalAddressIpVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalAddressIpVersionInput is an input type that accepts GlobalAddressIpVersionArgs and GlobalAddressIpVersionOutput values.
// You can construct a concrete instance of `GlobalAddressIpVersionInput` via:
//
//          GlobalAddressIpVersionArgs{...}
type GlobalAddressIpVersionInput interface {
	pulumi.Input

	ToGlobalAddressIpVersionOutput() GlobalAddressIpVersionOutput
	ToGlobalAddressIpVersionOutputWithContext(context.Context) GlobalAddressIpVersionOutput
}

var globalAddressIpVersionPtrType = reflect.TypeOf((**GlobalAddressIpVersion)(nil)).Elem()

type GlobalAddressIpVersionPtrInput interface {
	pulumi.Input

	ToGlobalAddressIpVersionPtrOutput() GlobalAddressIpVersionPtrOutput
	ToGlobalAddressIpVersionPtrOutputWithContext(context.Context) GlobalAddressIpVersionPtrOutput
}

type globalAddressIpVersionPtr string

func GlobalAddressIpVersionPtr(v string) GlobalAddressIpVersionPtrInput {
	return (*globalAddressIpVersionPtr)(&v)
}

func (*globalAddressIpVersionPtr) ElementType() reflect.Type {
	return globalAddressIpVersionPtrType
}

func (in *globalAddressIpVersionPtr) ToGlobalAddressIpVersionPtrOutput() GlobalAddressIpVersionPtrOutput {
	return pulumi.ToOutput(in).(GlobalAddressIpVersionPtrOutput)
}

func (in *globalAddressIpVersionPtr) ToGlobalAddressIpVersionPtrOutputWithContext(ctx context.Context) GlobalAddressIpVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalAddressIpVersionPtrOutput)
}

// The endpoint type of this address, which should be VM. This is used for deciding which endpoint this address will be assigned to during the IPv6 external IP address reservation.
type GlobalAddressIpv6EndpointType string

const (
	// Reserved IPv6 address will be assigned to VM.
	GlobalAddressIpv6EndpointTypeVm = GlobalAddressIpv6EndpointType("VM")
)

func (GlobalAddressIpv6EndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressIpv6EndpointType)(nil)).Elem()
}

func (e GlobalAddressIpv6EndpointType) ToGlobalAddressIpv6EndpointTypeOutput() GlobalAddressIpv6EndpointTypeOutput {
	return pulumi.ToOutput(e).(GlobalAddressIpv6EndpointTypeOutput)
}

func (e GlobalAddressIpv6EndpointType) ToGlobalAddressIpv6EndpointTypeOutputWithContext(ctx context.Context) GlobalAddressIpv6EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalAddressIpv6EndpointTypeOutput)
}

func (e GlobalAddressIpv6EndpointType) ToGlobalAddressIpv6EndpointTypePtrOutput() GlobalAddressIpv6EndpointTypePtrOutput {
	return e.ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(context.Background())
}

func (e GlobalAddressIpv6EndpointType) ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) GlobalAddressIpv6EndpointTypePtrOutput {
	return GlobalAddressIpv6EndpointType(e).ToGlobalAddressIpv6EndpointTypeOutputWithContext(ctx).ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(ctx)
}

func (e GlobalAddressIpv6EndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressIpv6EndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressIpv6EndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalAddressIpv6EndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalAddressIpv6EndpointTypeOutput struct{ *pulumi.OutputState }

func (GlobalAddressIpv6EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressIpv6EndpointType)(nil)).Elem()
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToGlobalAddressIpv6EndpointTypeOutput() GlobalAddressIpv6EndpointTypeOutput {
	return o
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToGlobalAddressIpv6EndpointTypeOutputWithContext(ctx context.Context) GlobalAddressIpv6EndpointTypeOutput {
	return o
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToGlobalAddressIpv6EndpointTypePtrOutput() GlobalAddressIpv6EndpointTypePtrOutput {
	return o.ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(context.Background())
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) GlobalAddressIpv6EndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalAddressIpv6EndpointType) *GlobalAddressIpv6EndpointType {
		return &v
	}).(GlobalAddressIpv6EndpointTypePtrOutput)
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressIpv6EndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressIpv6EndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressIpv6EndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalAddressIpv6EndpointTypePtrOutput struct{ *pulumi.OutputState }

func (GlobalAddressIpv6EndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalAddressIpv6EndpointType)(nil)).Elem()
}

func (o GlobalAddressIpv6EndpointTypePtrOutput) ToGlobalAddressIpv6EndpointTypePtrOutput() GlobalAddressIpv6EndpointTypePtrOutput {
	return o
}

func (o GlobalAddressIpv6EndpointTypePtrOutput) ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) GlobalAddressIpv6EndpointTypePtrOutput {
	return o
}

func (o GlobalAddressIpv6EndpointTypePtrOutput) Elem() GlobalAddressIpv6EndpointTypeOutput {
	return o.ApplyT(func(v *GlobalAddressIpv6EndpointType) GlobalAddressIpv6EndpointType {
		if v != nil {
			return *v
		}
		var ret GlobalAddressIpv6EndpointType
		return ret
	}).(GlobalAddressIpv6EndpointTypeOutput)
}

func (o GlobalAddressIpv6EndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressIpv6EndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalAddressIpv6EndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalAddressIpv6EndpointTypeInput is an input type that accepts GlobalAddressIpv6EndpointTypeArgs and GlobalAddressIpv6EndpointTypeOutput values.
// You can construct a concrete instance of `GlobalAddressIpv6EndpointTypeInput` via:
//
//          GlobalAddressIpv6EndpointTypeArgs{...}
type GlobalAddressIpv6EndpointTypeInput interface {
	pulumi.Input

	ToGlobalAddressIpv6EndpointTypeOutput() GlobalAddressIpv6EndpointTypeOutput
	ToGlobalAddressIpv6EndpointTypeOutputWithContext(context.Context) GlobalAddressIpv6EndpointTypeOutput
}

var globalAddressIpv6EndpointTypePtrType = reflect.TypeOf((**GlobalAddressIpv6EndpointType)(nil)).Elem()

type GlobalAddressIpv6EndpointTypePtrInput interface {
	pulumi.Input

	ToGlobalAddressIpv6EndpointTypePtrOutput() GlobalAddressIpv6EndpointTypePtrOutput
	ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(context.Context) GlobalAddressIpv6EndpointTypePtrOutput
}

type globalAddressIpv6EndpointTypePtr string

func GlobalAddressIpv6EndpointTypePtr(v string) GlobalAddressIpv6EndpointTypePtrInput {
	return (*globalAddressIpv6EndpointTypePtr)(&v)
}

func (*globalAddressIpv6EndpointTypePtr) ElementType() reflect.Type {
	return globalAddressIpv6EndpointTypePtrType
}

func (in *globalAddressIpv6EndpointTypePtr) ToGlobalAddressIpv6EndpointTypePtrOutput() GlobalAddressIpv6EndpointTypePtrOutput {
	return pulumi.ToOutput(in).(GlobalAddressIpv6EndpointTypePtrOutput)
}

func (in *globalAddressIpv6EndpointTypePtr) ToGlobalAddressIpv6EndpointTypePtrOutputWithContext(ctx context.Context) GlobalAddressIpv6EndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalAddressIpv6EndpointTypePtrOutput)
}

// This signifies the networking tier used for configuring this address and can only take the following values: PREMIUM or STANDARD. Internal IP addresses are always Premium Tier; global external IP addresses are always Premium Tier; regional external IP addresses can be either Standard or Premium Tier. If this field is not specified, it is assumed to be PREMIUM.
type GlobalAddressNetworkTier string

const (
	// Public internet quality with fixed bandwidth.
	GlobalAddressNetworkTierFixedStandard = GlobalAddressNetworkTier("FIXED_STANDARD")
	// High quality, Google-grade network tier, support for all networking products.
	GlobalAddressNetworkTierPremium = GlobalAddressNetworkTier("PREMIUM")
	// Price competitive network tier, support for all networking products.
	GlobalAddressNetworkTierSelect = GlobalAddressNetworkTier("SELECT")
	// Public internet quality, only limited support for other networking products.
	GlobalAddressNetworkTierStandard = GlobalAddressNetworkTier("STANDARD")
	// (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
	GlobalAddressNetworkTierStandardOverridesFixedStandard = GlobalAddressNetworkTier("STANDARD_OVERRIDES_FIXED_STANDARD")
)

func (GlobalAddressNetworkTier) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressNetworkTier)(nil)).Elem()
}

func (e GlobalAddressNetworkTier) ToGlobalAddressNetworkTierOutput() GlobalAddressNetworkTierOutput {
	return pulumi.ToOutput(e).(GlobalAddressNetworkTierOutput)
}

func (e GlobalAddressNetworkTier) ToGlobalAddressNetworkTierOutputWithContext(ctx context.Context) GlobalAddressNetworkTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalAddressNetworkTierOutput)
}

func (e GlobalAddressNetworkTier) ToGlobalAddressNetworkTierPtrOutput() GlobalAddressNetworkTierPtrOutput {
	return e.ToGlobalAddressNetworkTierPtrOutputWithContext(context.Background())
}

func (e GlobalAddressNetworkTier) ToGlobalAddressNetworkTierPtrOutputWithContext(ctx context.Context) GlobalAddressNetworkTierPtrOutput {
	return GlobalAddressNetworkTier(e).ToGlobalAddressNetworkTierOutputWithContext(ctx).ToGlobalAddressNetworkTierPtrOutputWithContext(ctx)
}

func (e GlobalAddressNetworkTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressNetworkTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressNetworkTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalAddressNetworkTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalAddressNetworkTierOutput struct{ *pulumi.OutputState }

func (GlobalAddressNetworkTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressNetworkTier)(nil)).Elem()
}

func (o GlobalAddressNetworkTierOutput) ToGlobalAddressNetworkTierOutput() GlobalAddressNetworkTierOutput {
	return o
}

func (o GlobalAddressNetworkTierOutput) ToGlobalAddressNetworkTierOutputWithContext(ctx context.Context) GlobalAddressNetworkTierOutput {
	return o
}

func (o GlobalAddressNetworkTierOutput) ToGlobalAddressNetworkTierPtrOutput() GlobalAddressNetworkTierPtrOutput {
	return o.ToGlobalAddressNetworkTierPtrOutputWithContext(context.Background())
}

func (o GlobalAddressNetworkTierOutput) ToGlobalAddressNetworkTierPtrOutputWithContext(ctx context.Context) GlobalAddressNetworkTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalAddressNetworkTier) *GlobalAddressNetworkTier {
		return &v
	}).(GlobalAddressNetworkTierPtrOutput)
}

func (o GlobalAddressNetworkTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalAddressNetworkTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressNetworkTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalAddressNetworkTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressNetworkTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressNetworkTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalAddressNetworkTierPtrOutput struct{ *pulumi.OutputState }

func (GlobalAddressNetworkTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalAddressNetworkTier)(nil)).Elem()
}

func (o GlobalAddressNetworkTierPtrOutput) ToGlobalAddressNetworkTierPtrOutput() GlobalAddressNetworkTierPtrOutput {
	return o
}

func (o GlobalAddressNetworkTierPtrOutput) ToGlobalAddressNetworkTierPtrOutputWithContext(ctx context.Context) GlobalAddressNetworkTierPtrOutput {
	return o
}

func (o GlobalAddressNetworkTierPtrOutput) Elem() GlobalAddressNetworkTierOutput {
	return o.ApplyT(func(v *GlobalAddressNetworkTier) GlobalAddressNetworkTier {
		if v != nil {
			return *v
		}
		var ret GlobalAddressNetworkTier
		return ret
	}).(GlobalAddressNetworkTierOutput)
}

func (o GlobalAddressNetworkTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressNetworkTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalAddressNetworkTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalAddressNetworkTierInput is an input type that accepts GlobalAddressNetworkTierArgs and GlobalAddressNetworkTierOutput values.
// You can construct a concrete instance of `GlobalAddressNetworkTierInput` via:
//
//          GlobalAddressNetworkTierArgs{...}
type GlobalAddressNetworkTierInput interface {
	pulumi.Input

	ToGlobalAddressNetworkTierOutput() GlobalAddressNetworkTierOutput
	ToGlobalAddressNetworkTierOutputWithContext(context.Context) GlobalAddressNetworkTierOutput
}

var globalAddressNetworkTierPtrType = reflect.TypeOf((**GlobalAddressNetworkTier)(nil)).Elem()

type GlobalAddressNetworkTierPtrInput interface {
	pulumi.Input

	ToGlobalAddressNetworkTierPtrOutput() GlobalAddressNetworkTierPtrOutput
	ToGlobalAddressNetworkTierPtrOutputWithContext(context.Context) GlobalAddressNetworkTierPtrOutput
}

type globalAddressNetworkTierPtr string

func GlobalAddressNetworkTierPtr(v string) GlobalAddressNetworkTierPtrInput {
	return (*globalAddressNetworkTierPtr)(&v)
}

func (*globalAddressNetworkTierPtr) ElementType() reflect.Type {
	return globalAddressNetworkTierPtrType
}

func (in *globalAddressNetworkTierPtr) ToGlobalAddressNetworkTierPtrOutput() GlobalAddressNetworkTierPtrOutput {
	return pulumi.ToOutput(in).(GlobalAddressNetworkTierPtrOutput)
}

func (in *globalAddressNetworkTierPtr) ToGlobalAddressNetworkTierPtrOutputWithContext(ctx context.Context) GlobalAddressNetworkTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalAddressNetworkTierPtrOutput)
}

// The purpose of this resource, which can be one of the following values: - GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver address in a subnetwork for a Cloud DNS inbound forwarder IP addresses (regional internal IP address in a subnet of a VPC network) - VPC_PEERING for global internal IP addresses used for private services access allocated ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT when allocating addresses using automatic NAT IP address allocation. - IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an *IPsec-encrypted Cloud Interconnect* configuration. These addresses are regional resources. Not currently available publicly. - `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a private network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose.
type GlobalAddressPurpose string

const (
	// DNS resolver address in the subnetwork.
	GlobalAddressPurposeDnsResolver = GlobalAddressPurpose("DNS_RESOLVER")
	// VM internal/alias IP, Internal LB service IP, etc.
	GlobalAddressPurposeGceEndpoint = GlobalAddressPurpose("GCE_ENDPOINT")
	// A regional internal IP address range reserved for the VLAN attachment that is used in IPsec-encrypted Cloud Interconnect. This regional internal IP address range must not overlap with any IP address range of subnet/route in the VPC network and its peering networks. After the VLAN attachment is created with the reserved IP address range, when creating a new VPN gateway, its interface IP address is allocated from the associated VLAN attachment’s IP address range.
	GlobalAddressPurposeIpsecInterconnect = GlobalAddressPurpose("IPSEC_INTERCONNECT")
	// External IP automatically reserved for Cloud NAT.
	GlobalAddressPurposeNatAuto = GlobalAddressPurpose("NAT_AUTO")
	// A private network IP address that can be used to configure Private Service Connect. This purpose can be specified only for GLOBAL addresses of Type INTERNAL
	GlobalAddressPurposePrivateServiceConnect = GlobalAddressPurpose("PRIVATE_SERVICE_CONNECT")
	// A private network IP address that can be shared by multiple Internal Load Balancer forwarding rules.
	GlobalAddressPurposeSharedLoadbalancerVip = GlobalAddressPurpose("SHARED_LOADBALANCER_VIP")
	// IP range for peer networks.
	GlobalAddressPurposeVpcPeering = GlobalAddressPurpose("VPC_PEERING")
)

func (GlobalAddressPurpose) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressPurpose)(nil)).Elem()
}

func (e GlobalAddressPurpose) ToGlobalAddressPurposeOutput() GlobalAddressPurposeOutput {
	return pulumi.ToOutput(e).(GlobalAddressPurposeOutput)
}

func (e GlobalAddressPurpose) ToGlobalAddressPurposeOutputWithContext(ctx context.Context) GlobalAddressPurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalAddressPurposeOutput)
}

func (e GlobalAddressPurpose) ToGlobalAddressPurposePtrOutput() GlobalAddressPurposePtrOutput {
	return e.ToGlobalAddressPurposePtrOutputWithContext(context.Background())
}

func (e GlobalAddressPurpose) ToGlobalAddressPurposePtrOutputWithContext(ctx context.Context) GlobalAddressPurposePtrOutput {
	return GlobalAddressPurpose(e).ToGlobalAddressPurposeOutputWithContext(ctx).ToGlobalAddressPurposePtrOutputWithContext(ctx)
}

func (e GlobalAddressPurpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressPurpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalAddressPurpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalAddressPurpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalAddressPurposeOutput struct{ *pulumi.OutputState }

func (GlobalAddressPurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalAddressPurpose)(nil)).Elem()
}

func (o GlobalAddressPurposeOutput) ToGlobalAddressPurposeOutput() GlobalAddressPurposeOutput {
	return o
}

func (o GlobalAddressPurposeOutput) ToGlobalAddressPurposeOutputWithContext(ctx context.Context) GlobalAddressPurposeOutput {
	return o
}

func (o GlobalAddressPurposeOutput) ToGlobalAddressPurposePtrOutput() GlobalAddressPurposePtrOutput {
	return o.ToGlobalAddressPurposePtrOutputWithContext(context.Background())
}

func (o GlobalAddressPurposeOutput) ToGlobalAddressPurposePtrOutputWithContext(ctx context.Context) GlobalAddressPurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalAddressPurpose) *GlobalAddressPurpose {
		return &v
	}).(GlobalAddressPurposePtrOutput)
}

func (o GlobalAddressPurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalAddressPurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressPurpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalAddressPurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressPurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalAddressPurpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalAddressPurposePtrOutput struct{ *pulumi.OutputState }

func (GlobalAddressPurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalAddressPurpose)(nil)).Elem()
}

func (o GlobalAddressPurposePtrOutput) ToGlobalAddressPurposePtrOutput() GlobalAddressPurposePtrOutput {
	return o
}

func (o GlobalAddressPurposePtrOutput) ToGlobalAddressPurposePtrOutputWithContext(ctx context.Context) GlobalAddressPurposePtrOutput {
	return o
}

func (o GlobalAddressPurposePtrOutput) Elem() GlobalAddressPurposeOutput {
	return o.ApplyT(func(v *GlobalAddressPurpose) GlobalAddressPurpose {
		if v != nil {
			return *v
		}
		var ret GlobalAddressPurpose
		return ret
	}).(GlobalAddressPurposeOutput)
}

func (o GlobalAddressPurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalAddressPurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalAddressPurpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalAddressPurposeInput is an input type that accepts GlobalAddressPurposeArgs and GlobalAddressPurposeOutput values.
// You can construct a concrete instance of `GlobalAddressPurposeInput` via:
//
//          GlobalAddressPurposeArgs{...}
type GlobalAddressPurposeInput interface {
	pulumi.Input

	ToGlobalAddressPurposeOutput() GlobalAddressPurposeOutput
	ToGlobalAddressPurposeOutputWithContext(context.Context) GlobalAddressPurposeOutput
}

var globalAddressPurposePtrType = reflect.TypeOf((**GlobalAddressPurpose)(nil)).Elem()

type GlobalAddressPurposePtrInput interface {
	pulumi.Input

	ToGlobalAddressPurposePtrOutput() GlobalAddressPurposePtrOutput
	ToGlobalAddressPurposePtrOutputWithContext(context.Context) GlobalAddressPurposePtrOutput
}

type globalAddressPurposePtr string

func GlobalAddressPurposePtr(v string) GlobalAddressPurposePtrInput {
	return (*globalAddressPurposePtr)(&v)
}

func (*globalAddressPurposePtr) ElementType() reflect.Type {
	return globalAddressPurposePtrType
}

func (in *globalAddressPurposePtr) ToGlobalAddressPurposePtrOutput() GlobalAddressPurposePtrOutput {
	return pulumi.ToOutput(in).(GlobalAddressPurposePtrOutput)
}

func (in *globalAddressPurposePtr) ToGlobalAddressPurposePtrOutputWithContext(ctx context.Context) GlobalAddressPurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalAddressPurposePtrOutput)
}

// The IP protocol to which this rule applies. For protocol forwarding, valid options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP protocols are different for different load balancing products as described in [Load balancing features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends).
type GlobalForwardingRuleIpProtocol string

const (
	GlobalForwardingRuleIpProtocolAh        = GlobalForwardingRuleIpProtocol("AH")
	GlobalForwardingRuleIpProtocolAll       = GlobalForwardingRuleIpProtocol("ALL")
	GlobalForwardingRuleIpProtocolEsp       = GlobalForwardingRuleIpProtocol("ESP")
	GlobalForwardingRuleIpProtocolIcmp      = GlobalForwardingRuleIpProtocol("ICMP")
	GlobalForwardingRuleIpProtocolL3Default = GlobalForwardingRuleIpProtocol("L3_DEFAULT")
	GlobalForwardingRuleIpProtocolSctp      = GlobalForwardingRuleIpProtocol("SCTP")
	GlobalForwardingRuleIpProtocolTcp       = GlobalForwardingRuleIpProtocol("TCP")
	GlobalForwardingRuleIpProtocolUdp       = GlobalForwardingRuleIpProtocol("UDP")
)

func (GlobalForwardingRuleIpProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleIpProtocol)(nil)).Elem()
}

func (e GlobalForwardingRuleIpProtocol) ToGlobalForwardingRuleIpProtocolOutput() GlobalForwardingRuleIpProtocolOutput {
	return pulumi.ToOutput(e).(GlobalForwardingRuleIpProtocolOutput)
}

func (e GlobalForwardingRuleIpProtocol) ToGlobalForwardingRuleIpProtocolOutputWithContext(ctx context.Context) GlobalForwardingRuleIpProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalForwardingRuleIpProtocolOutput)
}

func (e GlobalForwardingRuleIpProtocol) ToGlobalForwardingRuleIpProtocolPtrOutput() GlobalForwardingRuleIpProtocolPtrOutput {
	return e.ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleIpProtocol) ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpProtocolPtrOutput {
	return GlobalForwardingRuleIpProtocol(e).ToGlobalForwardingRuleIpProtocolOutputWithContext(ctx).ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(ctx)
}

func (e GlobalForwardingRuleIpProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleIpProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleIpProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleIpProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalForwardingRuleIpProtocolOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleIpProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleIpProtocol)(nil)).Elem()
}

func (o GlobalForwardingRuleIpProtocolOutput) ToGlobalForwardingRuleIpProtocolOutput() GlobalForwardingRuleIpProtocolOutput {
	return o
}

func (o GlobalForwardingRuleIpProtocolOutput) ToGlobalForwardingRuleIpProtocolOutputWithContext(ctx context.Context) GlobalForwardingRuleIpProtocolOutput {
	return o
}

func (o GlobalForwardingRuleIpProtocolOutput) ToGlobalForwardingRuleIpProtocolPtrOutput() GlobalForwardingRuleIpProtocolPtrOutput {
	return o.ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpProtocolOutput) ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalForwardingRuleIpProtocol) *GlobalForwardingRuleIpProtocol {
		return &v
	}).(GlobalForwardingRuleIpProtocolPtrOutput)
}

func (o GlobalForwardingRuleIpProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleIpProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalForwardingRuleIpProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleIpProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalForwardingRuleIpProtocolPtrOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleIpProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalForwardingRuleIpProtocol)(nil)).Elem()
}

func (o GlobalForwardingRuleIpProtocolPtrOutput) ToGlobalForwardingRuleIpProtocolPtrOutput() GlobalForwardingRuleIpProtocolPtrOutput {
	return o
}

func (o GlobalForwardingRuleIpProtocolPtrOutput) ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpProtocolPtrOutput {
	return o
}

func (o GlobalForwardingRuleIpProtocolPtrOutput) Elem() GlobalForwardingRuleIpProtocolOutput {
	return o.ApplyT(func(v *GlobalForwardingRuleIpProtocol) GlobalForwardingRuleIpProtocol {
		if v != nil {
			return *v
		}
		var ret GlobalForwardingRuleIpProtocol
		return ret
	}).(GlobalForwardingRuleIpProtocolOutput)
}

func (o GlobalForwardingRuleIpProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalForwardingRuleIpProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalForwardingRuleIpProtocolInput is an input type that accepts GlobalForwardingRuleIpProtocolArgs and GlobalForwardingRuleIpProtocolOutput values.
// You can construct a concrete instance of `GlobalForwardingRuleIpProtocolInput` via:
//
//          GlobalForwardingRuleIpProtocolArgs{...}
type GlobalForwardingRuleIpProtocolInput interface {
	pulumi.Input

	ToGlobalForwardingRuleIpProtocolOutput() GlobalForwardingRuleIpProtocolOutput
	ToGlobalForwardingRuleIpProtocolOutputWithContext(context.Context) GlobalForwardingRuleIpProtocolOutput
}

var globalForwardingRuleIpProtocolPtrType = reflect.TypeOf((**GlobalForwardingRuleIpProtocol)(nil)).Elem()

type GlobalForwardingRuleIpProtocolPtrInput interface {
	pulumi.Input

	ToGlobalForwardingRuleIpProtocolPtrOutput() GlobalForwardingRuleIpProtocolPtrOutput
	ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(context.Context) GlobalForwardingRuleIpProtocolPtrOutput
}

type globalForwardingRuleIpProtocolPtr string

func GlobalForwardingRuleIpProtocolPtr(v string) GlobalForwardingRuleIpProtocolPtrInput {
	return (*globalForwardingRuleIpProtocolPtr)(&v)
}

func (*globalForwardingRuleIpProtocolPtr) ElementType() reflect.Type {
	return globalForwardingRuleIpProtocolPtrType
}

func (in *globalForwardingRuleIpProtocolPtr) ToGlobalForwardingRuleIpProtocolPtrOutput() GlobalForwardingRuleIpProtocolPtrOutput {
	return pulumi.ToOutput(in).(GlobalForwardingRuleIpProtocolPtrOutput)
}

func (in *globalForwardingRuleIpProtocolPtr) ToGlobalForwardingRuleIpProtocolPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalForwardingRuleIpProtocolPtrOutput)
}

// The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for an external global forwarding rule.
type GlobalForwardingRuleIpVersion string

const (
	GlobalForwardingRuleIpVersionIpv4               = GlobalForwardingRuleIpVersion("IPV4")
	GlobalForwardingRuleIpVersionIpv6               = GlobalForwardingRuleIpVersion("IPV6")
	GlobalForwardingRuleIpVersionUnspecifiedVersion = GlobalForwardingRuleIpVersion("UNSPECIFIED_VERSION")
)

func (GlobalForwardingRuleIpVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleIpVersion)(nil)).Elem()
}

func (e GlobalForwardingRuleIpVersion) ToGlobalForwardingRuleIpVersionOutput() GlobalForwardingRuleIpVersionOutput {
	return pulumi.ToOutput(e).(GlobalForwardingRuleIpVersionOutput)
}

func (e GlobalForwardingRuleIpVersion) ToGlobalForwardingRuleIpVersionOutputWithContext(ctx context.Context) GlobalForwardingRuleIpVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalForwardingRuleIpVersionOutput)
}

func (e GlobalForwardingRuleIpVersion) ToGlobalForwardingRuleIpVersionPtrOutput() GlobalForwardingRuleIpVersionPtrOutput {
	return e.ToGlobalForwardingRuleIpVersionPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleIpVersion) ToGlobalForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpVersionPtrOutput {
	return GlobalForwardingRuleIpVersion(e).ToGlobalForwardingRuleIpVersionOutputWithContext(ctx).ToGlobalForwardingRuleIpVersionPtrOutputWithContext(ctx)
}

func (e GlobalForwardingRuleIpVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleIpVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleIpVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleIpVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalForwardingRuleIpVersionOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleIpVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleIpVersion)(nil)).Elem()
}

func (o GlobalForwardingRuleIpVersionOutput) ToGlobalForwardingRuleIpVersionOutput() GlobalForwardingRuleIpVersionOutput {
	return o
}

func (o GlobalForwardingRuleIpVersionOutput) ToGlobalForwardingRuleIpVersionOutputWithContext(ctx context.Context) GlobalForwardingRuleIpVersionOutput {
	return o
}

func (o GlobalForwardingRuleIpVersionOutput) ToGlobalForwardingRuleIpVersionPtrOutput() GlobalForwardingRuleIpVersionPtrOutput {
	return o.ToGlobalForwardingRuleIpVersionPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpVersionOutput) ToGlobalForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalForwardingRuleIpVersion) *GlobalForwardingRuleIpVersion {
		return &v
	}).(GlobalForwardingRuleIpVersionPtrOutput)
}

func (o GlobalForwardingRuleIpVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleIpVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalForwardingRuleIpVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleIpVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalForwardingRuleIpVersionPtrOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleIpVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalForwardingRuleIpVersion)(nil)).Elem()
}

func (o GlobalForwardingRuleIpVersionPtrOutput) ToGlobalForwardingRuleIpVersionPtrOutput() GlobalForwardingRuleIpVersionPtrOutput {
	return o
}

func (o GlobalForwardingRuleIpVersionPtrOutput) ToGlobalForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpVersionPtrOutput {
	return o
}

func (o GlobalForwardingRuleIpVersionPtrOutput) Elem() GlobalForwardingRuleIpVersionOutput {
	return o.ApplyT(func(v *GlobalForwardingRuleIpVersion) GlobalForwardingRuleIpVersion {
		if v != nil {
			return *v
		}
		var ret GlobalForwardingRuleIpVersion
		return ret
	}).(GlobalForwardingRuleIpVersionOutput)
}

func (o GlobalForwardingRuleIpVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleIpVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalForwardingRuleIpVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalForwardingRuleIpVersionInput is an input type that accepts GlobalForwardingRuleIpVersionArgs and GlobalForwardingRuleIpVersionOutput values.
// You can construct a concrete instance of `GlobalForwardingRuleIpVersionInput` via:
//
//          GlobalForwardingRuleIpVersionArgs{...}
type GlobalForwardingRuleIpVersionInput interface {
	pulumi.Input

	ToGlobalForwardingRuleIpVersionOutput() GlobalForwardingRuleIpVersionOutput
	ToGlobalForwardingRuleIpVersionOutputWithContext(context.Context) GlobalForwardingRuleIpVersionOutput
}

var globalForwardingRuleIpVersionPtrType = reflect.TypeOf((**GlobalForwardingRuleIpVersion)(nil)).Elem()

type GlobalForwardingRuleIpVersionPtrInput interface {
	pulumi.Input

	ToGlobalForwardingRuleIpVersionPtrOutput() GlobalForwardingRuleIpVersionPtrOutput
	ToGlobalForwardingRuleIpVersionPtrOutputWithContext(context.Context) GlobalForwardingRuleIpVersionPtrOutput
}

type globalForwardingRuleIpVersionPtr string

func GlobalForwardingRuleIpVersionPtr(v string) GlobalForwardingRuleIpVersionPtrInput {
	return (*globalForwardingRuleIpVersionPtr)(&v)
}

func (*globalForwardingRuleIpVersionPtr) ElementType() reflect.Type {
	return globalForwardingRuleIpVersionPtrType
}

func (in *globalForwardingRuleIpVersionPtr) ToGlobalForwardingRuleIpVersionPtrOutput() GlobalForwardingRuleIpVersionPtrOutput {
	return pulumi.ToOutput(in).(GlobalForwardingRuleIpVersionPtrOutput)
}

func (in *globalForwardingRuleIpVersionPtr) ToGlobalForwardingRuleIpVersionPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleIpVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalForwardingRuleIpVersionPtrOutput)
}

// Specifies the forwarding rule type. For more information about forwarding rules, refer to Forwarding rule concepts.
type GlobalForwardingRuleLoadBalancingScheme string

const (
	GlobalForwardingRuleLoadBalancingSchemeExternal            = GlobalForwardingRuleLoadBalancingScheme("EXTERNAL")
	GlobalForwardingRuleLoadBalancingSchemeExternalManaged     = GlobalForwardingRuleLoadBalancingScheme("EXTERNAL_MANAGED")
	GlobalForwardingRuleLoadBalancingSchemeInternal            = GlobalForwardingRuleLoadBalancingScheme("INTERNAL")
	GlobalForwardingRuleLoadBalancingSchemeInternalManaged     = GlobalForwardingRuleLoadBalancingScheme("INTERNAL_MANAGED")
	GlobalForwardingRuleLoadBalancingSchemeInternalSelfManaged = GlobalForwardingRuleLoadBalancingScheme("INTERNAL_SELF_MANAGED")
	GlobalForwardingRuleLoadBalancingSchemeInvalid             = GlobalForwardingRuleLoadBalancingScheme("INVALID")
)

func (GlobalForwardingRuleLoadBalancingScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleLoadBalancingScheme)(nil)).Elem()
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToGlobalForwardingRuleLoadBalancingSchemeOutput() GlobalForwardingRuleLoadBalancingSchemeOutput {
	return pulumi.ToOutput(e).(GlobalForwardingRuleLoadBalancingSchemeOutput)
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToGlobalForwardingRuleLoadBalancingSchemeOutputWithContext(ctx context.Context) GlobalForwardingRuleLoadBalancingSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalForwardingRuleLoadBalancingSchemeOutput)
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToGlobalForwardingRuleLoadBalancingSchemePtrOutput() GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return e.ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return GlobalForwardingRuleLoadBalancingScheme(e).ToGlobalForwardingRuleLoadBalancingSchemeOutputWithContext(ctx).ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx)
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleLoadBalancingScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalForwardingRuleLoadBalancingSchemeOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleLoadBalancingSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleLoadBalancingScheme)(nil)).Elem()
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToGlobalForwardingRuleLoadBalancingSchemeOutput() GlobalForwardingRuleLoadBalancingSchemeOutput {
	return o
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToGlobalForwardingRuleLoadBalancingSchemeOutputWithContext(ctx context.Context) GlobalForwardingRuleLoadBalancingSchemeOutput {
	return o
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToGlobalForwardingRuleLoadBalancingSchemePtrOutput() GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return o.ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalForwardingRuleLoadBalancingScheme) *GlobalForwardingRuleLoadBalancingScheme {
		return &v
	}).(GlobalForwardingRuleLoadBalancingSchemePtrOutput)
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleLoadBalancingScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleLoadBalancingSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleLoadBalancingScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalForwardingRuleLoadBalancingSchemePtrOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleLoadBalancingSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalForwardingRuleLoadBalancingScheme)(nil)).Elem()
}

func (o GlobalForwardingRuleLoadBalancingSchemePtrOutput) ToGlobalForwardingRuleLoadBalancingSchemePtrOutput() GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return o
}

func (o GlobalForwardingRuleLoadBalancingSchemePtrOutput) ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return o
}

func (o GlobalForwardingRuleLoadBalancingSchemePtrOutput) Elem() GlobalForwardingRuleLoadBalancingSchemeOutput {
	return o.ApplyT(func(v *GlobalForwardingRuleLoadBalancingScheme) GlobalForwardingRuleLoadBalancingScheme {
		if v != nil {
			return *v
		}
		var ret GlobalForwardingRuleLoadBalancingScheme
		return ret
	}).(GlobalForwardingRuleLoadBalancingSchemeOutput)
}

func (o GlobalForwardingRuleLoadBalancingSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleLoadBalancingSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalForwardingRuleLoadBalancingScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalForwardingRuleLoadBalancingSchemeInput is an input type that accepts GlobalForwardingRuleLoadBalancingSchemeArgs and GlobalForwardingRuleLoadBalancingSchemeOutput values.
// You can construct a concrete instance of `GlobalForwardingRuleLoadBalancingSchemeInput` via:
//
//          GlobalForwardingRuleLoadBalancingSchemeArgs{...}
type GlobalForwardingRuleLoadBalancingSchemeInput interface {
	pulumi.Input

	ToGlobalForwardingRuleLoadBalancingSchemeOutput() GlobalForwardingRuleLoadBalancingSchemeOutput
	ToGlobalForwardingRuleLoadBalancingSchemeOutputWithContext(context.Context) GlobalForwardingRuleLoadBalancingSchemeOutput
}

var globalForwardingRuleLoadBalancingSchemePtrType = reflect.TypeOf((**GlobalForwardingRuleLoadBalancingScheme)(nil)).Elem()

type GlobalForwardingRuleLoadBalancingSchemePtrInput interface {
	pulumi.Input

	ToGlobalForwardingRuleLoadBalancingSchemePtrOutput() GlobalForwardingRuleLoadBalancingSchemePtrOutput
	ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(context.Context) GlobalForwardingRuleLoadBalancingSchemePtrOutput
}

type globalForwardingRuleLoadBalancingSchemePtr string

func GlobalForwardingRuleLoadBalancingSchemePtr(v string) GlobalForwardingRuleLoadBalancingSchemePtrInput {
	return (*globalForwardingRuleLoadBalancingSchemePtr)(&v)
}

func (*globalForwardingRuleLoadBalancingSchemePtr) ElementType() reflect.Type {
	return globalForwardingRuleLoadBalancingSchemePtrType
}

func (in *globalForwardingRuleLoadBalancingSchemePtr) ToGlobalForwardingRuleLoadBalancingSchemePtrOutput() GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return pulumi.ToOutput(in).(GlobalForwardingRuleLoadBalancingSchemePtrOutput)
}

func (in *globalForwardingRuleLoadBalancingSchemePtr) ToGlobalForwardingRuleLoadBalancingSchemePtrOutputWithContext(ctx context.Context) GlobalForwardingRuleLoadBalancingSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalForwardingRuleLoadBalancingSchemePtrOutput)
}

// This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM, STANDARD. For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM. If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address.
type GlobalForwardingRuleNetworkTier string

const (
	// Public internet quality with fixed bandwidth.
	GlobalForwardingRuleNetworkTierFixedStandard = GlobalForwardingRuleNetworkTier("FIXED_STANDARD")
	// High quality, Google-grade network tier, support for all networking products.
	GlobalForwardingRuleNetworkTierPremium = GlobalForwardingRuleNetworkTier("PREMIUM")
	// Price competitive network tier, support for all networking products.
	GlobalForwardingRuleNetworkTierSelect = GlobalForwardingRuleNetworkTier("SELECT")
	// Public internet quality, only limited support for other networking products.
	GlobalForwardingRuleNetworkTierStandard = GlobalForwardingRuleNetworkTier("STANDARD")
	// (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is expired or not configured.
	GlobalForwardingRuleNetworkTierStandardOverridesFixedStandard = GlobalForwardingRuleNetworkTier("STANDARD_OVERRIDES_FIXED_STANDARD")
)

func (GlobalForwardingRuleNetworkTier) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleNetworkTier)(nil)).Elem()
}

func (e GlobalForwardingRuleNetworkTier) ToGlobalForwardingRuleNetworkTierOutput() GlobalForwardingRuleNetworkTierOutput {
	return pulumi.ToOutput(e).(GlobalForwardingRuleNetworkTierOutput)
}

func (e GlobalForwardingRuleNetworkTier) ToGlobalForwardingRuleNetworkTierOutputWithContext(ctx context.Context) GlobalForwardingRuleNetworkTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalForwardingRuleNetworkTierOutput)
}

func (e GlobalForwardingRuleNetworkTier) ToGlobalForwardingRuleNetworkTierPtrOutput() GlobalForwardingRuleNetworkTierPtrOutput {
	return e.ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleNetworkTier) ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleNetworkTierPtrOutput {
	return GlobalForwardingRuleNetworkTier(e).ToGlobalForwardingRuleNetworkTierOutputWithContext(ctx).ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(ctx)
}

func (e GlobalForwardingRuleNetworkTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleNetworkTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRuleNetworkTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRuleNetworkTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalForwardingRuleNetworkTierOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleNetworkTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRuleNetworkTier)(nil)).Elem()
}

func (o GlobalForwardingRuleNetworkTierOutput) ToGlobalForwardingRuleNetworkTierOutput() GlobalForwardingRuleNetworkTierOutput {
	return o
}

func (o GlobalForwardingRuleNetworkTierOutput) ToGlobalForwardingRuleNetworkTierOutputWithContext(ctx context.Context) GlobalForwardingRuleNetworkTierOutput {
	return o
}

func (o GlobalForwardingRuleNetworkTierOutput) ToGlobalForwardingRuleNetworkTierPtrOutput() GlobalForwardingRuleNetworkTierPtrOutput {
	return o.ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleNetworkTierOutput) ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleNetworkTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalForwardingRuleNetworkTier) *GlobalForwardingRuleNetworkTier {
		return &v
	}).(GlobalForwardingRuleNetworkTierPtrOutput)
}

func (o GlobalForwardingRuleNetworkTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleNetworkTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleNetworkTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalForwardingRuleNetworkTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleNetworkTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRuleNetworkTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalForwardingRuleNetworkTierPtrOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRuleNetworkTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalForwardingRuleNetworkTier)(nil)).Elem()
}

func (o GlobalForwardingRuleNetworkTierPtrOutput) ToGlobalForwardingRuleNetworkTierPtrOutput() GlobalForwardingRuleNetworkTierPtrOutput {
	return o
}

func (o GlobalForwardingRuleNetworkTierPtrOutput) ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleNetworkTierPtrOutput {
	return o
}

func (o GlobalForwardingRuleNetworkTierPtrOutput) Elem() GlobalForwardingRuleNetworkTierOutput {
	return o.ApplyT(func(v *GlobalForwardingRuleNetworkTier) GlobalForwardingRuleNetworkTier {
		if v != nil {
			return *v
		}
		var ret GlobalForwardingRuleNetworkTier
		return ret
	}).(GlobalForwardingRuleNetworkTierOutput)
}

func (o GlobalForwardingRuleNetworkTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRuleNetworkTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalForwardingRuleNetworkTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalForwardingRuleNetworkTierInput is an input type that accepts GlobalForwardingRuleNetworkTierArgs and GlobalForwardingRuleNetworkTierOutput values.
// You can construct a concrete instance of `GlobalForwardingRuleNetworkTierInput` via:
//
//          GlobalForwardingRuleNetworkTierArgs{...}
type GlobalForwardingRuleNetworkTierInput interface {
	pulumi.Input

	ToGlobalForwardingRuleNetworkTierOutput() GlobalForwardingRuleNetworkTierOutput
	ToGlobalForwardingRuleNetworkTierOutputWithContext(context.Context) GlobalForwardingRuleNetworkTierOutput
}

var globalForwardingRuleNetworkTierPtrType = reflect.TypeOf((**GlobalForwardingRuleNetworkTier)(nil)).Elem()

type GlobalForwardingRuleNetworkTierPtrInput interface {
	pulumi.Input

	ToGlobalForwardingRuleNetworkTierPtrOutput() GlobalForwardingRuleNetworkTierPtrOutput
	ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(context.Context) GlobalForwardingRuleNetworkTierPtrOutput
}

type globalForwardingRuleNetworkTierPtr string

func GlobalForwardingRuleNetworkTierPtr(v string) GlobalForwardingRuleNetworkTierPtrInput {
	return (*globalForwardingRuleNetworkTierPtr)(&v)
}

func (*globalForwardingRuleNetworkTierPtr) ElementType() reflect.Type {
	return globalForwardingRuleNetworkTierPtrType
}

func (in *globalForwardingRuleNetworkTierPtr) ToGlobalForwardingRuleNetworkTierPtrOutput() GlobalForwardingRuleNetworkTierPtrOutput {
	return pulumi.ToOutput(in).(GlobalForwardingRuleNetworkTierPtrOutput)
}

func (in *globalForwardingRuleNetworkTierPtr) ToGlobalForwardingRuleNetworkTierPtrOutputWithContext(ctx context.Context) GlobalForwardingRuleNetworkTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalForwardingRuleNetworkTierPtrOutput)
}

type GlobalForwardingRulePscConnectionStatus string

const (
	// The connection has been accepted by the producer.
	GlobalForwardingRulePscConnectionStatusAccepted = GlobalForwardingRulePscConnectionStatus("ACCEPTED")
	// The connection has been closed by the producer and will not serve traffic going forward.
	GlobalForwardingRulePscConnectionStatusClosed = GlobalForwardingRulePscConnectionStatus("CLOSED")
	// The connection is pending acceptance by the producer.
	GlobalForwardingRulePscConnectionStatusPending = GlobalForwardingRulePscConnectionStatus("PENDING")
	// The connection has been rejected by the producer.
	GlobalForwardingRulePscConnectionStatusRejected          = GlobalForwardingRulePscConnectionStatus("REJECTED")
	GlobalForwardingRulePscConnectionStatusStatusUnspecified = GlobalForwardingRulePscConnectionStatus("STATUS_UNSPECIFIED")
)

func (GlobalForwardingRulePscConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRulePscConnectionStatus)(nil)).Elem()
}

func (e GlobalForwardingRulePscConnectionStatus) ToGlobalForwardingRulePscConnectionStatusOutput() GlobalForwardingRulePscConnectionStatusOutput {
	return pulumi.ToOutput(e).(GlobalForwardingRulePscConnectionStatusOutput)
}

func (e GlobalForwardingRulePscConnectionStatus) ToGlobalForwardingRulePscConnectionStatusOutputWithContext(ctx context.Context) GlobalForwardingRulePscConnectionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalForwardingRulePscConnectionStatusOutput)
}

func (e GlobalForwardingRulePscConnectionStatus) ToGlobalForwardingRulePscConnectionStatusPtrOutput() GlobalForwardingRulePscConnectionStatusPtrOutput {
	return e.ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRulePscConnectionStatus) ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) GlobalForwardingRulePscConnectionStatusPtrOutput {
	return GlobalForwardingRulePscConnectionStatus(e).ToGlobalForwardingRulePscConnectionStatusOutputWithContext(ctx).ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(ctx)
}

func (e GlobalForwardingRulePscConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRulePscConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalForwardingRulePscConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalForwardingRulePscConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalForwardingRulePscConnectionStatusOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRulePscConnectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalForwardingRulePscConnectionStatus)(nil)).Elem()
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToGlobalForwardingRulePscConnectionStatusOutput() GlobalForwardingRulePscConnectionStatusOutput {
	return o
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToGlobalForwardingRulePscConnectionStatusOutputWithContext(ctx context.Context) GlobalForwardingRulePscConnectionStatusOutput {
	return o
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToGlobalForwardingRulePscConnectionStatusPtrOutput() GlobalForwardingRulePscConnectionStatusPtrOutput {
	return o.ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) GlobalForwardingRulePscConnectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalForwardingRulePscConnectionStatus) *GlobalForwardingRulePscConnectionStatus {
		return &v
	}).(GlobalForwardingRulePscConnectionStatusPtrOutput)
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRulePscConnectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRulePscConnectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalForwardingRulePscConnectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalForwardingRulePscConnectionStatusPtrOutput struct{ *pulumi.OutputState }

func (GlobalForwardingRulePscConnectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalForwardingRulePscConnectionStatus)(nil)).Elem()
}

func (o GlobalForwardingRulePscConnectionStatusPtrOutput) ToGlobalForwardingRulePscConnectionStatusPtrOutput() GlobalForwardingRulePscConnectionStatusPtrOutput {
	return o
}

func (o GlobalForwardingRulePscConnectionStatusPtrOutput) ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) GlobalForwardingRulePscConnectionStatusPtrOutput {
	return o
}

func (o GlobalForwardingRulePscConnectionStatusPtrOutput) Elem() GlobalForwardingRulePscConnectionStatusOutput {
	return o.ApplyT(func(v *GlobalForwardingRulePscConnectionStatus) GlobalForwardingRulePscConnectionStatus {
		if v != nil {
			return *v
		}
		var ret GlobalForwardingRulePscConnectionStatus
		return ret
	}).(GlobalForwardingRulePscConnectionStatusOutput)
}

func (o GlobalForwardingRulePscConnectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalForwardingRulePscConnectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalForwardingRulePscConnectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalForwardingRulePscConnectionStatusInput is an input type that accepts GlobalForwardingRulePscConnectionStatusArgs and GlobalForwardingRulePscConnectionStatusOutput values.
// You can construct a concrete instance of `GlobalForwardingRulePscConnectionStatusInput` via:
//
//          GlobalForwardingRulePscConnectionStatusArgs{...}
type GlobalForwardingRulePscConnectionStatusInput interface {
	pulumi.Input

	ToGlobalForwardingRulePscConnectionStatusOutput() GlobalForwardingRulePscConnectionStatusOutput
	ToGlobalForwardingRulePscConnectionStatusOutputWithContext(context.Context) GlobalForwardingRulePscConnectionStatusOutput
}

var globalForwardingRulePscConnectionStatusPtrType = reflect.TypeOf((**GlobalForwardingRulePscConnectionStatus)(nil)).Elem()

type GlobalForwardingRulePscConnectionStatusPtrInput interface {
	pulumi.Input

	ToGlobalForwardingRulePscConnectionStatusPtrOutput() GlobalForwardingRulePscConnectionStatusPtrOutput
	ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(context.Context) GlobalForwardingRulePscConnectionStatusPtrOutput
}

type globalForwardingRulePscConnectionStatusPtr string

func GlobalForwardingRulePscConnectionStatusPtr(v string) GlobalForwardingRulePscConnectionStatusPtrInput {
	return (*globalForwardingRulePscConnectionStatusPtr)(&v)
}

func (*globalForwardingRulePscConnectionStatusPtr) ElementType() reflect.Type {
	return globalForwardingRulePscConnectionStatusPtrType
}

func (in *globalForwardingRulePscConnectionStatusPtr) ToGlobalForwardingRulePscConnectionStatusPtrOutput() GlobalForwardingRulePscConnectionStatusPtrOutput {
	return pulumi.ToOutput(in).(GlobalForwardingRulePscConnectionStatusPtrOutput)
}

func (in *globalForwardingRulePscConnectionStatusPtr) ToGlobalForwardingRulePscConnectionStatusPtrOutputWithContext(ctx context.Context) GlobalForwardingRulePscConnectionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalForwardingRulePscConnectionStatusPtrOutput)
}

// Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
type GlobalNetworkEndpointGroupNetworkEndpointType string

const (
	// The network endpoint is represented by an IP address.
	GlobalNetworkEndpointGroupNetworkEndpointTypeGceVmIp = GlobalNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP")
	// The network endpoint is represented by IP address and port pair.
	GlobalNetworkEndpointGroupNetworkEndpointTypeGceVmIpPort = GlobalNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP_PORT")
	// The network endpoint is the primary IP address on any network interface of a VM in Compute Engine.
	GlobalNetworkEndpointGroupNetworkEndpointTypeGceVmPrimaryIp = GlobalNetworkEndpointGroupNetworkEndpointType("GCE_VM_PRIMARY_IP")
	// The network endpoint is represented by fully qualified domain name and port.
	GlobalNetworkEndpointGroupNetworkEndpointTypeInternetFqdnPort = GlobalNetworkEndpointGroupNetworkEndpointType("INTERNET_FQDN_PORT")
	// The network endpoint is represented by an internet IP address and port.
	GlobalNetworkEndpointGroupNetworkEndpointTypeInternetIpPort = GlobalNetworkEndpointGroupNetworkEndpointType("INTERNET_IP_PORT")
	// The network endpoint is represented by an IP address and port. The endpoint belongs to a VM or pod running in a customer's on-premises.
	GlobalNetworkEndpointGroupNetworkEndpointTypeNonGcpPrivateIpPort = GlobalNetworkEndpointGroupNetworkEndpointType("NON_GCP_PRIVATE_IP_PORT")
	// The network endpoint is either public Google APIs or services exposed by other GCP Project with a Service Attachment. The connection is set up by private service connect
	GlobalNetworkEndpointGroupNetworkEndpointTypePrivateServiceConnect = GlobalNetworkEndpointGroupNetworkEndpointType("PRIVATE_SERVICE_CONNECT")
	// The network endpoint is handled by specified serverless infrastructure.
	GlobalNetworkEndpointGroupNetworkEndpointTypeServerless = GlobalNetworkEndpointGroupNetworkEndpointType("SERVERLESS")
)

func (GlobalNetworkEndpointGroupNetworkEndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToGlobalNetworkEndpointGroupNetworkEndpointTypeOutput() GlobalNetworkEndpointGroupNetworkEndpointTypeOutput {
	return pulumi.ToOutput(e).(GlobalNetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToGlobalNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalNetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput() GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return e.ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Background())
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return GlobalNetworkEndpointGroupNetworkEndpointType(e).ToGlobalNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx).ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx)
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalNetworkEndpointGroupNetworkEndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalNetworkEndpointGroupNetworkEndpointTypeOutput struct{ *pulumi.OutputState }

func (GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToGlobalNetworkEndpointGroupNetworkEndpointTypeOutput() GlobalNetworkEndpointGroupNetworkEndpointTypeOutput {
	return o
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToGlobalNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypeOutput {
	return o
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput() GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o.ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalNetworkEndpointGroupNetworkEndpointType) *GlobalNetworkEndpointGroupNetworkEndpointType {
		return &v
	}).(GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalNetworkEndpointGroupNetworkEndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalNetworkEndpointGroupNetworkEndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput() GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput) Elem() GlobalNetworkEndpointGroupNetworkEndpointTypeOutput {
	return o.ApplyT(func(v *GlobalNetworkEndpointGroupNetworkEndpointType) GlobalNetworkEndpointGroupNetworkEndpointType {
		if v != nil {
			return *v
		}
		var ret GlobalNetworkEndpointGroupNetworkEndpointType
		return ret
	}).(GlobalNetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalNetworkEndpointGroupNetworkEndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalNetworkEndpointGroupNetworkEndpointTypeInput is an input type that accepts GlobalNetworkEndpointGroupNetworkEndpointTypeArgs and GlobalNetworkEndpointGroupNetworkEndpointTypeOutput values.
// You can construct a concrete instance of `GlobalNetworkEndpointGroupNetworkEndpointTypeInput` via:
//
//          GlobalNetworkEndpointGroupNetworkEndpointTypeArgs{...}
type GlobalNetworkEndpointGroupNetworkEndpointTypeInput interface {
	pulumi.Input

	ToGlobalNetworkEndpointGroupNetworkEndpointTypeOutput() GlobalNetworkEndpointGroupNetworkEndpointTypeOutput
	ToGlobalNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypeOutput
}

var globalNetworkEndpointGroupNetworkEndpointTypePtrType = reflect.TypeOf((**GlobalNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()

type GlobalNetworkEndpointGroupNetworkEndpointTypePtrInput interface {
	pulumi.Input

	ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput() GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput
	ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput
}

type globalNetworkEndpointGroupNetworkEndpointTypePtr string

func GlobalNetworkEndpointGroupNetworkEndpointTypePtr(v string) GlobalNetworkEndpointGroupNetworkEndpointTypePtrInput {
	return (*globalNetworkEndpointGroupNetworkEndpointTypePtr)(&v)
}

func (*globalNetworkEndpointGroupNetworkEndpointTypePtr) ElementType() reflect.Type {
	return globalNetworkEndpointGroupNetworkEndpointTypePtrType
}

func (in *globalNetworkEndpointGroupNetworkEndpointTypePtr) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput() GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return pulumi.ToOutput(in).(GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

func (in *globalNetworkEndpointGroupNetworkEndpointTypePtr) ToGlobalNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

// Specify the type of this network endpoint group. Only LOAD_BALANCING is valid for now.
type GlobalNetworkEndpointGroupType string

const (
	// The network endpoint group is a backend of a load balancer.
	GlobalNetworkEndpointGroupTypeLoadBalancing = GlobalNetworkEndpointGroupType("LOAD_BALANCING")
)

func (GlobalNetworkEndpointGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalNetworkEndpointGroupType)(nil)).Elem()
}

func (e GlobalNetworkEndpointGroupType) ToGlobalNetworkEndpointGroupTypeOutput() GlobalNetworkEndpointGroupTypeOutput {
	return pulumi.ToOutput(e).(GlobalNetworkEndpointGroupTypeOutput)
}

func (e GlobalNetworkEndpointGroupType) ToGlobalNetworkEndpointGroupTypeOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalNetworkEndpointGroupTypeOutput)
}

func (e GlobalNetworkEndpointGroupType) ToGlobalNetworkEndpointGroupTypePtrOutput() GlobalNetworkEndpointGroupTypePtrOutput {
	return e.ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(context.Background())
}

func (e GlobalNetworkEndpointGroupType) ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupTypePtrOutput {
	return GlobalNetworkEndpointGroupType(e).ToGlobalNetworkEndpointGroupTypeOutputWithContext(ctx).ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(ctx)
}

func (e GlobalNetworkEndpointGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalNetworkEndpointGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalNetworkEndpointGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalNetworkEndpointGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalNetworkEndpointGroupTypeOutput struct{ *pulumi.OutputState }

func (GlobalNetworkEndpointGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalNetworkEndpointGroupType)(nil)).Elem()
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToGlobalNetworkEndpointGroupTypeOutput() GlobalNetworkEndpointGroupTypeOutput {
	return o
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToGlobalNetworkEndpointGroupTypeOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupTypeOutput {
	return o
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToGlobalNetworkEndpointGroupTypePtrOutput() GlobalNetworkEndpointGroupTypePtrOutput {
	return o.ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalNetworkEndpointGroupType) *GlobalNetworkEndpointGroupType {
		return &v
	}).(GlobalNetworkEndpointGroupTypePtrOutput)
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalNetworkEndpointGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalNetworkEndpointGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalNetworkEndpointGroupTypePtrOutput struct{ *pulumi.OutputState }

func (GlobalNetworkEndpointGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalNetworkEndpointGroupType)(nil)).Elem()
}

func (o GlobalNetworkEndpointGroupTypePtrOutput) ToGlobalNetworkEndpointGroupTypePtrOutput() GlobalNetworkEndpointGroupTypePtrOutput {
	return o
}

func (o GlobalNetworkEndpointGroupTypePtrOutput) ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupTypePtrOutput {
	return o
}

func (o GlobalNetworkEndpointGroupTypePtrOutput) Elem() GlobalNetworkEndpointGroupTypeOutput {
	return o.ApplyT(func(v *GlobalNetworkEndpointGroupType) GlobalNetworkEndpointGroupType {
		if v != nil {
			return *v
		}
		var ret GlobalNetworkEndpointGroupType
		return ret
	}).(GlobalNetworkEndpointGroupTypeOutput)
}

func (o GlobalNetworkEndpointGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalNetworkEndpointGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalNetworkEndpointGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalNetworkEndpointGroupTypeInput is an input type that accepts GlobalNetworkEndpointGroupTypeArgs and GlobalNetworkEndpointGroupTypeOutput values.
// You can construct a concrete instance of `GlobalNetworkEndpointGroupTypeInput` via:
//
//          GlobalNetworkEndpointGroupTypeArgs{...}
type GlobalNetworkEndpointGroupTypeInput interface {
	pulumi.Input

	ToGlobalNetworkEndpointGroupTypeOutput() GlobalNetworkEndpointGroupTypeOutput
	ToGlobalNetworkEndpointGroupTypeOutputWithContext(context.Context) GlobalNetworkEndpointGroupTypeOutput
}

var globalNetworkEndpointGroupTypePtrType = reflect.TypeOf((**GlobalNetworkEndpointGroupType)(nil)).Elem()

type GlobalNetworkEndpointGroupTypePtrInput interface {
	pulumi.Input

	ToGlobalNetworkEndpointGroupTypePtrOutput() GlobalNetworkEndpointGroupTypePtrOutput
	ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(context.Context) GlobalNetworkEndpointGroupTypePtrOutput
}

type globalNetworkEndpointGroupTypePtr string

func GlobalNetworkEndpointGroupTypePtr(v string) GlobalNetworkEndpointGroupTypePtrInput {
	return (*globalNetworkEndpointGroupTypePtr)(&v)
}

func (*globalNetworkEndpointGroupTypePtr) ElementType() reflect.Type {
	return globalNetworkEndpointGroupTypePtrType
}

func (in *globalNetworkEndpointGroupTypePtr) ToGlobalNetworkEndpointGroupTypePtrOutput() GlobalNetworkEndpointGroupTypePtrOutput {
	return pulumi.ToOutput(in).(GlobalNetworkEndpointGroupTypePtrOutput)
}

func (in *globalNetworkEndpointGroupTypePtr) ToGlobalNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) GlobalNetworkEndpointGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalNetworkEndpointGroupTypePtrOutput)
}

// The ID of a supported feature. To add multiple values, use commas to separate values. Set to one or more of the following values: - VIRTIO_SCSI_MULTIQUEUE - WINDOWS - MULTI_IP_SUBNET - UEFI_COMPATIBLE - SECURE_BOOT - GVNIC - SEV_CAPABLE - SUSPEND_RESUME_COMPATIBLE - SEV_SNP_CAPABLE For more information, see Enabling guest operating system features.
type GuestOsFeatureType string

const (
	GuestOsFeatureTypeBareMetalLinuxCompatible = GuestOsFeatureType("BARE_METAL_LINUX_COMPATIBLE")
	GuestOsFeatureTypeFeatureTypeUnspecified   = GuestOsFeatureType("FEATURE_TYPE_UNSPECIFIED")
	GuestOsFeatureTypeGvnic                    = GuestOsFeatureType("GVNIC")
	GuestOsFeatureTypeMultiIpSubnet            = GuestOsFeatureType("MULTI_IP_SUBNET")
	GuestOsFeatureTypeSecureBoot               = GuestOsFeatureType("SECURE_BOOT")
	GuestOsFeatureTypeSevCapable               = GuestOsFeatureType("SEV_CAPABLE")
	GuestOsFeatureTypeUefiCompatible           = GuestOsFeatureType("UEFI_COMPATIBLE")
	GuestOsFeatureTypeVirtioScsiMultiqueue     = GuestOsFeatureType("VIRTIO_SCSI_MULTIQUEUE")
	GuestOsFeatureTypeWindows                  = GuestOsFeatureType("WINDOWS")
)

func (GuestOsFeatureType) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsFeatureType)(nil)).Elem()
}

func (e GuestOsFeatureType) ToGuestOsFeatureTypeOutput() GuestOsFeatureTypeOutput {
	return pulumi.ToOutput(e).(GuestOsFeatureTypeOutput)
}

func (e GuestOsFeatureType) ToGuestOsFeatureTypeOutputWithContext(ctx context.Context) GuestOsFeatureTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GuestOsFeatureTypeOutput)
}

func (e GuestOsFeatureType) ToGuestOsFeatureTypePtrOutput() GuestOsFeatureTypePtrOutput {
	return e.ToGuestOsFeatureTypePtrOutputWithContext(context.Background())
}

func (e GuestOsFeatureType) ToGuestOsFeatureTypePtrOutputWithContext(ctx context.Context) GuestOsFeatureTypePtrOutput {
	return GuestOsFeatureType(e).ToGuestOsFeatureTypeOutputWithContext(ctx).ToGuestOsFeatureTypePtrOutputWithContext(ctx)
}

func (e GuestOsFeatureType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GuestOsFeatureType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GuestOsFeatureType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GuestOsFeatureType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GuestOsFeatureTypeOutput struct{ *pulumi.OutputState }

func (GuestOsFeatureTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsFeatureType)(nil)).Elem()
}

func (o GuestOsFeatureTypeOutput) ToGuestOsFeatureTypeOutput() GuestOsFeatureTypeOutput {
	return o
}

func (o GuestOsFeatureTypeOutput) ToGuestOsFeatureTypeOutputWithContext(ctx context.Context) GuestOsFeatureTypeOutput {
	return o
}

func (o GuestOsFeatureTypeOutput) ToGuestOsFeatureTypePtrOutput() GuestOsFeatureTypePtrOutput {
	return o.ToGuestOsFeatureTypePtrOutputWithContext(context.Background())
}

func (o GuestOsFeatureTypeOutput) ToGuestOsFeatureTypePtrOutputWithContext(ctx context.Context) GuestOsFeatureTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestOsFeatureType) *GuestOsFeatureType {
		return &v
	}).(GuestOsFeatureTypePtrOutput)
}

func (o GuestOsFeatureTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GuestOsFeatureTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GuestOsFeatureType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GuestOsFeatureTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GuestOsFeatureTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GuestOsFeatureType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GuestOsFeatureTypePtrOutput struct{ *pulumi.OutputState }

func (GuestOsFeatureTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestOsFeatureType)(nil)).Elem()
}

func (o GuestOsFeatureTypePtrOutput) ToGuestOsFeatureTypePtrOutput() GuestOsFeatureTypePtrOutput {
	return o
}

func (o GuestOsFeatureTypePtrOutput) ToGuestOsFeatureTypePtrOutputWithContext(ctx context.Context) GuestOsFeatureTypePtrOutput {
	return o
}

func (o GuestOsFeatureTypePtrOutput) Elem() GuestOsFeatureTypeOutput {
	return o.ApplyT(func(v *GuestOsFeatureType) GuestOsFeatureType {
		if v != nil {
			return *v
		}
		var ret GuestOsFeatureType
		return ret
	}).(GuestOsFeatureTypeOutput)
}

func (o GuestOsFeatureTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GuestOsFeatureTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GuestOsFeatureType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GuestOsFeatureTypeInput is an input type that accepts GuestOsFeatureTypeArgs and GuestOsFeatureTypeOutput values.
// You can construct a concrete instance of `GuestOsFeatureTypeInput` via:
//
//          GuestOsFeatureTypeArgs{...}
type GuestOsFeatureTypeInput interface {
	pulumi.Input

	ToGuestOsFeatureTypeOutput() GuestOsFeatureTypeOutput
	ToGuestOsFeatureTypeOutputWithContext(context.Context) GuestOsFeatureTypeOutput
}

var guestOsFeatureTypePtrType = reflect.TypeOf((**GuestOsFeatureType)(nil)).Elem()

type GuestOsFeatureTypePtrInput interface {
	pulumi.Input

	ToGuestOsFeatureTypePtrOutput() GuestOsFeatureTypePtrOutput
	ToGuestOsFeatureTypePtrOutputWithContext(context.Context) GuestOsFeatureTypePtrOutput
}

type guestOsFeatureTypePtr string

func GuestOsFeatureTypePtr(v string) GuestOsFeatureTypePtrInput {
	return (*guestOsFeatureTypePtr)(&v)
}

func (*guestOsFeatureTypePtr) ElementType() reflect.Type {
	return guestOsFeatureTypePtrType
}

func (in *guestOsFeatureTypePtr) ToGuestOsFeatureTypePtrOutput() GuestOsFeatureTypePtrOutput {
	return pulumi.ToOutput(in).(GuestOsFeatureTypePtrOutput)
}

func (in *guestOsFeatureTypePtr) ToGuestOsFeatureTypePtrOutputWithContext(ctx context.Context) GuestOsFeatureTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GuestOsFeatureTypePtrOutput)
}

// Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTP2 health check follows behavior specified in port and portName fields.
type HTTP2HealthCheckPortSpecification string

const (
	// The port number in port is used for health checking.
	HTTP2HealthCheckPortSpecificationUseFixedPort = HTTP2HealthCheckPortSpecification("USE_FIXED_PORT")
	// The portName is used for health checking.
	HTTP2HealthCheckPortSpecificationUseNamedPort = HTTP2HealthCheckPortSpecification("USE_NAMED_PORT")
	// For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
	HTTP2HealthCheckPortSpecificationUseServingPort = HTTP2HealthCheckPortSpecification("USE_SERVING_PORT")
)

func (HTTP2HealthCheckPortSpecification) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTP2HealthCheckPortSpecification)(nil)).Elem()
}

func (e HTTP2HealthCheckPortSpecification) ToHTTP2HealthCheckPortSpecificationOutput() HTTP2HealthCheckPortSpecificationOutput {
	return pulumi.ToOutput(e).(HTTP2HealthCheckPortSpecificationOutput)
}

func (e HTTP2HealthCheckPortSpecification) ToHTTP2HealthCheckPortSpecificationOutputWithContext(ctx context.Context) HTTP2HealthCheckPortSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTP2HealthCheckPortSpecificationOutput)
}

func (e HTTP2HealthCheckPortSpecification) ToHTTP2HealthCheckPortSpecificationPtrOutput() HTTP2HealthCheckPortSpecificationPtrOutput {
	return e.ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (e HTTP2HealthCheckPortSpecification) ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckPortSpecificationPtrOutput {
	return HTTP2HealthCheckPortSpecification(e).ToHTTP2HealthCheckPortSpecificationOutputWithContext(ctx).ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(ctx)
}

func (e HTTP2HealthCheckPortSpecification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTP2HealthCheckPortSpecification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTP2HealthCheckPortSpecification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTP2HealthCheckPortSpecification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTP2HealthCheckPortSpecificationOutput struct{ *pulumi.OutputState }

func (HTTP2HealthCheckPortSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTP2HealthCheckPortSpecification)(nil)).Elem()
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToHTTP2HealthCheckPortSpecificationOutput() HTTP2HealthCheckPortSpecificationOutput {
	return o
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToHTTP2HealthCheckPortSpecificationOutputWithContext(ctx context.Context) HTTP2HealthCheckPortSpecificationOutput {
	return o
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToHTTP2HealthCheckPortSpecificationPtrOutput() HTTP2HealthCheckPortSpecificationPtrOutput {
	return o.ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckPortSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTP2HealthCheckPortSpecification) *HTTP2HealthCheckPortSpecification {
		return &v
	}).(HTTP2HealthCheckPortSpecificationPtrOutput)
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTP2HealthCheckPortSpecification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckPortSpecificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTP2HealthCheckPortSpecification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTP2HealthCheckPortSpecificationPtrOutput struct{ *pulumi.OutputState }

func (HTTP2HealthCheckPortSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTP2HealthCheckPortSpecification)(nil)).Elem()
}

func (o HTTP2HealthCheckPortSpecificationPtrOutput) ToHTTP2HealthCheckPortSpecificationPtrOutput() HTTP2HealthCheckPortSpecificationPtrOutput {
	return o
}

func (o HTTP2HealthCheckPortSpecificationPtrOutput) ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckPortSpecificationPtrOutput {
	return o
}

func (o HTTP2HealthCheckPortSpecificationPtrOutput) Elem() HTTP2HealthCheckPortSpecificationOutput {
	return o.ApplyT(func(v *HTTP2HealthCheckPortSpecification) HTTP2HealthCheckPortSpecification {
		if v != nil {
			return *v
		}
		var ret HTTP2HealthCheckPortSpecification
		return ret
	}).(HTTP2HealthCheckPortSpecificationOutput)
}

func (o HTTP2HealthCheckPortSpecificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckPortSpecificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTP2HealthCheckPortSpecification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTP2HealthCheckPortSpecificationInput is an input type that accepts HTTP2HealthCheckPortSpecificationArgs and HTTP2HealthCheckPortSpecificationOutput values.
// You can construct a concrete instance of `HTTP2HealthCheckPortSpecificationInput` via:
//
//          HTTP2HealthCheckPortSpecificationArgs{...}
type HTTP2HealthCheckPortSpecificationInput interface {
	pulumi.Input

	ToHTTP2HealthCheckPortSpecificationOutput() HTTP2HealthCheckPortSpecificationOutput
	ToHTTP2HealthCheckPortSpecificationOutputWithContext(context.Context) HTTP2HealthCheckPortSpecificationOutput
}

var http2healthCheckPortSpecificationPtrType = reflect.TypeOf((**HTTP2HealthCheckPortSpecification)(nil)).Elem()

type HTTP2HealthCheckPortSpecificationPtrInput interface {
	pulumi.Input

	ToHTTP2HealthCheckPortSpecificationPtrOutput() HTTP2HealthCheckPortSpecificationPtrOutput
	ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(context.Context) HTTP2HealthCheckPortSpecificationPtrOutput
}

type http2healthCheckPortSpecificationPtr string

func HTTP2HealthCheckPortSpecificationPtr(v string) HTTP2HealthCheckPortSpecificationPtrInput {
	return (*http2healthCheckPortSpecificationPtr)(&v)
}

func (*http2healthCheckPortSpecificationPtr) ElementType() reflect.Type {
	return http2healthCheckPortSpecificationPtrType
}

func (in *http2healthCheckPortSpecificationPtr) ToHTTP2HealthCheckPortSpecificationPtrOutput() HTTP2HealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutput(in).(HTTP2HealthCheckPortSpecificationPtrOutput)
}

func (in *http2healthCheckPortSpecificationPtr) ToHTTP2HealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTP2HealthCheckPortSpecificationPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type HTTP2HealthCheckProxyHeader string

const (
	HTTP2HealthCheckProxyHeaderNone    = HTTP2HealthCheckProxyHeader("NONE")
	HTTP2HealthCheckProxyHeaderProxyV1 = HTTP2HealthCheckProxyHeader("PROXY_V1")
)

func (HTTP2HealthCheckProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTP2HealthCheckProxyHeader)(nil)).Elem()
}

func (e HTTP2HealthCheckProxyHeader) ToHTTP2HealthCheckProxyHeaderOutput() HTTP2HealthCheckProxyHeaderOutput {
	return pulumi.ToOutput(e).(HTTP2HealthCheckProxyHeaderOutput)
}

func (e HTTP2HealthCheckProxyHeader) ToHTTP2HealthCheckProxyHeaderOutputWithContext(ctx context.Context) HTTP2HealthCheckProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTP2HealthCheckProxyHeaderOutput)
}

func (e HTTP2HealthCheckProxyHeader) ToHTTP2HealthCheckProxyHeaderPtrOutput() HTTP2HealthCheckProxyHeaderPtrOutput {
	return e.ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (e HTTP2HealthCheckProxyHeader) ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckProxyHeaderPtrOutput {
	return HTTP2HealthCheckProxyHeader(e).ToHTTP2HealthCheckProxyHeaderOutputWithContext(ctx).ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(ctx)
}

func (e HTTP2HealthCheckProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTP2HealthCheckProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTP2HealthCheckProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTP2HealthCheckProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTP2HealthCheckProxyHeaderOutput struct{ *pulumi.OutputState }

func (HTTP2HealthCheckProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTP2HealthCheckProxyHeader)(nil)).Elem()
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToHTTP2HealthCheckProxyHeaderOutput() HTTP2HealthCheckProxyHeaderOutput {
	return o
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToHTTP2HealthCheckProxyHeaderOutputWithContext(ctx context.Context) HTTP2HealthCheckProxyHeaderOutput {
	return o
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToHTTP2HealthCheckProxyHeaderPtrOutput() HTTP2HealthCheckProxyHeaderPtrOutput {
	return o.ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTP2HealthCheckProxyHeader) *HTTP2HealthCheckProxyHeader {
		return &v
	}).(HTTP2HealthCheckProxyHeaderPtrOutput)
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTP2HealthCheckProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTP2HealthCheckProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTP2HealthCheckProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (HTTP2HealthCheckProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTP2HealthCheckProxyHeader)(nil)).Elem()
}

func (o HTTP2HealthCheckProxyHeaderPtrOutput) ToHTTP2HealthCheckProxyHeaderPtrOutput() HTTP2HealthCheckProxyHeaderPtrOutput {
	return o
}

func (o HTTP2HealthCheckProxyHeaderPtrOutput) ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckProxyHeaderPtrOutput {
	return o
}

func (o HTTP2HealthCheckProxyHeaderPtrOutput) Elem() HTTP2HealthCheckProxyHeaderOutput {
	return o.ApplyT(func(v *HTTP2HealthCheckProxyHeader) HTTP2HealthCheckProxyHeader {
		if v != nil {
			return *v
		}
		var ret HTTP2HealthCheckProxyHeader
		return ret
	}).(HTTP2HealthCheckProxyHeaderOutput)
}

func (o HTTP2HealthCheckProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTP2HealthCheckProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTP2HealthCheckProxyHeaderInput is an input type that accepts HTTP2HealthCheckProxyHeaderArgs and HTTP2HealthCheckProxyHeaderOutput values.
// You can construct a concrete instance of `HTTP2HealthCheckProxyHeaderInput` via:
//
//          HTTP2HealthCheckProxyHeaderArgs{...}
type HTTP2HealthCheckProxyHeaderInput interface {
	pulumi.Input

	ToHTTP2HealthCheckProxyHeaderOutput() HTTP2HealthCheckProxyHeaderOutput
	ToHTTP2HealthCheckProxyHeaderOutputWithContext(context.Context) HTTP2HealthCheckProxyHeaderOutput
}

var http2healthCheckProxyHeaderPtrType = reflect.TypeOf((**HTTP2HealthCheckProxyHeader)(nil)).Elem()

type HTTP2HealthCheckProxyHeaderPtrInput interface {
	pulumi.Input

	ToHTTP2HealthCheckProxyHeaderPtrOutput() HTTP2HealthCheckProxyHeaderPtrOutput
	ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(context.Context) HTTP2HealthCheckProxyHeaderPtrOutput
}

type http2healthCheckProxyHeaderPtr string

func HTTP2HealthCheckProxyHeaderPtr(v string) HTTP2HealthCheckProxyHeaderPtrInput {
	return (*http2healthCheckProxyHeaderPtr)(&v)
}

func (*http2healthCheckProxyHeaderPtr) ElementType() reflect.Type {
	return http2healthCheckProxyHeaderPtrType
}

func (in *http2healthCheckProxyHeaderPtr) ToHTTP2HealthCheckProxyHeaderPtrOutput() HTTP2HealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(HTTP2HealthCheckProxyHeaderPtrOutput)
}

func (in *http2healthCheckProxyHeaderPtr) ToHTTP2HealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTP2HealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTP2HealthCheckProxyHeaderPtrOutput)
}

// Weight report mode. used for weighted Load Balancing.
type HTTP2HealthCheckWeightReportMode string

const (
	// Health Checker will not parse the header field.
	HTTP2HealthCheckWeightReportModeDisable = HTTP2HealthCheckWeightReportMode("DISABLE")
	// Health Checker will parse and report the weight in the header field, but load balancing will not be based on the weights and will use equal weights.
	HTTP2HealthCheckWeightReportModeDryRun = HTTP2HealthCheckWeightReportMode("DRY_RUN")
	// Health Checker will try to parse and report the weight in the header field, and load balancing will be based on the weights as long as all backends have a valid weight or only a subset of backends has the UNAVAILABLE_WEIGHT WeightError. The latter case is to continue the weighted load balancing while some backends are in TIMEOUT or UNKNOWN health status.
	HTTP2HealthCheckWeightReportModeEnable = HTTP2HealthCheckWeightReportMode("ENABLE")
)

func (HTTP2HealthCheckWeightReportMode) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTP2HealthCheckWeightReportMode)(nil)).Elem()
}

func (e HTTP2HealthCheckWeightReportMode) ToHTTP2HealthCheckWeightReportModeOutput() HTTP2HealthCheckWeightReportModeOutput {
	return pulumi.ToOutput(e).(HTTP2HealthCheckWeightReportModeOutput)
}

func (e HTTP2HealthCheckWeightReportMode) ToHTTP2HealthCheckWeightReportModeOutputWithContext(ctx context.Context) HTTP2HealthCheckWeightReportModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTP2HealthCheckWeightReportModeOutput)
}

func (e HTTP2HealthCheckWeightReportMode) ToHTTP2HealthCheckWeightReportModePtrOutput() HTTP2HealthCheckWeightReportModePtrOutput {
	return e.ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(context.Background())
}

func (e HTTP2HealthCheckWeightReportMode) ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTP2HealthCheckWeightReportModePtrOutput {
	return HTTP2HealthCheckWeightReportMode(e).ToHTTP2HealthCheckWeightReportModeOutputWithContext(ctx).ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(ctx)
}

func (e HTTP2HealthCheckWeightReportMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTP2HealthCheckWeightReportMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTP2HealthCheckWeightReportMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTP2HealthCheckWeightReportMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTP2HealthCheckWeightReportModeOutput struct{ *pulumi.OutputState }

func (HTTP2HealthCheckWeightReportModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTP2HealthCheckWeightReportMode)(nil)).Elem()
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToHTTP2HealthCheckWeightReportModeOutput() HTTP2HealthCheckWeightReportModeOutput {
	return o
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToHTTP2HealthCheckWeightReportModeOutputWithContext(ctx context.Context) HTTP2HealthCheckWeightReportModeOutput {
	return o
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToHTTP2HealthCheckWeightReportModePtrOutput() HTTP2HealthCheckWeightReportModePtrOutput {
	return o.ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTP2HealthCheckWeightReportModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTP2HealthCheckWeightReportMode) *HTTP2HealthCheckWeightReportMode {
		return &v
	}).(HTTP2HealthCheckWeightReportModePtrOutput)
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTP2HealthCheckWeightReportMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckWeightReportModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTP2HealthCheckWeightReportMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTP2HealthCheckWeightReportModePtrOutput struct{ *pulumi.OutputState }

func (HTTP2HealthCheckWeightReportModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTP2HealthCheckWeightReportMode)(nil)).Elem()
}

func (o HTTP2HealthCheckWeightReportModePtrOutput) ToHTTP2HealthCheckWeightReportModePtrOutput() HTTP2HealthCheckWeightReportModePtrOutput {
	return o
}

func (o HTTP2HealthCheckWeightReportModePtrOutput) ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTP2HealthCheckWeightReportModePtrOutput {
	return o
}

func (o HTTP2HealthCheckWeightReportModePtrOutput) Elem() HTTP2HealthCheckWeightReportModeOutput {
	return o.ApplyT(func(v *HTTP2HealthCheckWeightReportMode) HTTP2HealthCheckWeightReportMode {
		if v != nil {
			return *v
		}
		var ret HTTP2HealthCheckWeightReportMode
		return ret
	}).(HTTP2HealthCheckWeightReportModeOutput)
}

func (o HTTP2HealthCheckWeightReportModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTP2HealthCheckWeightReportModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTP2HealthCheckWeightReportMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTP2HealthCheckWeightReportModeInput is an input type that accepts HTTP2HealthCheckWeightReportModeArgs and HTTP2HealthCheckWeightReportModeOutput values.
// You can construct a concrete instance of `HTTP2HealthCheckWeightReportModeInput` via:
//
//          HTTP2HealthCheckWeightReportModeArgs{...}
type HTTP2HealthCheckWeightReportModeInput interface {
	pulumi.Input

	ToHTTP2HealthCheckWeightReportModeOutput() HTTP2HealthCheckWeightReportModeOutput
	ToHTTP2HealthCheckWeightReportModeOutputWithContext(context.Context) HTTP2HealthCheckWeightReportModeOutput
}

var http2healthCheckWeightReportModePtrType = reflect.TypeOf((**HTTP2HealthCheckWeightReportMode)(nil)).Elem()

type HTTP2HealthCheckWeightReportModePtrInput interface {
	pulumi.Input

	ToHTTP2HealthCheckWeightReportModePtrOutput() HTTP2HealthCheckWeightReportModePtrOutput
	ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(context.Context) HTTP2HealthCheckWeightReportModePtrOutput
}

type http2healthCheckWeightReportModePtr string

func HTTP2HealthCheckWeightReportModePtr(v string) HTTP2HealthCheckWeightReportModePtrInput {
	return (*http2healthCheckWeightReportModePtr)(&v)
}

func (*http2healthCheckWeightReportModePtr) ElementType() reflect.Type {
	return http2healthCheckWeightReportModePtrType
}

func (in *http2healthCheckWeightReportModePtr) ToHTTP2HealthCheckWeightReportModePtrOutput() HTTP2HealthCheckWeightReportModePtrOutput {
	return pulumi.ToOutput(in).(HTTP2HealthCheckWeightReportModePtrOutput)
}

func (in *http2healthCheckWeightReportModePtr) ToHTTP2HealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTP2HealthCheckWeightReportModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTP2HealthCheckWeightReportModePtrOutput)
}

// Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTP health check follows behavior specified in port and portName fields.
type HTTPHealthCheckPortSpecification string

const (
	// The port number in port is used for health checking.
	HTTPHealthCheckPortSpecificationUseFixedPort = HTTPHealthCheckPortSpecification("USE_FIXED_PORT")
	// The portName is used for health checking.
	HTTPHealthCheckPortSpecificationUseNamedPort = HTTPHealthCheckPortSpecification("USE_NAMED_PORT")
	// For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
	HTTPHealthCheckPortSpecificationUseServingPort = HTTPHealthCheckPortSpecification("USE_SERVING_PORT")
)

func (HTTPHealthCheckPortSpecification) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHealthCheckPortSpecification)(nil)).Elem()
}

func (e HTTPHealthCheckPortSpecification) ToHTTPHealthCheckPortSpecificationOutput() HTTPHealthCheckPortSpecificationOutput {
	return pulumi.ToOutput(e).(HTTPHealthCheckPortSpecificationOutput)
}

func (e HTTPHealthCheckPortSpecification) ToHTTPHealthCheckPortSpecificationOutputWithContext(ctx context.Context) HTTPHealthCheckPortSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTPHealthCheckPortSpecificationOutput)
}

func (e HTTPHealthCheckPortSpecification) ToHTTPHealthCheckPortSpecificationPtrOutput() HTTPHealthCheckPortSpecificationPtrOutput {
	return e.ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (e HTTPHealthCheckPortSpecification) ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPHealthCheckPortSpecificationPtrOutput {
	return HTTPHealthCheckPortSpecification(e).ToHTTPHealthCheckPortSpecificationOutputWithContext(ctx).ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(ctx)
}

func (e HTTPHealthCheckPortSpecification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPHealthCheckPortSpecification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPHealthCheckPortSpecification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTPHealthCheckPortSpecification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTPHealthCheckPortSpecificationOutput struct{ *pulumi.OutputState }

func (HTTPHealthCheckPortSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHealthCheckPortSpecification)(nil)).Elem()
}

func (o HTTPHealthCheckPortSpecificationOutput) ToHTTPHealthCheckPortSpecificationOutput() HTTPHealthCheckPortSpecificationOutput {
	return o
}

func (o HTTPHealthCheckPortSpecificationOutput) ToHTTPHealthCheckPortSpecificationOutputWithContext(ctx context.Context) HTTPHealthCheckPortSpecificationOutput {
	return o
}

func (o HTTPHealthCheckPortSpecificationOutput) ToHTTPHealthCheckPortSpecificationPtrOutput() HTTPHealthCheckPortSpecificationPtrOutput {
	return o.ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckPortSpecificationOutput) ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPHealthCheckPortSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPHealthCheckPortSpecification) *HTTPHealthCheckPortSpecification {
		return &v
	}).(HTTPHealthCheckPortSpecificationPtrOutput)
}

func (o HTTPHealthCheckPortSpecificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTPHealthCheckPortSpecificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPHealthCheckPortSpecification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTPHealthCheckPortSpecificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckPortSpecificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPHealthCheckPortSpecification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTPHealthCheckPortSpecificationPtrOutput struct{ *pulumi.OutputState }

func (HTTPHealthCheckPortSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPHealthCheckPortSpecification)(nil)).Elem()
}

func (o HTTPHealthCheckPortSpecificationPtrOutput) ToHTTPHealthCheckPortSpecificationPtrOutput() HTTPHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o HTTPHealthCheckPortSpecificationPtrOutput) ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o HTTPHealthCheckPortSpecificationPtrOutput) Elem() HTTPHealthCheckPortSpecificationOutput {
	return o.ApplyT(func(v *HTTPHealthCheckPortSpecification) HTTPHealthCheckPortSpecification {
		if v != nil {
			return *v
		}
		var ret HTTPHealthCheckPortSpecification
		return ret
	}).(HTTPHealthCheckPortSpecificationOutput)
}

func (o HTTPHealthCheckPortSpecificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckPortSpecificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTPHealthCheckPortSpecification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTPHealthCheckPortSpecificationInput is an input type that accepts HTTPHealthCheckPortSpecificationArgs and HTTPHealthCheckPortSpecificationOutput values.
// You can construct a concrete instance of `HTTPHealthCheckPortSpecificationInput` via:
//
//          HTTPHealthCheckPortSpecificationArgs{...}
type HTTPHealthCheckPortSpecificationInput interface {
	pulumi.Input

	ToHTTPHealthCheckPortSpecificationOutput() HTTPHealthCheckPortSpecificationOutput
	ToHTTPHealthCheckPortSpecificationOutputWithContext(context.Context) HTTPHealthCheckPortSpecificationOutput
}

var httphealthCheckPortSpecificationPtrType = reflect.TypeOf((**HTTPHealthCheckPortSpecification)(nil)).Elem()

type HTTPHealthCheckPortSpecificationPtrInput interface {
	pulumi.Input

	ToHTTPHealthCheckPortSpecificationPtrOutput() HTTPHealthCheckPortSpecificationPtrOutput
	ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(context.Context) HTTPHealthCheckPortSpecificationPtrOutput
}

type httphealthCheckPortSpecificationPtr string

func HTTPHealthCheckPortSpecificationPtr(v string) HTTPHealthCheckPortSpecificationPtrInput {
	return (*httphealthCheckPortSpecificationPtr)(&v)
}

func (*httphealthCheckPortSpecificationPtr) ElementType() reflect.Type {
	return httphealthCheckPortSpecificationPtrType
}

func (in *httphealthCheckPortSpecificationPtr) ToHTTPHealthCheckPortSpecificationPtrOutput() HTTPHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutput(in).(HTTPHealthCheckPortSpecificationPtrOutput)
}

func (in *httphealthCheckPortSpecificationPtr) ToHTTPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTPHealthCheckPortSpecificationPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type HTTPHealthCheckProxyHeader string

const (
	HTTPHealthCheckProxyHeaderNone    = HTTPHealthCheckProxyHeader("NONE")
	HTTPHealthCheckProxyHeaderProxyV1 = HTTPHealthCheckProxyHeader("PROXY_V1")
)

func (HTTPHealthCheckProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHealthCheckProxyHeader)(nil)).Elem()
}

func (e HTTPHealthCheckProxyHeader) ToHTTPHealthCheckProxyHeaderOutput() HTTPHealthCheckProxyHeaderOutput {
	return pulumi.ToOutput(e).(HTTPHealthCheckProxyHeaderOutput)
}

func (e HTTPHealthCheckProxyHeader) ToHTTPHealthCheckProxyHeaderOutputWithContext(ctx context.Context) HTTPHealthCheckProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTPHealthCheckProxyHeaderOutput)
}

func (e HTTPHealthCheckProxyHeader) ToHTTPHealthCheckProxyHeaderPtrOutput() HTTPHealthCheckProxyHeaderPtrOutput {
	return e.ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (e HTTPHealthCheckProxyHeader) ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPHealthCheckProxyHeaderPtrOutput {
	return HTTPHealthCheckProxyHeader(e).ToHTTPHealthCheckProxyHeaderOutputWithContext(ctx).ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(ctx)
}

func (e HTTPHealthCheckProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPHealthCheckProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPHealthCheckProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTPHealthCheckProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTPHealthCheckProxyHeaderOutput struct{ *pulumi.OutputState }

func (HTTPHealthCheckProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHealthCheckProxyHeader)(nil)).Elem()
}

func (o HTTPHealthCheckProxyHeaderOutput) ToHTTPHealthCheckProxyHeaderOutput() HTTPHealthCheckProxyHeaderOutput {
	return o
}

func (o HTTPHealthCheckProxyHeaderOutput) ToHTTPHealthCheckProxyHeaderOutputWithContext(ctx context.Context) HTTPHealthCheckProxyHeaderOutput {
	return o
}

func (o HTTPHealthCheckProxyHeaderOutput) ToHTTPHealthCheckProxyHeaderPtrOutput() HTTPHealthCheckProxyHeaderPtrOutput {
	return o.ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckProxyHeaderOutput) ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPHealthCheckProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPHealthCheckProxyHeader) *HTTPHealthCheckProxyHeader {
		return &v
	}).(HTTPHealthCheckProxyHeaderPtrOutput)
}

func (o HTTPHealthCheckProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTPHealthCheckProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPHealthCheckProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTPHealthCheckProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPHealthCheckProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTPHealthCheckProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (HTTPHealthCheckProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPHealthCheckProxyHeader)(nil)).Elem()
}

func (o HTTPHealthCheckProxyHeaderPtrOutput) ToHTTPHealthCheckProxyHeaderPtrOutput() HTTPHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o HTTPHealthCheckProxyHeaderPtrOutput) ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o HTTPHealthCheckProxyHeaderPtrOutput) Elem() HTTPHealthCheckProxyHeaderOutput {
	return o.ApplyT(func(v *HTTPHealthCheckProxyHeader) HTTPHealthCheckProxyHeader {
		if v != nil {
			return *v
		}
		var ret HTTPHealthCheckProxyHeader
		return ret
	}).(HTTPHealthCheckProxyHeaderOutput)
}

func (o HTTPHealthCheckProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTPHealthCheckProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTPHealthCheckProxyHeaderInput is an input type that accepts HTTPHealthCheckProxyHeaderArgs and HTTPHealthCheckProxyHeaderOutput values.
// You can construct a concrete instance of `HTTPHealthCheckProxyHeaderInput` via:
//
//          HTTPHealthCheckProxyHeaderArgs{...}
type HTTPHealthCheckProxyHeaderInput interface {
	pulumi.Input

	ToHTTPHealthCheckProxyHeaderOutput() HTTPHealthCheckProxyHeaderOutput
	ToHTTPHealthCheckProxyHeaderOutputWithContext(context.Context) HTTPHealthCheckProxyHeaderOutput
}

var httphealthCheckProxyHeaderPtrType = reflect.TypeOf((**HTTPHealthCheckProxyHeader)(nil)).Elem()

type HTTPHealthCheckProxyHeaderPtrInput interface {
	pulumi.Input

	ToHTTPHealthCheckProxyHeaderPtrOutput() HTTPHealthCheckProxyHeaderPtrOutput
	ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(context.Context) HTTPHealthCheckProxyHeaderPtrOutput
}

type httphealthCheckProxyHeaderPtr string

func HTTPHealthCheckProxyHeaderPtr(v string) HTTPHealthCheckProxyHeaderPtrInput {
	return (*httphealthCheckProxyHeaderPtr)(&v)
}

func (*httphealthCheckProxyHeaderPtr) ElementType() reflect.Type {
	return httphealthCheckProxyHeaderPtrType
}

func (in *httphealthCheckProxyHeaderPtr) ToHTTPHealthCheckProxyHeaderPtrOutput() HTTPHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(HTTPHealthCheckProxyHeaderPtrOutput)
}

func (in *httphealthCheckProxyHeaderPtr) ToHTTPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTPHealthCheckProxyHeaderPtrOutput)
}

// Weight report mode. used for weighted Load Balancing.
type HTTPHealthCheckWeightReportMode string

const (
	// Health Checker will not parse the header field.
	HTTPHealthCheckWeightReportModeDisable = HTTPHealthCheckWeightReportMode("DISABLE")
	// Health Checker will parse and report the weight in the header field, but load balancing will not be based on the weights and will use equal weights.
	HTTPHealthCheckWeightReportModeDryRun = HTTPHealthCheckWeightReportMode("DRY_RUN")
	// Health Checker will try to parse and report the weight in the header field, and load balancing will be based on the weights as long as all backends have a valid weight or only a subset of backends has the UNAVAILABLE_WEIGHT WeightError. The latter case is to continue the weighted load balancing while some backends are in TIMEOUT or UNKNOWN health status.
	HTTPHealthCheckWeightReportModeEnable = HTTPHealthCheckWeightReportMode("ENABLE")
)

func (HTTPHealthCheckWeightReportMode) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHealthCheckWeightReportMode)(nil)).Elem()
}

func (e HTTPHealthCheckWeightReportMode) ToHTTPHealthCheckWeightReportModeOutput() HTTPHealthCheckWeightReportModeOutput {
	return pulumi.ToOutput(e).(HTTPHealthCheckWeightReportModeOutput)
}

func (e HTTPHealthCheckWeightReportMode) ToHTTPHealthCheckWeightReportModeOutputWithContext(ctx context.Context) HTTPHealthCheckWeightReportModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTPHealthCheckWeightReportModeOutput)
}

func (e HTTPHealthCheckWeightReportMode) ToHTTPHealthCheckWeightReportModePtrOutput() HTTPHealthCheckWeightReportModePtrOutput {
	return e.ToHTTPHealthCheckWeightReportModePtrOutputWithContext(context.Background())
}

func (e HTTPHealthCheckWeightReportMode) ToHTTPHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPHealthCheckWeightReportModePtrOutput {
	return HTTPHealthCheckWeightReportMode(e).ToHTTPHealthCheckWeightReportModeOutputWithContext(ctx).ToHTTPHealthCheckWeightReportModePtrOutputWithContext(ctx)
}

func (e HTTPHealthCheckWeightReportMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPHealthCheckWeightReportMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPHealthCheckWeightReportMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTPHealthCheckWeightReportMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTPHealthCheckWeightReportModeOutput struct{ *pulumi.OutputState }

func (HTTPHealthCheckWeightReportModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHealthCheckWeightReportMode)(nil)).Elem()
}

func (o HTTPHealthCheckWeightReportModeOutput) ToHTTPHealthCheckWeightReportModeOutput() HTTPHealthCheckWeightReportModeOutput {
	return o
}

func (o HTTPHealthCheckWeightReportModeOutput) ToHTTPHealthCheckWeightReportModeOutputWithContext(ctx context.Context) HTTPHealthCheckWeightReportModeOutput {
	return o
}

func (o HTTPHealthCheckWeightReportModeOutput) ToHTTPHealthCheckWeightReportModePtrOutput() HTTPHealthCheckWeightReportModePtrOutput {
	return o.ToHTTPHealthCheckWeightReportModePtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckWeightReportModeOutput) ToHTTPHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPHealthCheckWeightReportModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPHealthCheckWeightReportMode) *HTTPHealthCheckWeightReportMode {
		return &v
	}).(HTTPHealthCheckWeightReportModePtrOutput)
}

func (o HTTPHealthCheckWeightReportModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTPHealthCheckWeightReportModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPHealthCheckWeightReportMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTPHealthCheckWeightReportModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckWeightReportModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPHealthCheckWeightReportMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTPHealthCheckWeightReportModePtrOutput struct{ *pulumi.OutputState }

func (HTTPHealthCheckWeightReportModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPHealthCheckWeightReportMode)(nil)).Elem()
}

func (o HTTPHealthCheckWeightReportModePtrOutput) ToHTTPHealthCheckWeightReportModePtrOutput() HTTPHealthCheckWeightReportModePtrOutput {
	return o
}

func (o HTTPHealthCheckWeightReportModePtrOutput) ToHTTPHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPHealthCheckWeightReportModePtrOutput {
	return o
}

func (o HTTPHealthCheckWeightReportModePtrOutput) Elem() HTTPHealthCheckWeightReportModeOutput {
	return o.ApplyT(func(v *HTTPHealthCheckWeightReportMode) HTTPHealthCheckWeightReportMode {
		if v != nil {
			return *v
		}
		var ret HTTPHealthCheckWeightReportMode
		return ret
	}).(HTTPHealthCheckWeightReportModeOutput)
}

func (o HTTPHealthCheckWeightReportModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPHealthCheckWeightReportModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTPHealthCheckWeightReportMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTPHealthCheckWeightReportModeInput is an input type that accepts HTTPHealthCheckWeightReportModeArgs and HTTPHealthCheckWeightReportModeOutput values.
// You can construct a concrete instance of `HTTPHealthCheckWeightReportModeInput` via:
//
//          HTTPHealthCheckWeightReportModeArgs{...}
type HTTPHealthCheckWeightReportModeInput interface {
	pulumi.Input

	ToHTTPHealthCheckWeightReportModeOutput() HTTPHealthCheckWeightReportModeOutput
	ToHTTPHealthCheckWeightReportModeOutputWithContext(context.Context) HTTPHealthCheckWeightReportModeOutput
}

var httphealthCheckWeightReportModePtrType = reflect.TypeOf((**HTTPHealthCheckWeightReportMode)(nil)).Elem()

type HTTPHealthCheckWeightReportModePtrInput interface {
	pulumi.Input

	ToHTTPHealthCheckWeightReportModePtrOutput() HTTPHealthCheckWeightReportModePtrOutput
	ToHTTPHealthCheckWeightReportModePtrOutputWithContext(context.Context) HTTPHealthCheckWeightReportModePtrOutput
}

type httphealthCheckWeightReportModePtr string

func HTTPHealthCheckWeightReportModePtr(v string) HTTPHealthCheckWeightReportModePtrInput {
	return (*httphealthCheckWeightReportModePtr)(&v)
}

func (*httphealthCheckWeightReportModePtr) ElementType() reflect.Type {
	return httphealthCheckWeightReportModePtrType
}

func (in *httphealthCheckWeightReportModePtr) ToHTTPHealthCheckWeightReportModePtrOutput() HTTPHealthCheckWeightReportModePtrOutput {
	return pulumi.ToOutput(in).(HTTPHealthCheckWeightReportModePtrOutput)
}

func (in *httphealthCheckWeightReportModePtr) ToHTTPHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPHealthCheckWeightReportModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTPHealthCheckWeightReportModePtrOutput)
}

// Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTPS health check follows behavior specified in port and portName fields.
type HTTPSHealthCheckPortSpecification string

const (
	// The port number in port is used for health checking.
	HTTPSHealthCheckPortSpecificationUseFixedPort = HTTPSHealthCheckPortSpecification("USE_FIXED_PORT")
	// The portName is used for health checking.
	HTTPSHealthCheckPortSpecificationUseNamedPort = HTTPSHealthCheckPortSpecification("USE_NAMED_PORT")
	// For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
	HTTPSHealthCheckPortSpecificationUseServingPort = HTTPSHealthCheckPortSpecification("USE_SERVING_PORT")
)

func (HTTPSHealthCheckPortSpecification) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSHealthCheckPortSpecification)(nil)).Elem()
}

func (e HTTPSHealthCheckPortSpecification) ToHTTPSHealthCheckPortSpecificationOutput() HTTPSHealthCheckPortSpecificationOutput {
	return pulumi.ToOutput(e).(HTTPSHealthCheckPortSpecificationOutput)
}

func (e HTTPSHealthCheckPortSpecification) ToHTTPSHealthCheckPortSpecificationOutputWithContext(ctx context.Context) HTTPSHealthCheckPortSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTPSHealthCheckPortSpecificationOutput)
}

func (e HTTPSHealthCheckPortSpecification) ToHTTPSHealthCheckPortSpecificationPtrOutput() HTTPSHealthCheckPortSpecificationPtrOutput {
	return e.ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (e HTTPSHealthCheckPortSpecification) ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckPortSpecificationPtrOutput {
	return HTTPSHealthCheckPortSpecification(e).ToHTTPSHealthCheckPortSpecificationOutputWithContext(ctx).ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(ctx)
}

func (e HTTPSHealthCheckPortSpecification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSHealthCheckPortSpecification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSHealthCheckPortSpecification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTPSHealthCheckPortSpecification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTPSHealthCheckPortSpecificationOutput struct{ *pulumi.OutputState }

func (HTTPSHealthCheckPortSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSHealthCheckPortSpecification)(nil)).Elem()
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToHTTPSHealthCheckPortSpecificationOutput() HTTPSHealthCheckPortSpecificationOutput {
	return o
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToHTTPSHealthCheckPortSpecificationOutputWithContext(ctx context.Context) HTTPSHealthCheckPortSpecificationOutput {
	return o
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToHTTPSHealthCheckPortSpecificationPtrOutput() HTTPSHealthCheckPortSpecificationPtrOutput {
	return o.ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckPortSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPSHealthCheckPortSpecification) *HTTPSHealthCheckPortSpecification {
		return &v
	}).(HTTPSHealthCheckPortSpecificationPtrOutput)
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSHealthCheckPortSpecification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckPortSpecificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSHealthCheckPortSpecification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTPSHealthCheckPortSpecificationPtrOutput struct{ *pulumi.OutputState }

func (HTTPSHealthCheckPortSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPSHealthCheckPortSpecification)(nil)).Elem()
}

func (o HTTPSHealthCheckPortSpecificationPtrOutput) ToHTTPSHealthCheckPortSpecificationPtrOutput() HTTPSHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o HTTPSHealthCheckPortSpecificationPtrOutput) ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o HTTPSHealthCheckPortSpecificationPtrOutput) Elem() HTTPSHealthCheckPortSpecificationOutput {
	return o.ApplyT(func(v *HTTPSHealthCheckPortSpecification) HTTPSHealthCheckPortSpecification {
		if v != nil {
			return *v
		}
		var ret HTTPSHealthCheckPortSpecification
		return ret
	}).(HTTPSHealthCheckPortSpecificationOutput)
}

func (o HTTPSHealthCheckPortSpecificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckPortSpecificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTPSHealthCheckPortSpecification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTPSHealthCheckPortSpecificationInput is an input type that accepts HTTPSHealthCheckPortSpecificationArgs and HTTPSHealthCheckPortSpecificationOutput values.
// You can construct a concrete instance of `HTTPSHealthCheckPortSpecificationInput` via:
//
//          HTTPSHealthCheckPortSpecificationArgs{...}
type HTTPSHealthCheckPortSpecificationInput interface {
	pulumi.Input

	ToHTTPSHealthCheckPortSpecificationOutput() HTTPSHealthCheckPortSpecificationOutput
	ToHTTPSHealthCheckPortSpecificationOutputWithContext(context.Context) HTTPSHealthCheckPortSpecificationOutput
}

var httpshealthCheckPortSpecificationPtrType = reflect.TypeOf((**HTTPSHealthCheckPortSpecification)(nil)).Elem()

type HTTPSHealthCheckPortSpecificationPtrInput interface {
	pulumi.Input

	ToHTTPSHealthCheckPortSpecificationPtrOutput() HTTPSHealthCheckPortSpecificationPtrOutput
	ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(context.Context) HTTPSHealthCheckPortSpecificationPtrOutput
}

type httpshealthCheckPortSpecificationPtr string

func HTTPSHealthCheckPortSpecificationPtr(v string) HTTPSHealthCheckPortSpecificationPtrInput {
	return (*httpshealthCheckPortSpecificationPtr)(&v)
}

func (*httpshealthCheckPortSpecificationPtr) ElementType() reflect.Type {
	return httpshealthCheckPortSpecificationPtrType
}

func (in *httpshealthCheckPortSpecificationPtr) ToHTTPSHealthCheckPortSpecificationPtrOutput() HTTPSHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutput(in).(HTTPSHealthCheckPortSpecificationPtrOutput)
}

func (in *httpshealthCheckPortSpecificationPtr) ToHTTPSHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTPSHealthCheckPortSpecificationPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type HTTPSHealthCheckProxyHeader string

const (
	HTTPSHealthCheckProxyHeaderNone    = HTTPSHealthCheckProxyHeader("NONE")
	HTTPSHealthCheckProxyHeaderProxyV1 = HTTPSHealthCheckProxyHeader("PROXY_V1")
)

func (HTTPSHealthCheckProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSHealthCheckProxyHeader)(nil)).Elem()
}

func (e HTTPSHealthCheckProxyHeader) ToHTTPSHealthCheckProxyHeaderOutput() HTTPSHealthCheckProxyHeaderOutput {
	return pulumi.ToOutput(e).(HTTPSHealthCheckProxyHeaderOutput)
}

func (e HTTPSHealthCheckProxyHeader) ToHTTPSHealthCheckProxyHeaderOutputWithContext(ctx context.Context) HTTPSHealthCheckProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTPSHealthCheckProxyHeaderOutput)
}

func (e HTTPSHealthCheckProxyHeader) ToHTTPSHealthCheckProxyHeaderPtrOutput() HTTPSHealthCheckProxyHeaderPtrOutput {
	return e.ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (e HTTPSHealthCheckProxyHeader) ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckProxyHeaderPtrOutput {
	return HTTPSHealthCheckProxyHeader(e).ToHTTPSHealthCheckProxyHeaderOutputWithContext(ctx).ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(ctx)
}

func (e HTTPSHealthCheckProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSHealthCheckProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSHealthCheckProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTPSHealthCheckProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTPSHealthCheckProxyHeaderOutput struct{ *pulumi.OutputState }

func (HTTPSHealthCheckProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSHealthCheckProxyHeader)(nil)).Elem()
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToHTTPSHealthCheckProxyHeaderOutput() HTTPSHealthCheckProxyHeaderOutput {
	return o
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToHTTPSHealthCheckProxyHeaderOutputWithContext(ctx context.Context) HTTPSHealthCheckProxyHeaderOutput {
	return o
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToHTTPSHealthCheckProxyHeaderPtrOutput() HTTPSHealthCheckProxyHeaderPtrOutput {
	return o.ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPSHealthCheckProxyHeader) *HTTPSHealthCheckProxyHeader {
		return &v
	}).(HTTPSHealthCheckProxyHeaderPtrOutput)
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSHealthCheckProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSHealthCheckProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTPSHealthCheckProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (HTTPSHealthCheckProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPSHealthCheckProxyHeader)(nil)).Elem()
}

func (o HTTPSHealthCheckProxyHeaderPtrOutput) ToHTTPSHealthCheckProxyHeaderPtrOutput() HTTPSHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o HTTPSHealthCheckProxyHeaderPtrOutput) ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o HTTPSHealthCheckProxyHeaderPtrOutput) Elem() HTTPSHealthCheckProxyHeaderOutput {
	return o.ApplyT(func(v *HTTPSHealthCheckProxyHeader) HTTPSHealthCheckProxyHeader {
		if v != nil {
			return *v
		}
		var ret HTTPSHealthCheckProxyHeader
		return ret
	}).(HTTPSHealthCheckProxyHeaderOutput)
}

func (o HTTPSHealthCheckProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTPSHealthCheckProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTPSHealthCheckProxyHeaderInput is an input type that accepts HTTPSHealthCheckProxyHeaderArgs and HTTPSHealthCheckProxyHeaderOutput values.
// You can construct a concrete instance of `HTTPSHealthCheckProxyHeaderInput` via:
//
//          HTTPSHealthCheckProxyHeaderArgs{...}
type HTTPSHealthCheckProxyHeaderInput interface {
	pulumi.Input

	ToHTTPSHealthCheckProxyHeaderOutput() HTTPSHealthCheckProxyHeaderOutput
	ToHTTPSHealthCheckProxyHeaderOutputWithContext(context.Context) HTTPSHealthCheckProxyHeaderOutput
}

var httpshealthCheckProxyHeaderPtrType = reflect.TypeOf((**HTTPSHealthCheckProxyHeader)(nil)).Elem()

type HTTPSHealthCheckProxyHeaderPtrInput interface {
	pulumi.Input

	ToHTTPSHealthCheckProxyHeaderPtrOutput() HTTPSHealthCheckProxyHeaderPtrOutput
	ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(context.Context) HTTPSHealthCheckProxyHeaderPtrOutput
}

type httpshealthCheckProxyHeaderPtr string

func HTTPSHealthCheckProxyHeaderPtr(v string) HTTPSHealthCheckProxyHeaderPtrInput {
	return (*httpshealthCheckProxyHeaderPtr)(&v)
}

func (*httpshealthCheckProxyHeaderPtr) ElementType() reflect.Type {
	return httpshealthCheckProxyHeaderPtrType
}

func (in *httpshealthCheckProxyHeaderPtr) ToHTTPSHealthCheckProxyHeaderPtrOutput() HTTPSHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(HTTPSHealthCheckProxyHeaderPtrOutput)
}

func (in *httpshealthCheckProxyHeaderPtr) ToHTTPSHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) HTTPSHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTPSHealthCheckProxyHeaderPtrOutput)
}

// Weight report mode. used for weighted Load Balancing.
type HTTPSHealthCheckWeightReportMode string

const (
	// Health Checker will not parse the header field.
	HTTPSHealthCheckWeightReportModeDisable = HTTPSHealthCheckWeightReportMode("DISABLE")
	// Health Checker will parse and report the weight in the header field, but load balancing will not be based on the weights and will use equal weights.
	HTTPSHealthCheckWeightReportModeDryRun = HTTPSHealthCheckWeightReportMode("DRY_RUN")
	// Health Checker will try to parse and report the weight in the header field, and load balancing will be based on the weights as long as all backends have a valid weight or only a subset of backends has the UNAVAILABLE_WEIGHT WeightError. The latter case is to continue the weighted load balancing while some backends are in TIMEOUT or UNKNOWN health status.
	HTTPSHealthCheckWeightReportModeEnable = HTTPSHealthCheckWeightReportMode("ENABLE")
)

func (HTTPSHealthCheckWeightReportMode) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSHealthCheckWeightReportMode)(nil)).Elem()
}

func (e HTTPSHealthCheckWeightReportMode) ToHTTPSHealthCheckWeightReportModeOutput() HTTPSHealthCheckWeightReportModeOutput {
	return pulumi.ToOutput(e).(HTTPSHealthCheckWeightReportModeOutput)
}

func (e HTTPSHealthCheckWeightReportMode) ToHTTPSHealthCheckWeightReportModeOutputWithContext(ctx context.Context) HTTPSHealthCheckWeightReportModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HTTPSHealthCheckWeightReportModeOutput)
}

func (e HTTPSHealthCheckWeightReportMode) ToHTTPSHealthCheckWeightReportModePtrOutput() HTTPSHealthCheckWeightReportModePtrOutput {
	return e.ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(context.Background())
}

func (e HTTPSHealthCheckWeightReportMode) ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPSHealthCheckWeightReportModePtrOutput {
	return HTTPSHealthCheckWeightReportMode(e).ToHTTPSHealthCheckWeightReportModeOutputWithContext(ctx).ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(ctx)
}

func (e HTTPSHealthCheckWeightReportMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSHealthCheckWeightReportMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HTTPSHealthCheckWeightReportMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HTTPSHealthCheckWeightReportMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HTTPSHealthCheckWeightReportModeOutput struct{ *pulumi.OutputState }

func (HTTPSHealthCheckWeightReportModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPSHealthCheckWeightReportMode)(nil)).Elem()
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToHTTPSHealthCheckWeightReportModeOutput() HTTPSHealthCheckWeightReportModeOutput {
	return o
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToHTTPSHealthCheckWeightReportModeOutputWithContext(ctx context.Context) HTTPSHealthCheckWeightReportModeOutput {
	return o
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToHTTPSHealthCheckWeightReportModePtrOutput() HTTPSHealthCheckWeightReportModePtrOutput {
	return o.ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPSHealthCheckWeightReportModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HTTPSHealthCheckWeightReportMode) *HTTPSHealthCheckWeightReportMode {
		return &v
	}).(HTTPSHealthCheckWeightReportModePtrOutput)
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSHealthCheckWeightReportMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckWeightReportModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HTTPSHealthCheckWeightReportMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HTTPSHealthCheckWeightReportModePtrOutput struct{ *pulumi.OutputState }

func (HTTPSHealthCheckWeightReportModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HTTPSHealthCheckWeightReportMode)(nil)).Elem()
}

func (o HTTPSHealthCheckWeightReportModePtrOutput) ToHTTPSHealthCheckWeightReportModePtrOutput() HTTPSHealthCheckWeightReportModePtrOutput {
	return o
}

func (o HTTPSHealthCheckWeightReportModePtrOutput) ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPSHealthCheckWeightReportModePtrOutput {
	return o
}

func (o HTTPSHealthCheckWeightReportModePtrOutput) Elem() HTTPSHealthCheckWeightReportModeOutput {
	return o.ApplyT(func(v *HTTPSHealthCheckWeightReportMode) HTTPSHealthCheckWeightReportMode {
		if v != nil {
			return *v
		}
		var ret HTTPSHealthCheckWeightReportMode
		return ret
	}).(HTTPSHealthCheckWeightReportModeOutput)
}

func (o HTTPSHealthCheckWeightReportModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HTTPSHealthCheckWeightReportModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HTTPSHealthCheckWeightReportMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HTTPSHealthCheckWeightReportModeInput is an input type that accepts HTTPSHealthCheckWeightReportModeArgs and HTTPSHealthCheckWeightReportModeOutput values.
// You can construct a concrete instance of `HTTPSHealthCheckWeightReportModeInput` via:
//
//          HTTPSHealthCheckWeightReportModeArgs{...}
type HTTPSHealthCheckWeightReportModeInput interface {
	pulumi.Input

	ToHTTPSHealthCheckWeightReportModeOutput() HTTPSHealthCheckWeightReportModeOutput
	ToHTTPSHealthCheckWeightReportModeOutputWithContext(context.Context) HTTPSHealthCheckWeightReportModeOutput
}

var httpshealthCheckWeightReportModePtrType = reflect.TypeOf((**HTTPSHealthCheckWeightReportMode)(nil)).Elem()

type HTTPSHealthCheckWeightReportModePtrInput interface {
	pulumi.Input

	ToHTTPSHealthCheckWeightReportModePtrOutput() HTTPSHealthCheckWeightReportModePtrOutput
	ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(context.Context) HTTPSHealthCheckWeightReportModePtrOutput
}

type httpshealthCheckWeightReportModePtr string

func HTTPSHealthCheckWeightReportModePtr(v string) HTTPSHealthCheckWeightReportModePtrInput {
	return (*httpshealthCheckWeightReportModePtr)(&v)
}

func (*httpshealthCheckWeightReportModePtr) ElementType() reflect.Type {
	return httpshealthCheckWeightReportModePtrType
}

func (in *httpshealthCheckWeightReportModePtr) ToHTTPSHealthCheckWeightReportModePtrOutput() HTTPSHealthCheckWeightReportModePtrOutput {
	return pulumi.ToOutput(in).(HTTPSHealthCheckWeightReportModePtrOutput)
}

func (in *httpshealthCheckWeightReportModePtr) ToHTTPSHealthCheckWeightReportModePtrOutputWithContext(ctx context.Context) HTTPSHealthCheckWeightReportModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HTTPSHealthCheckWeightReportModePtrOutput)
}

// Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2. Exactly one of the protocol-specific health check field must be specified, which must match type field.
type HealthCheckType string

const (
	HealthCheckTypeGrpc    = HealthCheckType("GRPC")
	HealthCheckTypeHttp    = HealthCheckType("HTTP")
	HealthCheckTypeHttp2   = HealthCheckType("HTTP2")
	HealthCheckTypeHttps   = HealthCheckType("HTTPS")
	HealthCheckTypeInvalid = HealthCheckType("INVALID")
	HealthCheckTypeSsl     = HealthCheckType("SSL")
	HealthCheckTypeTcp     = HealthCheckType("TCP")
	HealthCheckTypeUdp     = HealthCheckType("UDP")
)

func (HealthCheckType) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckType)(nil)).Elem()
}

func (e HealthCheckType) ToHealthCheckTypeOutput() HealthCheckTypeOutput {
	return pulumi.ToOutput(e).(HealthCheckTypeOutput)
}

func (e HealthCheckType) ToHealthCheckTypeOutputWithContext(ctx context.Context) HealthCheckTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HealthCheckTypeOutput)
}

func (e HealthCheckType) ToHealthCheckTypePtrOutput() HealthCheckTypePtrOutput {
	return e.ToHealthCheckTypePtrOutputWithContext(context.Background())
}

func (e HealthCheckType) ToHealthCheckTypePtrOutputWithContext(ctx context.Context) HealthCheckTypePtrOutput {
	return HealthCheckType(e).ToHealthCheckTypeOutputWithContext(ctx).ToHealthCheckTypePtrOutputWithContext(ctx)
}

func (e HealthCheckType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HealthCheckType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HealthCheckType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HealthCheckType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HealthCheckTypeOutput struct{ *pulumi.OutputState }

func (HealthCheckTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckType)(nil)).Elem()
}

func (o HealthCheckTypeOutput) ToHealthCheckTypeOutput() HealthCheckTypeOutput {
	return o
}

func (o HealthCheckTypeOutput) ToHealthCheckTypeOutputWithContext(ctx context.Context) HealthCheckTypeOutput {
	return o
}

func (o HealthCheckTypeOutput) ToHealthCheckTypePtrOutput() HealthCheckTypePtrOutput {
	return o.ToHealthCheckTypePtrOutputWithContext(context.Background())
}

func (o HealthCheckTypeOutput) ToHealthCheckTypePtrOutputWithContext(ctx context.Context) HealthCheckTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthCheckType) *HealthCheckType {
		return &v
	}).(HealthCheckTypePtrOutput)
}

func (o HealthCheckTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HealthCheckTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HealthCheckType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HealthCheckTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HealthCheckTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HealthCheckType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HealthCheckTypePtrOutput struct{ *pulumi.OutputState }

func (HealthCheckTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckType)(nil)).Elem()
}

func (o HealthCheckTypePtrOutput) ToHealthCheckTypePtrOutput() HealthCheckTypePtrOutput {
	return o
}

func (o HealthCheckTypePtrOutput) ToHealthCheckTypePtrOutputWithContext(ctx context.Context) HealthCheckTypePtrOutput {
	return o
}

func (o HealthCheckTypePtrOutput) Elem() HealthCheckTypeOutput {
	return o.ApplyT(func(v *HealthCheckType) HealthCheckType {
		if v != nil {
			return *v
		}
		var ret HealthCheckType
		return ret
	}).(HealthCheckTypeOutput)
}

func (o HealthCheckTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HealthCheckTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HealthCheckType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HealthCheckTypeInput is an input type that accepts HealthCheckTypeArgs and HealthCheckTypeOutput values.
// You can construct a concrete instance of `HealthCheckTypeInput` via:
//
//          HealthCheckTypeArgs{...}
type HealthCheckTypeInput interface {
	pulumi.Input

	ToHealthCheckTypeOutput() HealthCheckTypeOutput
	ToHealthCheckTypeOutputWithContext(context.Context) HealthCheckTypeOutput
}

var healthCheckTypePtrType = reflect.TypeOf((**HealthCheckType)(nil)).Elem()

type HealthCheckTypePtrInput interface {
	pulumi.Input

	ToHealthCheckTypePtrOutput() HealthCheckTypePtrOutput
	ToHealthCheckTypePtrOutputWithContext(context.Context) HealthCheckTypePtrOutput
}

type healthCheckTypePtr string

func HealthCheckTypePtr(v string) HealthCheckTypePtrInput {
	return (*healthCheckTypePtr)(&v)
}

func (*healthCheckTypePtr) ElementType() reflect.Type {
	return healthCheckTypePtrType
}

func (in *healthCheckTypePtr) ToHealthCheckTypePtrOutput() HealthCheckTypePtrOutput {
	return pulumi.ToOutput(in).(HealthCheckTypePtrOutput)
}

func (in *healthCheckTypePtr) ToHealthCheckTypePtrOutputWithContext(ctx context.Context) HealthCheckTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HealthCheckTypePtrOutput)
}

// The HTTP Status code to use for this RedirectAction. Supported values are: - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to 303. - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method is retained. - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method is retained.
type HttpRedirectActionRedirectResponseCode string

const (
	// Http Status Code 302 - Found.
	HttpRedirectActionRedirectResponseCodeFound = HttpRedirectActionRedirectResponseCode("FOUND")
	// Http Status Code 301 - Moved Permanently.
	HttpRedirectActionRedirectResponseCodeMovedPermanentlyDefault = HttpRedirectActionRedirectResponseCode("MOVED_PERMANENTLY_DEFAULT")
	// Http Status Code 308 - Permanent Redirect maintaining HTTP method.
	HttpRedirectActionRedirectResponseCodePermanentRedirect = HttpRedirectActionRedirectResponseCode("PERMANENT_REDIRECT")
	// Http Status Code 303 - See Other.
	HttpRedirectActionRedirectResponseCodeSeeOther = HttpRedirectActionRedirectResponseCode("SEE_OTHER")
	// Http Status Code 307 - Temporary Redirect maintaining HTTP method.
	HttpRedirectActionRedirectResponseCodeTemporaryRedirect = HttpRedirectActionRedirectResponseCode("TEMPORARY_REDIRECT")
)

func (HttpRedirectActionRedirectResponseCode) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRedirectActionRedirectResponseCode)(nil)).Elem()
}

func (e HttpRedirectActionRedirectResponseCode) ToHttpRedirectActionRedirectResponseCodeOutput() HttpRedirectActionRedirectResponseCodeOutput {
	return pulumi.ToOutput(e).(HttpRedirectActionRedirectResponseCodeOutput)
}

func (e HttpRedirectActionRedirectResponseCode) ToHttpRedirectActionRedirectResponseCodeOutputWithContext(ctx context.Context) HttpRedirectActionRedirectResponseCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HttpRedirectActionRedirectResponseCodeOutput)
}

func (e HttpRedirectActionRedirectResponseCode) ToHttpRedirectActionRedirectResponseCodePtrOutput() HttpRedirectActionRedirectResponseCodePtrOutput {
	return e.ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(context.Background())
}

func (e HttpRedirectActionRedirectResponseCode) ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRedirectActionRedirectResponseCodePtrOutput {
	return HttpRedirectActionRedirectResponseCode(e).ToHttpRedirectActionRedirectResponseCodeOutputWithContext(ctx).ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(ctx)
}

func (e HttpRedirectActionRedirectResponseCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRedirectActionRedirectResponseCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRedirectActionRedirectResponseCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HttpRedirectActionRedirectResponseCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HttpRedirectActionRedirectResponseCodeOutput struct{ *pulumi.OutputState }

func (HttpRedirectActionRedirectResponseCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRedirectActionRedirectResponseCode)(nil)).Elem()
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToHttpRedirectActionRedirectResponseCodeOutput() HttpRedirectActionRedirectResponseCodeOutput {
	return o
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToHttpRedirectActionRedirectResponseCodeOutputWithContext(ctx context.Context) HttpRedirectActionRedirectResponseCodeOutput {
	return o
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToHttpRedirectActionRedirectResponseCodePtrOutput() HttpRedirectActionRedirectResponseCodePtrOutput {
	return o.ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(context.Background())
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRedirectActionRedirectResponseCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpRedirectActionRedirectResponseCode) *HttpRedirectActionRedirectResponseCode {
		return &v
	}).(HttpRedirectActionRedirectResponseCodePtrOutput)
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HttpRedirectActionRedirectResponseCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HttpRedirectActionRedirectResponseCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HttpRedirectActionRedirectResponseCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HttpRedirectActionRedirectResponseCodePtrOutput struct{ *pulumi.OutputState }

func (HttpRedirectActionRedirectResponseCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpRedirectActionRedirectResponseCode)(nil)).Elem()
}

func (o HttpRedirectActionRedirectResponseCodePtrOutput) ToHttpRedirectActionRedirectResponseCodePtrOutput() HttpRedirectActionRedirectResponseCodePtrOutput {
	return o
}

func (o HttpRedirectActionRedirectResponseCodePtrOutput) ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRedirectActionRedirectResponseCodePtrOutput {
	return o
}

func (o HttpRedirectActionRedirectResponseCodePtrOutput) Elem() HttpRedirectActionRedirectResponseCodeOutput {
	return o.ApplyT(func(v *HttpRedirectActionRedirectResponseCode) HttpRedirectActionRedirectResponseCode {
		if v != nil {
			return *v
		}
		var ret HttpRedirectActionRedirectResponseCode
		return ret
	}).(HttpRedirectActionRedirectResponseCodeOutput)
}

func (o HttpRedirectActionRedirectResponseCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HttpRedirectActionRedirectResponseCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HttpRedirectActionRedirectResponseCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HttpRedirectActionRedirectResponseCodeInput is an input type that accepts HttpRedirectActionRedirectResponseCodeArgs and HttpRedirectActionRedirectResponseCodeOutput values.
// You can construct a concrete instance of `HttpRedirectActionRedirectResponseCodeInput` via:
//
//          HttpRedirectActionRedirectResponseCodeArgs{...}
type HttpRedirectActionRedirectResponseCodeInput interface {
	pulumi.Input

	ToHttpRedirectActionRedirectResponseCodeOutput() HttpRedirectActionRedirectResponseCodeOutput
	ToHttpRedirectActionRedirectResponseCodeOutputWithContext(context.Context) HttpRedirectActionRedirectResponseCodeOutput
}

var httpRedirectActionRedirectResponseCodePtrType = reflect.TypeOf((**HttpRedirectActionRedirectResponseCode)(nil)).Elem()

type HttpRedirectActionRedirectResponseCodePtrInput interface {
	pulumi.Input

	ToHttpRedirectActionRedirectResponseCodePtrOutput() HttpRedirectActionRedirectResponseCodePtrOutput
	ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(context.Context) HttpRedirectActionRedirectResponseCodePtrOutput
}

type httpRedirectActionRedirectResponseCodePtr string

func HttpRedirectActionRedirectResponseCodePtr(v string) HttpRedirectActionRedirectResponseCodePtrInput {
	return (*httpRedirectActionRedirectResponseCodePtr)(&v)
}

func (*httpRedirectActionRedirectResponseCodePtr) ElementType() reflect.Type {
	return httpRedirectActionRedirectResponseCodePtrType
}

func (in *httpRedirectActionRedirectResponseCodePtr) ToHttpRedirectActionRedirectResponseCodePtrOutput() HttpRedirectActionRedirectResponseCodePtrOutput {
	return pulumi.ToOutput(in).(HttpRedirectActionRedirectResponseCodePtrOutput)
}

func (in *httpRedirectActionRedirectResponseCodePtr) ToHttpRedirectActionRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRedirectActionRedirectResponseCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HttpRedirectActionRedirectResponseCodePtrOutput)
}

// The architecture of the image. Valid values are ARM64 or X86_64.
type ImageArchitecture string

const (
	// Default value indicating Architecture is not set.
	ImageArchitectureArchitectureUnspecified = ImageArchitecture("ARCHITECTURE_UNSPECIFIED")
	// Machines with architecture ARM64
	ImageArchitectureArm64 = ImageArchitecture("ARM64")
	// Machines with architecture X86_64
	ImageArchitectureX8664 = ImageArchitecture("X86_64")
)

func (ImageArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageArchitecture)(nil)).Elem()
}

func (e ImageArchitecture) ToImageArchitectureOutput() ImageArchitectureOutput {
	return pulumi.ToOutput(e).(ImageArchitectureOutput)
}

func (e ImageArchitecture) ToImageArchitectureOutputWithContext(ctx context.Context) ImageArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageArchitectureOutput)
}

func (e ImageArchitecture) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return e.ToImageArchitecturePtrOutputWithContext(context.Background())
}

func (e ImageArchitecture) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return ImageArchitecture(e).ToImageArchitectureOutputWithContext(ctx).ToImageArchitecturePtrOutputWithContext(ctx)
}

func (e ImageArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageArchitectureOutput struct{ *pulumi.OutputState }

func (ImageArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageArchitecture)(nil)).Elem()
}

func (o ImageArchitectureOutput) ToImageArchitectureOutput() ImageArchitectureOutput {
	return o
}

func (o ImageArchitectureOutput) ToImageArchitectureOutputWithContext(ctx context.Context) ImageArchitectureOutput {
	return o
}

func (o ImageArchitectureOutput) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return o.ToImageArchitecturePtrOutputWithContext(context.Background())
}

func (o ImageArchitectureOutput) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageArchitecture) *ImageArchitecture {
		return &v
	}).(ImageArchitecturePtrOutput)
}

func (o ImageArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageArchitecturePtrOutput struct{ *pulumi.OutputState }

func (ImageArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageArchitecture)(nil)).Elem()
}

func (o ImageArchitecturePtrOutput) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return o
}

func (o ImageArchitecturePtrOutput) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return o
}

func (o ImageArchitecturePtrOutput) Elem() ImageArchitectureOutput {
	return o.ApplyT(func(v *ImageArchitecture) ImageArchitecture {
		if v != nil {
			return *v
		}
		var ret ImageArchitecture
		return ret
	}).(ImageArchitectureOutput)
}

func (o ImageArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageArchitectureInput is an input type that accepts ImageArchitectureArgs and ImageArchitectureOutput values.
// You can construct a concrete instance of `ImageArchitectureInput` via:
//
//          ImageArchitectureArgs{...}
type ImageArchitectureInput interface {
	pulumi.Input

	ToImageArchitectureOutput() ImageArchitectureOutput
	ToImageArchitectureOutputWithContext(context.Context) ImageArchitectureOutput
}

var imageArchitecturePtrType = reflect.TypeOf((**ImageArchitecture)(nil)).Elem()

type ImageArchitecturePtrInput interface {
	pulumi.Input

	ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput
	ToImageArchitecturePtrOutputWithContext(context.Context) ImageArchitecturePtrOutput
}

type imageArchitecturePtr string

func ImageArchitecturePtr(v string) ImageArchitecturePtrInput {
	return (*imageArchitecturePtr)(&v)
}

func (*imageArchitecturePtr) ElementType() reflect.Type {
	return imageArchitecturePtrType
}

func (in *imageArchitecturePtr) ToImageArchitecturePtrOutput() ImageArchitecturePtrOutput {
	return pulumi.ToOutput(in).(ImageArchitecturePtrOutput)
}

func (in *imageArchitecturePtr) ToImageArchitecturePtrOutputWithContext(ctx context.Context) ImageArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageArchitecturePtrOutput)
}

// The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
type ImageRawDiskContainerType string

const (
	ImageRawDiskContainerTypeTar = ImageRawDiskContainerType("TAR")
)

func (ImageRawDiskContainerType) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRawDiskContainerType)(nil)).Elem()
}

func (e ImageRawDiskContainerType) ToImageRawDiskContainerTypeOutput() ImageRawDiskContainerTypeOutput {
	return pulumi.ToOutput(e).(ImageRawDiskContainerTypeOutput)
}

func (e ImageRawDiskContainerType) ToImageRawDiskContainerTypeOutputWithContext(ctx context.Context) ImageRawDiskContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageRawDiskContainerTypeOutput)
}

func (e ImageRawDiskContainerType) ToImageRawDiskContainerTypePtrOutput() ImageRawDiskContainerTypePtrOutput {
	return e.ToImageRawDiskContainerTypePtrOutputWithContext(context.Background())
}

func (e ImageRawDiskContainerType) ToImageRawDiskContainerTypePtrOutputWithContext(ctx context.Context) ImageRawDiskContainerTypePtrOutput {
	return ImageRawDiskContainerType(e).ToImageRawDiskContainerTypeOutputWithContext(ctx).ToImageRawDiskContainerTypePtrOutputWithContext(ctx)
}

func (e ImageRawDiskContainerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageRawDiskContainerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageRawDiskContainerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageRawDiskContainerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageRawDiskContainerTypeOutput struct{ *pulumi.OutputState }

func (ImageRawDiskContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRawDiskContainerType)(nil)).Elem()
}

func (o ImageRawDiskContainerTypeOutput) ToImageRawDiskContainerTypeOutput() ImageRawDiskContainerTypeOutput {
	return o
}

func (o ImageRawDiskContainerTypeOutput) ToImageRawDiskContainerTypeOutputWithContext(ctx context.Context) ImageRawDiskContainerTypeOutput {
	return o
}

func (o ImageRawDiskContainerTypeOutput) ToImageRawDiskContainerTypePtrOutput() ImageRawDiskContainerTypePtrOutput {
	return o.ToImageRawDiskContainerTypePtrOutputWithContext(context.Background())
}

func (o ImageRawDiskContainerTypeOutput) ToImageRawDiskContainerTypePtrOutputWithContext(ctx context.Context) ImageRawDiskContainerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRawDiskContainerType) *ImageRawDiskContainerType {
		return &v
	}).(ImageRawDiskContainerTypePtrOutput)
}

func (o ImageRawDiskContainerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageRawDiskContainerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRawDiskContainerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageRawDiskContainerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRawDiskContainerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRawDiskContainerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRawDiskContainerTypePtrOutput struct{ *pulumi.OutputState }

func (ImageRawDiskContainerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRawDiskContainerType)(nil)).Elem()
}

func (o ImageRawDiskContainerTypePtrOutput) ToImageRawDiskContainerTypePtrOutput() ImageRawDiskContainerTypePtrOutput {
	return o
}

func (o ImageRawDiskContainerTypePtrOutput) ToImageRawDiskContainerTypePtrOutputWithContext(ctx context.Context) ImageRawDiskContainerTypePtrOutput {
	return o
}

func (o ImageRawDiskContainerTypePtrOutput) Elem() ImageRawDiskContainerTypeOutput {
	return o.ApplyT(func(v *ImageRawDiskContainerType) ImageRawDiskContainerType {
		if v != nil {
			return *v
		}
		var ret ImageRawDiskContainerType
		return ret
	}).(ImageRawDiskContainerTypeOutput)
}

func (o ImageRawDiskContainerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRawDiskContainerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageRawDiskContainerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageRawDiskContainerTypeInput is an input type that accepts ImageRawDiskContainerTypeArgs and ImageRawDiskContainerTypeOutput values.
// You can construct a concrete instance of `ImageRawDiskContainerTypeInput` via:
//
//          ImageRawDiskContainerTypeArgs{...}
type ImageRawDiskContainerTypeInput interface {
	pulumi.Input

	ToImageRawDiskContainerTypeOutput() ImageRawDiskContainerTypeOutput
	ToImageRawDiskContainerTypeOutputWithContext(context.Context) ImageRawDiskContainerTypeOutput
}

var imageRawDiskContainerTypePtrType = reflect.TypeOf((**ImageRawDiskContainerType)(nil)).Elem()

type ImageRawDiskContainerTypePtrInput interface {
	pulumi.Input

	ToImageRawDiskContainerTypePtrOutput() ImageRawDiskContainerTypePtrOutput
	ToImageRawDiskContainerTypePtrOutputWithContext(context.Context) ImageRawDiskContainerTypePtrOutput
}

type imageRawDiskContainerTypePtr string

func ImageRawDiskContainerTypePtr(v string) ImageRawDiskContainerTypePtrInput {
	return (*imageRawDiskContainerTypePtr)(&v)
}

func (*imageRawDiskContainerTypePtr) ElementType() reflect.Type {
	return imageRawDiskContainerTypePtrType
}

func (in *imageRawDiskContainerTypePtr) ToImageRawDiskContainerTypePtrOutput() ImageRawDiskContainerTypePtrOutput {
	return pulumi.ToOutput(in).(ImageRawDiskContainerTypePtrOutput)
}

func (in *imageRawDiskContainerTypePtr) ToImageRawDiskContainerTypePtrOutputWithContext(ctx context.Context) ImageRawDiskContainerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageRawDiskContainerTypePtrOutput)
}

// The type of the image used to create this disk. The default and only value is RAW
type ImageSourceType string

const (
	ImageSourceTypeRaw = ImageSourceType("RAW")
)

func (ImageSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSourceType)(nil)).Elem()
}

func (e ImageSourceType) ToImageSourceTypeOutput() ImageSourceTypeOutput {
	return pulumi.ToOutput(e).(ImageSourceTypeOutput)
}

func (e ImageSourceType) ToImageSourceTypeOutputWithContext(ctx context.Context) ImageSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageSourceTypeOutput)
}

func (e ImageSourceType) ToImageSourceTypePtrOutput() ImageSourceTypePtrOutput {
	return e.ToImageSourceTypePtrOutputWithContext(context.Background())
}

func (e ImageSourceType) ToImageSourceTypePtrOutputWithContext(ctx context.Context) ImageSourceTypePtrOutput {
	return ImageSourceType(e).ToImageSourceTypeOutputWithContext(ctx).ToImageSourceTypePtrOutputWithContext(ctx)
}

func (e ImageSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageSourceTypeOutput struct{ *pulumi.OutputState }

func (ImageSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageSourceType)(nil)).Elem()
}

func (o ImageSourceTypeOutput) ToImageSourceTypeOutput() ImageSourceTypeOutput {
	return o
}

func (o ImageSourceTypeOutput) ToImageSourceTypeOutputWithContext(ctx context.Context) ImageSourceTypeOutput {
	return o
}

func (o ImageSourceTypeOutput) ToImageSourceTypePtrOutput() ImageSourceTypePtrOutput {
	return o.ToImageSourceTypePtrOutputWithContext(context.Background())
}

func (o ImageSourceTypeOutput) ToImageSourceTypePtrOutputWithContext(ctx context.Context) ImageSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageSourceType) *ImageSourceType {
		return &v
	}).(ImageSourceTypePtrOutput)
}

func (o ImageSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageSourceTypePtrOutput struct{ *pulumi.OutputState }

func (ImageSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageSourceType)(nil)).Elem()
}

func (o ImageSourceTypePtrOutput) ToImageSourceTypePtrOutput() ImageSourceTypePtrOutput {
	return o
}

func (o ImageSourceTypePtrOutput) ToImageSourceTypePtrOutputWithContext(ctx context.Context) ImageSourceTypePtrOutput {
	return o
}

func (o ImageSourceTypePtrOutput) Elem() ImageSourceTypeOutput {
	return o.ApplyT(func(v *ImageSourceType) ImageSourceType {
		if v != nil {
			return *v
		}
		var ret ImageSourceType
		return ret
	}).(ImageSourceTypeOutput)
}

func (o ImageSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageSourceTypeInput is an input type that accepts ImageSourceTypeArgs and ImageSourceTypeOutput values.
// You can construct a concrete instance of `ImageSourceTypeInput` via:
//
//          ImageSourceTypeArgs{...}
type ImageSourceTypeInput interface {
	pulumi.Input

	ToImageSourceTypeOutput() ImageSourceTypeOutput
	ToImageSourceTypeOutputWithContext(context.Context) ImageSourceTypeOutput
}

var imageSourceTypePtrType = reflect.TypeOf((**ImageSourceType)(nil)).Elem()

type ImageSourceTypePtrInput interface {
	pulumi.Input

	ToImageSourceTypePtrOutput() ImageSourceTypePtrOutput
	ToImageSourceTypePtrOutputWithContext(context.Context) ImageSourceTypePtrOutput
}

type imageSourceTypePtr string

func ImageSourceTypePtr(v string) ImageSourceTypePtrInput {
	return (*imageSourceTypePtr)(&v)
}

func (*imageSourceTypePtr) ElementType() reflect.Type {
	return imageSourceTypePtrType
}

func (in *imageSourceTypePtr) ToImageSourceTypePtrOutput() ImageSourceTypePtrOutput {
	return pulumi.ToOutput(in).(ImageSourceTypePtrOutput)
}

func (in *imageSourceTypePtr) ToImageSourceTypePtrOutputWithContext(ctx context.Context) ImageSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageSourceTypePtrOutput)
}

// If you have configured an application-based health check for the group, this field controls whether to trigger VM autohealing based on a failed health check. Valid values are: - ON (default): The group recreates running VMs that fail the application-based health check. - OFF: When set to OFF, you can still observe instance health state, but the group does not recreate VMs that fail the application-based health check. This is useful for troubleshooting and setting up your health check configuration.
type InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck string

const (
	// When set to OFF, you can still observe instance health state, but the group does not recreate VMs that fail the application-based health check. This is useful for troubleshooting and setting up your health check configuration.
	InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOff = InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck("OFF")
	// (Default) The group recreates running VMs that fail the group's application-based health check.
	InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOn = InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck("ON")
)

func (InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck)(nil)).Elem()
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return e.ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck(e).ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutputWithContext(ctx).ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck)(nil)).Elem()
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return o.ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) *InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck {
		return &v
	}).(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput)
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck)(nil)).Elem()
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput) Elem() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput {
	return o.ApplyT(func(v *InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck
		return ret
	}).(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput)
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckInput is an input type that accepts InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckArgs and InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput values.
// You can construct a concrete instance of `InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckInput` via:
//
//          InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckArgs{...}
type InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckInput interface {
	pulumi.Input

	ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput
	ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutputWithContext(context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput
}

var instanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrType = reflect.TypeOf((**InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck)(nil)).Elem()

type InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput
	ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput
}

type instanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtr string

func InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtr(v string) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrInput {
	return (*instanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtr)(&v)
}

func (*instanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtr) ElementType() reflect.Type {
	return instanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrType
}

func (in *instanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtr) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput() InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput)
}

func (in *instanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtr) ToInstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput)
}

type InstanceGroupManagerAutoHealingPolicyUpdateInstances string

const (
	// Autohealer always updates instances with a new version for both PROACTIVE and OPPORTUNISTIC updates.
	InstanceGroupManagerAutoHealingPolicyUpdateInstancesAlways = InstanceGroupManagerAutoHealingPolicyUpdateInstances("ALWAYS")
	// (Default) Autohealer updates instance with new version according to update policy constraints: - OPPORTUNISTIC: autohealing does not perform updates. - PROACTIVE: autohealing performs updates according to maxSurge and maxUnavailable constraints.
	InstanceGroupManagerAutoHealingPolicyUpdateInstancesFollowUpdatePolicy = InstanceGroupManagerAutoHealingPolicyUpdateInstances("FOLLOW_UPDATE_POLICY")
)

func (InstanceGroupManagerAutoHealingPolicyUpdateInstances) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyUpdateInstances)(nil)).Elem()
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return e.ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return InstanceGroupManagerAutoHealingPolicyUpdateInstances(e).ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesOutputWithContext(ctx).ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerAutoHealingPolicyUpdateInstances) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyUpdateInstances)(nil)).Elem()
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return o.ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerAutoHealingPolicyUpdateInstances) *InstanceGroupManagerAutoHealingPolicyUpdateInstances {
		return &v
	}).(InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput)
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerAutoHealingPolicyUpdateInstances) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerAutoHealingPolicyUpdateInstances) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerAutoHealingPolicyUpdateInstances)(nil)).Elem()
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return o
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput) Elem() InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput {
	return o.ApplyT(func(v *InstanceGroupManagerAutoHealingPolicyUpdateInstances) InstanceGroupManagerAutoHealingPolicyUpdateInstances {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerAutoHealingPolicyUpdateInstances
		return ret
	}).(InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput)
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerAutoHealingPolicyUpdateInstances) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerAutoHealingPolicyUpdateInstancesInput is an input type that accepts InstanceGroupManagerAutoHealingPolicyUpdateInstancesArgs and InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput values.
// You can construct a concrete instance of `InstanceGroupManagerAutoHealingPolicyUpdateInstancesInput` via:
//
//          InstanceGroupManagerAutoHealingPolicyUpdateInstancesArgs{...}
type InstanceGroupManagerAutoHealingPolicyUpdateInstancesInput interface {
	pulumi.Input

	ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput
	ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesOutputWithContext(context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput
}

var instanceGroupManagerAutoHealingPolicyUpdateInstancesPtrType = reflect.TypeOf((**InstanceGroupManagerAutoHealingPolicyUpdateInstances)(nil)).Elem()

type InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput
	ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput
}

type instanceGroupManagerAutoHealingPolicyUpdateInstancesPtr string

func InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtr(v string) InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrInput {
	return (*instanceGroupManagerAutoHealingPolicyUpdateInstancesPtr)(&v)
}

func (*instanceGroupManagerAutoHealingPolicyUpdateInstancesPtr) ElementType() reflect.Type {
	return instanceGroupManagerAutoHealingPolicyUpdateInstancesPtrType
}

func (in *instanceGroupManagerAutoHealingPolicyUpdateInstancesPtr) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput() InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput)
}

func (in *instanceGroupManagerAutoHealingPolicyUpdateInstancesPtr) ToInstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutputWithContext(ctx context.Context) InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput)
}

// The action to perform in case of zone failure. Only one value is supported, NO_FAILOVER. The default is NO_FAILOVER.
type InstanceGroupManagerFailoverAction string

const (
	InstanceGroupManagerFailoverActionNoFailover = InstanceGroupManagerFailoverAction("NO_FAILOVER")
	InstanceGroupManagerFailoverActionUnknown    = InstanceGroupManagerFailoverAction("UNKNOWN")
)

func (InstanceGroupManagerFailoverAction) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerFailoverAction)(nil)).Elem()
}

func (e InstanceGroupManagerFailoverAction) ToInstanceGroupManagerFailoverActionOutput() InstanceGroupManagerFailoverActionOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerFailoverActionOutput)
}

func (e InstanceGroupManagerFailoverAction) ToInstanceGroupManagerFailoverActionOutputWithContext(ctx context.Context) InstanceGroupManagerFailoverActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerFailoverActionOutput)
}

func (e InstanceGroupManagerFailoverAction) ToInstanceGroupManagerFailoverActionPtrOutput() InstanceGroupManagerFailoverActionPtrOutput {
	return e.ToInstanceGroupManagerFailoverActionPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerFailoverAction) ToInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerFailoverActionPtrOutput {
	return InstanceGroupManagerFailoverAction(e).ToInstanceGroupManagerFailoverActionOutputWithContext(ctx).ToInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerFailoverAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerFailoverAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerFailoverAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerFailoverAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerFailoverActionOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerFailoverActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerFailoverAction)(nil)).Elem()
}

func (o InstanceGroupManagerFailoverActionOutput) ToInstanceGroupManagerFailoverActionOutput() InstanceGroupManagerFailoverActionOutput {
	return o
}

func (o InstanceGroupManagerFailoverActionOutput) ToInstanceGroupManagerFailoverActionOutputWithContext(ctx context.Context) InstanceGroupManagerFailoverActionOutput {
	return o
}

func (o InstanceGroupManagerFailoverActionOutput) ToInstanceGroupManagerFailoverActionPtrOutput() InstanceGroupManagerFailoverActionPtrOutput {
	return o.ToInstanceGroupManagerFailoverActionPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerFailoverActionOutput) ToInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerFailoverActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerFailoverAction) *InstanceGroupManagerFailoverAction {
		return &v
	}).(InstanceGroupManagerFailoverActionPtrOutput)
}

func (o InstanceGroupManagerFailoverActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerFailoverActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerFailoverAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerFailoverActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerFailoverActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerFailoverAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerFailoverActionPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerFailoverActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerFailoverAction)(nil)).Elem()
}

func (o InstanceGroupManagerFailoverActionPtrOutput) ToInstanceGroupManagerFailoverActionPtrOutput() InstanceGroupManagerFailoverActionPtrOutput {
	return o
}

func (o InstanceGroupManagerFailoverActionPtrOutput) ToInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerFailoverActionPtrOutput {
	return o
}

func (o InstanceGroupManagerFailoverActionPtrOutput) Elem() InstanceGroupManagerFailoverActionOutput {
	return o.ApplyT(func(v *InstanceGroupManagerFailoverAction) InstanceGroupManagerFailoverAction {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerFailoverAction
		return ret
	}).(InstanceGroupManagerFailoverActionOutput)
}

func (o InstanceGroupManagerFailoverActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerFailoverActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerFailoverAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerFailoverActionInput is an input type that accepts InstanceGroupManagerFailoverActionArgs and InstanceGroupManagerFailoverActionOutput values.
// You can construct a concrete instance of `InstanceGroupManagerFailoverActionInput` via:
//
//          InstanceGroupManagerFailoverActionArgs{...}
type InstanceGroupManagerFailoverActionInput interface {
	pulumi.Input

	ToInstanceGroupManagerFailoverActionOutput() InstanceGroupManagerFailoverActionOutput
	ToInstanceGroupManagerFailoverActionOutputWithContext(context.Context) InstanceGroupManagerFailoverActionOutput
}

var instanceGroupManagerFailoverActionPtrType = reflect.TypeOf((**InstanceGroupManagerFailoverAction)(nil)).Elem()

type InstanceGroupManagerFailoverActionPtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerFailoverActionPtrOutput() InstanceGroupManagerFailoverActionPtrOutput
	ToInstanceGroupManagerFailoverActionPtrOutputWithContext(context.Context) InstanceGroupManagerFailoverActionPtrOutput
}

type instanceGroupManagerFailoverActionPtr string

func InstanceGroupManagerFailoverActionPtr(v string) InstanceGroupManagerFailoverActionPtrInput {
	return (*instanceGroupManagerFailoverActionPtr)(&v)
}

func (*instanceGroupManagerFailoverActionPtr) ElementType() reflect.Type {
	return instanceGroupManagerFailoverActionPtrType
}

func (in *instanceGroupManagerFailoverActionPtr) ToInstanceGroupManagerFailoverActionPtrOutput() InstanceGroupManagerFailoverActionPtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerFailoverActionPtrOutput)
}

func (in *instanceGroupManagerFailoverActionPtr) ToInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerFailoverActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerFailoverActionPtrOutput)
}

// Pagination behavior of listManagedInstances API method for this Managed Instance Group.
type InstanceGroupManagerListManagedInstancesResults string

const (
	// (Default) Pagination is disabled for listManagedInstances API method. maxResults and pageToken query parameters are ignored and all instances are returned in a single response.
	InstanceGroupManagerListManagedInstancesResultsPageless = InstanceGroupManagerListManagedInstancesResults("PAGELESS")
	// Pagination is enabled for listManagedInstances API method. maxResults and pageToken query parameters are respected.
	InstanceGroupManagerListManagedInstancesResultsPaginated = InstanceGroupManagerListManagedInstancesResults("PAGINATED")
)

func (InstanceGroupManagerListManagedInstancesResults) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerListManagedInstancesResults)(nil)).Elem()
}

func (e InstanceGroupManagerListManagedInstancesResults) ToInstanceGroupManagerListManagedInstancesResultsOutput() InstanceGroupManagerListManagedInstancesResultsOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerListManagedInstancesResultsOutput)
}

func (e InstanceGroupManagerListManagedInstancesResults) ToInstanceGroupManagerListManagedInstancesResultsOutputWithContext(ctx context.Context) InstanceGroupManagerListManagedInstancesResultsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerListManagedInstancesResultsOutput)
}

func (e InstanceGroupManagerListManagedInstancesResults) ToInstanceGroupManagerListManagedInstancesResultsPtrOutput() InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return e.ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerListManagedInstancesResults) ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return InstanceGroupManagerListManagedInstancesResults(e).ToInstanceGroupManagerListManagedInstancesResultsOutputWithContext(ctx).ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerListManagedInstancesResults) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerListManagedInstancesResults) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerListManagedInstancesResults) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerListManagedInstancesResults) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerListManagedInstancesResultsOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerListManagedInstancesResultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerListManagedInstancesResults)(nil)).Elem()
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToInstanceGroupManagerListManagedInstancesResultsOutput() InstanceGroupManagerListManagedInstancesResultsOutput {
	return o
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToInstanceGroupManagerListManagedInstancesResultsOutputWithContext(ctx context.Context) InstanceGroupManagerListManagedInstancesResultsOutput {
	return o
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToInstanceGroupManagerListManagedInstancesResultsPtrOutput() InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o.ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerListManagedInstancesResults) *InstanceGroupManagerListManagedInstancesResults {
		return &v
	}).(InstanceGroupManagerListManagedInstancesResultsPtrOutput)
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerListManagedInstancesResults) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerListManagedInstancesResultsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerListManagedInstancesResults) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerListManagedInstancesResultsPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerListManagedInstancesResultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerListManagedInstancesResults)(nil)).Elem()
}

func (o InstanceGroupManagerListManagedInstancesResultsPtrOutput) ToInstanceGroupManagerListManagedInstancesResultsPtrOutput() InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o
}

func (o InstanceGroupManagerListManagedInstancesResultsPtrOutput) ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o
}

func (o InstanceGroupManagerListManagedInstancesResultsPtrOutput) Elem() InstanceGroupManagerListManagedInstancesResultsOutput {
	return o.ApplyT(func(v *InstanceGroupManagerListManagedInstancesResults) InstanceGroupManagerListManagedInstancesResults {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerListManagedInstancesResults
		return ret
	}).(InstanceGroupManagerListManagedInstancesResultsOutput)
}

func (o InstanceGroupManagerListManagedInstancesResultsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerListManagedInstancesResultsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerListManagedInstancesResults) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerListManagedInstancesResultsInput is an input type that accepts InstanceGroupManagerListManagedInstancesResultsArgs and InstanceGroupManagerListManagedInstancesResultsOutput values.
// You can construct a concrete instance of `InstanceGroupManagerListManagedInstancesResultsInput` via:
//
//          InstanceGroupManagerListManagedInstancesResultsArgs{...}
type InstanceGroupManagerListManagedInstancesResultsInput interface {
	pulumi.Input

	ToInstanceGroupManagerListManagedInstancesResultsOutput() InstanceGroupManagerListManagedInstancesResultsOutput
	ToInstanceGroupManagerListManagedInstancesResultsOutputWithContext(context.Context) InstanceGroupManagerListManagedInstancesResultsOutput
}

var instanceGroupManagerListManagedInstancesResultsPtrType = reflect.TypeOf((**InstanceGroupManagerListManagedInstancesResults)(nil)).Elem()

type InstanceGroupManagerListManagedInstancesResultsPtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerListManagedInstancesResultsPtrOutput() InstanceGroupManagerListManagedInstancesResultsPtrOutput
	ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(context.Context) InstanceGroupManagerListManagedInstancesResultsPtrOutput
}

type instanceGroupManagerListManagedInstancesResultsPtr string

func InstanceGroupManagerListManagedInstancesResultsPtr(v string) InstanceGroupManagerListManagedInstancesResultsPtrInput {
	return (*instanceGroupManagerListManagedInstancesResultsPtr)(&v)
}

func (*instanceGroupManagerListManagedInstancesResultsPtr) ElementType() reflect.Type {
	return instanceGroupManagerListManagedInstancesResultsPtrType
}

func (in *instanceGroupManagerListManagedInstancesResultsPtr) ToInstanceGroupManagerListManagedInstancesResultsPtrOutput() InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerListManagedInstancesResultsPtrOutput)
}

func (in *instanceGroupManagerListManagedInstancesResultsPtr) ToInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) InstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerListManagedInstancesResultsPtrOutput)
}

// The instance redistribution policy for regional managed instance groups. Valid values are: - PROACTIVE (default): The group attempts to maintain an even distribution of VM instances across zones in the region. - NONE: For non-autoscaled groups, proactive redistribution is disabled.
type InstanceGroupManagerUpdatePolicyInstanceRedistributionType string

const (
	// No action is being proactively performed in order to bring this IGM to its target instance distribution.
	InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeNone = InstanceGroupManagerUpdatePolicyInstanceRedistributionType("NONE")
	// This IGM will actively converge to its target instance distribution.
	InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeProactive = InstanceGroupManagerUpdatePolicyInstanceRedistributionType("PROACTIVE")
)

func (InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyInstanceRedistributionType)(nil)).Elem()
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput)
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput)
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return e.ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return InstanceGroupManagerUpdatePolicyInstanceRedistributionType(e).ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutputWithContext(ctx).ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyInstanceRedistributionType)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return o.ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerUpdatePolicyInstanceRedistributionType) *InstanceGroupManagerUpdatePolicyInstanceRedistributionType {
		return &v
	}).(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput)
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyInstanceRedistributionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerUpdatePolicyInstanceRedistributionType)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput) Elem() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput {
	return o.ApplyT(func(v *InstanceGroupManagerUpdatePolicyInstanceRedistributionType) InstanceGroupManagerUpdatePolicyInstanceRedistributionType {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerUpdatePolicyInstanceRedistributionType
		return ret
	}).(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput)
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerUpdatePolicyInstanceRedistributionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeInput is an input type that accepts InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeArgs and InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput values.
// You can construct a concrete instance of `InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeInput` via:
//
//          InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeArgs{...}
type InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput
	ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput
}

var instanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrType = reflect.TypeOf((**InstanceGroupManagerUpdatePolicyInstanceRedistributionType)(nil)).Elem()

type InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput
	ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput
}

type instanceGroupManagerUpdatePolicyInstanceRedistributionTypePtr string

func InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtr(v string) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrInput {
	return (*instanceGroupManagerUpdatePolicyInstanceRedistributionTypePtr)(&v)
}

func (*instanceGroupManagerUpdatePolicyInstanceRedistributionTypePtr) ElementType() reflect.Type {
	return instanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrType
}

func (in *instanceGroupManagerUpdatePolicyInstanceRedistributionTypePtr) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput() InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput)
}

func (in *instanceGroupManagerUpdatePolicyInstanceRedistributionTypePtr) ToInstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput)
}

// Minimal action to be taken on an instance. You can specify either RESTART to restart existing instances or REPLACE to delete and create new instances from the target template. If you specify a RESTART, the Updater will attempt to perform that action only. However, if the Updater determines that the minimal action you specify is not enough to perform the update, it might perform a more disruptive action.
type InstanceGroupManagerUpdatePolicyMinimalAction string

const (
	// Do not perform any action.
	InstanceGroupManagerUpdatePolicyMinimalActionNone = InstanceGroupManagerUpdatePolicyMinimalAction("NONE")
	// Updates applied in runtime, instances will not be disrupted.
	InstanceGroupManagerUpdatePolicyMinimalActionRefresh = InstanceGroupManagerUpdatePolicyMinimalAction("REFRESH")
	// Old instances will be deleted. New instances will be created from the target template.
	InstanceGroupManagerUpdatePolicyMinimalActionReplace = InstanceGroupManagerUpdatePolicyMinimalAction("REPLACE")
	// Every instance will be restarted.
	InstanceGroupManagerUpdatePolicyMinimalActionRestart = InstanceGroupManagerUpdatePolicyMinimalAction("RESTART")
)

func (InstanceGroupManagerUpdatePolicyMinimalAction) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMinimalAction)(nil)).Elem()
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToInstanceGroupManagerUpdatePolicyMinimalActionOutput() InstanceGroupManagerUpdatePolicyMinimalActionOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerUpdatePolicyMinimalActionOutput)
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToInstanceGroupManagerUpdatePolicyMinimalActionOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMinimalActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerUpdatePolicyMinimalActionOutput)
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutput() InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return e.ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return InstanceGroupManagerUpdatePolicyMinimalAction(e).ToInstanceGroupManagerUpdatePolicyMinimalActionOutputWithContext(ctx).ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyMinimalAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerUpdatePolicyMinimalActionOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyMinimalActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMinimalAction)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToInstanceGroupManagerUpdatePolicyMinimalActionOutput() InstanceGroupManagerUpdatePolicyMinimalActionOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToInstanceGroupManagerUpdatePolicyMinimalActionOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMinimalActionOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutput() InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return o.ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerUpdatePolicyMinimalAction) *InstanceGroupManagerUpdatePolicyMinimalAction {
		return &v
	}).(InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput)
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyMinimalAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyMinimalAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerUpdatePolicyMinimalAction)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutput() InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput) Elem() InstanceGroupManagerUpdatePolicyMinimalActionOutput {
	return o.ApplyT(func(v *InstanceGroupManagerUpdatePolicyMinimalAction) InstanceGroupManagerUpdatePolicyMinimalAction {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerUpdatePolicyMinimalAction
		return ret
	}).(InstanceGroupManagerUpdatePolicyMinimalActionOutput)
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerUpdatePolicyMinimalAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerUpdatePolicyMinimalActionInput is an input type that accepts InstanceGroupManagerUpdatePolicyMinimalActionArgs and InstanceGroupManagerUpdatePolicyMinimalActionOutput values.
// You can construct a concrete instance of `InstanceGroupManagerUpdatePolicyMinimalActionInput` via:
//
//          InstanceGroupManagerUpdatePolicyMinimalActionArgs{...}
type InstanceGroupManagerUpdatePolicyMinimalActionInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyMinimalActionOutput() InstanceGroupManagerUpdatePolicyMinimalActionOutput
	ToInstanceGroupManagerUpdatePolicyMinimalActionOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyMinimalActionOutput
}

var instanceGroupManagerUpdatePolicyMinimalActionPtrType = reflect.TypeOf((**InstanceGroupManagerUpdatePolicyMinimalAction)(nil)).Elem()

type InstanceGroupManagerUpdatePolicyMinimalActionPtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutput() InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput
	ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput
}

type instanceGroupManagerUpdatePolicyMinimalActionPtr string

func InstanceGroupManagerUpdatePolicyMinimalActionPtr(v string) InstanceGroupManagerUpdatePolicyMinimalActionPtrInput {
	return (*instanceGroupManagerUpdatePolicyMinimalActionPtr)(&v)
}

func (*instanceGroupManagerUpdatePolicyMinimalActionPtr) ElementType() reflect.Type {
	return instanceGroupManagerUpdatePolicyMinimalActionPtrType
}

func (in *instanceGroupManagerUpdatePolicyMinimalActionPtr) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutput() InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput)
}

func (in *instanceGroupManagerUpdatePolicyMinimalActionPtr) ToInstanceGroupManagerUpdatePolicyMinimalActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput)
}

// Most disruptive action that is allowed to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to allow actions that do not need instance restart, RESTART to allow actions that can be applied without instance replacing or REPLACE to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.
type InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction string

const (
	// Do not perform any action.
	InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionNone = InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction("NONE")
	// Updates applied in runtime, instances will not be disrupted.
	InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionRefresh = InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction("REFRESH")
	// Old instances will be deleted. New instances will be created from the target template.
	InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionReplace = InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction("REPLACE")
	// Every instance will be restarted.
	InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionRestart = InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction("RESTART")
)

func (InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction)(nil)).Elem()
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput)
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput)
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return e.ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction(e).ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutputWithContext(ctx).ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return o.ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) *InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction {
		return &v
	}).(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput)
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput) Elem() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput {
	return o.ApplyT(func(v *InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction
		return ret
	}).(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput)
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionInput is an input type that accepts InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionArgs and InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput values.
// You can construct a concrete instance of `InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionInput` via:
//
//          InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionArgs{...}
type InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput
	ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput
}

var instanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrType = reflect.TypeOf((**InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction)(nil)).Elem()

type InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput
	ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput
}

type instanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtr string

func InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtr(v string) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrInput {
	return (*instanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtr)(&v)
}

func (*instanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtr) ElementType() reflect.Type {
	return instanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrType
}

func (in *instanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtr) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput() InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput)
}

func (in *instanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtr) ToInstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput)
}

// What action should be used to replace instances. See minimal_action.REPLACE
type InstanceGroupManagerUpdatePolicyReplacementMethod string

const (
	// Instances will be recreated (with the same name)
	InstanceGroupManagerUpdatePolicyReplacementMethodRecreate = InstanceGroupManagerUpdatePolicyReplacementMethod("RECREATE")
	// Default option: instances will be deleted and created (with a new name)
	InstanceGroupManagerUpdatePolicyReplacementMethodSubstitute = InstanceGroupManagerUpdatePolicyReplacementMethod("SUBSTITUTE")
)

func (InstanceGroupManagerUpdatePolicyReplacementMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyReplacementMethod)(nil)).Elem()
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToInstanceGroupManagerUpdatePolicyReplacementMethodOutput() InstanceGroupManagerUpdatePolicyReplacementMethodOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerUpdatePolicyReplacementMethodOutput)
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToInstanceGroupManagerUpdatePolicyReplacementMethodOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerUpdatePolicyReplacementMethodOutput)
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput() InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return e.ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return InstanceGroupManagerUpdatePolicyReplacementMethod(e).ToInstanceGroupManagerUpdatePolicyReplacementMethodOutputWithContext(ctx).ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyReplacementMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerUpdatePolicyReplacementMethodOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyReplacementMethod)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToInstanceGroupManagerUpdatePolicyReplacementMethodOutput() InstanceGroupManagerUpdatePolicyReplacementMethodOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToInstanceGroupManagerUpdatePolicyReplacementMethodOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput() InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return o.ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerUpdatePolicyReplacementMethod) *InstanceGroupManagerUpdatePolicyReplacementMethod {
		return &v
	}).(InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput)
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyReplacementMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyReplacementMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerUpdatePolicyReplacementMethod)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput() InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput) Elem() InstanceGroupManagerUpdatePolicyReplacementMethodOutput {
	return o.ApplyT(func(v *InstanceGroupManagerUpdatePolicyReplacementMethod) InstanceGroupManagerUpdatePolicyReplacementMethod {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerUpdatePolicyReplacementMethod
		return ret
	}).(InstanceGroupManagerUpdatePolicyReplacementMethodOutput)
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerUpdatePolicyReplacementMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerUpdatePolicyReplacementMethodInput is an input type that accepts InstanceGroupManagerUpdatePolicyReplacementMethodArgs and InstanceGroupManagerUpdatePolicyReplacementMethodOutput values.
// You can construct a concrete instance of `InstanceGroupManagerUpdatePolicyReplacementMethodInput` via:
//
//          InstanceGroupManagerUpdatePolicyReplacementMethodArgs{...}
type InstanceGroupManagerUpdatePolicyReplacementMethodInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyReplacementMethodOutput() InstanceGroupManagerUpdatePolicyReplacementMethodOutput
	ToInstanceGroupManagerUpdatePolicyReplacementMethodOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodOutput
}

var instanceGroupManagerUpdatePolicyReplacementMethodPtrType = reflect.TypeOf((**InstanceGroupManagerUpdatePolicyReplacementMethod)(nil)).Elem()

type InstanceGroupManagerUpdatePolicyReplacementMethodPtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput() InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput
	ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput
}

type instanceGroupManagerUpdatePolicyReplacementMethodPtr string

func InstanceGroupManagerUpdatePolicyReplacementMethodPtr(v string) InstanceGroupManagerUpdatePolicyReplacementMethodPtrInput {
	return (*instanceGroupManagerUpdatePolicyReplacementMethodPtr)(&v)
}

func (*instanceGroupManagerUpdatePolicyReplacementMethodPtr) ElementType() reflect.Type {
	return instanceGroupManagerUpdatePolicyReplacementMethodPtrType
}

func (in *instanceGroupManagerUpdatePolicyReplacementMethodPtr) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput() InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput)
}

func (in *instanceGroupManagerUpdatePolicyReplacementMethodPtr) ToInstanceGroupManagerUpdatePolicyReplacementMethodPtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput)
}

// The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls).
type InstanceGroupManagerUpdatePolicyType string

const (
	// No action is being proactively performed in order to bring this IGM to its target version distribution (regardless of whether this distribution is expressed using instanceTemplate or versions field).
	InstanceGroupManagerUpdatePolicyTypeOpportunistic = InstanceGroupManagerUpdatePolicyType("OPPORTUNISTIC")
	// This IGM will actively converge to its target version distribution (regardless of whether this distribution is expressed using instanceTemplate or versions field).
	InstanceGroupManagerUpdatePolicyTypeProactive = InstanceGroupManagerUpdatePolicyType("PROACTIVE")
)

func (InstanceGroupManagerUpdatePolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyType)(nil)).Elem()
}

func (e InstanceGroupManagerUpdatePolicyType) ToInstanceGroupManagerUpdatePolicyTypeOutput() InstanceGroupManagerUpdatePolicyTypeOutput {
	return pulumi.ToOutput(e).(InstanceGroupManagerUpdatePolicyTypeOutput)
}

func (e InstanceGroupManagerUpdatePolicyType) ToInstanceGroupManagerUpdatePolicyTypeOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceGroupManagerUpdatePolicyTypeOutput)
}

func (e InstanceGroupManagerUpdatePolicyType) ToInstanceGroupManagerUpdatePolicyTypePtrOutput() InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return e.ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyType) ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return InstanceGroupManagerUpdatePolicyType(e).ToInstanceGroupManagerUpdatePolicyTypeOutputWithContext(ctx).ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(ctx)
}

func (e InstanceGroupManagerUpdatePolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceGroupManagerUpdatePolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceGroupManagerUpdatePolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceGroupManagerUpdatePolicyTypeOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupManagerUpdatePolicyType)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToInstanceGroupManagerUpdatePolicyTypeOutput() InstanceGroupManagerUpdatePolicyTypeOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToInstanceGroupManagerUpdatePolicyTypeOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyTypeOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToInstanceGroupManagerUpdatePolicyTypePtrOutput() InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return o.ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceGroupManagerUpdatePolicyType) *InstanceGroupManagerUpdatePolicyType {
		return &v
	}).(InstanceGroupManagerUpdatePolicyTypePtrOutput)
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceGroupManagerUpdatePolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceGroupManagerUpdatePolicyTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceGroupManagerUpdatePolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroupManagerUpdatePolicyType)(nil)).Elem()
}

func (o InstanceGroupManagerUpdatePolicyTypePtrOutput) ToInstanceGroupManagerUpdatePolicyTypePtrOutput() InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyTypePtrOutput) ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return o
}

func (o InstanceGroupManagerUpdatePolicyTypePtrOutput) Elem() InstanceGroupManagerUpdatePolicyTypeOutput {
	return o.ApplyT(func(v *InstanceGroupManagerUpdatePolicyType) InstanceGroupManagerUpdatePolicyType {
		if v != nil {
			return *v
		}
		var ret InstanceGroupManagerUpdatePolicyType
		return ret
	}).(InstanceGroupManagerUpdatePolicyTypeOutput)
}

func (o InstanceGroupManagerUpdatePolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceGroupManagerUpdatePolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceGroupManagerUpdatePolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceGroupManagerUpdatePolicyTypeInput is an input type that accepts InstanceGroupManagerUpdatePolicyTypeArgs and InstanceGroupManagerUpdatePolicyTypeOutput values.
// You can construct a concrete instance of `InstanceGroupManagerUpdatePolicyTypeInput` via:
//
//          InstanceGroupManagerUpdatePolicyTypeArgs{...}
type InstanceGroupManagerUpdatePolicyTypeInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyTypeOutput() InstanceGroupManagerUpdatePolicyTypeOutput
	ToInstanceGroupManagerUpdatePolicyTypeOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyTypeOutput
}

var instanceGroupManagerUpdatePolicyTypePtrType = reflect.TypeOf((**InstanceGroupManagerUpdatePolicyType)(nil)).Elem()

type InstanceGroupManagerUpdatePolicyTypePtrInput interface {
	pulumi.Input

	ToInstanceGroupManagerUpdatePolicyTypePtrOutput() InstanceGroupManagerUpdatePolicyTypePtrOutput
	ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(context.Context) InstanceGroupManagerUpdatePolicyTypePtrOutput
}

type instanceGroupManagerUpdatePolicyTypePtr string

func InstanceGroupManagerUpdatePolicyTypePtr(v string) InstanceGroupManagerUpdatePolicyTypePtrInput {
	return (*instanceGroupManagerUpdatePolicyTypePtr)(&v)
}

func (*instanceGroupManagerUpdatePolicyTypePtr) ElementType() reflect.Type {
	return instanceGroupManagerUpdatePolicyTypePtrType
}

func (in *instanceGroupManagerUpdatePolicyTypePtr) ToInstanceGroupManagerUpdatePolicyTypePtrOutput() InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceGroupManagerUpdatePolicyTypePtrOutput)
}

func (in *instanceGroupManagerUpdatePolicyTypePtr) ToInstanceGroupManagerUpdatePolicyTypePtrOutputWithContext(ctx context.Context) InstanceGroupManagerUpdatePolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceGroupManagerUpdatePolicyTypePtrOutput)
}

// KeyRevocationActionType of the instance.
type InstanceKeyRevocationActionType string

const (
	// Default value. This value is unused.
	InstanceKeyRevocationActionTypeKeyRevocationActionTypeUnspecified = InstanceKeyRevocationActionType("KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")
	// Indicates user chose no operation.
	InstanceKeyRevocationActionTypeNone = InstanceKeyRevocationActionType("NONE")
	// Indicates user chose to opt for VM shutdown on key revocation.
	InstanceKeyRevocationActionTypeStop = InstanceKeyRevocationActionType("STOP")
)

func (InstanceKeyRevocationActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceKeyRevocationActionType)(nil)).Elem()
}

func (e InstanceKeyRevocationActionType) ToInstanceKeyRevocationActionTypeOutput() InstanceKeyRevocationActionTypeOutput {
	return pulumi.ToOutput(e).(InstanceKeyRevocationActionTypeOutput)
}

func (e InstanceKeyRevocationActionType) ToInstanceKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstanceKeyRevocationActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceKeyRevocationActionTypeOutput)
}

func (e InstanceKeyRevocationActionType) ToInstanceKeyRevocationActionTypePtrOutput() InstanceKeyRevocationActionTypePtrOutput {
	return e.ToInstanceKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (e InstanceKeyRevocationActionType) ToInstanceKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstanceKeyRevocationActionTypePtrOutput {
	return InstanceKeyRevocationActionType(e).ToInstanceKeyRevocationActionTypeOutputWithContext(ctx).ToInstanceKeyRevocationActionTypePtrOutputWithContext(ctx)
}

func (e InstanceKeyRevocationActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceKeyRevocationActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceKeyRevocationActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceKeyRevocationActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceKeyRevocationActionTypeOutput struct{ *pulumi.OutputState }

func (InstanceKeyRevocationActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceKeyRevocationActionType)(nil)).Elem()
}

func (o InstanceKeyRevocationActionTypeOutput) ToInstanceKeyRevocationActionTypeOutput() InstanceKeyRevocationActionTypeOutput {
	return o
}

func (o InstanceKeyRevocationActionTypeOutput) ToInstanceKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstanceKeyRevocationActionTypeOutput {
	return o
}

func (o InstanceKeyRevocationActionTypeOutput) ToInstanceKeyRevocationActionTypePtrOutput() InstanceKeyRevocationActionTypePtrOutput {
	return o.ToInstanceKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (o InstanceKeyRevocationActionTypeOutput) ToInstanceKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstanceKeyRevocationActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceKeyRevocationActionType) *InstanceKeyRevocationActionType {
		return &v
	}).(InstanceKeyRevocationActionTypePtrOutput)
}

func (o InstanceKeyRevocationActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceKeyRevocationActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceKeyRevocationActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceKeyRevocationActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceKeyRevocationActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceKeyRevocationActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceKeyRevocationActionTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceKeyRevocationActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceKeyRevocationActionType)(nil)).Elem()
}

func (o InstanceKeyRevocationActionTypePtrOutput) ToInstanceKeyRevocationActionTypePtrOutput() InstanceKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstanceKeyRevocationActionTypePtrOutput) ToInstanceKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstanceKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstanceKeyRevocationActionTypePtrOutput) Elem() InstanceKeyRevocationActionTypeOutput {
	return o.ApplyT(func(v *InstanceKeyRevocationActionType) InstanceKeyRevocationActionType {
		if v != nil {
			return *v
		}
		var ret InstanceKeyRevocationActionType
		return ret
	}).(InstanceKeyRevocationActionTypeOutput)
}

func (o InstanceKeyRevocationActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceKeyRevocationActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceKeyRevocationActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceKeyRevocationActionTypeInput is an input type that accepts InstanceKeyRevocationActionTypeArgs and InstanceKeyRevocationActionTypeOutput values.
// You can construct a concrete instance of `InstanceKeyRevocationActionTypeInput` via:
//
//          InstanceKeyRevocationActionTypeArgs{...}
type InstanceKeyRevocationActionTypeInput interface {
	pulumi.Input

	ToInstanceKeyRevocationActionTypeOutput() InstanceKeyRevocationActionTypeOutput
	ToInstanceKeyRevocationActionTypeOutputWithContext(context.Context) InstanceKeyRevocationActionTypeOutput
}

var instanceKeyRevocationActionTypePtrType = reflect.TypeOf((**InstanceKeyRevocationActionType)(nil)).Elem()

type InstanceKeyRevocationActionTypePtrInput interface {
	pulumi.Input

	ToInstanceKeyRevocationActionTypePtrOutput() InstanceKeyRevocationActionTypePtrOutput
	ToInstanceKeyRevocationActionTypePtrOutputWithContext(context.Context) InstanceKeyRevocationActionTypePtrOutput
}

type instanceKeyRevocationActionTypePtr string

func InstanceKeyRevocationActionTypePtr(v string) InstanceKeyRevocationActionTypePtrInput {
	return (*instanceKeyRevocationActionTypePtr)(&v)
}

func (*instanceKeyRevocationActionTypePtr) ElementType() reflect.Type {
	return instanceKeyRevocationActionTypePtrType
}

func (in *instanceKeyRevocationActionTypePtr) ToInstanceKeyRevocationActionTypePtrOutput() InstanceKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceKeyRevocationActionTypePtrOutput)
}

func (in *instanceKeyRevocationActionTypePtr) ToInstanceKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstanceKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceKeyRevocationActionTypePtrOutput)
}

// PostKeyRevocationActionType of the instance.
type InstancePostKeyRevocationActionType string

const (
	// Indicates user chose no operation.
	InstancePostKeyRevocationActionTypeNoop = InstancePostKeyRevocationActionType("NOOP")
	// Default value. This value is unused.
	InstancePostKeyRevocationActionTypePostKeyRevocationActionTypeUnspecified = InstancePostKeyRevocationActionType("POST_KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")
	// Indicates user chose to opt for VM shutdown on key revocation.
	InstancePostKeyRevocationActionTypeShutdown = InstancePostKeyRevocationActionType("SHUTDOWN")
)

func (InstancePostKeyRevocationActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePostKeyRevocationActionType)(nil)).Elem()
}

func (e InstancePostKeyRevocationActionType) ToInstancePostKeyRevocationActionTypeOutput() InstancePostKeyRevocationActionTypeOutput {
	return pulumi.ToOutput(e).(InstancePostKeyRevocationActionTypeOutput)
}

func (e InstancePostKeyRevocationActionType) ToInstancePostKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstancePostKeyRevocationActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstancePostKeyRevocationActionTypeOutput)
}

func (e InstancePostKeyRevocationActionType) ToInstancePostKeyRevocationActionTypePtrOutput() InstancePostKeyRevocationActionTypePtrOutput {
	return e.ToInstancePostKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (e InstancePostKeyRevocationActionType) ToInstancePostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePostKeyRevocationActionTypePtrOutput {
	return InstancePostKeyRevocationActionType(e).ToInstancePostKeyRevocationActionTypeOutputWithContext(ctx).ToInstancePostKeyRevocationActionTypePtrOutputWithContext(ctx)
}

func (e InstancePostKeyRevocationActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePostKeyRevocationActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePostKeyRevocationActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstancePostKeyRevocationActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstancePostKeyRevocationActionTypeOutput struct{ *pulumi.OutputState }

func (InstancePostKeyRevocationActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePostKeyRevocationActionType)(nil)).Elem()
}

func (o InstancePostKeyRevocationActionTypeOutput) ToInstancePostKeyRevocationActionTypeOutput() InstancePostKeyRevocationActionTypeOutput {
	return o
}

func (o InstancePostKeyRevocationActionTypeOutput) ToInstancePostKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstancePostKeyRevocationActionTypeOutput {
	return o
}

func (o InstancePostKeyRevocationActionTypeOutput) ToInstancePostKeyRevocationActionTypePtrOutput() InstancePostKeyRevocationActionTypePtrOutput {
	return o.ToInstancePostKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (o InstancePostKeyRevocationActionTypeOutput) ToInstancePostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePostKeyRevocationActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePostKeyRevocationActionType) *InstancePostKeyRevocationActionType {
		return &v
	}).(InstancePostKeyRevocationActionTypePtrOutput)
}

func (o InstancePostKeyRevocationActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstancePostKeyRevocationActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePostKeyRevocationActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstancePostKeyRevocationActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePostKeyRevocationActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePostKeyRevocationActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstancePostKeyRevocationActionTypePtrOutput struct{ *pulumi.OutputState }

func (InstancePostKeyRevocationActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePostKeyRevocationActionType)(nil)).Elem()
}

func (o InstancePostKeyRevocationActionTypePtrOutput) ToInstancePostKeyRevocationActionTypePtrOutput() InstancePostKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstancePostKeyRevocationActionTypePtrOutput) ToInstancePostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePostKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstancePostKeyRevocationActionTypePtrOutput) Elem() InstancePostKeyRevocationActionTypeOutput {
	return o.ApplyT(func(v *InstancePostKeyRevocationActionType) InstancePostKeyRevocationActionType {
		if v != nil {
			return *v
		}
		var ret InstancePostKeyRevocationActionType
		return ret
	}).(InstancePostKeyRevocationActionTypeOutput)
}

func (o InstancePostKeyRevocationActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePostKeyRevocationActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstancePostKeyRevocationActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstancePostKeyRevocationActionTypeInput is an input type that accepts InstancePostKeyRevocationActionTypeArgs and InstancePostKeyRevocationActionTypeOutput values.
// You can construct a concrete instance of `InstancePostKeyRevocationActionTypeInput` via:
//
//          InstancePostKeyRevocationActionTypeArgs{...}
type InstancePostKeyRevocationActionTypeInput interface {
	pulumi.Input

	ToInstancePostKeyRevocationActionTypeOutput() InstancePostKeyRevocationActionTypeOutput
	ToInstancePostKeyRevocationActionTypeOutputWithContext(context.Context) InstancePostKeyRevocationActionTypeOutput
}

var instancePostKeyRevocationActionTypePtrType = reflect.TypeOf((**InstancePostKeyRevocationActionType)(nil)).Elem()

type InstancePostKeyRevocationActionTypePtrInput interface {
	pulumi.Input

	ToInstancePostKeyRevocationActionTypePtrOutput() InstancePostKeyRevocationActionTypePtrOutput
	ToInstancePostKeyRevocationActionTypePtrOutputWithContext(context.Context) InstancePostKeyRevocationActionTypePtrOutput
}

type instancePostKeyRevocationActionTypePtr string

func InstancePostKeyRevocationActionTypePtr(v string) InstancePostKeyRevocationActionTypePtrInput {
	return (*instancePostKeyRevocationActionTypePtr)(&v)
}

func (*instancePostKeyRevocationActionTypePtr) ElementType() reflect.Type {
	return instancePostKeyRevocationActionTypePtrType
}

func (in *instancePostKeyRevocationActionTypePtr) ToInstancePostKeyRevocationActionTypePtrOutput() InstancePostKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutput(in).(InstancePostKeyRevocationActionTypePtrOutput)
}

func (in *instancePostKeyRevocationActionTypePtr) ToInstancePostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePostKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstancePostKeyRevocationActionTypePtrOutput)
}

// The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
type InstancePrivateIpv6GoogleAccess string

const (
	// Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
	InstancePrivateIpv6GoogleAccessEnableBidirectionalAccessToGoogle = InstancePrivateIpv6GoogleAccess("ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE")
	// Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
	InstancePrivateIpv6GoogleAccessEnableOutboundVmAccessToGoogle = InstancePrivateIpv6GoogleAccess("ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE")
	// Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork.
	InstancePrivateIpv6GoogleAccessInheritFromSubnetwork = InstancePrivateIpv6GoogleAccess("INHERIT_FROM_SUBNETWORK")
)

func (InstancePrivateIpv6GoogleAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateIpv6GoogleAccess)(nil)).Elem()
}

func (e InstancePrivateIpv6GoogleAccess) ToInstancePrivateIpv6GoogleAccessOutput() InstancePrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutput(e).(InstancePrivateIpv6GoogleAccessOutput)
}

func (e InstancePrivateIpv6GoogleAccess) ToInstancePrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) InstancePrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstancePrivateIpv6GoogleAccessOutput)
}

func (e InstancePrivateIpv6GoogleAccess) ToInstancePrivateIpv6GoogleAccessPtrOutput() InstancePrivateIpv6GoogleAccessPtrOutput {
	return e.ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (e InstancePrivateIpv6GoogleAccess) ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePrivateIpv6GoogleAccessPtrOutput {
	return InstancePrivateIpv6GoogleAccess(e).ToInstancePrivateIpv6GoogleAccessOutputWithContext(ctx).ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(ctx)
}

func (e InstancePrivateIpv6GoogleAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePrivateIpv6GoogleAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePrivateIpv6GoogleAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstancePrivateIpv6GoogleAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstancePrivateIpv6GoogleAccessOutput struct{ *pulumi.OutputState }

func (InstancePrivateIpv6GoogleAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToInstancePrivateIpv6GoogleAccessOutput() InstancePrivateIpv6GoogleAccessOutput {
	return o
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToInstancePrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) InstancePrivateIpv6GoogleAccessOutput {
	return o
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToInstancePrivateIpv6GoogleAccessPtrOutput() InstancePrivateIpv6GoogleAccessPtrOutput {
	return o.ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePrivateIpv6GoogleAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePrivateIpv6GoogleAccess) *InstancePrivateIpv6GoogleAccess {
		return &v
	}).(InstancePrivateIpv6GoogleAccessPtrOutput)
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePrivateIpv6GoogleAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePrivateIpv6GoogleAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePrivateIpv6GoogleAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstancePrivateIpv6GoogleAccessPtrOutput struct{ *pulumi.OutputState }

func (InstancePrivateIpv6GoogleAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o InstancePrivateIpv6GoogleAccessPtrOutput) ToInstancePrivateIpv6GoogleAccessPtrOutput() InstancePrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o InstancePrivateIpv6GoogleAccessPtrOutput) ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o InstancePrivateIpv6GoogleAccessPtrOutput) Elem() InstancePrivateIpv6GoogleAccessOutput {
	return o.ApplyT(func(v *InstancePrivateIpv6GoogleAccess) InstancePrivateIpv6GoogleAccess {
		if v != nil {
			return *v
		}
		var ret InstancePrivateIpv6GoogleAccess
		return ret
	}).(InstancePrivateIpv6GoogleAccessOutput)
}

func (o InstancePrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstancePrivateIpv6GoogleAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstancePrivateIpv6GoogleAccessInput is an input type that accepts InstancePrivateIpv6GoogleAccessArgs and InstancePrivateIpv6GoogleAccessOutput values.
// You can construct a concrete instance of `InstancePrivateIpv6GoogleAccessInput` via:
//
//          InstancePrivateIpv6GoogleAccessArgs{...}
type InstancePrivateIpv6GoogleAccessInput interface {
	pulumi.Input

	ToInstancePrivateIpv6GoogleAccessOutput() InstancePrivateIpv6GoogleAccessOutput
	ToInstancePrivateIpv6GoogleAccessOutputWithContext(context.Context) InstancePrivateIpv6GoogleAccessOutput
}

var instancePrivateIpv6GoogleAccessPtrType = reflect.TypeOf((**InstancePrivateIpv6GoogleAccess)(nil)).Elem()

type InstancePrivateIpv6GoogleAccessPtrInput interface {
	pulumi.Input

	ToInstancePrivateIpv6GoogleAccessPtrOutput() InstancePrivateIpv6GoogleAccessPtrOutput
	ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(context.Context) InstancePrivateIpv6GoogleAccessPtrOutput
}

type instancePrivateIpv6GoogleAccessPtr string

func InstancePrivateIpv6GoogleAccessPtr(v string) InstancePrivateIpv6GoogleAccessPtrInput {
	return (*instancePrivateIpv6GoogleAccessPtr)(&v)
}

func (*instancePrivateIpv6GoogleAccessPtr) ElementType() reflect.Type {
	return instancePrivateIpv6GoogleAccessPtrType
}

func (in *instancePrivateIpv6GoogleAccessPtr) ToInstancePrivateIpv6GoogleAccessPtrOutput() InstancePrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutput(in).(InstancePrivateIpv6GoogleAccessPtrOutput)
}

func (in *instancePrivateIpv6GoogleAccessPtr) ToInstancePrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstancePrivateIpv6GoogleAccessPtrOutput)
}

// KeyRevocationActionType of the instance.
type InstancePropertiesKeyRevocationActionType string

const (
	// Default value. This value is unused.
	InstancePropertiesKeyRevocationActionTypeKeyRevocationActionTypeUnspecified = InstancePropertiesKeyRevocationActionType("KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")
	// Indicates user chose no operation.
	InstancePropertiesKeyRevocationActionTypeNone = InstancePropertiesKeyRevocationActionType("NONE")
	// Indicates user chose to opt for VM shutdown on key revocation.
	InstancePropertiesKeyRevocationActionTypeStop = InstancePropertiesKeyRevocationActionType("STOP")
)

func (InstancePropertiesKeyRevocationActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesKeyRevocationActionType)(nil)).Elem()
}

func (e InstancePropertiesKeyRevocationActionType) ToInstancePropertiesKeyRevocationActionTypeOutput() InstancePropertiesKeyRevocationActionTypeOutput {
	return pulumi.ToOutput(e).(InstancePropertiesKeyRevocationActionTypeOutput)
}

func (e InstancePropertiesKeyRevocationActionType) ToInstancePropertiesKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstancePropertiesKeyRevocationActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstancePropertiesKeyRevocationActionTypeOutput)
}

func (e InstancePropertiesKeyRevocationActionType) ToInstancePropertiesKeyRevocationActionTypePtrOutput() InstancePropertiesKeyRevocationActionTypePtrOutput {
	return e.ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (e InstancePropertiesKeyRevocationActionType) ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesKeyRevocationActionTypePtrOutput {
	return InstancePropertiesKeyRevocationActionType(e).ToInstancePropertiesKeyRevocationActionTypeOutputWithContext(ctx).ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(ctx)
}

func (e InstancePropertiesKeyRevocationActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePropertiesKeyRevocationActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePropertiesKeyRevocationActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstancePropertiesKeyRevocationActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstancePropertiesKeyRevocationActionTypeOutput struct{ *pulumi.OutputState }

func (InstancePropertiesKeyRevocationActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesKeyRevocationActionType)(nil)).Elem()
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToInstancePropertiesKeyRevocationActionTypeOutput() InstancePropertiesKeyRevocationActionTypeOutput {
	return o
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToInstancePropertiesKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstancePropertiesKeyRevocationActionTypeOutput {
	return o
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToInstancePropertiesKeyRevocationActionTypePtrOutput() InstancePropertiesKeyRevocationActionTypePtrOutput {
	return o.ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesKeyRevocationActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePropertiesKeyRevocationActionType) *InstancePropertiesKeyRevocationActionType {
		return &v
	}).(InstancePropertiesKeyRevocationActionTypePtrOutput)
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePropertiesKeyRevocationActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesKeyRevocationActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePropertiesKeyRevocationActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstancePropertiesKeyRevocationActionTypePtrOutput struct{ *pulumi.OutputState }

func (InstancePropertiesKeyRevocationActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePropertiesKeyRevocationActionType)(nil)).Elem()
}

func (o InstancePropertiesKeyRevocationActionTypePtrOutput) ToInstancePropertiesKeyRevocationActionTypePtrOutput() InstancePropertiesKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstancePropertiesKeyRevocationActionTypePtrOutput) ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstancePropertiesKeyRevocationActionTypePtrOutput) Elem() InstancePropertiesKeyRevocationActionTypeOutput {
	return o.ApplyT(func(v *InstancePropertiesKeyRevocationActionType) InstancePropertiesKeyRevocationActionType {
		if v != nil {
			return *v
		}
		var ret InstancePropertiesKeyRevocationActionType
		return ret
	}).(InstancePropertiesKeyRevocationActionTypeOutput)
}

func (o InstancePropertiesKeyRevocationActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesKeyRevocationActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstancePropertiesKeyRevocationActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstancePropertiesKeyRevocationActionTypeInput is an input type that accepts InstancePropertiesKeyRevocationActionTypeArgs and InstancePropertiesKeyRevocationActionTypeOutput values.
// You can construct a concrete instance of `InstancePropertiesKeyRevocationActionTypeInput` via:
//
//          InstancePropertiesKeyRevocationActionTypeArgs{...}
type InstancePropertiesKeyRevocationActionTypeInput interface {
	pulumi.Input

	ToInstancePropertiesKeyRevocationActionTypeOutput() InstancePropertiesKeyRevocationActionTypeOutput
	ToInstancePropertiesKeyRevocationActionTypeOutputWithContext(context.Context) InstancePropertiesKeyRevocationActionTypeOutput
}

var instancePropertiesKeyRevocationActionTypePtrType = reflect.TypeOf((**InstancePropertiesKeyRevocationActionType)(nil)).Elem()

type InstancePropertiesKeyRevocationActionTypePtrInput interface {
	pulumi.Input

	ToInstancePropertiesKeyRevocationActionTypePtrOutput() InstancePropertiesKeyRevocationActionTypePtrOutput
	ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(context.Context) InstancePropertiesKeyRevocationActionTypePtrOutput
}

type instancePropertiesKeyRevocationActionTypePtr string

func InstancePropertiesKeyRevocationActionTypePtr(v string) InstancePropertiesKeyRevocationActionTypePtrInput {
	return (*instancePropertiesKeyRevocationActionTypePtr)(&v)
}

func (*instancePropertiesKeyRevocationActionTypePtr) ElementType() reflect.Type {
	return instancePropertiesKeyRevocationActionTypePtrType
}

func (in *instancePropertiesKeyRevocationActionTypePtr) ToInstancePropertiesKeyRevocationActionTypePtrOutput() InstancePropertiesKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutput(in).(InstancePropertiesKeyRevocationActionTypePtrOutput)
}

func (in *instancePropertiesKeyRevocationActionTypePtr) ToInstancePropertiesKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstancePropertiesKeyRevocationActionTypePtrOutput)
}

// PostKeyRevocationActionType of the instance.
type InstancePropertiesPostKeyRevocationActionType string

const (
	// Indicates user chose no operation.
	InstancePropertiesPostKeyRevocationActionTypeNoop = InstancePropertiesPostKeyRevocationActionType("NOOP")
	// Default value. This value is unused.
	InstancePropertiesPostKeyRevocationActionTypePostKeyRevocationActionTypeUnspecified = InstancePropertiesPostKeyRevocationActionType("POST_KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")
	// Indicates user chose to opt for VM shutdown on key revocation.
	InstancePropertiesPostKeyRevocationActionTypeShutdown = InstancePropertiesPostKeyRevocationActionType("SHUTDOWN")
)

func (InstancePropertiesPostKeyRevocationActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesPostKeyRevocationActionType)(nil)).Elem()
}

func (e InstancePropertiesPostKeyRevocationActionType) ToInstancePropertiesPostKeyRevocationActionTypeOutput() InstancePropertiesPostKeyRevocationActionTypeOutput {
	return pulumi.ToOutput(e).(InstancePropertiesPostKeyRevocationActionTypeOutput)
}

func (e InstancePropertiesPostKeyRevocationActionType) ToInstancePropertiesPostKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstancePropertiesPostKeyRevocationActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstancePropertiesPostKeyRevocationActionTypeOutput)
}

func (e InstancePropertiesPostKeyRevocationActionType) ToInstancePropertiesPostKeyRevocationActionTypePtrOutput() InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return e.ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (e InstancePropertiesPostKeyRevocationActionType) ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return InstancePropertiesPostKeyRevocationActionType(e).ToInstancePropertiesPostKeyRevocationActionTypeOutputWithContext(ctx).ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(ctx)
}

func (e InstancePropertiesPostKeyRevocationActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePropertiesPostKeyRevocationActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePropertiesPostKeyRevocationActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstancePropertiesPostKeyRevocationActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstancePropertiesPostKeyRevocationActionTypeOutput struct{ *pulumi.OutputState }

func (InstancePropertiesPostKeyRevocationActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesPostKeyRevocationActionType)(nil)).Elem()
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToInstancePropertiesPostKeyRevocationActionTypeOutput() InstancePropertiesPostKeyRevocationActionTypeOutput {
	return o
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToInstancePropertiesPostKeyRevocationActionTypeOutputWithContext(ctx context.Context) InstancePropertiesPostKeyRevocationActionTypeOutput {
	return o
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToInstancePropertiesPostKeyRevocationActionTypePtrOutput() InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return o.ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(context.Background())
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePropertiesPostKeyRevocationActionType) *InstancePropertiesPostKeyRevocationActionType {
		return &v
	}).(InstancePropertiesPostKeyRevocationActionTypePtrOutput)
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePropertiesPostKeyRevocationActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesPostKeyRevocationActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePropertiesPostKeyRevocationActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstancePropertiesPostKeyRevocationActionTypePtrOutput struct{ *pulumi.OutputState }

func (InstancePropertiesPostKeyRevocationActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePropertiesPostKeyRevocationActionType)(nil)).Elem()
}

func (o InstancePropertiesPostKeyRevocationActionTypePtrOutput) ToInstancePropertiesPostKeyRevocationActionTypePtrOutput() InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstancePropertiesPostKeyRevocationActionTypePtrOutput) ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return o
}

func (o InstancePropertiesPostKeyRevocationActionTypePtrOutput) Elem() InstancePropertiesPostKeyRevocationActionTypeOutput {
	return o.ApplyT(func(v *InstancePropertiesPostKeyRevocationActionType) InstancePropertiesPostKeyRevocationActionType {
		if v != nil {
			return *v
		}
		var ret InstancePropertiesPostKeyRevocationActionType
		return ret
	}).(InstancePropertiesPostKeyRevocationActionTypeOutput)
}

func (o InstancePropertiesPostKeyRevocationActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesPostKeyRevocationActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstancePropertiesPostKeyRevocationActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstancePropertiesPostKeyRevocationActionTypeInput is an input type that accepts InstancePropertiesPostKeyRevocationActionTypeArgs and InstancePropertiesPostKeyRevocationActionTypeOutput values.
// You can construct a concrete instance of `InstancePropertiesPostKeyRevocationActionTypeInput` via:
//
//          InstancePropertiesPostKeyRevocationActionTypeArgs{...}
type InstancePropertiesPostKeyRevocationActionTypeInput interface {
	pulumi.Input

	ToInstancePropertiesPostKeyRevocationActionTypeOutput() InstancePropertiesPostKeyRevocationActionTypeOutput
	ToInstancePropertiesPostKeyRevocationActionTypeOutputWithContext(context.Context) InstancePropertiesPostKeyRevocationActionTypeOutput
}

var instancePropertiesPostKeyRevocationActionTypePtrType = reflect.TypeOf((**InstancePropertiesPostKeyRevocationActionType)(nil)).Elem()

type InstancePropertiesPostKeyRevocationActionTypePtrInput interface {
	pulumi.Input

	ToInstancePropertiesPostKeyRevocationActionTypePtrOutput() InstancePropertiesPostKeyRevocationActionTypePtrOutput
	ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(context.Context) InstancePropertiesPostKeyRevocationActionTypePtrOutput
}

type instancePropertiesPostKeyRevocationActionTypePtr string

func InstancePropertiesPostKeyRevocationActionTypePtr(v string) InstancePropertiesPostKeyRevocationActionTypePtrInput {
	return (*instancePropertiesPostKeyRevocationActionTypePtr)(&v)
}

func (*instancePropertiesPostKeyRevocationActionTypePtr) ElementType() reflect.Type {
	return instancePropertiesPostKeyRevocationActionTypePtrType
}

func (in *instancePropertiesPostKeyRevocationActionTypePtr) ToInstancePropertiesPostKeyRevocationActionTypePtrOutput() InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutput(in).(InstancePropertiesPostKeyRevocationActionTypePtrOutput)
}

func (in *instancePropertiesPostKeyRevocationActionTypePtr) ToInstancePropertiesPostKeyRevocationActionTypePtrOutputWithContext(ctx context.Context) InstancePropertiesPostKeyRevocationActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstancePropertiesPostKeyRevocationActionTypePtrOutput)
}

// The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not supported yet.
type InstancePropertiesPrivateIpv6GoogleAccess string

const (
	// Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
	InstancePropertiesPrivateIpv6GoogleAccessEnableBidirectionalAccessToGoogle = InstancePropertiesPrivateIpv6GoogleAccess("ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE")
	// Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before.
	InstancePropertiesPrivateIpv6GoogleAccessEnableOutboundVmAccessToGoogle = InstancePropertiesPrivateIpv6GoogleAccess("ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE")
	// Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork.
	InstancePropertiesPrivateIpv6GoogleAccessInheritFromSubnetwork = InstancePropertiesPrivateIpv6GoogleAccess("INHERIT_FROM_SUBNETWORK")
)

func (InstancePropertiesPrivateIpv6GoogleAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToInstancePropertiesPrivateIpv6GoogleAccessOutput() InstancePropertiesPrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutput(e).(InstancePropertiesPrivateIpv6GoogleAccessOutput)
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToInstancePropertiesPrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) InstancePropertiesPrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstancePropertiesPrivateIpv6GoogleAccessOutput)
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutput() InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return e.ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return InstancePropertiesPrivateIpv6GoogleAccess(e).ToInstancePropertiesPrivateIpv6GoogleAccessOutputWithContext(ctx).ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(ctx)
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstancePropertiesPrivateIpv6GoogleAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstancePropertiesPrivateIpv6GoogleAccessOutput struct{ *pulumi.OutputState }

func (InstancePropertiesPrivateIpv6GoogleAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePropertiesPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToInstancePropertiesPrivateIpv6GoogleAccessOutput() InstancePropertiesPrivateIpv6GoogleAccessOutput {
	return o
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToInstancePropertiesPrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) InstancePropertiesPrivateIpv6GoogleAccessOutput {
	return o
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutput() InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return o.ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePropertiesPrivateIpv6GoogleAccess) *InstancePropertiesPrivateIpv6GoogleAccess {
		return &v
	}).(InstancePropertiesPrivateIpv6GoogleAccessPtrOutput)
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePropertiesPrivateIpv6GoogleAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesPrivateIpv6GoogleAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstancePropertiesPrivateIpv6GoogleAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstancePropertiesPrivateIpv6GoogleAccessPtrOutput struct{ *pulumi.OutputState }

func (InstancePropertiesPrivateIpv6GoogleAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePropertiesPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o InstancePropertiesPrivateIpv6GoogleAccessPtrOutput) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutput() InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o InstancePropertiesPrivateIpv6GoogleAccessPtrOutput) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o InstancePropertiesPrivateIpv6GoogleAccessPtrOutput) Elem() InstancePropertiesPrivateIpv6GoogleAccessOutput {
	return o.ApplyT(func(v *InstancePropertiesPrivateIpv6GoogleAccess) InstancePropertiesPrivateIpv6GoogleAccess {
		if v != nil {
			return *v
		}
		var ret InstancePropertiesPrivateIpv6GoogleAccess
		return ret
	}).(InstancePropertiesPrivateIpv6GoogleAccessOutput)
}

func (o InstancePropertiesPrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstancePropertiesPrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstancePropertiesPrivateIpv6GoogleAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstancePropertiesPrivateIpv6GoogleAccessInput is an input type that accepts InstancePropertiesPrivateIpv6GoogleAccessArgs and InstancePropertiesPrivateIpv6GoogleAccessOutput values.
// You can construct a concrete instance of `InstancePropertiesPrivateIpv6GoogleAccessInput` via:
//
//          InstancePropertiesPrivateIpv6GoogleAccessArgs{...}
type InstancePropertiesPrivateIpv6GoogleAccessInput interface {
	pulumi.Input

	ToInstancePropertiesPrivateIpv6GoogleAccessOutput() InstancePropertiesPrivateIpv6GoogleAccessOutput
	ToInstancePropertiesPrivateIpv6GoogleAccessOutputWithContext(context.Context) InstancePropertiesPrivateIpv6GoogleAccessOutput
}

var instancePropertiesPrivateIpv6GoogleAccessPtrType = reflect.TypeOf((**InstancePropertiesPrivateIpv6GoogleAccess)(nil)).Elem()

type InstancePropertiesPrivateIpv6GoogleAccessPtrInput interface {
	pulumi.Input

	ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutput() InstancePropertiesPrivateIpv6GoogleAccessPtrOutput
	ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(context.Context) InstancePropertiesPrivateIpv6GoogleAccessPtrOutput
}

type instancePropertiesPrivateIpv6GoogleAccessPtr string

func InstancePropertiesPrivateIpv6GoogleAccessPtr(v string) InstancePropertiesPrivateIpv6GoogleAccessPtrInput {
	return (*instancePropertiesPrivateIpv6GoogleAccessPtr)(&v)
}

func (*instancePropertiesPrivateIpv6GoogleAccessPtr) ElementType() reflect.Type {
	return instancePropertiesPrivateIpv6GoogleAccessPtrType
}

func (in *instancePropertiesPrivateIpv6GoogleAccessPtr) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutput() InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutput(in).(InstancePropertiesPrivateIpv6GoogleAccessPtrOutput)
}

func (in *instancePropertiesPrivateIpv6GoogleAccessPtr) ToInstancePropertiesPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) InstancePropertiesPrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstancePropertiesPrivateIpv6GoogleAccessPtrOutput)
}

// Provisioned bandwidth capacity for the interconnect attachment. For attachments of type DEDICATED, the user can set the bandwidth. For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth. Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED, and can take one of the following values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s - BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s - BPS_1G: 1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s - BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s
type InterconnectAttachmentBandwidth string

const (
	// 100 Mbit/s
	InterconnectAttachmentBandwidthBps100m = InterconnectAttachmentBandwidth("BPS_100M")
	// 10 Gbit/s
	InterconnectAttachmentBandwidthBps10g = InterconnectAttachmentBandwidth("BPS_10G")
	// 1 Gbit/s
	InterconnectAttachmentBandwidthBps1g = InterconnectAttachmentBandwidth("BPS_1G")
	// 200 Mbit/s
	InterconnectAttachmentBandwidthBps200m = InterconnectAttachmentBandwidth("BPS_200M")
	// 20 Gbit/s
	InterconnectAttachmentBandwidthBps20g = InterconnectAttachmentBandwidth("BPS_20G")
	// 2 Gbit/s
	InterconnectAttachmentBandwidthBps2g = InterconnectAttachmentBandwidth("BPS_2G")
	// 300 Mbit/s
	InterconnectAttachmentBandwidthBps300m = InterconnectAttachmentBandwidth("BPS_300M")
	// 400 Mbit/s
	InterconnectAttachmentBandwidthBps400m = InterconnectAttachmentBandwidth("BPS_400M")
	// 500 Mbit/s
	InterconnectAttachmentBandwidthBps500m = InterconnectAttachmentBandwidth("BPS_500M")
	// 50 Gbit/s
	InterconnectAttachmentBandwidthBps50g = InterconnectAttachmentBandwidth("BPS_50G")
	// 50 Mbit/s
	InterconnectAttachmentBandwidthBps50m = InterconnectAttachmentBandwidth("BPS_50M")
	// 5 Gbit/s
	InterconnectAttachmentBandwidthBps5g = InterconnectAttachmentBandwidth("BPS_5G")
)

func (InterconnectAttachmentBandwidth) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentBandwidth)(nil)).Elem()
}

func (e InterconnectAttachmentBandwidth) ToInterconnectAttachmentBandwidthOutput() InterconnectAttachmentBandwidthOutput {
	return pulumi.ToOutput(e).(InterconnectAttachmentBandwidthOutput)
}

func (e InterconnectAttachmentBandwidth) ToInterconnectAttachmentBandwidthOutputWithContext(ctx context.Context) InterconnectAttachmentBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InterconnectAttachmentBandwidthOutput)
}

func (e InterconnectAttachmentBandwidth) ToInterconnectAttachmentBandwidthPtrOutput() InterconnectAttachmentBandwidthPtrOutput {
	return e.ToInterconnectAttachmentBandwidthPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentBandwidth) ToInterconnectAttachmentBandwidthPtrOutputWithContext(ctx context.Context) InterconnectAttachmentBandwidthPtrOutput {
	return InterconnectAttachmentBandwidth(e).ToInterconnectAttachmentBandwidthOutputWithContext(ctx).ToInterconnectAttachmentBandwidthPtrOutputWithContext(ctx)
}

func (e InterconnectAttachmentBandwidth) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentBandwidth) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentBandwidth) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentBandwidth) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InterconnectAttachmentBandwidthOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentBandwidth)(nil)).Elem()
}

func (o InterconnectAttachmentBandwidthOutput) ToInterconnectAttachmentBandwidthOutput() InterconnectAttachmentBandwidthOutput {
	return o
}

func (o InterconnectAttachmentBandwidthOutput) ToInterconnectAttachmentBandwidthOutputWithContext(ctx context.Context) InterconnectAttachmentBandwidthOutput {
	return o
}

func (o InterconnectAttachmentBandwidthOutput) ToInterconnectAttachmentBandwidthPtrOutput() InterconnectAttachmentBandwidthPtrOutput {
	return o.ToInterconnectAttachmentBandwidthPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentBandwidthOutput) ToInterconnectAttachmentBandwidthPtrOutputWithContext(ctx context.Context) InterconnectAttachmentBandwidthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterconnectAttachmentBandwidth) *InterconnectAttachmentBandwidth {
		return &v
	}).(InterconnectAttachmentBandwidthPtrOutput)
}

func (o InterconnectAttachmentBandwidthOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InterconnectAttachmentBandwidthOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentBandwidth) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InterconnectAttachmentBandwidthOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentBandwidthOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentBandwidth) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InterconnectAttachmentBandwidthPtrOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectAttachmentBandwidth)(nil)).Elem()
}

func (o InterconnectAttachmentBandwidthPtrOutput) ToInterconnectAttachmentBandwidthPtrOutput() InterconnectAttachmentBandwidthPtrOutput {
	return o
}

func (o InterconnectAttachmentBandwidthPtrOutput) ToInterconnectAttachmentBandwidthPtrOutputWithContext(ctx context.Context) InterconnectAttachmentBandwidthPtrOutput {
	return o
}

func (o InterconnectAttachmentBandwidthPtrOutput) Elem() InterconnectAttachmentBandwidthOutput {
	return o.ApplyT(func(v *InterconnectAttachmentBandwidth) InterconnectAttachmentBandwidth {
		if v != nil {
			return *v
		}
		var ret InterconnectAttachmentBandwidth
		return ret
	}).(InterconnectAttachmentBandwidthOutput)
}

func (o InterconnectAttachmentBandwidthPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentBandwidthPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InterconnectAttachmentBandwidth) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InterconnectAttachmentBandwidthInput is an input type that accepts InterconnectAttachmentBandwidthArgs and InterconnectAttachmentBandwidthOutput values.
// You can construct a concrete instance of `InterconnectAttachmentBandwidthInput` via:
//
//          InterconnectAttachmentBandwidthArgs{...}
type InterconnectAttachmentBandwidthInput interface {
	pulumi.Input

	ToInterconnectAttachmentBandwidthOutput() InterconnectAttachmentBandwidthOutput
	ToInterconnectAttachmentBandwidthOutputWithContext(context.Context) InterconnectAttachmentBandwidthOutput
}

var interconnectAttachmentBandwidthPtrType = reflect.TypeOf((**InterconnectAttachmentBandwidth)(nil)).Elem()

type InterconnectAttachmentBandwidthPtrInput interface {
	pulumi.Input

	ToInterconnectAttachmentBandwidthPtrOutput() InterconnectAttachmentBandwidthPtrOutput
	ToInterconnectAttachmentBandwidthPtrOutputWithContext(context.Context) InterconnectAttachmentBandwidthPtrOutput
}

type interconnectAttachmentBandwidthPtr string

func InterconnectAttachmentBandwidthPtr(v string) InterconnectAttachmentBandwidthPtrInput {
	return (*interconnectAttachmentBandwidthPtr)(&v)
}

func (*interconnectAttachmentBandwidthPtr) ElementType() reflect.Type {
	return interconnectAttachmentBandwidthPtrType
}

func (in *interconnectAttachmentBandwidthPtr) ToInterconnectAttachmentBandwidthPtrOutput() InterconnectAttachmentBandwidthPtrOutput {
	return pulumi.ToOutput(in).(InterconnectAttachmentBandwidthPtrOutput)
}

func (in *interconnectAttachmentBandwidthPtr) ToInterconnectAttachmentBandwidthPtrOutputWithContext(ctx context.Context) InterconnectAttachmentBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InterconnectAttachmentBandwidthPtrOutput)
}

// Desired availability domain for the attachment. Only available for type PARTNER, at creation time, and can take one of the following values: - AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For improved reliability, customers should configure a pair of attachments, one per availability domain. The selected availability domain will be provided to the Partner via the pairing key, so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
type InterconnectAttachmentEdgeAvailabilityDomain string

const (
	InterconnectAttachmentEdgeAvailabilityDomainAvailabilityDomain1   = InterconnectAttachmentEdgeAvailabilityDomain("AVAILABILITY_DOMAIN_1")
	InterconnectAttachmentEdgeAvailabilityDomainAvailabilityDomain2   = InterconnectAttachmentEdgeAvailabilityDomain("AVAILABILITY_DOMAIN_2")
	InterconnectAttachmentEdgeAvailabilityDomainAvailabilityDomainAny = InterconnectAttachmentEdgeAvailabilityDomain("AVAILABILITY_DOMAIN_ANY")
)

func (InterconnectAttachmentEdgeAvailabilityDomain) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentEdgeAvailabilityDomain)(nil)).Elem()
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToInterconnectAttachmentEdgeAvailabilityDomainOutput() InterconnectAttachmentEdgeAvailabilityDomainOutput {
	return pulumi.ToOutput(e).(InterconnectAttachmentEdgeAvailabilityDomainOutput)
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToInterconnectAttachmentEdgeAvailabilityDomainOutputWithContext(ctx context.Context) InterconnectAttachmentEdgeAvailabilityDomainOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InterconnectAttachmentEdgeAvailabilityDomainOutput)
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutput() InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return e.ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return InterconnectAttachmentEdgeAvailabilityDomain(e).ToInterconnectAttachmentEdgeAvailabilityDomainOutputWithContext(ctx).ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(ctx)
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentEdgeAvailabilityDomain) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InterconnectAttachmentEdgeAvailabilityDomainOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentEdgeAvailabilityDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentEdgeAvailabilityDomain)(nil)).Elem()
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToInterconnectAttachmentEdgeAvailabilityDomainOutput() InterconnectAttachmentEdgeAvailabilityDomainOutput {
	return o
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToInterconnectAttachmentEdgeAvailabilityDomainOutputWithContext(ctx context.Context) InterconnectAttachmentEdgeAvailabilityDomainOutput {
	return o
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutput() InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return o.ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterconnectAttachmentEdgeAvailabilityDomain) *InterconnectAttachmentEdgeAvailabilityDomain {
		return &v
	}).(InterconnectAttachmentEdgeAvailabilityDomainPtrOutput)
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentEdgeAvailabilityDomain) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEdgeAvailabilityDomainOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentEdgeAvailabilityDomain) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InterconnectAttachmentEdgeAvailabilityDomainPtrOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentEdgeAvailabilityDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectAttachmentEdgeAvailabilityDomain)(nil)).Elem()
}

func (o InterconnectAttachmentEdgeAvailabilityDomainPtrOutput) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutput() InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return o
}

func (o InterconnectAttachmentEdgeAvailabilityDomainPtrOutput) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return o
}

func (o InterconnectAttachmentEdgeAvailabilityDomainPtrOutput) Elem() InterconnectAttachmentEdgeAvailabilityDomainOutput {
	return o.ApplyT(func(v *InterconnectAttachmentEdgeAvailabilityDomain) InterconnectAttachmentEdgeAvailabilityDomain {
		if v != nil {
			return *v
		}
		var ret InterconnectAttachmentEdgeAvailabilityDomain
		return ret
	}).(InterconnectAttachmentEdgeAvailabilityDomainOutput)
}

func (o InterconnectAttachmentEdgeAvailabilityDomainPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEdgeAvailabilityDomainPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InterconnectAttachmentEdgeAvailabilityDomain) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InterconnectAttachmentEdgeAvailabilityDomainInput is an input type that accepts InterconnectAttachmentEdgeAvailabilityDomainArgs and InterconnectAttachmentEdgeAvailabilityDomainOutput values.
// You can construct a concrete instance of `InterconnectAttachmentEdgeAvailabilityDomainInput` via:
//
//          InterconnectAttachmentEdgeAvailabilityDomainArgs{...}
type InterconnectAttachmentEdgeAvailabilityDomainInput interface {
	pulumi.Input

	ToInterconnectAttachmentEdgeAvailabilityDomainOutput() InterconnectAttachmentEdgeAvailabilityDomainOutput
	ToInterconnectAttachmentEdgeAvailabilityDomainOutputWithContext(context.Context) InterconnectAttachmentEdgeAvailabilityDomainOutput
}

var interconnectAttachmentEdgeAvailabilityDomainPtrType = reflect.TypeOf((**InterconnectAttachmentEdgeAvailabilityDomain)(nil)).Elem()

type InterconnectAttachmentEdgeAvailabilityDomainPtrInput interface {
	pulumi.Input

	ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutput() InterconnectAttachmentEdgeAvailabilityDomainPtrOutput
	ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(context.Context) InterconnectAttachmentEdgeAvailabilityDomainPtrOutput
}

type interconnectAttachmentEdgeAvailabilityDomainPtr string

func InterconnectAttachmentEdgeAvailabilityDomainPtr(v string) InterconnectAttachmentEdgeAvailabilityDomainPtrInput {
	return (*interconnectAttachmentEdgeAvailabilityDomainPtr)(&v)
}

func (*interconnectAttachmentEdgeAvailabilityDomainPtr) ElementType() reflect.Type {
	return interconnectAttachmentEdgeAvailabilityDomainPtrType
}

func (in *interconnectAttachmentEdgeAvailabilityDomainPtr) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutput() InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return pulumi.ToOutput(in).(InterconnectAttachmentEdgeAvailabilityDomainPtrOutput)
}

func (in *interconnectAttachmentEdgeAvailabilityDomainPtr) ToInterconnectAttachmentEdgeAvailabilityDomainPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEdgeAvailabilityDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InterconnectAttachmentEdgeAvailabilityDomainPtrOutput)
}

// Indicates the user-supplied encryption option of this VLAN attachment (interconnectAttachment). Can only be specified at attachment creation for PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the default value, which means that the VLAN attachment carries unencrypted traffic. VMs are able to send traffic to, or receive traffic from, such a VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted traffic that is encrypted by an IPsec device, such as an HA VPN gateway or third-party IPsec VPN. VMs cannot directly send traffic to, or receive traffic from, such a VLAN attachment. To use *IPsec-encrypted Cloud Interconnect*, the VLAN attachment must be created with this option. Not currently available publicly.
type InterconnectAttachmentEncryption string

const (
	// The interconnect attachment will carry only encrypted traffic that is encrypted by an IPsec device such as HA VPN gateway; VMs cannot directly send traffic to or receive traffic from such an interconnect attachment. To use IPsec-encrypted Cloud Interconnect, the interconnect attachment must be created with this option.
	InterconnectAttachmentEncryptionIpsec = InterconnectAttachmentEncryption("IPSEC")
	// This is the default value, which means the Interconnect Attachment will carry unencrypted traffic. VMs will be able to send traffic to or receive traffic from such interconnect attachment.
	InterconnectAttachmentEncryptionNone = InterconnectAttachmentEncryption("NONE")
)

func (InterconnectAttachmentEncryption) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentEncryption)(nil)).Elem()
}

func (e InterconnectAttachmentEncryption) ToInterconnectAttachmentEncryptionOutput() InterconnectAttachmentEncryptionOutput {
	return pulumi.ToOutput(e).(InterconnectAttachmentEncryptionOutput)
}

func (e InterconnectAttachmentEncryption) ToInterconnectAttachmentEncryptionOutputWithContext(ctx context.Context) InterconnectAttachmentEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InterconnectAttachmentEncryptionOutput)
}

func (e InterconnectAttachmentEncryption) ToInterconnectAttachmentEncryptionPtrOutput() InterconnectAttachmentEncryptionPtrOutput {
	return e.ToInterconnectAttachmentEncryptionPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentEncryption) ToInterconnectAttachmentEncryptionPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEncryptionPtrOutput {
	return InterconnectAttachmentEncryption(e).ToInterconnectAttachmentEncryptionOutputWithContext(ctx).ToInterconnectAttachmentEncryptionPtrOutputWithContext(ctx)
}

func (e InterconnectAttachmentEncryption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentEncryption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentEncryption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentEncryption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InterconnectAttachmentEncryptionOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentEncryption)(nil)).Elem()
}

func (o InterconnectAttachmentEncryptionOutput) ToInterconnectAttachmentEncryptionOutput() InterconnectAttachmentEncryptionOutput {
	return o
}

func (o InterconnectAttachmentEncryptionOutput) ToInterconnectAttachmentEncryptionOutputWithContext(ctx context.Context) InterconnectAttachmentEncryptionOutput {
	return o
}

func (o InterconnectAttachmentEncryptionOutput) ToInterconnectAttachmentEncryptionPtrOutput() InterconnectAttachmentEncryptionPtrOutput {
	return o.ToInterconnectAttachmentEncryptionPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEncryptionOutput) ToInterconnectAttachmentEncryptionPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterconnectAttachmentEncryption) *InterconnectAttachmentEncryption {
		return &v
	}).(InterconnectAttachmentEncryptionPtrOutput)
}

func (o InterconnectAttachmentEncryptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEncryptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentEncryption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InterconnectAttachmentEncryptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEncryptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentEncryption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InterconnectAttachmentEncryptionPtrOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectAttachmentEncryption)(nil)).Elem()
}

func (o InterconnectAttachmentEncryptionPtrOutput) ToInterconnectAttachmentEncryptionPtrOutput() InterconnectAttachmentEncryptionPtrOutput {
	return o
}

func (o InterconnectAttachmentEncryptionPtrOutput) ToInterconnectAttachmentEncryptionPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEncryptionPtrOutput {
	return o
}

func (o InterconnectAttachmentEncryptionPtrOutput) Elem() InterconnectAttachmentEncryptionOutput {
	return o.ApplyT(func(v *InterconnectAttachmentEncryption) InterconnectAttachmentEncryption {
		if v != nil {
			return *v
		}
		var ret InterconnectAttachmentEncryption
		return ret
	}).(InterconnectAttachmentEncryptionOutput)
}

func (o InterconnectAttachmentEncryptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentEncryptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InterconnectAttachmentEncryption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InterconnectAttachmentEncryptionInput is an input type that accepts InterconnectAttachmentEncryptionArgs and InterconnectAttachmentEncryptionOutput values.
// You can construct a concrete instance of `InterconnectAttachmentEncryptionInput` via:
//
//          InterconnectAttachmentEncryptionArgs{...}
type InterconnectAttachmentEncryptionInput interface {
	pulumi.Input

	ToInterconnectAttachmentEncryptionOutput() InterconnectAttachmentEncryptionOutput
	ToInterconnectAttachmentEncryptionOutputWithContext(context.Context) InterconnectAttachmentEncryptionOutput
}

var interconnectAttachmentEncryptionPtrType = reflect.TypeOf((**InterconnectAttachmentEncryption)(nil)).Elem()

type InterconnectAttachmentEncryptionPtrInput interface {
	pulumi.Input

	ToInterconnectAttachmentEncryptionPtrOutput() InterconnectAttachmentEncryptionPtrOutput
	ToInterconnectAttachmentEncryptionPtrOutputWithContext(context.Context) InterconnectAttachmentEncryptionPtrOutput
}

type interconnectAttachmentEncryptionPtr string

func InterconnectAttachmentEncryptionPtr(v string) InterconnectAttachmentEncryptionPtrInput {
	return (*interconnectAttachmentEncryptionPtr)(&v)
}

func (*interconnectAttachmentEncryptionPtr) ElementType() reflect.Type {
	return interconnectAttachmentEncryptionPtrType
}

func (in *interconnectAttachmentEncryptionPtr) ToInterconnectAttachmentEncryptionPtrOutput() InterconnectAttachmentEncryptionPtrOutput {
	return pulumi.ToOutput(in).(InterconnectAttachmentEncryptionPtrOutput)
}

func (in *interconnectAttachmentEncryptionPtr) ToInterconnectAttachmentEncryptionPtrOutputWithContext(ctx context.Context) InterconnectAttachmentEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InterconnectAttachmentEncryptionPtrOutput)
}

// The stack type for this interconnect attachment to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at interconnect attachments creation and update interconnect attachment operations.
type InterconnectAttachmentStackType string

const (
	// The interconnect attachment can have both IPv4 and IPv6 addresses.
	InterconnectAttachmentStackTypeIpv4Ipv6 = InterconnectAttachmentStackType("IPV4_IPV6")
	// The interconnect attachment will only be assigned IPv4 addresses.
	InterconnectAttachmentStackTypeIpv4Only = InterconnectAttachmentStackType("IPV4_ONLY")
)

func (InterconnectAttachmentStackType) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentStackType)(nil)).Elem()
}

func (e InterconnectAttachmentStackType) ToInterconnectAttachmentStackTypeOutput() InterconnectAttachmentStackTypeOutput {
	return pulumi.ToOutput(e).(InterconnectAttachmentStackTypeOutput)
}

func (e InterconnectAttachmentStackType) ToInterconnectAttachmentStackTypeOutputWithContext(ctx context.Context) InterconnectAttachmentStackTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InterconnectAttachmentStackTypeOutput)
}

func (e InterconnectAttachmentStackType) ToInterconnectAttachmentStackTypePtrOutput() InterconnectAttachmentStackTypePtrOutput {
	return e.ToInterconnectAttachmentStackTypePtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentStackType) ToInterconnectAttachmentStackTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentStackTypePtrOutput {
	return InterconnectAttachmentStackType(e).ToInterconnectAttachmentStackTypeOutputWithContext(ctx).ToInterconnectAttachmentStackTypePtrOutputWithContext(ctx)
}

func (e InterconnectAttachmentStackType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentStackType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentStackType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentStackType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InterconnectAttachmentStackTypeOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentStackTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentStackType)(nil)).Elem()
}

func (o InterconnectAttachmentStackTypeOutput) ToInterconnectAttachmentStackTypeOutput() InterconnectAttachmentStackTypeOutput {
	return o
}

func (o InterconnectAttachmentStackTypeOutput) ToInterconnectAttachmentStackTypeOutputWithContext(ctx context.Context) InterconnectAttachmentStackTypeOutput {
	return o
}

func (o InterconnectAttachmentStackTypeOutput) ToInterconnectAttachmentStackTypePtrOutput() InterconnectAttachmentStackTypePtrOutput {
	return o.ToInterconnectAttachmentStackTypePtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentStackTypeOutput) ToInterconnectAttachmentStackTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentStackTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterconnectAttachmentStackType) *InterconnectAttachmentStackType {
		return &v
	}).(InterconnectAttachmentStackTypePtrOutput)
}

func (o InterconnectAttachmentStackTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InterconnectAttachmentStackTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentStackType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InterconnectAttachmentStackTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentStackTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentStackType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InterconnectAttachmentStackTypePtrOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentStackTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectAttachmentStackType)(nil)).Elem()
}

func (o InterconnectAttachmentStackTypePtrOutput) ToInterconnectAttachmentStackTypePtrOutput() InterconnectAttachmentStackTypePtrOutput {
	return o
}

func (o InterconnectAttachmentStackTypePtrOutput) ToInterconnectAttachmentStackTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentStackTypePtrOutput {
	return o
}

func (o InterconnectAttachmentStackTypePtrOutput) Elem() InterconnectAttachmentStackTypeOutput {
	return o.ApplyT(func(v *InterconnectAttachmentStackType) InterconnectAttachmentStackType {
		if v != nil {
			return *v
		}
		var ret InterconnectAttachmentStackType
		return ret
	}).(InterconnectAttachmentStackTypeOutput)
}

func (o InterconnectAttachmentStackTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentStackTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InterconnectAttachmentStackType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InterconnectAttachmentStackTypeInput is an input type that accepts InterconnectAttachmentStackTypeArgs and InterconnectAttachmentStackTypeOutput values.
// You can construct a concrete instance of `InterconnectAttachmentStackTypeInput` via:
//
//          InterconnectAttachmentStackTypeArgs{...}
type InterconnectAttachmentStackTypeInput interface {
	pulumi.Input

	ToInterconnectAttachmentStackTypeOutput() InterconnectAttachmentStackTypeOutput
	ToInterconnectAttachmentStackTypeOutputWithContext(context.Context) InterconnectAttachmentStackTypeOutput
}

var interconnectAttachmentStackTypePtrType = reflect.TypeOf((**InterconnectAttachmentStackType)(nil)).Elem()

type InterconnectAttachmentStackTypePtrInput interface {
	pulumi.Input

	ToInterconnectAttachmentStackTypePtrOutput() InterconnectAttachmentStackTypePtrOutput
	ToInterconnectAttachmentStackTypePtrOutputWithContext(context.Context) InterconnectAttachmentStackTypePtrOutput
}

type interconnectAttachmentStackTypePtr string

func InterconnectAttachmentStackTypePtr(v string) InterconnectAttachmentStackTypePtrInput {
	return (*interconnectAttachmentStackTypePtr)(&v)
}

func (*interconnectAttachmentStackTypePtr) ElementType() reflect.Type {
	return interconnectAttachmentStackTypePtrType
}

func (in *interconnectAttachmentStackTypePtr) ToInterconnectAttachmentStackTypePtrOutput() InterconnectAttachmentStackTypePtrOutput {
	return pulumi.ToOutput(in).(InterconnectAttachmentStackTypePtrOutput)
}

func (in *interconnectAttachmentStackTypePtr) ToInterconnectAttachmentStackTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentStackTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InterconnectAttachmentStackTypePtrOutput)
}

// The type of interconnect attachment this is, which can take one of the following values: - DEDICATED: an attachment to a Dedicated Interconnect. - PARTNER: an attachment to a Partner Interconnect, created by the customer. - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the partner.
type InterconnectAttachmentType string

const (
	// Attachment to a dedicated interconnect.
	InterconnectAttachmentTypeDedicated = InterconnectAttachmentType("DEDICATED")
	// Attachment to a partner interconnect, created by the customer.
	InterconnectAttachmentTypePartner = InterconnectAttachmentType("PARTNER")
	// Attachment to a partner interconnect, created by the partner.
	InterconnectAttachmentTypePartnerProvider = InterconnectAttachmentType("PARTNER_PROVIDER")
)

func (InterconnectAttachmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentType)(nil)).Elem()
}

func (e InterconnectAttachmentType) ToInterconnectAttachmentTypeOutput() InterconnectAttachmentTypeOutput {
	return pulumi.ToOutput(e).(InterconnectAttachmentTypeOutput)
}

func (e InterconnectAttachmentType) ToInterconnectAttachmentTypeOutputWithContext(ctx context.Context) InterconnectAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InterconnectAttachmentTypeOutput)
}

func (e InterconnectAttachmentType) ToInterconnectAttachmentTypePtrOutput() InterconnectAttachmentTypePtrOutput {
	return e.ToInterconnectAttachmentTypePtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentType) ToInterconnectAttachmentTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentTypePtrOutput {
	return InterconnectAttachmentType(e).ToInterconnectAttachmentTypeOutputWithContext(ctx).ToInterconnectAttachmentTypePtrOutputWithContext(ctx)
}

func (e InterconnectAttachmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectAttachmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InterconnectAttachmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InterconnectAttachmentTypeOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectAttachmentType)(nil)).Elem()
}

func (o InterconnectAttachmentTypeOutput) ToInterconnectAttachmentTypeOutput() InterconnectAttachmentTypeOutput {
	return o
}

func (o InterconnectAttachmentTypeOutput) ToInterconnectAttachmentTypeOutputWithContext(ctx context.Context) InterconnectAttachmentTypeOutput {
	return o
}

func (o InterconnectAttachmentTypeOutput) ToInterconnectAttachmentTypePtrOutput() InterconnectAttachmentTypePtrOutput {
	return o.ToInterconnectAttachmentTypePtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentTypeOutput) ToInterconnectAttachmentTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterconnectAttachmentType) *InterconnectAttachmentType {
		return &v
	}).(InterconnectAttachmentTypePtrOutput)
}

func (o InterconnectAttachmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InterconnectAttachmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InterconnectAttachmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectAttachmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InterconnectAttachmentTypePtrOutput struct{ *pulumi.OutputState }

func (InterconnectAttachmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectAttachmentType)(nil)).Elem()
}

func (o InterconnectAttachmentTypePtrOutput) ToInterconnectAttachmentTypePtrOutput() InterconnectAttachmentTypePtrOutput {
	return o
}

func (o InterconnectAttachmentTypePtrOutput) ToInterconnectAttachmentTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentTypePtrOutput {
	return o
}

func (o InterconnectAttachmentTypePtrOutput) Elem() InterconnectAttachmentTypeOutput {
	return o.ApplyT(func(v *InterconnectAttachmentType) InterconnectAttachmentType {
		if v != nil {
			return *v
		}
		var ret InterconnectAttachmentType
		return ret
	}).(InterconnectAttachmentTypeOutput)
}

func (o InterconnectAttachmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectAttachmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InterconnectAttachmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InterconnectAttachmentTypeInput is an input type that accepts InterconnectAttachmentTypeArgs and InterconnectAttachmentTypeOutput values.
// You can construct a concrete instance of `InterconnectAttachmentTypeInput` via:
//
//          InterconnectAttachmentTypeArgs{...}
type InterconnectAttachmentTypeInput interface {
	pulumi.Input

	ToInterconnectAttachmentTypeOutput() InterconnectAttachmentTypeOutput
	ToInterconnectAttachmentTypeOutputWithContext(context.Context) InterconnectAttachmentTypeOutput
}

var interconnectAttachmentTypePtrType = reflect.TypeOf((**InterconnectAttachmentType)(nil)).Elem()

type InterconnectAttachmentTypePtrInput interface {
	pulumi.Input

	ToInterconnectAttachmentTypePtrOutput() InterconnectAttachmentTypePtrOutput
	ToInterconnectAttachmentTypePtrOutputWithContext(context.Context) InterconnectAttachmentTypePtrOutput
}

type interconnectAttachmentTypePtr string

func InterconnectAttachmentTypePtr(v string) InterconnectAttachmentTypePtrInput {
	return (*interconnectAttachmentTypePtr)(&v)
}

func (*interconnectAttachmentTypePtr) ElementType() reflect.Type {
	return interconnectAttachmentTypePtrType
}

func (in *interconnectAttachmentTypePtr) ToInterconnectAttachmentTypePtrOutput() InterconnectAttachmentTypePtrOutput {
	return pulumi.ToOutput(in).(InterconnectAttachmentTypePtrOutput)
}

func (in *interconnectAttachmentTypePtr) ToInterconnectAttachmentTypePtrOutputWithContext(ctx context.Context) InterconnectAttachmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InterconnectAttachmentTypePtrOutput)
}

// Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
type InterconnectInterconnectType string

const (
	// A dedicated physical interconnection with the customer.
	InterconnectInterconnectTypeDedicated = InterconnectInterconnectType("DEDICATED")
	// [Deprecated] A private, physical interconnection with the customer.
	InterconnectInterconnectTypeItPrivate = InterconnectInterconnectType("IT_PRIVATE")
	// A partner-managed interconnection shared between customers via partner.
	InterconnectInterconnectTypePartner = InterconnectInterconnectType("PARTNER")
)

func (InterconnectInterconnectType) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectInterconnectType)(nil)).Elem()
}

func (e InterconnectInterconnectType) ToInterconnectInterconnectTypeOutput() InterconnectInterconnectTypeOutput {
	return pulumi.ToOutput(e).(InterconnectInterconnectTypeOutput)
}

func (e InterconnectInterconnectType) ToInterconnectInterconnectTypeOutputWithContext(ctx context.Context) InterconnectInterconnectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InterconnectInterconnectTypeOutput)
}

func (e InterconnectInterconnectType) ToInterconnectInterconnectTypePtrOutput() InterconnectInterconnectTypePtrOutput {
	return e.ToInterconnectInterconnectTypePtrOutputWithContext(context.Background())
}

func (e InterconnectInterconnectType) ToInterconnectInterconnectTypePtrOutputWithContext(ctx context.Context) InterconnectInterconnectTypePtrOutput {
	return InterconnectInterconnectType(e).ToInterconnectInterconnectTypeOutputWithContext(ctx).ToInterconnectInterconnectTypePtrOutputWithContext(ctx)
}

func (e InterconnectInterconnectType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectInterconnectType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectInterconnectType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InterconnectInterconnectType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InterconnectInterconnectTypeOutput struct{ *pulumi.OutputState }

func (InterconnectInterconnectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectInterconnectType)(nil)).Elem()
}

func (o InterconnectInterconnectTypeOutput) ToInterconnectInterconnectTypeOutput() InterconnectInterconnectTypeOutput {
	return o
}

func (o InterconnectInterconnectTypeOutput) ToInterconnectInterconnectTypeOutputWithContext(ctx context.Context) InterconnectInterconnectTypeOutput {
	return o
}

func (o InterconnectInterconnectTypeOutput) ToInterconnectInterconnectTypePtrOutput() InterconnectInterconnectTypePtrOutput {
	return o.ToInterconnectInterconnectTypePtrOutputWithContext(context.Background())
}

func (o InterconnectInterconnectTypeOutput) ToInterconnectInterconnectTypePtrOutputWithContext(ctx context.Context) InterconnectInterconnectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterconnectInterconnectType) *InterconnectInterconnectType {
		return &v
	}).(InterconnectInterconnectTypePtrOutput)
}

func (o InterconnectInterconnectTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InterconnectInterconnectTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectInterconnectType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InterconnectInterconnectTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectInterconnectTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectInterconnectType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InterconnectInterconnectTypePtrOutput struct{ *pulumi.OutputState }

func (InterconnectInterconnectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectInterconnectType)(nil)).Elem()
}

func (o InterconnectInterconnectTypePtrOutput) ToInterconnectInterconnectTypePtrOutput() InterconnectInterconnectTypePtrOutput {
	return o
}

func (o InterconnectInterconnectTypePtrOutput) ToInterconnectInterconnectTypePtrOutputWithContext(ctx context.Context) InterconnectInterconnectTypePtrOutput {
	return o
}

func (o InterconnectInterconnectTypePtrOutput) Elem() InterconnectInterconnectTypeOutput {
	return o.ApplyT(func(v *InterconnectInterconnectType) InterconnectInterconnectType {
		if v != nil {
			return *v
		}
		var ret InterconnectInterconnectType
		return ret
	}).(InterconnectInterconnectTypeOutput)
}

func (o InterconnectInterconnectTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectInterconnectTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InterconnectInterconnectType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InterconnectInterconnectTypeInput is an input type that accepts InterconnectInterconnectTypeArgs and InterconnectInterconnectTypeOutput values.
// You can construct a concrete instance of `InterconnectInterconnectTypeInput` via:
//
//          InterconnectInterconnectTypeArgs{...}
type InterconnectInterconnectTypeInput interface {
	pulumi.Input

	ToInterconnectInterconnectTypeOutput() InterconnectInterconnectTypeOutput
	ToInterconnectInterconnectTypeOutputWithContext(context.Context) InterconnectInterconnectTypeOutput
}

var interconnectInterconnectTypePtrType = reflect.TypeOf((**InterconnectInterconnectType)(nil)).Elem()

type InterconnectInterconnectTypePtrInput interface {
	pulumi.Input

	ToInterconnectInterconnectTypePtrOutput() InterconnectInterconnectTypePtrOutput
	ToInterconnectInterconnectTypePtrOutputWithContext(context.Context) InterconnectInterconnectTypePtrOutput
}

type interconnectInterconnectTypePtr string

func InterconnectInterconnectTypePtr(v string) InterconnectInterconnectTypePtrInput {
	return (*interconnectInterconnectTypePtr)(&v)
}

func (*interconnectInterconnectTypePtr) ElementType() reflect.Type {
	return interconnectInterconnectTypePtrType
}

func (in *interconnectInterconnectTypePtr) ToInterconnectInterconnectTypePtrOutput() InterconnectInterconnectTypePtrOutput {
	return pulumi.ToOutput(in).(InterconnectInterconnectTypePtrOutput)
}

func (in *interconnectInterconnectTypePtr) ToInterconnectInterconnectTypePtrOutputWithContext(ctx context.Context) InterconnectInterconnectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InterconnectInterconnectTypePtrOutput)
}

// Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
type InterconnectLinkType string

const (
	// 100G Ethernet, LR Optics.
	InterconnectLinkTypeLinkTypeEthernet100gLr = InterconnectLinkType("LINK_TYPE_ETHERNET_100G_LR")
	// 10G Ethernet, LR Optics. [(rate_bps) = 10000000000];
	InterconnectLinkTypeLinkTypeEthernet10gLr = InterconnectLinkType("LINK_TYPE_ETHERNET_10G_LR")
)

func (InterconnectLinkType) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectLinkType)(nil)).Elem()
}

func (e InterconnectLinkType) ToInterconnectLinkTypeOutput() InterconnectLinkTypeOutput {
	return pulumi.ToOutput(e).(InterconnectLinkTypeOutput)
}

func (e InterconnectLinkType) ToInterconnectLinkTypeOutputWithContext(ctx context.Context) InterconnectLinkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InterconnectLinkTypeOutput)
}

func (e InterconnectLinkType) ToInterconnectLinkTypePtrOutput() InterconnectLinkTypePtrOutput {
	return e.ToInterconnectLinkTypePtrOutputWithContext(context.Background())
}

func (e InterconnectLinkType) ToInterconnectLinkTypePtrOutputWithContext(ctx context.Context) InterconnectLinkTypePtrOutput {
	return InterconnectLinkType(e).ToInterconnectLinkTypeOutputWithContext(ctx).ToInterconnectLinkTypePtrOutputWithContext(ctx)
}

func (e InterconnectLinkType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectLinkType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InterconnectLinkType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InterconnectLinkType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InterconnectLinkTypeOutput struct{ *pulumi.OutputState }

func (InterconnectLinkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterconnectLinkType)(nil)).Elem()
}

func (o InterconnectLinkTypeOutput) ToInterconnectLinkTypeOutput() InterconnectLinkTypeOutput {
	return o
}

func (o InterconnectLinkTypeOutput) ToInterconnectLinkTypeOutputWithContext(ctx context.Context) InterconnectLinkTypeOutput {
	return o
}

func (o InterconnectLinkTypeOutput) ToInterconnectLinkTypePtrOutput() InterconnectLinkTypePtrOutput {
	return o.ToInterconnectLinkTypePtrOutputWithContext(context.Background())
}

func (o InterconnectLinkTypeOutput) ToInterconnectLinkTypePtrOutputWithContext(ctx context.Context) InterconnectLinkTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InterconnectLinkType) *InterconnectLinkType {
		return &v
	}).(InterconnectLinkTypePtrOutput)
}

func (o InterconnectLinkTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InterconnectLinkTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectLinkType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InterconnectLinkTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectLinkTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InterconnectLinkType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InterconnectLinkTypePtrOutput struct{ *pulumi.OutputState }

func (InterconnectLinkTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InterconnectLinkType)(nil)).Elem()
}

func (o InterconnectLinkTypePtrOutput) ToInterconnectLinkTypePtrOutput() InterconnectLinkTypePtrOutput {
	return o
}

func (o InterconnectLinkTypePtrOutput) ToInterconnectLinkTypePtrOutputWithContext(ctx context.Context) InterconnectLinkTypePtrOutput {
	return o
}

func (o InterconnectLinkTypePtrOutput) Elem() InterconnectLinkTypeOutput {
	return o.ApplyT(func(v *InterconnectLinkType) InterconnectLinkType {
		if v != nil {
			return *v
		}
		var ret InterconnectLinkType
		return ret
	}).(InterconnectLinkTypeOutput)
}

func (o InterconnectLinkTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InterconnectLinkTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InterconnectLinkType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InterconnectLinkTypeInput is an input type that accepts InterconnectLinkTypeArgs and InterconnectLinkTypeOutput values.
// You can construct a concrete instance of `InterconnectLinkTypeInput` via:
//
//          InterconnectLinkTypeArgs{...}
type InterconnectLinkTypeInput interface {
	pulumi.Input

	ToInterconnectLinkTypeOutput() InterconnectLinkTypeOutput
	ToInterconnectLinkTypeOutputWithContext(context.Context) InterconnectLinkTypeOutput
}

var interconnectLinkTypePtrType = reflect.TypeOf((**InterconnectLinkType)(nil)).Elem()

type InterconnectLinkTypePtrInput interface {
	pulumi.Input

	ToInterconnectLinkTypePtrOutput() InterconnectLinkTypePtrOutput
	ToInterconnectLinkTypePtrOutputWithContext(context.Context) InterconnectLinkTypePtrOutput
}

type interconnectLinkTypePtr string

func InterconnectLinkTypePtr(v string) InterconnectLinkTypePtrInput {
	return (*interconnectLinkTypePtr)(&v)
}

func (*interconnectLinkTypePtr) ElementType() reflect.Type {
	return interconnectLinkTypePtrType
}

func (in *interconnectLinkTypePtr) ToInterconnectLinkTypePtrOutput() InterconnectLinkTypePtrOutput {
	return pulumi.ToOutput(in).(InterconnectLinkTypePtrOutput)
}

func (in *interconnectLinkTypePtr) ToInterconnectLinkTypePtrOutputWithContext(ctx context.Context) InterconnectLinkTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InterconnectLinkTypePtrOutput)
}

// This is deprecated and has no effect. Do not use.
type LogConfigCloudAuditOptionsLogName string

const (
	// This is deprecated and has no effect. Do not use.
	LogConfigCloudAuditOptionsLogNameAdminActivity = LogConfigCloudAuditOptionsLogName("ADMIN_ACTIVITY")
	// This is deprecated and has no effect. Do not use.
	LogConfigCloudAuditOptionsLogNameDataAccess = LogConfigCloudAuditOptionsLogName("DATA_ACCESS")
	// This is deprecated and has no effect. Do not use.
	LogConfigCloudAuditOptionsLogNameUnspecifiedLogName = LogConfigCloudAuditOptionsLogName("UNSPECIFIED_LOG_NAME")
)

func (LogConfigCloudAuditOptionsLogName) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigCloudAuditOptionsLogName)(nil)).Elem()
}

func (e LogConfigCloudAuditOptionsLogName) ToLogConfigCloudAuditOptionsLogNameOutput() LogConfigCloudAuditOptionsLogNameOutput {
	return pulumi.ToOutput(e).(LogConfigCloudAuditOptionsLogNameOutput)
}

func (e LogConfigCloudAuditOptionsLogName) ToLogConfigCloudAuditOptionsLogNameOutputWithContext(ctx context.Context) LogConfigCloudAuditOptionsLogNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogConfigCloudAuditOptionsLogNameOutput)
}

func (e LogConfigCloudAuditOptionsLogName) ToLogConfigCloudAuditOptionsLogNamePtrOutput() LogConfigCloudAuditOptionsLogNamePtrOutput {
	return e.ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(context.Background())
}

func (e LogConfigCloudAuditOptionsLogName) ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(ctx context.Context) LogConfigCloudAuditOptionsLogNamePtrOutput {
	return LogConfigCloudAuditOptionsLogName(e).ToLogConfigCloudAuditOptionsLogNameOutputWithContext(ctx).ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(ctx)
}

func (e LogConfigCloudAuditOptionsLogName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogConfigCloudAuditOptionsLogName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogConfigCloudAuditOptionsLogName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogConfigCloudAuditOptionsLogName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogConfigCloudAuditOptionsLogNameOutput struct{ *pulumi.OutputState }

func (LogConfigCloudAuditOptionsLogNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigCloudAuditOptionsLogName)(nil)).Elem()
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToLogConfigCloudAuditOptionsLogNameOutput() LogConfigCloudAuditOptionsLogNameOutput {
	return o
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToLogConfigCloudAuditOptionsLogNameOutputWithContext(ctx context.Context) LogConfigCloudAuditOptionsLogNameOutput {
	return o
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToLogConfigCloudAuditOptionsLogNamePtrOutput() LogConfigCloudAuditOptionsLogNamePtrOutput {
	return o.ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(context.Background())
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(ctx context.Context) LogConfigCloudAuditOptionsLogNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogConfigCloudAuditOptionsLogName) *LogConfigCloudAuditOptionsLogName {
		return &v
	}).(LogConfigCloudAuditOptionsLogNamePtrOutput)
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogConfigCloudAuditOptionsLogName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogConfigCloudAuditOptionsLogNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogConfigCloudAuditOptionsLogName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogConfigCloudAuditOptionsLogNamePtrOutput struct{ *pulumi.OutputState }

func (LogConfigCloudAuditOptionsLogNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigCloudAuditOptionsLogName)(nil)).Elem()
}

func (o LogConfigCloudAuditOptionsLogNamePtrOutput) ToLogConfigCloudAuditOptionsLogNamePtrOutput() LogConfigCloudAuditOptionsLogNamePtrOutput {
	return o
}

func (o LogConfigCloudAuditOptionsLogNamePtrOutput) ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(ctx context.Context) LogConfigCloudAuditOptionsLogNamePtrOutput {
	return o
}

func (o LogConfigCloudAuditOptionsLogNamePtrOutput) Elem() LogConfigCloudAuditOptionsLogNameOutput {
	return o.ApplyT(func(v *LogConfigCloudAuditOptionsLogName) LogConfigCloudAuditOptionsLogName {
		if v != nil {
			return *v
		}
		var ret LogConfigCloudAuditOptionsLogName
		return ret
	}).(LogConfigCloudAuditOptionsLogNameOutput)
}

func (o LogConfigCloudAuditOptionsLogNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogConfigCloudAuditOptionsLogNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogConfigCloudAuditOptionsLogName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogConfigCloudAuditOptionsLogNameInput is an input type that accepts LogConfigCloudAuditOptionsLogNameArgs and LogConfigCloudAuditOptionsLogNameOutput values.
// You can construct a concrete instance of `LogConfigCloudAuditOptionsLogNameInput` via:
//
//          LogConfigCloudAuditOptionsLogNameArgs{...}
type LogConfigCloudAuditOptionsLogNameInput interface {
	pulumi.Input

	ToLogConfigCloudAuditOptionsLogNameOutput() LogConfigCloudAuditOptionsLogNameOutput
	ToLogConfigCloudAuditOptionsLogNameOutputWithContext(context.Context) LogConfigCloudAuditOptionsLogNameOutput
}

var logConfigCloudAuditOptionsLogNamePtrType = reflect.TypeOf((**LogConfigCloudAuditOptionsLogName)(nil)).Elem()

type LogConfigCloudAuditOptionsLogNamePtrInput interface {
	pulumi.Input

	ToLogConfigCloudAuditOptionsLogNamePtrOutput() LogConfigCloudAuditOptionsLogNamePtrOutput
	ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(context.Context) LogConfigCloudAuditOptionsLogNamePtrOutput
}

type logConfigCloudAuditOptionsLogNamePtr string

func LogConfigCloudAuditOptionsLogNamePtr(v string) LogConfigCloudAuditOptionsLogNamePtrInput {
	return (*logConfigCloudAuditOptionsLogNamePtr)(&v)
}

func (*logConfigCloudAuditOptionsLogNamePtr) ElementType() reflect.Type {
	return logConfigCloudAuditOptionsLogNamePtrType
}

func (in *logConfigCloudAuditOptionsLogNamePtr) ToLogConfigCloudAuditOptionsLogNamePtrOutput() LogConfigCloudAuditOptionsLogNamePtrOutput {
	return pulumi.ToOutput(in).(LogConfigCloudAuditOptionsLogNamePtrOutput)
}

func (in *logConfigCloudAuditOptionsLogNamePtr) ToLogConfigCloudAuditOptionsLogNamePtrOutputWithContext(ctx context.Context) LogConfigCloudAuditOptionsLogNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogConfigCloudAuditOptionsLogNamePtrOutput)
}

// This is deprecated and has no effect. Do not use.
type LogConfigDataAccessOptionsLogMode string

const (
	// This is deprecated and has no effect. Do not use.
	LogConfigDataAccessOptionsLogModeLogFailClosed = LogConfigDataAccessOptionsLogMode("LOG_FAIL_CLOSED")
	// This is deprecated and has no effect. Do not use.
	LogConfigDataAccessOptionsLogModeLogModeUnspecified = LogConfigDataAccessOptionsLogMode("LOG_MODE_UNSPECIFIED")
)

func (LogConfigDataAccessOptionsLogMode) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigDataAccessOptionsLogMode)(nil)).Elem()
}

func (e LogConfigDataAccessOptionsLogMode) ToLogConfigDataAccessOptionsLogModeOutput() LogConfigDataAccessOptionsLogModeOutput {
	return pulumi.ToOutput(e).(LogConfigDataAccessOptionsLogModeOutput)
}

func (e LogConfigDataAccessOptionsLogMode) ToLogConfigDataAccessOptionsLogModeOutputWithContext(ctx context.Context) LogConfigDataAccessOptionsLogModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogConfigDataAccessOptionsLogModeOutput)
}

func (e LogConfigDataAccessOptionsLogMode) ToLogConfigDataAccessOptionsLogModePtrOutput() LogConfigDataAccessOptionsLogModePtrOutput {
	return e.ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(context.Background())
}

func (e LogConfigDataAccessOptionsLogMode) ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(ctx context.Context) LogConfigDataAccessOptionsLogModePtrOutput {
	return LogConfigDataAccessOptionsLogMode(e).ToLogConfigDataAccessOptionsLogModeOutputWithContext(ctx).ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(ctx)
}

func (e LogConfigDataAccessOptionsLogMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogConfigDataAccessOptionsLogMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogConfigDataAccessOptionsLogMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogConfigDataAccessOptionsLogMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogConfigDataAccessOptionsLogModeOutput struct{ *pulumi.OutputState }

func (LogConfigDataAccessOptionsLogModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogConfigDataAccessOptionsLogMode)(nil)).Elem()
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToLogConfigDataAccessOptionsLogModeOutput() LogConfigDataAccessOptionsLogModeOutput {
	return o
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToLogConfigDataAccessOptionsLogModeOutputWithContext(ctx context.Context) LogConfigDataAccessOptionsLogModeOutput {
	return o
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToLogConfigDataAccessOptionsLogModePtrOutput() LogConfigDataAccessOptionsLogModePtrOutput {
	return o.ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(context.Background())
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(ctx context.Context) LogConfigDataAccessOptionsLogModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogConfigDataAccessOptionsLogMode) *LogConfigDataAccessOptionsLogMode {
		return &v
	}).(LogConfigDataAccessOptionsLogModePtrOutput)
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogConfigDataAccessOptionsLogMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogConfigDataAccessOptionsLogModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogConfigDataAccessOptionsLogMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogConfigDataAccessOptionsLogModePtrOutput struct{ *pulumi.OutputState }

func (LogConfigDataAccessOptionsLogModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogConfigDataAccessOptionsLogMode)(nil)).Elem()
}

func (o LogConfigDataAccessOptionsLogModePtrOutput) ToLogConfigDataAccessOptionsLogModePtrOutput() LogConfigDataAccessOptionsLogModePtrOutput {
	return o
}

func (o LogConfigDataAccessOptionsLogModePtrOutput) ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(ctx context.Context) LogConfigDataAccessOptionsLogModePtrOutput {
	return o
}

func (o LogConfigDataAccessOptionsLogModePtrOutput) Elem() LogConfigDataAccessOptionsLogModeOutput {
	return o.ApplyT(func(v *LogConfigDataAccessOptionsLogMode) LogConfigDataAccessOptionsLogMode {
		if v != nil {
			return *v
		}
		var ret LogConfigDataAccessOptionsLogMode
		return ret
	}).(LogConfigDataAccessOptionsLogModeOutput)
}

func (o LogConfigDataAccessOptionsLogModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogConfigDataAccessOptionsLogModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogConfigDataAccessOptionsLogMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogConfigDataAccessOptionsLogModeInput is an input type that accepts LogConfigDataAccessOptionsLogModeArgs and LogConfigDataAccessOptionsLogModeOutput values.
// You can construct a concrete instance of `LogConfigDataAccessOptionsLogModeInput` via:
//
//          LogConfigDataAccessOptionsLogModeArgs{...}
type LogConfigDataAccessOptionsLogModeInput interface {
	pulumi.Input

	ToLogConfigDataAccessOptionsLogModeOutput() LogConfigDataAccessOptionsLogModeOutput
	ToLogConfigDataAccessOptionsLogModeOutputWithContext(context.Context) LogConfigDataAccessOptionsLogModeOutput
}

var logConfigDataAccessOptionsLogModePtrType = reflect.TypeOf((**LogConfigDataAccessOptionsLogMode)(nil)).Elem()

type LogConfigDataAccessOptionsLogModePtrInput interface {
	pulumi.Input

	ToLogConfigDataAccessOptionsLogModePtrOutput() LogConfigDataAccessOptionsLogModePtrOutput
	ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(context.Context) LogConfigDataAccessOptionsLogModePtrOutput
}

type logConfigDataAccessOptionsLogModePtr string

func LogConfigDataAccessOptionsLogModePtr(v string) LogConfigDataAccessOptionsLogModePtrInput {
	return (*logConfigDataAccessOptionsLogModePtr)(&v)
}

func (*logConfigDataAccessOptionsLogModePtr) ElementType() reflect.Type {
	return logConfigDataAccessOptionsLogModePtrType
}

func (in *logConfigDataAccessOptionsLogModePtr) ToLogConfigDataAccessOptionsLogModePtrOutput() LogConfigDataAccessOptionsLogModePtrOutput {
	return pulumi.ToOutput(in).(LogConfigDataAccessOptionsLogModePtrOutput)
}

func (in *logConfigDataAccessOptionsLogModePtr) ToLogConfigDataAccessOptionsLogModePtrOutputWithContext(ctx context.Context) LogConfigDataAccessOptionsLogModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogConfigDataAccessOptionsLogModePtrOutput)
}

// Specifies how individual filter label matches within the list of filterLabels and contributes toward the overall metadataFilter match. Supported values are: - MATCH_ANY: at least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: all filterLabels must have matching labels in the provided metadata.
type MetadataFilterFilterMatchCriteria string

const (
	// Specifies that all filterLabels must match for the metadataFilter to be considered a match.
	MetadataFilterFilterMatchCriteriaMatchAll = MetadataFilterFilterMatchCriteria("MATCH_ALL")
	// Specifies that any filterLabel must match for the metadataFilter to be considered a match.
	MetadataFilterFilterMatchCriteriaMatchAny = MetadataFilterFilterMatchCriteria("MATCH_ANY")
	// Indicates that the match criteria was not set. A metadataFilter must never be created with this value.
	MetadataFilterFilterMatchCriteriaNotSet = MetadataFilterFilterMatchCriteria("NOT_SET")
)

func (MetadataFilterFilterMatchCriteria) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataFilterFilterMatchCriteria)(nil)).Elem()
}

func (e MetadataFilterFilterMatchCriteria) ToMetadataFilterFilterMatchCriteriaOutput() MetadataFilterFilterMatchCriteriaOutput {
	return pulumi.ToOutput(e).(MetadataFilterFilterMatchCriteriaOutput)
}

func (e MetadataFilterFilterMatchCriteria) ToMetadataFilterFilterMatchCriteriaOutputWithContext(ctx context.Context) MetadataFilterFilterMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetadataFilterFilterMatchCriteriaOutput)
}

func (e MetadataFilterFilterMatchCriteria) ToMetadataFilterFilterMatchCriteriaPtrOutput() MetadataFilterFilterMatchCriteriaPtrOutput {
	return e.ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(context.Background())
}

func (e MetadataFilterFilterMatchCriteria) ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataFilterFilterMatchCriteriaPtrOutput {
	return MetadataFilterFilterMatchCriteria(e).ToMetadataFilterFilterMatchCriteriaOutputWithContext(ctx).ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(ctx)
}

func (e MetadataFilterFilterMatchCriteria) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetadataFilterFilterMatchCriteria) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetadataFilterFilterMatchCriteria) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetadataFilterFilterMatchCriteria) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetadataFilterFilterMatchCriteriaOutput struct{ *pulumi.OutputState }

func (MetadataFilterFilterMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataFilterFilterMatchCriteria)(nil)).Elem()
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToMetadataFilterFilterMatchCriteriaOutput() MetadataFilterFilterMatchCriteriaOutput {
	return o
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToMetadataFilterFilterMatchCriteriaOutputWithContext(ctx context.Context) MetadataFilterFilterMatchCriteriaOutput {
	return o
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToMetadataFilterFilterMatchCriteriaPtrOutput() MetadataFilterFilterMatchCriteriaPtrOutput {
	return o.ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(context.Background())
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataFilterFilterMatchCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataFilterFilterMatchCriteria) *MetadataFilterFilterMatchCriteria {
		return &v
	}).(MetadataFilterFilterMatchCriteriaPtrOutput)
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetadataFilterFilterMatchCriteria) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetadataFilterFilterMatchCriteriaOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetadataFilterFilterMatchCriteria) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetadataFilterFilterMatchCriteriaPtrOutput struct{ *pulumi.OutputState }

func (MetadataFilterFilterMatchCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataFilterFilterMatchCriteria)(nil)).Elem()
}

func (o MetadataFilterFilterMatchCriteriaPtrOutput) ToMetadataFilterFilterMatchCriteriaPtrOutput() MetadataFilterFilterMatchCriteriaPtrOutput {
	return o
}

func (o MetadataFilterFilterMatchCriteriaPtrOutput) ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataFilterFilterMatchCriteriaPtrOutput {
	return o
}

func (o MetadataFilterFilterMatchCriteriaPtrOutput) Elem() MetadataFilterFilterMatchCriteriaOutput {
	return o.ApplyT(func(v *MetadataFilterFilterMatchCriteria) MetadataFilterFilterMatchCriteria {
		if v != nil {
			return *v
		}
		var ret MetadataFilterFilterMatchCriteria
		return ret
	}).(MetadataFilterFilterMatchCriteriaOutput)
}

func (o MetadataFilterFilterMatchCriteriaPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetadataFilterFilterMatchCriteriaPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetadataFilterFilterMatchCriteria) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetadataFilterFilterMatchCriteriaInput is an input type that accepts MetadataFilterFilterMatchCriteriaArgs and MetadataFilterFilterMatchCriteriaOutput values.
// You can construct a concrete instance of `MetadataFilterFilterMatchCriteriaInput` via:
//
//          MetadataFilterFilterMatchCriteriaArgs{...}
type MetadataFilterFilterMatchCriteriaInput interface {
	pulumi.Input

	ToMetadataFilterFilterMatchCriteriaOutput() MetadataFilterFilterMatchCriteriaOutput
	ToMetadataFilterFilterMatchCriteriaOutputWithContext(context.Context) MetadataFilterFilterMatchCriteriaOutput
}

var metadataFilterFilterMatchCriteriaPtrType = reflect.TypeOf((**MetadataFilterFilterMatchCriteria)(nil)).Elem()

type MetadataFilterFilterMatchCriteriaPtrInput interface {
	pulumi.Input

	ToMetadataFilterFilterMatchCriteriaPtrOutput() MetadataFilterFilterMatchCriteriaPtrOutput
	ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(context.Context) MetadataFilterFilterMatchCriteriaPtrOutput
}

type metadataFilterFilterMatchCriteriaPtr string

func MetadataFilterFilterMatchCriteriaPtr(v string) MetadataFilterFilterMatchCriteriaPtrInput {
	return (*metadataFilterFilterMatchCriteriaPtr)(&v)
}

func (*metadataFilterFilterMatchCriteriaPtr) ElementType() reflect.Type {
	return metadataFilterFilterMatchCriteriaPtrType
}

func (in *metadataFilterFilterMatchCriteriaPtr) ToMetadataFilterFilterMatchCriteriaPtrOutput() MetadataFilterFilterMatchCriteriaPtrOutput {
	return pulumi.ToOutput(in).(MetadataFilterFilterMatchCriteriaPtrOutput)
}

func (in *metadataFilterFilterMatchCriteriaPtr) ToMetadataFilterFilterMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataFilterFilterMatchCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetadataFilterFilterMatchCriteriaPtrOutput)
}

// Specifies if the server TLS is configured to be strict or permissive. This field can be set to one of the following: STRICT: Client certificate must be presented, connection is in TLS. PERMISSIVE: Client certificate can be omitted, connection can be either plaintext or TLS.
type MutualTlsMode string

const (
	MutualTlsModeInvalid = MutualTlsMode("INVALID")
	// Client certificate can be omitted, connection can be either plaintext or TLS.
	MutualTlsModePermissive = MutualTlsMode("PERMISSIVE")
	// Client certificate must be presented, connection is in TLS.
	MutualTlsModeStrict = MutualTlsMode("STRICT")
)

func (MutualTlsMode) ElementType() reflect.Type {
	return reflect.TypeOf((*MutualTlsMode)(nil)).Elem()
}

func (e MutualTlsMode) ToMutualTlsModeOutput() MutualTlsModeOutput {
	return pulumi.ToOutput(e).(MutualTlsModeOutput)
}

func (e MutualTlsMode) ToMutualTlsModeOutputWithContext(ctx context.Context) MutualTlsModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MutualTlsModeOutput)
}

func (e MutualTlsMode) ToMutualTlsModePtrOutput() MutualTlsModePtrOutput {
	return e.ToMutualTlsModePtrOutputWithContext(context.Background())
}

func (e MutualTlsMode) ToMutualTlsModePtrOutputWithContext(ctx context.Context) MutualTlsModePtrOutput {
	return MutualTlsMode(e).ToMutualTlsModeOutputWithContext(ctx).ToMutualTlsModePtrOutputWithContext(ctx)
}

func (e MutualTlsMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MutualTlsMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MutualTlsMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MutualTlsMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MutualTlsModeOutput struct{ *pulumi.OutputState }

func (MutualTlsModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MutualTlsMode)(nil)).Elem()
}

func (o MutualTlsModeOutput) ToMutualTlsModeOutput() MutualTlsModeOutput {
	return o
}

func (o MutualTlsModeOutput) ToMutualTlsModeOutputWithContext(ctx context.Context) MutualTlsModeOutput {
	return o
}

func (o MutualTlsModeOutput) ToMutualTlsModePtrOutput() MutualTlsModePtrOutput {
	return o.ToMutualTlsModePtrOutputWithContext(context.Background())
}

func (o MutualTlsModeOutput) ToMutualTlsModePtrOutputWithContext(ctx context.Context) MutualTlsModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MutualTlsMode) *MutualTlsMode {
		return &v
	}).(MutualTlsModePtrOutput)
}

func (o MutualTlsModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MutualTlsModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MutualTlsMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MutualTlsModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MutualTlsModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MutualTlsMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MutualTlsModePtrOutput struct{ *pulumi.OutputState }

func (MutualTlsModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MutualTlsMode)(nil)).Elem()
}

func (o MutualTlsModePtrOutput) ToMutualTlsModePtrOutput() MutualTlsModePtrOutput {
	return o
}

func (o MutualTlsModePtrOutput) ToMutualTlsModePtrOutputWithContext(ctx context.Context) MutualTlsModePtrOutput {
	return o
}

func (o MutualTlsModePtrOutput) Elem() MutualTlsModeOutput {
	return o.ApplyT(func(v *MutualTlsMode) MutualTlsMode {
		if v != nil {
			return *v
		}
		var ret MutualTlsMode
		return ret
	}).(MutualTlsModeOutput)
}

func (o MutualTlsModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MutualTlsModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MutualTlsMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MutualTlsModeInput is an input type that accepts MutualTlsModeArgs and MutualTlsModeOutput values.
// You can construct a concrete instance of `MutualTlsModeInput` via:
//
//          MutualTlsModeArgs{...}
type MutualTlsModeInput interface {
	pulumi.Input

	ToMutualTlsModeOutput() MutualTlsModeOutput
	ToMutualTlsModeOutputWithContext(context.Context) MutualTlsModeOutput
}

var mutualTlsModePtrType = reflect.TypeOf((**MutualTlsMode)(nil)).Elem()

type MutualTlsModePtrInput interface {
	pulumi.Input

	ToMutualTlsModePtrOutput() MutualTlsModePtrOutput
	ToMutualTlsModePtrOutputWithContext(context.Context) MutualTlsModePtrOutput
}

type mutualTlsModePtr string

func MutualTlsModePtr(v string) MutualTlsModePtrInput {
	return (*mutualTlsModePtr)(&v)
}

func (*mutualTlsModePtr) ElementType() reflect.Type {
	return mutualTlsModePtrType
}

func (in *mutualTlsModePtr) ToMutualTlsModePtrOutput() MutualTlsModePtrOutput {
	return pulumi.ToOutput(in).(MutualTlsModePtrOutput)
}

func (in *mutualTlsModePtr) ToMutualTlsModePtrOutputWithContext(ctx context.Context) MutualTlsModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MutualTlsModePtrOutput)
}

// Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
type NetworkEndpointGroupNetworkEndpointType string

const (
	// The network endpoint is represented by an IP address.
	NetworkEndpointGroupNetworkEndpointTypeGceVmIp = NetworkEndpointGroupNetworkEndpointType("GCE_VM_IP")
	// The network endpoint is represented by IP address and port pair.
	NetworkEndpointGroupNetworkEndpointTypeGceVmIpPort = NetworkEndpointGroupNetworkEndpointType("GCE_VM_IP_PORT")
	// The network endpoint is the primary IP address on any network interface of a VM in Compute Engine.
	NetworkEndpointGroupNetworkEndpointTypeGceVmPrimaryIp = NetworkEndpointGroupNetworkEndpointType("GCE_VM_PRIMARY_IP")
	// The network endpoint is represented by fully qualified domain name and port.
	NetworkEndpointGroupNetworkEndpointTypeInternetFqdnPort = NetworkEndpointGroupNetworkEndpointType("INTERNET_FQDN_PORT")
	// The network endpoint is represented by an internet IP address and port.
	NetworkEndpointGroupNetworkEndpointTypeInternetIpPort = NetworkEndpointGroupNetworkEndpointType("INTERNET_IP_PORT")
	// The network endpoint is represented by an IP address and port. The endpoint belongs to a VM or pod running in a customer's on-premises.
	NetworkEndpointGroupNetworkEndpointTypeNonGcpPrivateIpPort = NetworkEndpointGroupNetworkEndpointType("NON_GCP_PRIVATE_IP_PORT")
	// The network endpoint is either public Google APIs or services exposed by other GCP Project with a Service Attachment. The connection is set up by private service connect
	NetworkEndpointGroupNetworkEndpointTypePrivateServiceConnect = NetworkEndpointGroupNetworkEndpointType("PRIVATE_SERVICE_CONNECT")
	// The network endpoint is handled by specified serverless infrastructure.
	NetworkEndpointGroupNetworkEndpointTypeServerless = NetworkEndpointGroupNetworkEndpointType("SERVERLESS")
)

func (NetworkEndpointGroupNetworkEndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (e NetworkEndpointGroupNetworkEndpointType) ToNetworkEndpointGroupNetworkEndpointTypeOutput() NetworkEndpointGroupNetworkEndpointTypeOutput {
	return pulumi.ToOutput(e).(NetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (e NetworkEndpointGroupNetworkEndpointType) ToNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx context.Context) NetworkEndpointGroupNetworkEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (e NetworkEndpointGroupNetworkEndpointType) ToNetworkEndpointGroupNetworkEndpointTypePtrOutput() NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return e.ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Background())
}

func (e NetworkEndpointGroupNetworkEndpointType) ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return NetworkEndpointGroupNetworkEndpointType(e).ToNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx).ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx)
}

func (e NetworkEndpointGroupNetworkEndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkEndpointGroupNetworkEndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkEndpointGroupNetworkEndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkEndpointGroupNetworkEndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkEndpointGroupNetworkEndpointTypeOutput struct{ *pulumi.OutputState }

func (NetworkEndpointGroupNetworkEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToNetworkEndpointGroupNetworkEndpointTypeOutput() NetworkEndpointGroupNetworkEndpointTypeOutput {
	return o
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx context.Context) NetworkEndpointGroupNetworkEndpointTypeOutput {
	return o
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToNetworkEndpointGroupNetworkEndpointTypePtrOutput() NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o.ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkEndpointGroupNetworkEndpointType) *NetworkEndpointGroupNetworkEndpointType {
		return &v
	}).(NetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkEndpointGroupNetworkEndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupNetworkEndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkEndpointGroupNetworkEndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkEndpointGroupNetworkEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkEndpointGroupNetworkEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (o NetworkEndpointGroupNetworkEndpointTypePtrOutput) ToNetworkEndpointGroupNetworkEndpointTypePtrOutput() NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o
}

func (o NetworkEndpointGroupNetworkEndpointTypePtrOutput) ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o
}

func (o NetworkEndpointGroupNetworkEndpointTypePtrOutput) Elem() NetworkEndpointGroupNetworkEndpointTypeOutput {
	return o.ApplyT(func(v *NetworkEndpointGroupNetworkEndpointType) NetworkEndpointGroupNetworkEndpointType {
		if v != nil {
			return *v
		}
		var ret NetworkEndpointGroupNetworkEndpointType
		return ret
	}).(NetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (o NetworkEndpointGroupNetworkEndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupNetworkEndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkEndpointGroupNetworkEndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkEndpointGroupNetworkEndpointTypeInput is an input type that accepts NetworkEndpointGroupNetworkEndpointTypeArgs and NetworkEndpointGroupNetworkEndpointTypeOutput values.
// You can construct a concrete instance of `NetworkEndpointGroupNetworkEndpointTypeInput` via:
//
//          NetworkEndpointGroupNetworkEndpointTypeArgs{...}
type NetworkEndpointGroupNetworkEndpointTypeInput interface {
	pulumi.Input

	ToNetworkEndpointGroupNetworkEndpointTypeOutput() NetworkEndpointGroupNetworkEndpointTypeOutput
	ToNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(context.Context) NetworkEndpointGroupNetworkEndpointTypeOutput
}

var networkEndpointGroupNetworkEndpointTypePtrType = reflect.TypeOf((**NetworkEndpointGroupNetworkEndpointType)(nil)).Elem()

type NetworkEndpointGroupNetworkEndpointTypePtrInput interface {
	pulumi.Input

	ToNetworkEndpointGroupNetworkEndpointTypePtrOutput() NetworkEndpointGroupNetworkEndpointTypePtrOutput
	ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Context) NetworkEndpointGroupNetworkEndpointTypePtrOutput
}

type networkEndpointGroupNetworkEndpointTypePtr string

func NetworkEndpointGroupNetworkEndpointTypePtr(v string) NetworkEndpointGroupNetworkEndpointTypePtrInput {
	return (*networkEndpointGroupNetworkEndpointTypePtr)(&v)
}

func (*networkEndpointGroupNetworkEndpointTypePtr) ElementType() reflect.Type {
	return networkEndpointGroupNetworkEndpointTypePtrType
}

func (in *networkEndpointGroupNetworkEndpointTypePtr) ToNetworkEndpointGroupNetworkEndpointTypePtrOutput() NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return pulumi.ToOutput(in).(NetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

func (in *networkEndpointGroupNetworkEndpointTypePtr) ToNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

// Specify the type of this network endpoint group. Only LOAD_BALANCING is valid for now.
type NetworkEndpointGroupType string

const (
	// The network endpoint group is a backend of a load balancer.
	NetworkEndpointGroupTypeLoadBalancing = NetworkEndpointGroupType("LOAD_BALANCING")
)

func (NetworkEndpointGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEndpointGroupType)(nil)).Elem()
}

func (e NetworkEndpointGroupType) ToNetworkEndpointGroupTypeOutput() NetworkEndpointGroupTypeOutput {
	return pulumi.ToOutput(e).(NetworkEndpointGroupTypeOutput)
}

func (e NetworkEndpointGroupType) ToNetworkEndpointGroupTypeOutputWithContext(ctx context.Context) NetworkEndpointGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkEndpointGroupTypeOutput)
}

func (e NetworkEndpointGroupType) ToNetworkEndpointGroupTypePtrOutput() NetworkEndpointGroupTypePtrOutput {
	return e.ToNetworkEndpointGroupTypePtrOutputWithContext(context.Background())
}

func (e NetworkEndpointGroupType) ToNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupTypePtrOutput {
	return NetworkEndpointGroupType(e).ToNetworkEndpointGroupTypeOutputWithContext(ctx).ToNetworkEndpointGroupTypePtrOutputWithContext(ctx)
}

func (e NetworkEndpointGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkEndpointGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkEndpointGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkEndpointGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkEndpointGroupTypeOutput struct{ *pulumi.OutputState }

func (NetworkEndpointGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEndpointGroupType)(nil)).Elem()
}

func (o NetworkEndpointGroupTypeOutput) ToNetworkEndpointGroupTypeOutput() NetworkEndpointGroupTypeOutput {
	return o
}

func (o NetworkEndpointGroupTypeOutput) ToNetworkEndpointGroupTypeOutputWithContext(ctx context.Context) NetworkEndpointGroupTypeOutput {
	return o
}

func (o NetworkEndpointGroupTypeOutput) ToNetworkEndpointGroupTypePtrOutput() NetworkEndpointGroupTypePtrOutput {
	return o.ToNetworkEndpointGroupTypePtrOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupTypeOutput) ToNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkEndpointGroupType) *NetworkEndpointGroupType {
		return &v
	}).(NetworkEndpointGroupTypePtrOutput)
}

func (o NetworkEndpointGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkEndpointGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkEndpointGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkEndpointGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkEndpointGroupTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkEndpointGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEndpointGroupType)(nil)).Elem()
}

func (o NetworkEndpointGroupTypePtrOutput) ToNetworkEndpointGroupTypePtrOutput() NetworkEndpointGroupTypePtrOutput {
	return o
}

func (o NetworkEndpointGroupTypePtrOutput) ToNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupTypePtrOutput {
	return o
}

func (o NetworkEndpointGroupTypePtrOutput) Elem() NetworkEndpointGroupTypeOutput {
	return o.ApplyT(func(v *NetworkEndpointGroupType) NetworkEndpointGroupType {
		if v != nil {
			return *v
		}
		var ret NetworkEndpointGroupType
		return ret
	}).(NetworkEndpointGroupTypeOutput)
}

func (o NetworkEndpointGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkEndpointGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkEndpointGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkEndpointGroupTypeInput is an input type that accepts NetworkEndpointGroupTypeArgs and NetworkEndpointGroupTypeOutput values.
// You can construct a concrete instance of `NetworkEndpointGroupTypeInput` via:
//
//          NetworkEndpointGroupTypeArgs{...}
type NetworkEndpointGroupTypeInput interface {
	pulumi.Input

	ToNetworkEndpointGroupTypeOutput() NetworkEndpointGroupTypeOutput
	ToNetworkEndpointGroupTypeOutputWithContext(context.Context) NetworkEndpointGroupTypeOutput
}

var networkEndpointGroupTypePtrType = reflect.TypeOf((**NetworkEndpointGroupType)(nil)).Elem()

type NetworkEndpointGroupTypePtrInput interface {
	pulumi.Input

	ToNetworkEndpointGroupTypePtrOutput() NetworkEndpointGroupTypePtrOutput
	ToNetworkEndpointGroupTypePtrOutputWithContext(context.Context) NetworkEndpointGroupTypePtrOutput
}

type networkEndpointGroupTypePtr string

func NetworkEndpointGroupTypePtr(v string) NetworkEndpointGroupTypePtrInput {
	return (*networkEndpointGroupTypePtr)(&v)
}

func (*networkEndpointGroupTypePtr) ElementType() reflect.Type {
	return networkEndpointGroupTypePtrType
}

func (in *networkEndpointGroupTypePtr) ToNetworkEndpointGroupTypePtrOutput() NetworkEndpointGroupTypePtrOutput {
	return pulumi.ToOutput(in).(NetworkEndpointGroupTypePtrOutput)
}

func (in *networkEndpointGroupTypePtr) ToNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) NetworkEndpointGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkEndpointGroupTypePtrOutput)
}

// The scope of networks allowed to be associated with the firewall policy. This field can be either GLOBAL_VPC_NETWORK or REGIONAL_VPC_NETWORK. A firewall policy with the VPC scope set to GLOBAL_VPC_NETWORK is allowed to be attached only to global networks. When the VPC scope is set to REGIONAL_VPC_NETWORK the firewall policy is allowed to be attached only to regional networks in the same scope as the firewall policy. Note: if not specified then GLOBAL_VPC_NETWORK will be used.
type NetworkFirewallPolicyVpcNetworkScope string

const (
	// The firewall policy is allowed to be attached only to global networks.
	NetworkFirewallPolicyVpcNetworkScopeGlobalVpcNetwork = NetworkFirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK")
	// The firewall policy is allowed to be attached only to regional networks in the same scope as the firewall policy. This option is applicable only to regional firewall policies.
	NetworkFirewallPolicyVpcNetworkScopeRegionalVpcNetwork = NetworkFirewallPolicyVpcNetworkScope("REGIONAL_VPC_NETWORK")
)

func (NetworkFirewallPolicyVpcNetworkScope) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToNetworkFirewallPolicyVpcNetworkScopeOutput() NetworkFirewallPolicyVpcNetworkScopeOutput {
	return pulumi.ToOutput(e).(NetworkFirewallPolicyVpcNetworkScopeOutput)
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(ctx context.Context) NetworkFirewallPolicyVpcNetworkScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkFirewallPolicyVpcNetworkScopeOutput)
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToNetworkFirewallPolicyVpcNetworkScopePtrOutput() NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return e.ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Background())
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return NetworkFirewallPolicyVpcNetworkScope(e).ToNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(ctx).ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx)
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkFirewallPolicyVpcNetworkScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkFirewallPolicyVpcNetworkScopeOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyVpcNetworkScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToNetworkFirewallPolicyVpcNetworkScopeOutput() NetworkFirewallPolicyVpcNetworkScopeOutput {
	return o
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(ctx context.Context) NetworkFirewallPolicyVpcNetworkScopeOutput {
	return o
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToNetworkFirewallPolicyVpcNetworkScopePtrOutput() NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o.ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Background())
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkFirewallPolicyVpcNetworkScope) *NetworkFirewallPolicyVpcNetworkScope {
		return &v
	}).(NetworkFirewallPolicyVpcNetworkScopePtrOutput)
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkFirewallPolicyVpcNetworkScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkFirewallPolicyVpcNetworkScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkFirewallPolicyVpcNetworkScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkFirewallPolicyVpcNetworkScopePtrOutput struct{ *pulumi.OutputState }

func (NetworkFirewallPolicyVpcNetworkScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (o NetworkFirewallPolicyVpcNetworkScopePtrOutput) ToNetworkFirewallPolicyVpcNetworkScopePtrOutput() NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o
}

func (o NetworkFirewallPolicyVpcNetworkScopePtrOutput) ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o
}

func (o NetworkFirewallPolicyVpcNetworkScopePtrOutput) Elem() NetworkFirewallPolicyVpcNetworkScopeOutput {
	return o.ApplyT(func(v *NetworkFirewallPolicyVpcNetworkScope) NetworkFirewallPolicyVpcNetworkScope {
		if v != nil {
			return *v
		}
		var ret NetworkFirewallPolicyVpcNetworkScope
		return ret
	}).(NetworkFirewallPolicyVpcNetworkScopeOutput)
}

func (o NetworkFirewallPolicyVpcNetworkScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkFirewallPolicyVpcNetworkScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkFirewallPolicyVpcNetworkScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkFirewallPolicyVpcNetworkScopeInput is an input type that accepts NetworkFirewallPolicyVpcNetworkScopeArgs and NetworkFirewallPolicyVpcNetworkScopeOutput values.
// You can construct a concrete instance of `NetworkFirewallPolicyVpcNetworkScopeInput` via:
//
//          NetworkFirewallPolicyVpcNetworkScopeArgs{...}
type NetworkFirewallPolicyVpcNetworkScopeInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyVpcNetworkScopeOutput() NetworkFirewallPolicyVpcNetworkScopeOutput
	ToNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(context.Context) NetworkFirewallPolicyVpcNetworkScopeOutput
}

var networkFirewallPolicyVpcNetworkScopePtrType = reflect.TypeOf((**NetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()

type NetworkFirewallPolicyVpcNetworkScopePtrInput interface {
	pulumi.Input

	ToNetworkFirewallPolicyVpcNetworkScopePtrOutput() NetworkFirewallPolicyVpcNetworkScopePtrOutput
	ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Context) NetworkFirewallPolicyVpcNetworkScopePtrOutput
}

type networkFirewallPolicyVpcNetworkScopePtr string

func NetworkFirewallPolicyVpcNetworkScopePtr(v string) NetworkFirewallPolicyVpcNetworkScopePtrInput {
	return (*networkFirewallPolicyVpcNetworkScopePtr)(&v)
}

func (*networkFirewallPolicyVpcNetworkScopePtr) ElementType() reflect.Type {
	return networkFirewallPolicyVpcNetworkScopePtrType
}

func (in *networkFirewallPolicyVpcNetworkScopePtr) ToNetworkFirewallPolicyVpcNetworkScopePtrOutput() NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return pulumi.ToOutput(in).(NetworkFirewallPolicyVpcNetworkScopePtrOutput)
}

func (in *networkFirewallPolicyVpcNetworkScopePtr) ToNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) NetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkFirewallPolicyVpcNetworkScopePtrOutput)
}

// The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
type NetworkInterfaceNicType string

const (
	// GVNIC
	NetworkInterfaceNicTypeGvnic = NetworkInterfaceNicType("GVNIC")
	// No type specified.
	NetworkInterfaceNicTypeUnspecifiedNicType = NetworkInterfaceNicType("UNSPECIFIED_NIC_TYPE")
	// VIRTIO
	NetworkInterfaceNicTypeVirtioNet = NetworkInterfaceNicType("VIRTIO_NET")
)

func (NetworkInterfaceNicType) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceNicType)(nil)).Elem()
}

func (e NetworkInterfaceNicType) ToNetworkInterfaceNicTypeOutput() NetworkInterfaceNicTypeOutput {
	return pulumi.ToOutput(e).(NetworkInterfaceNicTypeOutput)
}

func (e NetworkInterfaceNicType) ToNetworkInterfaceNicTypeOutputWithContext(ctx context.Context) NetworkInterfaceNicTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkInterfaceNicTypeOutput)
}

func (e NetworkInterfaceNicType) ToNetworkInterfaceNicTypePtrOutput() NetworkInterfaceNicTypePtrOutput {
	return e.ToNetworkInterfaceNicTypePtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceNicType) ToNetworkInterfaceNicTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceNicTypePtrOutput {
	return NetworkInterfaceNicType(e).ToNetworkInterfaceNicTypeOutputWithContext(ctx).ToNetworkInterfaceNicTypePtrOutputWithContext(ctx)
}

func (e NetworkInterfaceNicType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceNicType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceNicType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceNicType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkInterfaceNicTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceNicTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceNicType)(nil)).Elem()
}

func (o NetworkInterfaceNicTypeOutput) ToNetworkInterfaceNicTypeOutput() NetworkInterfaceNicTypeOutput {
	return o
}

func (o NetworkInterfaceNicTypeOutput) ToNetworkInterfaceNicTypeOutputWithContext(ctx context.Context) NetworkInterfaceNicTypeOutput {
	return o
}

func (o NetworkInterfaceNicTypeOutput) ToNetworkInterfaceNicTypePtrOutput() NetworkInterfaceNicTypePtrOutput {
	return o.ToNetworkInterfaceNicTypePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceNicTypeOutput) ToNetworkInterfaceNicTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceNicTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceNicType) *NetworkInterfaceNicType {
		return &v
	}).(NetworkInterfaceNicTypePtrOutput)
}

func (o NetworkInterfaceNicTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkInterfaceNicTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceNicType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkInterfaceNicTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceNicTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceNicType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkInterfaceNicTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceNicTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceNicType)(nil)).Elem()
}

func (o NetworkInterfaceNicTypePtrOutput) ToNetworkInterfaceNicTypePtrOutput() NetworkInterfaceNicTypePtrOutput {
	return o
}

func (o NetworkInterfaceNicTypePtrOutput) ToNetworkInterfaceNicTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceNicTypePtrOutput {
	return o
}

func (o NetworkInterfaceNicTypePtrOutput) Elem() NetworkInterfaceNicTypeOutput {
	return o.ApplyT(func(v *NetworkInterfaceNicType) NetworkInterfaceNicType {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceNicType
		return ret
	}).(NetworkInterfaceNicTypeOutput)
}

func (o NetworkInterfaceNicTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceNicTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkInterfaceNicType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkInterfaceNicTypeInput is an input type that accepts NetworkInterfaceNicTypeArgs and NetworkInterfaceNicTypeOutput values.
// You can construct a concrete instance of `NetworkInterfaceNicTypeInput` via:
//
//          NetworkInterfaceNicTypeArgs{...}
type NetworkInterfaceNicTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceNicTypeOutput() NetworkInterfaceNicTypeOutput
	ToNetworkInterfaceNicTypeOutputWithContext(context.Context) NetworkInterfaceNicTypeOutput
}

var networkInterfaceNicTypePtrType = reflect.TypeOf((**NetworkInterfaceNicType)(nil)).Elem()

type NetworkInterfaceNicTypePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceNicTypePtrOutput() NetworkInterfaceNicTypePtrOutput
	ToNetworkInterfaceNicTypePtrOutputWithContext(context.Context) NetworkInterfaceNicTypePtrOutput
}

type networkInterfaceNicTypePtr string

func NetworkInterfaceNicTypePtr(v string) NetworkInterfaceNicTypePtrInput {
	return (*networkInterfaceNicTypePtr)(&v)
}

func (*networkInterfaceNicTypePtr) ElementType() reflect.Type {
	return networkInterfaceNicTypePtrType
}

func (in *networkInterfaceNicTypePtr) ToNetworkInterfaceNicTypePtrOutput() NetworkInterfaceNicTypePtrOutput {
	return pulumi.ToOutput(in).(NetworkInterfaceNicTypePtrOutput)
}

func (in *networkInterfaceNicTypePtr) ToNetworkInterfaceNicTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceNicTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkInterfaceNicTypePtrOutput)
}

// The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at instance creation and update network interface operations.
type NetworkInterfaceStackType string

const (
	// The network interface can have both IPv4 and IPv6 addresses.
	NetworkInterfaceStackTypeIpv4Ipv6 = NetworkInterfaceStackType("IPV4_IPV6")
	// The network interface will be assigned IPv4 address.
	NetworkInterfaceStackTypeIpv4Only = NetworkInterfaceStackType("IPV4_ONLY")
)

func (NetworkInterfaceStackType) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceStackType)(nil)).Elem()
}

func (e NetworkInterfaceStackType) ToNetworkInterfaceStackTypeOutput() NetworkInterfaceStackTypeOutput {
	return pulumi.ToOutput(e).(NetworkInterfaceStackTypeOutput)
}

func (e NetworkInterfaceStackType) ToNetworkInterfaceStackTypeOutputWithContext(ctx context.Context) NetworkInterfaceStackTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkInterfaceStackTypeOutput)
}

func (e NetworkInterfaceStackType) ToNetworkInterfaceStackTypePtrOutput() NetworkInterfaceStackTypePtrOutput {
	return e.ToNetworkInterfaceStackTypePtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceStackType) ToNetworkInterfaceStackTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceStackTypePtrOutput {
	return NetworkInterfaceStackType(e).ToNetworkInterfaceStackTypeOutputWithContext(ctx).ToNetworkInterfaceStackTypePtrOutputWithContext(ctx)
}

func (e NetworkInterfaceStackType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceStackType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceStackType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceStackType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkInterfaceStackTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStackTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceStackType)(nil)).Elem()
}

func (o NetworkInterfaceStackTypeOutput) ToNetworkInterfaceStackTypeOutput() NetworkInterfaceStackTypeOutput {
	return o
}

func (o NetworkInterfaceStackTypeOutput) ToNetworkInterfaceStackTypeOutputWithContext(ctx context.Context) NetworkInterfaceStackTypeOutput {
	return o
}

func (o NetworkInterfaceStackTypeOutput) ToNetworkInterfaceStackTypePtrOutput() NetworkInterfaceStackTypePtrOutput {
	return o.ToNetworkInterfaceStackTypePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceStackTypeOutput) ToNetworkInterfaceStackTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceStackTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceStackType) *NetworkInterfaceStackType {
		return &v
	}).(NetworkInterfaceStackTypePtrOutput)
}

func (o NetworkInterfaceStackTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkInterfaceStackTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceStackType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkInterfaceStackTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceStackTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceStackType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkInterfaceStackTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceStackTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceStackType)(nil)).Elem()
}

func (o NetworkInterfaceStackTypePtrOutput) ToNetworkInterfaceStackTypePtrOutput() NetworkInterfaceStackTypePtrOutput {
	return o
}

func (o NetworkInterfaceStackTypePtrOutput) ToNetworkInterfaceStackTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceStackTypePtrOutput {
	return o
}

func (o NetworkInterfaceStackTypePtrOutput) Elem() NetworkInterfaceStackTypeOutput {
	return o.ApplyT(func(v *NetworkInterfaceStackType) NetworkInterfaceStackType {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceStackType
		return ret
	}).(NetworkInterfaceStackTypeOutput)
}

func (o NetworkInterfaceStackTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceStackTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkInterfaceStackType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkInterfaceStackTypeInput is an input type that accepts NetworkInterfaceStackTypeArgs and NetworkInterfaceStackTypeOutput values.
// You can construct a concrete instance of `NetworkInterfaceStackTypeInput` via:
//
//          NetworkInterfaceStackTypeArgs{...}
type NetworkInterfaceStackTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceStackTypeOutput() NetworkInterfaceStackTypeOutput
	ToNetworkInterfaceStackTypeOutputWithContext(context.Context) NetworkInterfaceStackTypeOutput
}

var networkInterfaceStackTypePtrType = reflect.TypeOf((**NetworkInterfaceStackType)(nil)).Elem()

type NetworkInterfaceStackTypePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceStackTypePtrOutput() NetworkInterfaceStackTypePtrOutput
	ToNetworkInterfaceStackTypePtrOutputWithContext(context.Context) NetworkInterfaceStackTypePtrOutput
}

type networkInterfaceStackTypePtr string

func NetworkInterfaceStackTypePtr(v string) NetworkInterfaceStackTypePtrInput {
	return (*networkInterfaceStackTypePtr)(&v)
}

func (*networkInterfaceStackTypePtr) ElementType() reflect.Type {
	return networkInterfaceStackTypePtrType
}

func (in *networkInterfaceStackTypePtr) ToNetworkInterfaceStackTypePtrOutput() NetworkInterfaceStackTypePtrOutput {
	return pulumi.ToOutput(in).(NetworkInterfaceStackTypePtrOutput)
}

func (in *networkInterfaceStackTypePtr) ToNetworkInterfaceStackTypePtrOutputWithContext(ctx context.Context) NetworkInterfaceStackTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkInterfaceStackTypePtrOutput)
}

type NetworkInterfaceSubInterfaceIpAllocationMode string

const (
	// Allocates an internal IPv4 IP address from subnets secondary IP Range.
	NetworkInterfaceSubInterfaceIpAllocationModeAllocateIp = NetworkInterfaceSubInterfaceIpAllocationMode("ALLOCATE_IP")
	// No IP allocation is done for the subinterface.
	NetworkInterfaceSubInterfaceIpAllocationModeDoNotAllocateIp = NetworkInterfaceSubInterfaceIpAllocationMode("DO_NOT_ALLOCATE_IP")
	NetworkInterfaceSubInterfaceIpAllocationModeUnspecified     = NetworkInterfaceSubInterfaceIpAllocationMode("UNSPECIFIED")
)

func (NetworkInterfaceSubInterfaceIpAllocationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceSubInterfaceIpAllocationMode)(nil)).Elem()
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToNetworkInterfaceSubInterfaceIpAllocationModeOutput() NetworkInterfaceSubInterfaceIpAllocationModeOutput {
	return pulumi.ToOutput(e).(NetworkInterfaceSubInterfaceIpAllocationModeOutput)
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToNetworkInterfaceSubInterfaceIpAllocationModeOutputWithContext(ctx context.Context) NetworkInterfaceSubInterfaceIpAllocationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkInterfaceSubInterfaceIpAllocationModeOutput)
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutput() NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return e.ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(ctx context.Context) NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return NetworkInterfaceSubInterfaceIpAllocationMode(e).ToNetworkInterfaceSubInterfaceIpAllocationModeOutputWithContext(ctx).ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(ctx)
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkInterfaceSubInterfaceIpAllocationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkInterfaceSubInterfaceIpAllocationModeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceSubInterfaceIpAllocationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceSubInterfaceIpAllocationMode)(nil)).Elem()
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToNetworkInterfaceSubInterfaceIpAllocationModeOutput() NetworkInterfaceSubInterfaceIpAllocationModeOutput {
	return o
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToNetworkInterfaceSubInterfaceIpAllocationModeOutputWithContext(ctx context.Context) NetworkInterfaceSubInterfaceIpAllocationModeOutput {
	return o
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutput() NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return o.ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(ctx context.Context) NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkInterfaceSubInterfaceIpAllocationMode) *NetworkInterfaceSubInterfaceIpAllocationMode {
		return &v
	}).(NetworkInterfaceSubInterfaceIpAllocationModePtrOutput)
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceSubInterfaceIpAllocationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceSubInterfaceIpAllocationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkInterfaceSubInterfaceIpAllocationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkInterfaceSubInterfaceIpAllocationModePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceSubInterfaceIpAllocationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceSubInterfaceIpAllocationMode)(nil)).Elem()
}

func (o NetworkInterfaceSubInterfaceIpAllocationModePtrOutput) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutput() NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return o
}

func (o NetworkInterfaceSubInterfaceIpAllocationModePtrOutput) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(ctx context.Context) NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return o
}

func (o NetworkInterfaceSubInterfaceIpAllocationModePtrOutput) Elem() NetworkInterfaceSubInterfaceIpAllocationModeOutput {
	return o.ApplyT(func(v *NetworkInterfaceSubInterfaceIpAllocationMode) NetworkInterfaceSubInterfaceIpAllocationMode {
		if v != nil {
			return *v
		}
		var ret NetworkInterfaceSubInterfaceIpAllocationMode
		return ret
	}).(NetworkInterfaceSubInterfaceIpAllocationModeOutput)
}

func (o NetworkInterfaceSubInterfaceIpAllocationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceSubInterfaceIpAllocationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkInterfaceSubInterfaceIpAllocationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkInterfaceSubInterfaceIpAllocationModeInput is an input type that accepts NetworkInterfaceSubInterfaceIpAllocationModeArgs and NetworkInterfaceSubInterfaceIpAllocationModeOutput values.
// You can construct a concrete instance of `NetworkInterfaceSubInterfaceIpAllocationModeInput` via:
//
//          NetworkInterfaceSubInterfaceIpAllocationModeArgs{...}
type NetworkInterfaceSubInterfaceIpAllocationModeInput interface {
	pulumi.Input

	ToNetworkInterfaceSubInterfaceIpAllocationModeOutput() NetworkInterfaceSubInterfaceIpAllocationModeOutput
	ToNetworkInterfaceSubInterfaceIpAllocationModeOutputWithContext(context.Context) NetworkInterfaceSubInterfaceIpAllocationModeOutput
}

var networkInterfaceSubInterfaceIpAllocationModePtrType = reflect.TypeOf((**NetworkInterfaceSubInterfaceIpAllocationMode)(nil)).Elem()

type NetworkInterfaceSubInterfaceIpAllocationModePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutput() NetworkInterfaceSubInterfaceIpAllocationModePtrOutput
	ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(context.Context) NetworkInterfaceSubInterfaceIpAllocationModePtrOutput
}

type networkInterfaceSubInterfaceIpAllocationModePtr string

func NetworkInterfaceSubInterfaceIpAllocationModePtr(v string) NetworkInterfaceSubInterfaceIpAllocationModePtrInput {
	return (*networkInterfaceSubInterfaceIpAllocationModePtr)(&v)
}

func (*networkInterfaceSubInterfaceIpAllocationModePtr) ElementType() reflect.Type {
	return networkInterfaceSubInterfaceIpAllocationModePtrType
}

func (in *networkInterfaceSubInterfaceIpAllocationModePtr) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutput() NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return pulumi.ToOutput(in).(NetworkInterfaceSubInterfaceIpAllocationModePtrOutput)
}

func (in *networkInterfaceSubInterfaceIpAllocationModePtr) ToNetworkInterfaceSubInterfaceIpAllocationModePtrOutputWithContext(ctx context.Context) NetworkInterfaceSubInterfaceIpAllocationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkInterfaceSubInterfaceIpAllocationModePtrOutput)
}

// The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
type NetworkNetworkFirewallPolicyEnforcementOrder string

const (
	NetworkNetworkFirewallPolicyEnforcementOrderAfterClassicFirewall  = NetworkNetworkFirewallPolicyEnforcementOrder("AFTER_CLASSIC_FIREWALL")
	NetworkNetworkFirewallPolicyEnforcementOrderBeforeClassicFirewall = NetworkNetworkFirewallPolicyEnforcementOrder("BEFORE_CLASSIC_FIREWALL")
)

func (NetworkNetworkFirewallPolicyEnforcementOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToNetworkNetworkFirewallPolicyEnforcementOrderOutput() NetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return pulumi.ToOutput(e).(NetworkNetworkFirewallPolicyEnforcementOrderOutput)
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(ctx context.Context) NetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkNetworkFirewallPolicyEnforcementOrderOutput)
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return e.ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(context.Background())
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return NetworkNetworkFirewallPolicyEnforcementOrder(e).ToNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(ctx).ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx)
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkNetworkFirewallPolicyEnforcementOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkNetworkFirewallPolicyEnforcementOrderOutput struct{ *pulumi.OutputState }

func (NetworkNetworkFirewallPolicyEnforcementOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToNetworkNetworkFirewallPolicyEnforcementOrderOutput() NetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return o
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(ctx context.Context) NetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return o
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o.ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(context.Background())
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkNetworkFirewallPolicyEnforcementOrder) *NetworkNetworkFirewallPolicyEnforcementOrder {
		return &v
	}).(NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput)
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkNetworkFirewallPolicyEnforcementOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkNetworkFirewallPolicyEnforcementOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput struct{ *pulumi.OutputState }

func (NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) Elem() NetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return o.ApplyT(func(v *NetworkNetworkFirewallPolicyEnforcementOrder) NetworkNetworkFirewallPolicyEnforcementOrder {
		if v != nil {
			return *v
		}
		var ret NetworkNetworkFirewallPolicyEnforcementOrder
		return ret
	}).(NetworkNetworkFirewallPolicyEnforcementOrderOutput)
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkNetworkFirewallPolicyEnforcementOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkNetworkFirewallPolicyEnforcementOrderInput is an input type that accepts NetworkNetworkFirewallPolicyEnforcementOrderArgs and NetworkNetworkFirewallPolicyEnforcementOrderOutput values.
// You can construct a concrete instance of `NetworkNetworkFirewallPolicyEnforcementOrderInput` via:
//
//          NetworkNetworkFirewallPolicyEnforcementOrderArgs{...}
type NetworkNetworkFirewallPolicyEnforcementOrderInput interface {
	pulumi.Input

	ToNetworkNetworkFirewallPolicyEnforcementOrderOutput() NetworkNetworkFirewallPolicyEnforcementOrderOutput
	ToNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(context.Context) NetworkNetworkFirewallPolicyEnforcementOrderOutput
}

var networkNetworkFirewallPolicyEnforcementOrderPtrType = reflect.TypeOf((**NetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()

type NetworkNetworkFirewallPolicyEnforcementOrderPtrInput interface {
	pulumi.Input

	ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput
	ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(context.Context) NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput
}

type networkNetworkFirewallPolicyEnforcementOrderPtr string

func NetworkNetworkFirewallPolicyEnforcementOrderPtr(v string) NetworkNetworkFirewallPolicyEnforcementOrderPtrInput {
	return (*networkNetworkFirewallPolicyEnforcementOrderPtr)(&v)
}

func (*networkNetworkFirewallPolicyEnforcementOrderPtr) ElementType() reflect.Type {
	return networkNetworkFirewallPolicyEnforcementOrderPtrType
}

func (in *networkNetworkFirewallPolicyEnforcementOrderPtr) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return pulumi.ToOutput(in).(NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput)
}

func (in *networkNetworkFirewallPolicyEnforcementOrderPtr) ToNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput)
}

type NetworkPerformanceConfigExternalIpEgressBandwidthTier string

const (
	NetworkPerformanceConfigExternalIpEgressBandwidthTierDefault = NetworkPerformanceConfigExternalIpEgressBandwidthTier("DEFAULT")
	NetworkPerformanceConfigExternalIpEgressBandwidthTierTier1   = NetworkPerformanceConfigExternalIpEgressBandwidthTier("TIER_1")
)

func (NetworkPerformanceConfigExternalIpEgressBandwidthTier) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return pulumi.ToOutput(e).(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return e.ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return NetworkPerformanceConfigExternalIpEgressBandwidthTier(e).ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(ctx).ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigExternalIpEgressBandwidthTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o.ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPerformanceConfigExternalIpEgressBandwidthTier) *NetworkPerformanceConfigExternalIpEgressBandwidthTier {
		return &v
	}).(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput)
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigExternalIpEgressBandwidthTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigExternalIpEgressBandwidthTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) Elem() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput {
	return o.ApplyT(func(v *NetworkPerformanceConfigExternalIpEgressBandwidthTier) NetworkPerformanceConfigExternalIpEgressBandwidthTier {
		if v != nil {
			return *v
		}
		var ret NetworkPerformanceConfigExternalIpEgressBandwidthTier
		return ret
	}).(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput)
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkPerformanceConfigExternalIpEgressBandwidthTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkPerformanceConfigExternalIpEgressBandwidthTierInput is an input type that accepts NetworkPerformanceConfigExternalIpEgressBandwidthTierArgs and NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput values.
// You can construct a concrete instance of `NetworkPerformanceConfigExternalIpEgressBandwidthTierInput` via:
//
//          NetworkPerformanceConfigExternalIpEgressBandwidthTierArgs{...}
type NetworkPerformanceConfigExternalIpEgressBandwidthTierInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput
	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierOutputWithContext(context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput
}

var networkPerformanceConfigExternalIpEgressBandwidthTierPtrType = reflect.TypeOf((**NetworkPerformanceConfigExternalIpEgressBandwidthTier)(nil)).Elem()

type NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput
	ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput
}

type networkPerformanceConfigExternalIpEgressBandwidthTierPtr string

func NetworkPerformanceConfigExternalIpEgressBandwidthTierPtr(v string) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrInput {
	return (*networkPerformanceConfigExternalIpEgressBandwidthTierPtr)(&v)
}

func (*networkPerformanceConfigExternalIpEgressBandwidthTierPtr) ElementType() reflect.Type {
	return networkPerformanceConfigExternalIpEgressBandwidthTierPtrType
}

func (in *networkPerformanceConfigExternalIpEgressBandwidthTierPtr) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput() NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return pulumi.ToOutput(in).(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput)
}

func (in *networkPerformanceConfigExternalIpEgressBandwidthTierPtr) ToNetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput)
}

type NetworkPerformanceConfigTotalEgressBandwidthTier string

const (
	NetworkPerformanceConfigTotalEgressBandwidthTierDefault = NetworkPerformanceConfigTotalEgressBandwidthTier("DEFAULT")
	NetworkPerformanceConfigTotalEgressBandwidthTierTier1   = NetworkPerformanceConfigTotalEgressBandwidthTier("TIER_1")
)

func (NetworkPerformanceConfigTotalEgressBandwidthTier) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutput() NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return pulumi.ToOutput(e).(NetworkPerformanceConfigTotalEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkPerformanceConfigTotalEgressBandwidthTierOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return e.ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return NetworkPerformanceConfigTotalEgressBandwidthTier(e).ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(ctx).ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkPerformanceConfigTotalEgressBandwidthTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkPerformanceConfigTotalEgressBandwidthTierOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutput() NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o.ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPerformanceConfigTotalEgressBandwidthTier) *NetworkPerformanceConfigTotalEgressBandwidthTier {
		return &v
	}).(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput)
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigTotalEgressBandwidthTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkPerformanceConfigTotalEgressBandwidthTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput struct{ *pulumi.OutputState }

func (NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return o
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) Elem() NetworkPerformanceConfigTotalEgressBandwidthTierOutput {
	return o.ApplyT(func(v *NetworkPerformanceConfigTotalEgressBandwidthTier) NetworkPerformanceConfigTotalEgressBandwidthTier {
		if v != nil {
			return *v
		}
		var ret NetworkPerformanceConfigTotalEgressBandwidthTier
		return ret
	}).(NetworkPerformanceConfigTotalEgressBandwidthTierOutput)
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkPerformanceConfigTotalEgressBandwidthTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkPerformanceConfigTotalEgressBandwidthTierInput is an input type that accepts NetworkPerformanceConfigTotalEgressBandwidthTierArgs and NetworkPerformanceConfigTotalEgressBandwidthTierOutput values.
// You can construct a concrete instance of `NetworkPerformanceConfigTotalEgressBandwidthTierInput` via:
//
//          NetworkPerformanceConfigTotalEgressBandwidthTierArgs{...}
type NetworkPerformanceConfigTotalEgressBandwidthTierInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigTotalEgressBandwidthTierOutput() NetworkPerformanceConfigTotalEgressBandwidthTierOutput
	ToNetworkPerformanceConfigTotalEgressBandwidthTierOutputWithContext(context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierOutput
}

var networkPerformanceConfigTotalEgressBandwidthTierPtrType = reflect.TypeOf((**NetworkPerformanceConfigTotalEgressBandwidthTier)(nil)).Elem()

type NetworkPerformanceConfigTotalEgressBandwidthTierPtrInput interface {
	pulumi.Input

	ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput
	ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput
}

type networkPerformanceConfigTotalEgressBandwidthTierPtr string

func NetworkPerformanceConfigTotalEgressBandwidthTierPtr(v string) NetworkPerformanceConfigTotalEgressBandwidthTierPtrInput {
	return (*networkPerformanceConfigTotalEgressBandwidthTierPtr)(&v)
}

func (*networkPerformanceConfigTotalEgressBandwidthTierPtr) ElementType() reflect.Type {
	return networkPerformanceConfigTotalEgressBandwidthTierPtrType
}

func (in *networkPerformanceConfigTotalEgressBandwidthTierPtr) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput() NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return pulumi.ToOutput(in).(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput)
}

func (in *networkPerformanceConfigTotalEgressBandwidthTierPtr) ToNetworkPerformanceConfigTotalEgressBandwidthTierPtrOutputWithContext(ctx context.Context) NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput)
}

// The network-wide routing mode to use. If set to REGIONAL, this network's Cloud Routers will only advertise routes with subnets of this network in the same region as the router. If set to GLOBAL, this network's Cloud Routers will advertise routes with all subnets of this network, across regions.
type NetworkRoutingConfigRoutingMode string

const (
	NetworkRoutingConfigRoutingModeGlobal   = NetworkRoutingConfigRoutingMode("GLOBAL")
	NetworkRoutingConfigRoutingModeRegional = NetworkRoutingConfigRoutingMode("REGIONAL")
)

func (NetworkRoutingConfigRoutingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutingConfigRoutingMode)(nil)).Elem()
}

func (e NetworkRoutingConfigRoutingMode) ToNetworkRoutingConfigRoutingModeOutput() NetworkRoutingConfigRoutingModeOutput {
	return pulumi.ToOutput(e).(NetworkRoutingConfigRoutingModeOutput)
}

func (e NetworkRoutingConfigRoutingMode) ToNetworkRoutingConfigRoutingModeOutputWithContext(ctx context.Context) NetworkRoutingConfigRoutingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkRoutingConfigRoutingModeOutput)
}

func (e NetworkRoutingConfigRoutingMode) ToNetworkRoutingConfigRoutingModePtrOutput() NetworkRoutingConfigRoutingModePtrOutput {
	return e.ToNetworkRoutingConfigRoutingModePtrOutputWithContext(context.Background())
}

func (e NetworkRoutingConfigRoutingMode) ToNetworkRoutingConfigRoutingModePtrOutputWithContext(ctx context.Context) NetworkRoutingConfigRoutingModePtrOutput {
	return NetworkRoutingConfigRoutingMode(e).ToNetworkRoutingConfigRoutingModeOutputWithContext(ctx).ToNetworkRoutingConfigRoutingModePtrOutputWithContext(ctx)
}

func (e NetworkRoutingConfigRoutingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkRoutingConfigRoutingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkRoutingConfigRoutingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkRoutingConfigRoutingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkRoutingConfigRoutingModeOutput struct{ *pulumi.OutputState }

func (NetworkRoutingConfigRoutingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRoutingConfigRoutingMode)(nil)).Elem()
}

func (o NetworkRoutingConfigRoutingModeOutput) ToNetworkRoutingConfigRoutingModeOutput() NetworkRoutingConfigRoutingModeOutput {
	return o
}

func (o NetworkRoutingConfigRoutingModeOutput) ToNetworkRoutingConfigRoutingModeOutputWithContext(ctx context.Context) NetworkRoutingConfigRoutingModeOutput {
	return o
}

func (o NetworkRoutingConfigRoutingModeOutput) ToNetworkRoutingConfigRoutingModePtrOutput() NetworkRoutingConfigRoutingModePtrOutput {
	return o.ToNetworkRoutingConfigRoutingModePtrOutputWithContext(context.Background())
}

func (o NetworkRoutingConfigRoutingModeOutput) ToNetworkRoutingConfigRoutingModePtrOutputWithContext(ctx context.Context) NetworkRoutingConfigRoutingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkRoutingConfigRoutingMode) *NetworkRoutingConfigRoutingMode {
		return &v
	}).(NetworkRoutingConfigRoutingModePtrOutput)
}

func (o NetworkRoutingConfigRoutingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkRoutingConfigRoutingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkRoutingConfigRoutingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkRoutingConfigRoutingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkRoutingConfigRoutingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkRoutingConfigRoutingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkRoutingConfigRoutingModePtrOutput struct{ *pulumi.OutputState }

func (NetworkRoutingConfigRoutingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRoutingConfigRoutingMode)(nil)).Elem()
}

func (o NetworkRoutingConfigRoutingModePtrOutput) ToNetworkRoutingConfigRoutingModePtrOutput() NetworkRoutingConfigRoutingModePtrOutput {
	return o
}

func (o NetworkRoutingConfigRoutingModePtrOutput) ToNetworkRoutingConfigRoutingModePtrOutputWithContext(ctx context.Context) NetworkRoutingConfigRoutingModePtrOutput {
	return o
}

func (o NetworkRoutingConfigRoutingModePtrOutput) Elem() NetworkRoutingConfigRoutingModeOutput {
	return o.ApplyT(func(v *NetworkRoutingConfigRoutingMode) NetworkRoutingConfigRoutingMode {
		if v != nil {
			return *v
		}
		var ret NetworkRoutingConfigRoutingMode
		return ret
	}).(NetworkRoutingConfigRoutingModeOutput)
}

func (o NetworkRoutingConfigRoutingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkRoutingConfigRoutingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkRoutingConfigRoutingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkRoutingConfigRoutingModeInput is an input type that accepts NetworkRoutingConfigRoutingModeArgs and NetworkRoutingConfigRoutingModeOutput values.
// You can construct a concrete instance of `NetworkRoutingConfigRoutingModeInput` via:
//
//          NetworkRoutingConfigRoutingModeArgs{...}
type NetworkRoutingConfigRoutingModeInput interface {
	pulumi.Input

	ToNetworkRoutingConfigRoutingModeOutput() NetworkRoutingConfigRoutingModeOutput
	ToNetworkRoutingConfigRoutingModeOutputWithContext(context.Context) NetworkRoutingConfigRoutingModeOutput
}

var networkRoutingConfigRoutingModePtrType = reflect.TypeOf((**NetworkRoutingConfigRoutingMode)(nil)).Elem()

type NetworkRoutingConfigRoutingModePtrInput interface {
	pulumi.Input

	ToNetworkRoutingConfigRoutingModePtrOutput() NetworkRoutingConfigRoutingModePtrOutput
	ToNetworkRoutingConfigRoutingModePtrOutputWithContext(context.Context) NetworkRoutingConfigRoutingModePtrOutput
}

type networkRoutingConfigRoutingModePtr string

func NetworkRoutingConfigRoutingModePtr(v string) NetworkRoutingConfigRoutingModePtrInput {
	return (*networkRoutingConfigRoutingModePtr)(&v)
}

func (*networkRoutingConfigRoutingModePtr) ElementType() reflect.Type {
	return networkRoutingConfigRoutingModePtrType
}

func (in *networkRoutingConfigRoutingModePtr) ToNetworkRoutingConfigRoutingModePtrOutput() NetworkRoutingConfigRoutingModePtrOutput {
	return pulumi.ToOutput(in).(NetworkRoutingConfigRoutingModePtrOutput)
}

func (in *networkRoutingConfigRoutingModePtr) ToNetworkRoutingConfigRoutingModePtrOutputWithContext(ctx context.Context) NetworkRoutingConfigRoutingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkRoutingConfigRoutingModePtrOutput)
}

// The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes.
type NodeGroupAutoscalingPolicyMode string

const (
	NodeGroupAutoscalingPolicyModeModeUnspecified = NodeGroupAutoscalingPolicyMode("MODE_UNSPECIFIED")
	// Autoscaling is disabled.
	NodeGroupAutoscalingPolicyModeOff = NodeGroupAutoscalingPolicyMode("OFF")
	// Autocaling is fully enabled.
	NodeGroupAutoscalingPolicyModeOn = NodeGroupAutoscalingPolicyMode("ON")
	// Autoscaling will only scale out and will not remove nodes.
	NodeGroupAutoscalingPolicyModeOnlyScaleOut = NodeGroupAutoscalingPolicyMode("ONLY_SCALE_OUT")
)

func (NodeGroupAutoscalingPolicyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupAutoscalingPolicyMode)(nil)).Elem()
}

func (e NodeGroupAutoscalingPolicyMode) ToNodeGroupAutoscalingPolicyModeOutput() NodeGroupAutoscalingPolicyModeOutput {
	return pulumi.ToOutput(e).(NodeGroupAutoscalingPolicyModeOutput)
}

func (e NodeGroupAutoscalingPolicyMode) ToNodeGroupAutoscalingPolicyModeOutputWithContext(ctx context.Context) NodeGroupAutoscalingPolicyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NodeGroupAutoscalingPolicyModeOutput)
}

func (e NodeGroupAutoscalingPolicyMode) ToNodeGroupAutoscalingPolicyModePtrOutput() NodeGroupAutoscalingPolicyModePtrOutput {
	return e.ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(context.Background())
}

func (e NodeGroupAutoscalingPolicyMode) ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) NodeGroupAutoscalingPolicyModePtrOutput {
	return NodeGroupAutoscalingPolicyMode(e).ToNodeGroupAutoscalingPolicyModeOutputWithContext(ctx).ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(ctx)
}

func (e NodeGroupAutoscalingPolicyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeGroupAutoscalingPolicyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeGroupAutoscalingPolicyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NodeGroupAutoscalingPolicyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NodeGroupAutoscalingPolicyModeOutput struct{ *pulumi.OutputState }

func (NodeGroupAutoscalingPolicyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupAutoscalingPolicyMode)(nil)).Elem()
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToNodeGroupAutoscalingPolicyModeOutput() NodeGroupAutoscalingPolicyModeOutput {
	return o
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToNodeGroupAutoscalingPolicyModeOutputWithContext(ctx context.Context) NodeGroupAutoscalingPolicyModeOutput {
	return o
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToNodeGroupAutoscalingPolicyModePtrOutput() NodeGroupAutoscalingPolicyModePtrOutput {
	return o.ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(context.Background())
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) NodeGroupAutoscalingPolicyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupAutoscalingPolicyMode) *NodeGroupAutoscalingPolicyMode {
		return &v
	}).(NodeGroupAutoscalingPolicyModePtrOutput)
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeGroupAutoscalingPolicyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeGroupAutoscalingPolicyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeGroupAutoscalingPolicyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NodeGroupAutoscalingPolicyModePtrOutput struct{ *pulumi.OutputState }

func (NodeGroupAutoscalingPolicyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupAutoscalingPolicyMode)(nil)).Elem()
}

func (o NodeGroupAutoscalingPolicyModePtrOutput) ToNodeGroupAutoscalingPolicyModePtrOutput() NodeGroupAutoscalingPolicyModePtrOutput {
	return o
}

func (o NodeGroupAutoscalingPolicyModePtrOutput) ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) NodeGroupAutoscalingPolicyModePtrOutput {
	return o
}

func (o NodeGroupAutoscalingPolicyModePtrOutput) Elem() NodeGroupAutoscalingPolicyModeOutput {
	return o.ApplyT(func(v *NodeGroupAutoscalingPolicyMode) NodeGroupAutoscalingPolicyMode {
		if v != nil {
			return *v
		}
		var ret NodeGroupAutoscalingPolicyMode
		return ret
	}).(NodeGroupAutoscalingPolicyModeOutput)
}

func (o NodeGroupAutoscalingPolicyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeGroupAutoscalingPolicyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NodeGroupAutoscalingPolicyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NodeGroupAutoscalingPolicyModeInput is an input type that accepts NodeGroupAutoscalingPolicyModeArgs and NodeGroupAutoscalingPolicyModeOutput values.
// You can construct a concrete instance of `NodeGroupAutoscalingPolicyModeInput` via:
//
//          NodeGroupAutoscalingPolicyModeArgs{...}
type NodeGroupAutoscalingPolicyModeInput interface {
	pulumi.Input

	ToNodeGroupAutoscalingPolicyModeOutput() NodeGroupAutoscalingPolicyModeOutput
	ToNodeGroupAutoscalingPolicyModeOutputWithContext(context.Context) NodeGroupAutoscalingPolicyModeOutput
}

var nodeGroupAutoscalingPolicyModePtrType = reflect.TypeOf((**NodeGroupAutoscalingPolicyMode)(nil)).Elem()

type NodeGroupAutoscalingPolicyModePtrInput interface {
	pulumi.Input

	ToNodeGroupAutoscalingPolicyModePtrOutput() NodeGroupAutoscalingPolicyModePtrOutput
	ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(context.Context) NodeGroupAutoscalingPolicyModePtrOutput
}

type nodeGroupAutoscalingPolicyModePtr string

func NodeGroupAutoscalingPolicyModePtr(v string) NodeGroupAutoscalingPolicyModePtrInput {
	return (*nodeGroupAutoscalingPolicyModePtr)(&v)
}

func (*nodeGroupAutoscalingPolicyModePtr) ElementType() reflect.Type {
	return nodeGroupAutoscalingPolicyModePtrType
}

func (in *nodeGroupAutoscalingPolicyModePtr) ToNodeGroupAutoscalingPolicyModePtrOutput() NodeGroupAutoscalingPolicyModePtrOutput {
	return pulumi.ToOutput(in).(NodeGroupAutoscalingPolicyModePtrOutput)
}

func (in *nodeGroupAutoscalingPolicyModePtr) ToNodeGroupAutoscalingPolicyModePtrOutputWithContext(ctx context.Context) NodeGroupAutoscalingPolicyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NodeGroupAutoscalingPolicyModePtrOutput)
}

// Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies.
type NodeGroupMaintenancePolicy string

const (
	// Allow the node and corresponding instances to retain default maintenance behavior.
	NodeGroupMaintenancePolicyDefault                      = NodeGroupMaintenancePolicy("DEFAULT")
	NodeGroupMaintenancePolicyMaintenancePolicyUnspecified = NodeGroupMaintenancePolicy("MAINTENANCE_POLICY_UNSPECIFIED")
	// When maintenance must be done on a node, the instances on that node will be moved to other nodes in the group. Instances with onHostMaintenance = MIGRATE will live migrate to their destinations while instances with onHostMaintenance = TERMINATE will terminate and then restart on their destination nodes if automaticRestart = true.
	NodeGroupMaintenancePolicyMigrateWithinNodeGroup = NodeGroupMaintenancePolicy("MIGRATE_WITHIN_NODE_GROUP")
	// Instances in this group will restart on the same node when maintenance has completed. Instances must have onHostMaintenance = TERMINATE, and they will only restart if automaticRestart = true.
	NodeGroupMaintenancePolicyRestartInPlace = NodeGroupMaintenancePolicy("RESTART_IN_PLACE")
)

func (NodeGroupMaintenancePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupMaintenancePolicy)(nil)).Elem()
}

func (e NodeGroupMaintenancePolicy) ToNodeGroupMaintenancePolicyOutput() NodeGroupMaintenancePolicyOutput {
	return pulumi.ToOutput(e).(NodeGroupMaintenancePolicyOutput)
}

func (e NodeGroupMaintenancePolicy) ToNodeGroupMaintenancePolicyOutputWithContext(ctx context.Context) NodeGroupMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NodeGroupMaintenancePolicyOutput)
}

func (e NodeGroupMaintenancePolicy) ToNodeGroupMaintenancePolicyPtrOutput() NodeGroupMaintenancePolicyPtrOutput {
	return e.ToNodeGroupMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (e NodeGroupMaintenancePolicy) ToNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodeGroupMaintenancePolicyPtrOutput {
	return NodeGroupMaintenancePolicy(e).ToNodeGroupMaintenancePolicyOutputWithContext(ctx).ToNodeGroupMaintenancePolicyPtrOutputWithContext(ctx)
}

func (e NodeGroupMaintenancePolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeGroupMaintenancePolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeGroupMaintenancePolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NodeGroupMaintenancePolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NodeGroupMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (NodeGroupMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupMaintenancePolicy)(nil)).Elem()
}

func (o NodeGroupMaintenancePolicyOutput) ToNodeGroupMaintenancePolicyOutput() NodeGroupMaintenancePolicyOutput {
	return o
}

func (o NodeGroupMaintenancePolicyOutput) ToNodeGroupMaintenancePolicyOutputWithContext(ctx context.Context) NodeGroupMaintenancePolicyOutput {
	return o
}

func (o NodeGroupMaintenancePolicyOutput) ToNodeGroupMaintenancePolicyPtrOutput() NodeGroupMaintenancePolicyPtrOutput {
	return o.ToNodeGroupMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o NodeGroupMaintenancePolicyOutput) ToNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodeGroupMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupMaintenancePolicy) *NodeGroupMaintenancePolicy {
		return &v
	}).(NodeGroupMaintenancePolicyPtrOutput)
}

func (o NodeGroupMaintenancePolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NodeGroupMaintenancePolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeGroupMaintenancePolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NodeGroupMaintenancePolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeGroupMaintenancePolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeGroupMaintenancePolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NodeGroupMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (NodeGroupMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupMaintenancePolicy)(nil)).Elem()
}

func (o NodeGroupMaintenancePolicyPtrOutput) ToNodeGroupMaintenancePolicyPtrOutput() NodeGroupMaintenancePolicyPtrOutput {
	return o
}

func (o NodeGroupMaintenancePolicyPtrOutput) ToNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodeGroupMaintenancePolicyPtrOutput {
	return o
}

func (o NodeGroupMaintenancePolicyPtrOutput) Elem() NodeGroupMaintenancePolicyOutput {
	return o.ApplyT(func(v *NodeGroupMaintenancePolicy) NodeGroupMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret NodeGroupMaintenancePolicy
		return ret
	}).(NodeGroupMaintenancePolicyOutput)
}

func (o NodeGroupMaintenancePolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeGroupMaintenancePolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NodeGroupMaintenancePolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NodeGroupMaintenancePolicyInput is an input type that accepts NodeGroupMaintenancePolicyArgs and NodeGroupMaintenancePolicyOutput values.
// You can construct a concrete instance of `NodeGroupMaintenancePolicyInput` via:
//
//          NodeGroupMaintenancePolicyArgs{...}
type NodeGroupMaintenancePolicyInput interface {
	pulumi.Input

	ToNodeGroupMaintenancePolicyOutput() NodeGroupMaintenancePolicyOutput
	ToNodeGroupMaintenancePolicyOutputWithContext(context.Context) NodeGroupMaintenancePolicyOutput
}

var nodeGroupMaintenancePolicyPtrType = reflect.TypeOf((**NodeGroupMaintenancePolicy)(nil)).Elem()

type NodeGroupMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToNodeGroupMaintenancePolicyPtrOutput() NodeGroupMaintenancePolicyPtrOutput
	ToNodeGroupMaintenancePolicyPtrOutputWithContext(context.Context) NodeGroupMaintenancePolicyPtrOutput
}

type nodeGroupMaintenancePolicyPtr string

func NodeGroupMaintenancePolicyPtr(v string) NodeGroupMaintenancePolicyPtrInput {
	return (*nodeGroupMaintenancePolicyPtr)(&v)
}

func (*nodeGroupMaintenancePolicyPtr) ElementType() reflect.Type {
	return nodeGroupMaintenancePolicyPtrType
}

func (in *nodeGroupMaintenancePolicyPtr) ToNodeGroupMaintenancePolicyPtrOutput() NodeGroupMaintenancePolicyPtrOutput {
	return pulumi.ToOutput(in).(NodeGroupMaintenancePolicyPtrOutput)
}

func (in *nodeGroupMaintenancePolicyPtr) ToNodeGroupMaintenancePolicyPtrOutputWithContext(ctx context.Context) NodeGroupMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NodeGroupMaintenancePolicyPtrOutput)
}

type NodeGroupStatus string

const (
	NodeGroupStatusCreating = NodeGroupStatus("CREATING")
	NodeGroupStatusDeleting = NodeGroupStatus("DELETING")
	NodeGroupStatusInvalid  = NodeGroupStatus("INVALID")
	NodeGroupStatusReady    = NodeGroupStatus("READY")
)

// CPU overcommit.
type NodeTemplateCpuOvercommitType string

const (
	NodeTemplateCpuOvercommitTypeCpuOvercommitTypeUnspecified = NodeTemplateCpuOvercommitType("CPU_OVERCOMMIT_TYPE_UNSPECIFIED")
	NodeTemplateCpuOvercommitTypeEnabled                      = NodeTemplateCpuOvercommitType("ENABLED")
	NodeTemplateCpuOvercommitTypeNone                         = NodeTemplateCpuOvercommitType("NONE")
)

func (NodeTemplateCpuOvercommitType) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateCpuOvercommitType)(nil)).Elem()
}

func (e NodeTemplateCpuOvercommitType) ToNodeTemplateCpuOvercommitTypeOutput() NodeTemplateCpuOvercommitTypeOutput {
	return pulumi.ToOutput(e).(NodeTemplateCpuOvercommitTypeOutput)
}

func (e NodeTemplateCpuOvercommitType) ToNodeTemplateCpuOvercommitTypeOutputWithContext(ctx context.Context) NodeTemplateCpuOvercommitTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NodeTemplateCpuOvercommitTypeOutput)
}

func (e NodeTemplateCpuOvercommitType) ToNodeTemplateCpuOvercommitTypePtrOutput() NodeTemplateCpuOvercommitTypePtrOutput {
	return e.ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(context.Background())
}

func (e NodeTemplateCpuOvercommitType) ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(ctx context.Context) NodeTemplateCpuOvercommitTypePtrOutput {
	return NodeTemplateCpuOvercommitType(e).ToNodeTemplateCpuOvercommitTypeOutputWithContext(ctx).ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(ctx)
}

func (e NodeTemplateCpuOvercommitType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeTemplateCpuOvercommitType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NodeTemplateCpuOvercommitType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NodeTemplateCpuOvercommitType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NodeTemplateCpuOvercommitTypeOutput struct{ *pulumi.OutputState }

func (NodeTemplateCpuOvercommitTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateCpuOvercommitType)(nil)).Elem()
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToNodeTemplateCpuOvercommitTypeOutput() NodeTemplateCpuOvercommitTypeOutput {
	return o
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToNodeTemplateCpuOvercommitTypeOutputWithContext(ctx context.Context) NodeTemplateCpuOvercommitTypeOutput {
	return o
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToNodeTemplateCpuOvercommitTypePtrOutput() NodeTemplateCpuOvercommitTypePtrOutput {
	return o.ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(context.Background())
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(ctx context.Context) NodeTemplateCpuOvercommitTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateCpuOvercommitType) *NodeTemplateCpuOvercommitType {
		return &v
	}).(NodeTemplateCpuOvercommitTypePtrOutput)
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeTemplateCpuOvercommitType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeTemplateCpuOvercommitTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NodeTemplateCpuOvercommitType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NodeTemplateCpuOvercommitTypePtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateCpuOvercommitTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateCpuOvercommitType)(nil)).Elem()
}

func (o NodeTemplateCpuOvercommitTypePtrOutput) ToNodeTemplateCpuOvercommitTypePtrOutput() NodeTemplateCpuOvercommitTypePtrOutput {
	return o
}

func (o NodeTemplateCpuOvercommitTypePtrOutput) ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(ctx context.Context) NodeTemplateCpuOvercommitTypePtrOutput {
	return o
}

func (o NodeTemplateCpuOvercommitTypePtrOutput) Elem() NodeTemplateCpuOvercommitTypeOutput {
	return o.ApplyT(func(v *NodeTemplateCpuOvercommitType) NodeTemplateCpuOvercommitType {
		if v != nil {
			return *v
		}
		var ret NodeTemplateCpuOvercommitType
		return ret
	}).(NodeTemplateCpuOvercommitTypeOutput)
}

func (o NodeTemplateCpuOvercommitTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NodeTemplateCpuOvercommitTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NodeTemplateCpuOvercommitType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NodeTemplateCpuOvercommitTypeInput is an input type that accepts NodeTemplateCpuOvercommitTypeArgs and NodeTemplateCpuOvercommitTypeOutput values.
// You can construct a concrete instance of `NodeTemplateCpuOvercommitTypeInput` via:
//
//          NodeTemplateCpuOvercommitTypeArgs{...}
type NodeTemplateCpuOvercommitTypeInput interface {
	pulumi.Input

	ToNodeTemplateCpuOvercommitTypeOutput() NodeTemplateCpuOvercommitTypeOutput
	ToNodeTemplateCpuOvercommitTypeOutputWithContext(context.Context) NodeTemplateCpuOvercommitTypeOutput
}

var nodeTemplateCpuOvercommitTypePtrType = reflect.TypeOf((**NodeTemplateCpuOvercommitType)(nil)).Elem()

type NodeTemplateCpuOvercommitTypePtrInput interface {
	pulumi.Input

	ToNodeTemplateCpuOvercommitTypePtrOutput() NodeTemplateCpuOvercommitTypePtrOutput
	ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(context.Context) NodeTemplateCpuOvercommitTypePtrOutput
}

type nodeTemplateCpuOvercommitTypePtr string

func NodeTemplateCpuOvercommitTypePtr(v string) NodeTemplateCpuOvercommitTypePtrInput {
	return (*nodeTemplateCpuOvercommitTypePtr)(&v)
}

func (*nodeTemplateCpuOvercommitTypePtr) ElementType() reflect.Type {
	return nodeTemplateCpuOvercommitTypePtrType
}

func (in *nodeTemplateCpuOvercommitTypePtr) ToNodeTemplateCpuOvercommitTypePtrOutput() NodeTemplateCpuOvercommitTypePtrOutput {
	return pulumi.ToOutput(in).(NodeTemplateCpuOvercommitTypePtrOutput)
}

func (in *nodeTemplateCpuOvercommitTypePtr) ToNodeTemplateCpuOvercommitTypePtrOutputWithContext(ctx context.Context) NodeTemplateCpuOvercommitTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NodeTemplateCpuOvercommitTypePtrOutput)
}

// The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. This field can be set only at resource creation time.
type OrganizationSecurityPolicyType string

const (
	OrganizationSecurityPolicyTypeCloudArmor        = OrganizationSecurityPolicyType("CLOUD_ARMOR")
	OrganizationSecurityPolicyTypeCloudArmorEdge    = OrganizationSecurityPolicyType("CLOUD_ARMOR_EDGE")
	OrganizationSecurityPolicyTypeCloudArmorNetwork = OrganizationSecurityPolicyType("CLOUD_ARMOR_NETWORK")
	OrganizationSecurityPolicyTypeFirewall          = OrganizationSecurityPolicyType("FIREWALL")
)

func (OrganizationSecurityPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSecurityPolicyType)(nil)).Elem()
}

func (e OrganizationSecurityPolicyType) ToOrganizationSecurityPolicyTypeOutput() OrganizationSecurityPolicyTypeOutput {
	return pulumi.ToOutput(e).(OrganizationSecurityPolicyTypeOutput)
}

func (e OrganizationSecurityPolicyType) ToOrganizationSecurityPolicyTypeOutputWithContext(ctx context.Context) OrganizationSecurityPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OrganizationSecurityPolicyTypeOutput)
}

func (e OrganizationSecurityPolicyType) ToOrganizationSecurityPolicyTypePtrOutput() OrganizationSecurityPolicyTypePtrOutput {
	return e.ToOrganizationSecurityPolicyTypePtrOutputWithContext(context.Background())
}

func (e OrganizationSecurityPolicyType) ToOrganizationSecurityPolicyTypePtrOutputWithContext(ctx context.Context) OrganizationSecurityPolicyTypePtrOutput {
	return OrganizationSecurityPolicyType(e).ToOrganizationSecurityPolicyTypeOutputWithContext(ctx).ToOrganizationSecurityPolicyTypePtrOutputWithContext(ctx)
}

func (e OrganizationSecurityPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationSecurityPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OrganizationSecurityPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OrganizationSecurityPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OrganizationSecurityPolicyTypeOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSecurityPolicyType)(nil)).Elem()
}

func (o OrganizationSecurityPolicyTypeOutput) ToOrganizationSecurityPolicyTypeOutput() OrganizationSecurityPolicyTypeOutput {
	return o
}

func (o OrganizationSecurityPolicyTypeOutput) ToOrganizationSecurityPolicyTypeOutputWithContext(ctx context.Context) OrganizationSecurityPolicyTypeOutput {
	return o
}

func (o OrganizationSecurityPolicyTypeOutput) ToOrganizationSecurityPolicyTypePtrOutput() OrganizationSecurityPolicyTypePtrOutput {
	return o.ToOrganizationSecurityPolicyTypePtrOutputWithContext(context.Background())
}

func (o OrganizationSecurityPolicyTypeOutput) ToOrganizationSecurityPolicyTypePtrOutputWithContext(ctx context.Context) OrganizationSecurityPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationSecurityPolicyType) *OrganizationSecurityPolicyType {
		return &v
	}).(OrganizationSecurityPolicyTypePtrOutput)
}

func (o OrganizationSecurityPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OrganizationSecurityPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrganizationSecurityPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OrganizationSecurityPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrganizationSecurityPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OrganizationSecurityPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OrganizationSecurityPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (OrganizationSecurityPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationSecurityPolicyType)(nil)).Elem()
}

func (o OrganizationSecurityPolicyTypePtrOutput) ToOrganizationSecurityPolicyTypePtrOutput() OrganizationSecurityPolicyTypePtrOutput {
	return o
}

func (o OrganizationSecurityPolicyTypePtrOutput) ToOrganizationSecurityPolicyTypePtrOutputWithContext(ctx context.Context) OrganizationSecurityPolicyTypePtrOutput {
	return o
}

func (o OrganizationSecurityPolicyTypePtrOutput) Elem() OrganizationSecurityPolicyTypeOutput {
	return o.ApplyT(func(v *OrganizationSecurityPolicyType) OrganizationSecurityPolicyType {
		if v != nil {
			return *v
		}
		var ret OrganizationSecurityPolicyType
		return ret
	}).(OrganizationSecurityPolicyTypeOutput)
}

func (o OrganizationSecurityPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OrganizationSecurityPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OrganizationSecurityPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OrganizationSecurityPolicyTypeInput is an input type that accepts OrganizationSecurityPolicyTypeArgs and OrganizationSecurityPolicyTypeOutput values.
// You can construct a concrete instance of `OrganizationSecurityPolicyTypeInput` via:
//
//          OrganizationSecurityPolicyTypeArgs{...}
type OrganizationSecurityPolicyTypeInput interface {
	pulumi.Input

	ToOrganizationSecurityPolicyTypeOutput() OrganizationSecurityPolicyTypeOutput
	ToOrganizationSecurityPolicyTypeOutputWithContext(context.Context) OrganizationSecurityPolicyTypeOutput
}

var organizationSecurityPolicyTypePtrType = reflect.TypeOf((**OrganizationSecurityPolicyType)(nil)).Elem()

type OrganizationSecurityPolicyTypePtrInput interface {
	pulumi.Input

	ToOrganizationSecurityPolicyTypePtrOutput() OrganizationSecurityPolicyTypePtrOutput
	ToOrganizationSecurityPolicyTypePtrOutputWithContext(context.Context) OrganizationSecurityPolicyTypePtrOutput
}

type organizationSecurityPolicyTypePtr string

func OrganizationSecurityPolicyTypePtr(v string) OrganizationSecurityPolicyTypePtrInput {
	return (*organizationSecurityPolicyTypePtr)(&v)
}

func (*organizationSecurityPolicyTypePtr) ElementType() reflect.Type {
	return organizationSecurityPolicyTypePtrType
}

func (in *organizationSecurityPolicyTypePtr) ToOrganizationSecurityPolicyTypePtrOutput() OrganizationSecurityPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(OrganizationSecurityPolicyTypePtrOutput)
}

func (in *organizationSecurityPolicyTypePtr) ToOrganizationSecurityPolicyTypePtrOutputWithContext(ctx context.Context) OrganizationSecurityPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OrganizationSecurityPolicyTypePtrOutput)
}

// Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE.
type PacketMirroringEnable string

const (
	PacketMirroringEnableFalse = PacketMirroringEnable("FALSE")
	PacketMirroringEnableTrue  = PacketMirroringEnable("TRUE")
)

func (PacketMirroringEnable) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketMirroringEnable)(nil)).Elem()
}

func (e PacketMirroringEnable) ToPacketMirroringEnableOutput() PacketMirroringEnableOutput {
	return pulumi.ToOutput(e).(PacketMirroringEnableOutput)
}

func (e PacketMirroringEnable) ToPacketMirroringEnableOutputWithContext(ctx context.Context) PacketMirroringEnableOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PacketMirroringEnableOutput)
}

func (e PacketMirroringEnable) ToPacketMirroringEnablePtrOutput() PacketMirroringEnablePtrOutput {
	return e.ToPacketMirroringEnablePtrOutputWithContext(context.Background())
}

func (e PacketMirroringEnable) ToPacketMirroringEnablePtrOutputWithContext(ctx context.Context) PacketMirroringEnablePtrOutput {
	return PacketMirroringEnable(e).ToPacketMirroringEnableOutputWithContext(ctx).ToPacketMirroringEnablePtrOutputWithContext(ctx)
}

func (e PacketMirroringEnable) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PacketMirroringEnable) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PacketMirroringEnable) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PacketMirroringEnable) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PacketMirroringEnableOutput struct{ *pulumi.OutputState }

func (PacketMirroringEnableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketMirroringEnable)(nil)).Elem()
}

func (o PacketMirroringEnableOutput) ToPacketMirroringEnableOutput() PacketMirroringEnableOutput {
	return o
}

func (o PacketMirroringEnableOutput) ToPacketMirroringEnableOutputWithContext(ctx context.Context) PacketMirroringEnableOutput {
	return o
}

func (o PacketMirroringEnableOutput) ToPacketMirroringEnablePtrOutput() PacketMirroringEnablePtrOutput {
	return o.ToPacketMirroringEnablePtrOutputWithContext(context.Background())
}

func (o PacketMirroringEnableOutput) ToPacketMirroringEnablePtrOutputWithContext(ctx context.Context) PacketMirroringEnablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PacketMirroringEnable) *PacketMirroringEnable {
		return &v
	}).(PacketMirroringEnablePtrOutput)
}

func (o PacketMirroringEnableOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PacketMirroringEnableOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PacketMirroringEnable) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PacketMirroringEnableOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PacketMirroringEnableOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PacketMirroringEnable) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PacketMirroringEnablePtrOutput struct{ *pulumi.OutputState }

func (PacketMirroringEnablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketMirroringEnable)(nil)).Elem()
}

func (o PacketMirroringEnablePtrOutput) ToPacketMirroringEnablePtrOutput() PacketMirroringEnablePtrOutput {
	return o
}

func (o PacketMirroringEnablePtrOutput) ToPacketMirroringEnablePtrOutputWithContext(ctx context.Context) PacketMirroringEnablePtrOutput {
	return o
}

func (o PacketMirroringEnablePtrOutput) Elem() PacketMirroringEnableOutput {
	return o.ApplyT(func(v *PacketMirroringEnable) PacketMirroringEnable {
		if v != nil {
			return *v
		}
		var ret PacketMirroringEnable
		return ret
	}).(PacketMirroringEnableOutput)
}

func (o PacketMirroringEnablePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PacketMirroringEnablePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PacketMirroringEnable) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PacketMirroringEnableInput is an input type that accepts PacketMirroringEnableArgs and PacketMirroringEnableOutput values.
// You can construct a concrete instance of `PacketMirroringEnableInput` via:
//
//          PacketMirroringEnableArgs{...}
type PacketMirroringEnableInput interface {
	pulumi.Input

	ToPacketMirroringEnableOutput() PacketMirroringEnableOutput
	ToPacketMirroringEnableOutputWithContext(context.Context) PacketMirroringEnableOutput
}

var packetMirroringEnablePtrType = reflect.TypeOf((**PacketMirroringEnable)(nil)).Elem()

type PacketMirroringEnablePtrInput interface {
	pulumi.Input

	ToPacketMirroringEnablePtrOutput() PacketMirroringEnablePtrOutput
	ToPacketMirroringEnablePtrOutputWithContext(context.Context) PacketMirroringEnablePtrOutput
}

type packetMirroringEnablePtr string

func PacketMirroringEnablePtr(v string) PacketMirroringEnablePtrInput {
	return (*packetMirroringEnablePtr)(&v)
}

func (*packetMirroringEnablePtr) ElementType() reflect.Type {
	return packetMirroringEnablePtrType
}

func (in *packetMirroringEnablePtr) ToPacketMirroringEnablePtrOutput() PacketMirroringEnablePtrOutput {
	return pulumi.ToOutput(in).(PacketMirroringEnablePtrOutput)
}

func (in *packetMirroringEnablePtr) ToPacketMirroringEnablePtrOutputWithContext(ctx context.Context) PacketMirroringEnablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PacketMirroringEnablePtrOutput)
}

// Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default is BOTH.
type PacketMirroringFilterDirection string

const (
	// Default, both directions are mirrored.
	PacketMirroringFilterDirectionBoth = PacketMirroringFilterDirection("BOTH")
	// Only egress traffic is mirrored.
	PacketMirroringFilterDirectionEgress = PacketMirroringFilterDirection("EGRESS")
	// Only ingress traffic is mirrored.
	PacketMirroringFilterDirectionIngress = PacketMirroringFilterDirection("INGRESS")
)

func (PacketMirroringFilterDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketMirroringFilterDirection)(nil)).Elem()
}

func (e PacketMirroringFilterDirection) ToPacketMirroringFilterDirectionOutput() PacketMirroringFilterDirectionOutput {
	return pulumi.ToOutput(e).(PacketMirroringFilterDirectionOutput)
}

func (e PacketMirroringFilterDirection) ToPacketMirroringFilterDirectionOutputWithContext(ctx context.Context) PacketMirroringFilterDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PacketMirroringFilterDirectionOutput)
}

func (e PacketMirroringFilterDirection) ToPacketMirroringFilterDirectionPtrOutput() PacketMirroringFilterDirectionPtrOutput {
	return e.ToPacketMirroringFilterDirectionPtrOutputWithContext(context.Background())
}

func (e PacketMirroringFilterDirection) ToPacketMirroringFilterDirectionPtrOutputWithContext(ctx context.Context) PacketMirroringFilterDirectionPtrOutput {
	return PacketMirroringFilterDirection(e).ToPacketMirroringFilterDirectionOutputWithContext(ctx).ToPacketMirroringFilterDirectionPtrOutputWithContext(ctx)
}

func (e PacketMirroringFilterDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PacketMirroringFilterDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PacketMirroringFilterDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PacketMirroringFilterDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PacketMirroringFilterDirectionOutput struct{ *pulumi.OutputState }

func (PacketMirroringFilterDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketMirroringFilterDirection)(nil)).Elem()
}

func (o PacketMirroringFilterDirectionOutput) ToPacketMirroringFilterDirectionOutput() PacketMirroringFilterDirectionOutput {
	return o
}

func (o PacketMirroringFilterDirectionOutput) ToPacketMirroringFilterDirectionOutputWithContext(ctx context.Context) PacketMirroringFilterDirectionOutput {
	return o
}

func (o PacketMirroringFilterDirectionOutput) ToPacketMirroringFilterDirectionPtrOutput() PacketMirroringFilterDirectionPtrOutput {
	return o.ToPacketMirroringFilterDirectionPtrOutputWithContext(context.Background())
}

func (o PacketMirroringFilterDirectionOutput) ToPacketMirroringFilterDirectionPtrOutputWithContext(ctx context.Context) PacketMirroringFilterDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PacketMirroringFilterDirection) *PacketMirroringFilterDirection {
		return &v
	}).(PacketMirroringFilterDirectionPtrOutput)
}

func (o PacketMirroringFilterDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PacketMirroringFilterDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PacketMirroringFilterDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PacketMirroringFilterDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PacketMirroringFilterDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PacketMirroringFilterDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PacketMirroringFilterDirectionPtrOutput struct{ *pulumi.OutputState }

func (PacketMirroringFilterDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketMirroringFilterDirection)(nil)).Elem()
}

func (o PacketMirroringFilterDirectionPtrOutput) ToPacketMirroringFilterDirectionPtrOutput() PacketMirroringFilterDirectionPtrOutput {
	return o
}

func (o PacketMirroringFilterDirectionPtrOutput) ToPacketMirroringFilterDirectionPtrOutputWithContext(ctx context.Context) PacketMirroringFilterDirectionPtrOutput {
	return o
}

func (o PacketMirroringFilterDirectionPtrOutput) Elem() PacketMirroringFilterDirectionOutput {
	return o.ApplyT(func(v *PacketMirroringFilterDirection) PacketMirroringFilterDirection {
		if v != nil {
			return *v
		}
		var ret PacketMirroringFilterDirection
		return ret
	}).(PacketMirroringFilterDirectionOutput)
}

func (o PacketMirroringFilterDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PacketMirroringFilterDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PacketMirroringFilterDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PacketMirroringFilterDirectionInput is an input type that accepts PacketMirroringFilterDirectionArgs and PacketMirroringFilterDirectionOutput values.
// You can construct a concrete instance of `PacketMirroringFilterDirectionInput` via:
//
//          PacketMirroringFilterDirectionArgs{...}
type PacketMirroringFilterDirectionInput interface {
	pulumi.Input

	ToPacketMirroringFilterDirectionOutput() PacketMirroringFilterDirectionOutput
	ToPacketMirroringFilterDirectionOutputWithContext(context.Context) PacketMirroringFilterDirectionOutput
}

var packetMirroringFilterDirectionPtrType = reflect.TypeOf((**PacketMirroringFilterDirection)(nil)).Elem()

type PacketMirroringFilterDirectionPtrInput interface {
	pulumi.Input

	ToPacketMirroringFilterDirectionPtrOutput() PacketMirroringFilterDirectionPtrOutput
	ToPacketMirroringFilterDirectionPtrOutputWithContext(context.Context) PacketMirroringFilterDirectionPtrOutput
}

type packetMirroringFilterDirectionPtr string

func PacketMirroringFilterDirectionPtr(v string) PacketMirroringFilterDirectionPtrInput {
	return (*packetMirroringFilterDirectionPtr)(&v)
}

func (*packetMirroringFilterDirectionPtr) ElementType() reflect.Type {
	return packetMirroringFilterDirectionPtrType
}

func (in *packetMirroringFilterDirectionPtr) ToPacketMirroringFilterDirectionPtrOutput() PacketMirroringFilterDirectionPtrOutput {
	return pulumi.ToOutput(in).(PacketMirroringFilterDirectionPtrOutput)
}

func (in *packetMirroringFilterDirectionPtr) ToPacketMirroringFilterDirectionPtrOutputWithContext(ctx context.Context) PacketMirroringFilterDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PacketMirroringFilterDirectionPtrOutput)
}

// Specifies how child public delegated prefix will be scoped. It could be one of following values: - `REGIONAL`: The public delegated prefix is regional only. The provisioning will take a few minutes. - `GLOBAL`: The public delegated prefix is global only. The provisioning will take ~4 weeks. - `GLOBAL_AND_REGIONAL` [output only]: The public delegated prefixes is BYOIP V1 legacy prefix. This is output only value and no longer supported in BYOIP V2.
type PublicAdvertisedPrefixPdpScope string

const (
	// The public delegated prefix is global only. The provisioning will take ~4 weeks.
	PublicAdvertisedPrefixPdpScopeGlobal = PublicAdvertisedPrefixPdpScope("GLOBAL")
	// The public delegated prefixes is BYOIP V1 legacy prefix. This is output only value and no longer supported in BYOIP V2.
	PublicAdvertisedPrefixPdpScopeGlobalAndRegional = PublicAdvertisedPrefixPdpScope("GLOBAL_AND_REGIONAL")
	// The public delegated prefix is regional only. The provisioning will take a few minutes.
	PublicAdvertisedPrefixPdpScopeRegional = PublicAdvertisedPrefixPdpScope("REGIONAL")
)

func (PublicAdvertisedPrefixPdpScope) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAdvertisedPrefixPdpScope)(nil)).Elem()
}

func (e PublicAdvertisedPrefixPdpScope) ToPublicAdvertisedPrefixPdpScopeOutput() PublicAdvertisedPrefixPdpScopeOutput {
	return pulumi.ToOutput(e).(PublicAdvertisedPrefixPdpScopeOutput)
}

func (e PublicAdvertisedPrefixPdpScope) ToPublicAdvertisedPrefixPdpScopeOutputWithContext(ctx context.Context) PublicAdvertisedPrefixPdpScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicAdvertisedPrefixPdpScopeOutput)
}

func (e PublicAdvertisedPrefixPdpScope) ToPublicAdvertisedPrefixPdpScopePtrOutput() PublicAdvertisedPrefixPdpScopePtrOutput {
	return e.ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(context.Background())
}

func (e PublicAdvertisedPrefixPdpScope) ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixPdpScopePtrOutput {
	return PublicAdvertisedPrefixPdpScope(e).ToPublicAdvertisedPrefixPdpScopeOutputWithContext(ctx).ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(ctx)
}

func (e PublicAdvertisedPrefixPdpScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicAdvertisedPrefixPdpScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicAdvertisedPrefixPdpScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicAdvertisedPrefixPdpScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicAdvertisedPrefixPdpScopeOutput struct{ *pulumi.OutputState }

func (PublicAdvertisedPrefixPdpScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAdvertisedPrefixPdpScope)(nil)).Elem()
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToPublicAdvertisedPrefixPdpScopeOutput() PublicAdvertisedPrefixPdpScopeOutput {
	return o
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToPublicAdvertisedPrefixPdpScopeOutputWithContext(ctx context.Context) PublicAdvertisedPrefixPdpScopeOutput {
	return o
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToPublicAdvertisedPrefixPdpScopePtrOutput() PublicAdvertisedPrefixPdpScopePtrOutput {
	return o.ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixPdpScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicAdvertisedPrefixPdpScope) *PublicAdvertisedPrefixPdpScope {
		return &v
	}).(PublicAdvertisedPrefixPdpScopePtrOutput)
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicAdvertisedPrefixPdpScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixPdpScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicAdvertisedPrefixPdpScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicAdvertisedPrefixPdpScopePtrOutput struct{ *pulumi.OutputState }

func (PublicAdvertisedPrefixPdpScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAdvertisedPrefixPdpScope)(nil)).Elem()
}

func (o PublicAdvertisedPrefixPdpScopePtrOutput) ToPublicAdvertisedPrefixPdpScopePtrOutput() PublicAdvertisedPrefixPdpScopePtrOutput {
	return o
}

func (o PublicAdvertisedPrefixPdpScopePtrOutput) ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixPdpScopePtrOutput {
	return o
}

func (o PublicAdvertisedPrefixPdpScopePtrOutput) Elem() PublicAdvertisedPrefixPdpScopeOutput {
	return o.ApplyT(func(v *PublicAdvertisedPrefixPdpScope) PublicAdvertisedPrefixPdpScope {
		if v != nil {
			return *v
		}
		var ret PublicAdvertisedPrefixPdpScope
		return ret
	}).(PublicAdvertisedPrefixPdpScopeOutput)
}

func (o PublicAdvertisedPrefixPdpScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixPdpScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicAdvertisedPrefixPdpScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicAdvertisedPrefixPdpScopeInput is an input type that accepts PublicAdvertisedPrefixPdpScopeArgs and PublicAdvertisedPrefixPdpScopeOutput values.
// You can construct a concrete instance of `PublicAdvertisedPrefixPdpScopeInput` via:
//
//          PublicAdvertisedPrefixPdpScopeArgs{...}
type PublicAdvertisedPrefixPdpScopeInput interface {
	pulumi.Input

	ToPublicAdvertisedPrefixPdpScopeOutput() PublicAdvertisedPrefixPdpScopeOutput
	ToPublicAdvertisedPrefixPdpScopeOutputWithContext(context.Context) PublicAdvertisedPrefixPdpScopeOutput
}

var publicAdvertisedPrefixPdpScopePtrType = reflect.TypeOf((**PublicAdvertisedPrefixPdpScope)(nil)).Elem()

type PublicAdvertisedPrefixPdpScopePtrInput interface {
	pulumi.Input

	ToPublicAdvertisedPrefixPdpScopePtrOutput() PublicAdvertisedPrefixPdpScopePtrOutput
	ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(context.Context) PublicAdvertisedPrefixPdpScopePtrOutput
}

type publicAdvertisedPrefixPdpScopePtr string

func PublicAdvertisedPrefixPdpScopePtr(v string) PublicAdvertisedPrefixPdpScopePtrInput {
	return (*publicAdvertisedPrefixPdpScopePtr)(&v)
}

func (*publicAdvertisedPrefixPdpScopePtr) ElementType() reflect.Type {
	return publicAdvertisedPrefixPdpScopePtrType
}

func (in *publicAdvertisedPrefixPdpScopePtr) ToPublicAdvertisedPrefixPdpScopePtrOutput() PublicAdvertisedPrefixPdpScopePtrOutput {
	return pulumi.ToOutput(in).(PublicAdvertisedPrefixPdpScopePtrOutput)
}

func (in *publicAdvertisedPrefixPdpScopePtr) ToPublicAdvertisedPrefixPdpScopePtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixPdpScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicAdvertisedPrefixPdpScopePtrOutput)
}

// The status of the public advertised prefix. Possible values include: - `INITIAL`: RPKI validation is complete. - `PTR_CONFIGURED`: User has configured the PTR. - `VALIDATED`: Reverse DNS lookup is successful. - `REVERSE_DNS_LOOKUP_FAILED`: Reverse DNS lookup failed. - `PREFIX_CONFIGURATION_IN_PROGRESS`: The prefix is being configured. - `PREFIX_CONFIGURATION_COMPLETE`: The prefix is fully configured. - `PREFIX_REMOVAL_IN_PROGRESS`: The prefix is being removed.
type PublicAdvertisedPrefixStatus string

const (
	// The prefix is announced to Internet.
	PublicAdvertisedPrefixStatusAnnouncedToInternet = PublicAdvertisedPrefixStatus("ANNOUNCED_TO_INTERNET")
	// RPKI validation is complete.
	PublicAdvertisedPrefixStatusInitial = PublicAdvertisedPrefixStatus("INITIAL")
	// The prefix is fully configured.
	PublicAdvertisedPrefixStatusPrefixConfigurationComplete = PublicAdvertisedPrefixStatus("PREFIX_CONFIGURATION_COMPLETE")
	// The prefix is being configured.
	PublicAdvertisedPrefixStatusPrefixConfigurationInProgress = PublicAdvertisedPrefixStatus("PREFIX_CONFIGURATION_IN_PROGRESS")
	// The prefix is being removed.
	PublicAdvertisedPrefixStatusPrefixRemovalInProgress = PublicAdvertisedPrefixStatus("PREFIX_REMOVAL_IN_PROGRESS")
	// User has configured the PTR.
	PublicAdvertisedPrefixStatusPtrConfigured = PublicAdvertisedPrefixStatus("PTR_CONFIGURED")
	// The prefix is currently withdrawn but ready to be announced.
	PublicAdvertisedPrefixStatusReadyToAnnounce = PublicAdvertisedPrefixStatus("READY_TO_ANNOUNCE")
	// Reverse DNS lookup failed.
	PublicAdvertisedPrefixStatusReverseDnsLookupFailed = PublicAdvertisedPrefixStatus("REVERSE_DNS_LOOKUP_FAILED")
	// Reverse DNS lookup is successful.
	PublicAdvertisedPrefixStatusValidated = PublicAdvertisedPrefixStatus("VALIDATED")
)

func (PublicAdvertisedPrefixStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAdvertisedPrefixStatus)(nil)).Elem()
}

func (e PublicAdvertisedPrefixStatus) ToPublicAdvertisedPrefixStatusOutput() PublicAdvertisedPrefixStatusOutput {
	return pulumi.ToOutput(e).(PublicAdvertisedPrefixStatusOutput)
}

func (e PublicAdvertisedPrefixStatus) ToPublicAdvertisedPrefixStatusOutputWithContext(ctx context.Context) PublicAdvertisedPrefixStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicAdvertisedPrefixStatusOutput)
}

func (e PublicAdvertisedPrefixStatus) ToPublicAdvertisedPrefixStatusPtrOutput() PublicAdvertisedPrefixStatusPtrOutput {
	return e.ToPublicAdvertisedPrefixStatusPtrOutputWithContext(context.Background())
}

func (e PublicAdvertisedPrefixStatus) ToPublicAdvertisedPrefixStatusPtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixStatusPtrOutput {
	return PublicAdvertisedPrefixStatus(e).ToPublicAdvertisedPrefixStatusOutputWithContext(ctx).ToPublicAdvertisedPrefixStatusPtrOutputWithContext(ctx)
}

func (e PublicAdvertisedPrefixStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicAdvertisedPrefixStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicAdvertisedPrefixStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicAdvertisedPrefixStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicAdvertisedPrefixStatusOutput struct{ *pulumi.OutputState }

func (PublicAdvertisedPrefixStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAdvertisedPrefixStatus)(nil)).Elem()
}

func (o PublicAdvertisedPrefixStatusOutput) ToPublicAdvertisedPrefixStatusOutput() PublicAdvertisedPrefixStatusOutput {
	return o
}

func (o PublicAdvertisedPrefixStatusOutput) ToPublicAdvertisedPrefixStatusOutputWithContext(ctx context.Context) PublicAdvertisedPrefixStatusOutput {
	return o
}

func (o PublicAdvertisedPrefixStatusOutput) ToPublicAdvertisedPrefixStatusPtrOutput() PublicAdvertisedPrefixStatusPtrOutput {
	return o.ToPublicAdvertisedPrefixStatusPtrOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixStatusOutput) ToPublicAdvertisedPrefixStatusPtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicAdvertisedPrefixStatus) *PublicAdvertisedPrefixStatus {
		return &v
	}).(PublicAdvertisedPrefixStatusPtrOutput)
}

func (o PublicAdvertisedPrefixStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicAdvertisedPrefixStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicAdvertisedPrefixStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicAdvertisedPrefixStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicAdvertisedPrefixStatusPtrOutput struct{ *pulumi.OutputState }

func (PublicAdvertisedPrefixStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicAdvertisedPrefixStatus)(nil)).Elem()
}

func (o PublicAdvertisedPrefixStatusPtrOutput) ToPublicAdvertisedPrefixStatusPtrOutput() PublicAdvertisedPrefixStatusPtrOutput {
	return o
}

func (o PublicAdvertisedPrefixStatusPtrOutput) ToPublicAdvertisedPrefixStatusPtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixStatusPtrOutput {
	return o
}

func (o PublicAdvertisedPrefixStatusPtrOutput) Elem() PublicAdvertisedPrefixStatusOutput {
	return o.ApplyT(func(v *PublicAdvertisedPrefixStatus) PublicAdvertisedPrefixStatus {
		if v != nil {
			return *v
		}
		var ret PublicAdvertisedPrefixStatus
		return ret
	}).(PublicAdvertisedPrefixStatusOutput)
}

func (o PublicAdvertisedPrefixStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicAdvertisedPrefixStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicAdvertisedPrefixStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PublicAdvertisedPrefixStatusInput is an input type that accepts PublicAdvertisedPrefixStatusArgs and PublicAdvertisedPrefixStatusOutput values.
// You can construct a concrete instance of `PublicAdvertisedPrefixStatusInput` via:
//
//          PublicAdvertisedPrefixStatusArgs{...}
type PublicAdvertisedPrefixStatusInput interface {
	pulumi.Input

	ToPublicAdvertisedPrefixStatusOutput() PublicAdvertisedPrefixStatusOutput
	ToPublicAdvertisedPrefixStatusOutputWithContext(context.Context) PublicAdvertisedPrefixStatusOutput
}

var publicAdvertisedPrefixStatusPtrType = reflect.TypeOf((**PublicAdvertisedPrefixStatus)(nil)).Elem()

type PublicAdvertisedPrefixStatusPtrInput interface {
	pulumi.Input

	ToPublicAdvertisedPrefixStatusPtrOutput() PublicAdvertisedPrefixStatusPtrOutput
	ToPublicAdvertisedPrefixStatusPtrOutputWithContext(context.Context) PublicAdvertisedPrefixStatusPtrOutput
}

type publicAdvertisedPrefixStatusPtr string

func PublicAdvertisedPrefixStatusPtr(v string) PublicAdvertisedPrefixStatusPtrInput {
	return (*publicAdvertisedPrefixStatusPtr)(&v)
}

func (*publicAdvertisedPrefixStatusPtr) ElementType() reflect.Type {
	return publicAdvertisedPrefixStatusPtrType
}

func (in *publicAdvertisedPrefixStatusPtr) ToPublicAdvertisedPrefixStatusPtrOutput() PublicAdvertisedPrefixStatusPtrOutput {
	return pulumi.ToOutput(in).(PublicAdvertisedPrefixStatusPtrOutput)
}

func (in *publicAdvertisedPrefixStatusPtr) ToPublicAdvertisedPrefixStatusPtrOutputWithContext(ctx context.Context) PublicAdvertisedPrefixStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicAdvertisedPrefixStatusPtrOutput)
}

// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
type RegionBackendServiceCompressionMode string

const (
	// Automatically uses the best compression based on the Accept-Encoding header sent by the client.
	RegionBackendServiceCompressionModeAutomatic = RegionBackendServiceCompressionMode("AUTOMATIC")
	// Disables compression. Existing compressed responses cached by Cloud CDN will not be served to clients.
	RegionBackendServiceCompressionModeDisabled = RegionBackendServiceCompressionMode("DISABLED")
)

func (RegionBackendServiceCompressionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceCompressionMode)(nil)).Elem()
}

func (e RegionBackendServiceCompressionMode) ToRegionBackendServiceCompressionModeOutput() RegionBackendServiceCompressionModeOutput {
	return pulumi.ToOutput(e).(RegionBackendServiceCompressionModeOutput)
}

func (e RegionBackendServiceCompressionMode) ToRegionBackendServiceCompressionModeOutputWithContext(ctx context.Context) RegionBackendServiceCompressionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionBackendServiceCompressionModeOutput)
}

func (e RegionBackendServiceCompressionMode) ToRegionBackendServiceCompressionModePtrOutput() RegionBackendServiceCompressionModePtrOutput {
	return e.ToRegionBackendServiceCompressionModePtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceCompressionMode) ToRegionBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) RegionBackendServiceCompressionModePtrOutput {
	return RegionBackendServiceCompressionMode(e).ToRegionBackendServiceCompressionModeOutputWithContext(ctx).ToRegionBackendServiceCompressionModePtrOutputWithContext(ctx)
}

func (e RegionBackendServiceCompressionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceCompressionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceCompressionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceCompressionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionBackendServiceCompressionModeOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceCompressionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceCompressionMode)(nil)).Elem()
}

func (o RegionBackendServiceCompressionModeOutput) ToRegionBackendServiceCompressionModeOutput() RegionBackendServiceCompressionModeOutput {
	return o
}

func (o RegionBackendServiceCompressionModeOutput) ToRegionBackendServiceCompressionModeOutputWithContext(ctx context.Context) RegionBackendServiceCompressionModeOutput {
	return o
}

func (o RegionBackendServiceCompressionModeOutput) ToRegionBackendServiceCompressionModePtrOutput() RegionBackendServiceCompressionModePtrOutput {
	return o.ToRegionBackendServiceCompressionModePtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceCompressionModeOutput) ToRegionBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) RegionBackendServiceCompressionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionBackendServiceCompressionMode) *RegionBackendServiceCompressionMode {
		return &v
	}).(RegionBackendServiceCompressionModePtrOutput)
}

func (o RegionBackendServiceCompressionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionBackendServiceCompressionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceCompressionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionBackendServiceCompressionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceCompressionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceCompressionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionBackendServiceCompressionModePtrOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceCompressionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionBackendServiceCompressionMode)(nil)).Elem()
}

func (o RegionBackendServiceCompressionModePtrOutput) ToRegionBackendServiceCompressionModePtrOutput() RegionBackendServiceCompressionModePtrOutput {
	return o
}

func (o RegionBackendServiceCompressionModePtrOutput) ToRegionBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) RegionBackendServiceCompressionModePtrOutput {
	return o
}

func (o RegionBackendServiceCompressionModePtrOutput) Elem() RegionBackendServiceCompressionModeOutput {
	return o.ApplyT(func(v *RegionBackendServiceCompressionMode) RegionBackendServiceCompressionMode {
		if v != nil {
			return *v
		}
		var ret RegionBackendServiceCompressionMode
		return ret
	}).(RegionBackendServiceCompressionModeOutput)
}

func (o RegionBackendServiceCompressionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceCompressionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionBackendServiceCompressionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionBackendServiceCompressionModeInput is an input type that accepts RegionBackendServiceCompressionModeArgs and RegionBackendServiceCompressionModeOutput values.
// You can construct a concrete instance of `RegionBackendServiceCompressionModeInput` via:
//
//          RegionBackendServiceCompressionModeArgs{...}
type RegionBackendServiceCompressionModeInput interface {
	pulumi.Input

	ToRegionBackendServiceCompressionModeOutput() RegionBackendServiceCompressionModeOutput
	ToRegionBackendServiceCompressionModeOutputWithContext(context.Context) RegionBackendServiceCompressionModeOutput
}

var regionBackendServiceCompressionModePtrType = reflect.TypeOf((**RegionBackendServiceCompressionMode)(nil)).Elem()

type RegionBackendServiceCompressionModePtrInput interface {
	pulumi.Input

	ToRegionBackendServiceCompressionModePtrOutput() RegionBackendServiceCompressionModePtrOutput
	ToRegionBackendServiceCompressionModePtrOutputWithContext(context.Context) RegionBackendServiceCompressionModePtrOutput
}

type regionBackendServiceCompressionModePtr string

func RegionBackendServiceCompressionModePtr(v string) RegionBackendServiceCompressionModePtrInput {
	return (*regionBackendServiceCompressionModePtr)(&v)
}

func (*regionBackendServiceCompressionModePtr) ElementType() reflect.Type {
	return regionBackendServiceCompressionModePtrType
}

func (in *regionBackendServiceCompressionModePtr) ToRegionBackendServiceCompressionModePtrOutput() RegionBackendServiceCompressionModePtrOutput {
	return pulumi.ToOutput(in).(RegionBackendServiceCompressionModePtrOutput)
}

func (in *regionBackendServiceCompressionModePtr) ToRegionBackendServiceCompressionModePtrOutputWithContext(ctx context.Context) RegionBackendServiceCompressionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionBackendServiceCompressionModePtrOutput)
}

// Specifies the load balancer type. A backend service created for one type of load balancer cannot be used with another. For more information, refer to Choosing a load balancer.
type RegionBackendServiceLoadBalancingScheme string

const (
	// Signifies that this will be used for external HTTP(S), SSL Proxy, TCP Proxy, or Network Load Balancing
	RegionBackendServiceLoadBalancingSchemeExternal = RegionBackendServiceLoadBalancingScheme("EXTERNAL")
	// Signifies that this will be used for External Managed HTTP(S) Load Balancing.
	RegionBackendServiceLoadBalancingSchemeExternalManaged = RegionBackendServiceLoadBalancingScheme("EXTERNAL_MANAGED")
	// Signifies that this will be used for Internal TCP/UDP Load Balancing.
	RegionBackendServiceLoadBalancingSchemeInternal = RegionBackendServiceLoadBalancingScheme("INTERNAL")
	// Signifies that this will be used for Internal HTTP(S) Load Balancing.
	RegionBackendServiceLoadBalancingSchemeInternalManaged = RegionBackendServiceLoadBalancingScheme("INTERNAL_MANAGED")
	// Signifies that this will be used by Traffic Director.
	RegionBackendServiceLoadBalancingSchemeInternalSelfManaged        = RegionBackendServiceLoadBalancingScheme("INTERNAL_SELF_MANAGED")
	RegionBackendServiceLoadBalancingSchemeInvalidLoadBalancingScheme = RegionBackendServiceLoadBalancingScheme("INVALID_LOAD_BALANCING_SCHEME")
)

func (RegionBackendServiceLoadBalancingScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceLoadBalancingScheme)(nil)).Elem()
}

func (e RegionBackendServiceLoadBalancingScheme) ToRegionBackendServiceLoadBalancingSchemeOutput() RegionBackendServiceLoadBalancingSchemeOutput {
	return pulumi.ToOutput(e).(RegionBackendServiceLoadBalancingSchemeOutput)
}

func (e RegionBackendServiceLoadBalancingScheme) ToRegionBackendServiceLoadBalancingSchemeOutputWithContext(ctx context.Context) RegionBackendServiceLoadBalancingSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionBackendServiceLoadBalancingSchemeOutput)
}

func (e RegionBackendServiceLoadBalancingScheme) ToRegionBackendServiceLoadBalancingSchemePtrOutput() RegionBackendServiceLoadBalancingSchemePtrOutput {
	return e.ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceLoadBalancingScheme) ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) RegionBackendServiceLoadBalancingSchemePtrOutput {
	return RegionBackendServiceLoadBalancingScheme(e).ToRegionBackendServiceLoadBalancingSchemeOutputWithContext(ctx).ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx)
}

func (e RegionBackendServiceLoadBalancingScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceLoadBalancingScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceLoadBalancingScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceLoadBalancingScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionBackendServiceLoadBalancingSchemeOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceLoadBalancingSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceLoadBalancingScheme)(nil)).Elem()
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToRegionBackendServiceLoadBalancingSchemeOutput() RegionBackendServiceLoadBalancingSchemeOutput {
	return o
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToRegionBackendServiceLoadBalancingSchemeOutputWithContext(ctx context.Context) RegionBackendServiceLoadBalancingSchemeOutput {
	return o
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToRegionBackendServiceLoadBalancingSchemePtrOutput() RegionBackendServiceLoadBalancingSchemePtrOutput {
	return o.ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) RegionBackendServiceLoadBalancingSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionBackendServiceLoadBalancingScheme) *RegionBackendServiceLoadBalancingScheme {
		return &v
	}).(RegionBackendServiceLoadBalancingSchemePtrOutput)
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceLoadBalancingScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceLoadBalancingSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceLoadBalancingScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionBackendServiceLoadBalancingSchemePtrOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceLoadBalancingSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionBackendServiceLoadBalancingScheme)(nil)).Elem()
}

func (o RegionBackendServiceLoadBalancingSchemePtrOutput) ToRegionBackendServiceLoadBalancingSchemePtrOutput() RegionBackendServiceLoadBalancingSchemePtrOutput {
	return o
}

func (o RegionBackendServiceLoadBalancingSchemePtrOutput) ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) RegionBackendServiceLoadBalancingSchemePtrOutput {
	return o
}

func (o RegionBackendServiceLoadBalancingSchemePtrOutput) Elem() RegionBackendServiceLoadBalancingSchemeOutput {
	return o.ApplyT(func(v *RegionBackendServiceLoadBalancingScheme) RegionBackendServiceLoadBalancingScheme {
		if v != nil {
			return *v
		}
		var ret RegionBackendServiceLoadBalancingScheme
		return ret
	}).(RegionBackendServiceLoadBalancingSchemeOutput)
}

func (o RegionBackendServiceLoadBalancingSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceLoadBalancingSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionBackendServiceLoadBalancingScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionBackendServiceLoadBalancingSchemeInput is an input type that accepts RegionBackendServiceLoadBalancingSchemeArgs and RegionBackendServiceLoadBalancingSchemeOutput values.
// You can construct a concrete instance of `RegionBackendServiceLoadBalancingSchemeInput` via:
//
//          RegionBackendServiceLoadBalancingSchemeArgs{...}
type RegionBackendServiceLoadBalancingSchemeInput interface {
	pulumi.Input

	ToRegionBackendServiceLoadBalancingSchemeOutput() RegionBackendServiceLoadBalancingSchemeOutput
	ToRegionBackendServiceLoadBalancingSchemeOutputWithContext(context.Context) RegionBackendServiceLoadBalancingSchemeOutput
}

var regionBackendServiceLoadBalancingSchemePtrType = reflect.TypeOf((**RegionBackendServiceLoadBalancingScheme)(nil)).Elem()

type RegionBackendServiceLoadBalancingSchemePtrInput interface {
	pulumi.Input

	ToRegionBackendServiceLoadBalancingSchemePtrOutput() RegionBackendServiceLoadBalancingSchemePtrOutput
	ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(context.Context) RegionBackendServiceLoadBalancingSchemePtrOutput
}

type regionBackendServiceLoadBalancingSchemePtr string

func RegionBackendServiceLoadBalancingSchemePtr(v string) RegionBackendServiceLoadBalancingSchemePtrInput {
	return (*regionBackendServiceLoadBalancingSchemePtr)(&v)
}

func (*regionBackendServiceLoadBalancingSchemePtr) ElementType() reflect.Type {
	return regionBackendServiceLoadBalancingSchemePtrType
}

func (in *regionBackendServiceLoadBalancingSchemePtr) ToRegionBackendServiceLoadBalancingSchemePtrOutput() RegionBackendServiceLoadBalancingSchemePtrOutput {
	return pulumi.ToOutput(in).(RegionBackendServiceLoadBalancingSchemePtrOutput)
}

func (in *regionBackendServiceLoadBalancingSchemePtr) ToRegionBackendServiceLoadBalancingSchemePtrOutputWithContext(ctx context.Context) RegionBackendServiceLoadBalancingSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionBackendServiceLoadBalancingSchemePtrOutput)
}

// The load balancing algorithm used within the scope of the locality. The possible values are: - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. - RANDOM: The load balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824 This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. If sessionAffinity is not NONE, and this field is not set to MAGLEV or RING_HASH, session affinity settings will not take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
type RegionBackendServiceLocalityLbPolicy string

const (
	RegionBackendServiceLocalityLbPolicyInvalidLbPolicy = RegionBackendServiceLocalityLbPolicy("INVALID_LB_POLICY")
	// An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests.
	RegionBackendServiceLocalityLbPolicyLeastRequest = RegionBackendServiceLocalityLbPolicy("LEAST_REQUEST")
	// This algorithm implements consistent hashing to backends. Maglev can be used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824
	RegionBackendServiceLocalityLbPolicyMaglev = RegionBackendServiceLocalityLbPolicy("MAGLEV")
	// Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.
	RegionBackendServiceLocalityLbPolicyOriginalDestination = RegionBackendServiceLocalityLbPolicy("ORIGINAL_DESTINATION")
	// The load balancer selects a random healthy host.
	RegionBackendServiceLocalityLbPolicyRandom = RegionBackendServiceLocalityLbPolicy("RANDOM")
	// The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests.
	RegionBackendServiceLocalityLbPolicyRingHash = RegionBackendServiceLocalityLbPolicy("RING_HASH")
	// This is a simple policy in which each healthy backend is selected in round robin order. This is the default.
	RegionBackendServiceLocalityLbPolicyRoundRobin = RegionBackendServiceLocalityLbPolicy("ROUND_ROBIN")
	// Per-instance weighted Load Balancing via health check reported weights. If set, the Backend Service must configure a non legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weighted based on the per-instance weights reported in the last processed health check replies, as long as every instance either reported a valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. This option is only supported in Network Load Balancing.
	RegionBackendServiceLocalityLbPolicyWeightedMaglev = RegionBackendServiceLocalityLbPolicy("WEIGHTED_MAGLEV")
)

func (RegionBackendServiceLocalityLbPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceLocalityLbPolicy)(nil)).Elem()
}

func (e RegionBackendServiceLocalityLbPolicy) ToRegionBackendServiceLocalityLbPolicyOutput() RegionBackendServiceLocalityLbPolicyOutput {
	return pulumi.ToOutput(e).(RegionBackendServiceLocalityLbPolicyOutput)
}

func (e RegionBackendServiceLocalityLbPolicy) ToRegionBackendServiceLocalityLbPolicyOutputWithContext(ctx context.Context) RegionBackendServiceLocalityLbPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionBackendServiceLocalityLbPolicyOutput)
}

func (e RegionBackendServiceLocalityLbPolicy) ToRegionBackendServiceLocalityLbPolicyPtrOutput() RegionBackendServiceLocalityLbPolicyPtrOutput {
	return e.ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceLocalityLbPolicy) ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) RegionBackendServiceLocalityLbPolicyPtrOutput {
	return RegionBackendServiceLocalityLbPolicy(e).ToRegionBackendServiceLocalityLbPolicyOutputWithContext(ctx).ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx)
}

func (e RegionBackendServiceLocalityLbPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceLocalityLbPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceLocalityLbPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceLocalityLbPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionBackendServiceLocalityLbPolicyOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceLocalityLbPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceLocalityLbPolicy)(nil)).Elem()
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToRegionBackendServiceLocalityLbPolicyOutput() RegionBackendServiceLocalityLbPolicyOutput {
	return o
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToRegionBackendServiceLocalityLbPolicyOutputWithContext(ctx context.Context) RegionBackendServiceLocalityLbPolicyOutput {
	return o
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToRegionBackendServiceLocalityLbPolicyPtrOutput() RegionBackendServiceLocalityLbPolicyPtrOutput {
	return o.ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) RegionBackendServiceLocalityLbPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionBackendServiceLocalityLbPolicy) *RegionBackendServiceLocalityLbPolicy {
		return &v
	}).(RegionBackendServiceLocalityLbPolicyPtrOutput)
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceLocalityLbPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceLocalityLbPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceLocalityLbPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionBackendServiceLocalityLbPolicyPtrOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceLocalityLbPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionBackendServiceLocalityLbPolicy)(nil)).Elem()
}

func (o RegionBackendServiceLocalityLbPolicyPtrOutput) ToRegionBackendServiceLocalityLbPolicyPtrOutput() RegionBackendServiceLocalityLbPolicyPtrOutput {
	return o
}

func (o RegionBackendServiceLocalityLbPolicyPtrOutput) ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) RegionBackendServiceLocalityLbPolicyPtrOutput {
	return o
}

func (o RegionBackendServiceLocalityLbPolicyPtrOutput) Elem() RegionBackendServiceLocalityLbPolicyOutput {
	return o.ApplyT(func(v *RegionBackendServiceLocalityLbPolicy) RegionBackendServiceLocalityLbPolicy {
		if v != nil {
			return *v
		}
		var ret RegionBackendServiceLocalityLbPolicy
		return ret
	}).(RegionBackendServiceLocalityLbPolicyOutput)
}

func (o RegionBackendServiceLocalityLbPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceLocalityLbPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionBackendServiceLocalityLbPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionBackendServiceLocalityLbPolicyInput is an input type that accepts RegionBackendServiceLocalityLbPolicyArgs and RegionBackendServiceLocalityLbPolicyOutput values.
// You can construct a concrete instance of `RegionBackendServiceLocalityLbPolicyInput` via:
//
//          RegionBackendServiceLocalityLbPolicyArgs{...}
type RegionBackendServiceLocalityLbPolicyInput interface {
	pulumi.Input

	ToRegionBackendServiceLocalityLbPolicyOutput() RegionBackendServiceLocalityLbPolicyOutput
	ToRegionBackendServiceLocalityLbPolicyOutputWithContext(context.Context) RegionBackendServiceLocalityLbPolicyOutput
}

var regionBackendServiceLocalityLbPolicyPtrType = reflect.TypeOf((**RegionBackendServiceLocalityLbPolicy)(nil)).Elem()

type RegionBackendServiceLocalityLbPolicyPtrInput interface {
	pulumi.Input

	ToRegionBackendServiceLocalityLbPolicyPtrOutput() RegionBackendServiceLocalityLbPolicyPtrOutput
	ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(context.Context) RegionBackendServiceLocalityLbPolicyPtrOutput
}

type regionBackendServiceLocalityLbPolicyPtr string

func RegionBackendServiceLocalityLbPolicyPtr(v string) RegionBackendServiceLocalityLbPolicyPtrInput {
	return (*regionBackendServiceLocalityLbPolicyPtr)(&v)
}

func (*regionBackendServiceLocalityLbPolicyPtr) ElementType() reflect.Type {
	return regionBackendServiceLocalityLbPolicyPtrType
}

func (in *regionBackendServiceLocalityLbPolicyPtr) ToRegionBackendServiceLocalityLbPolicyPtrOutput() RegionBackendServiceLocalityLbPolicyPtrOutput {
	return pulumi.ToOutput(in).(RegionBackendServiceLocalityLbPolicyPtrOutput)
}

func (in *regionBackendServiceLocalityLbPolicyPtr) ToRegionBackendServiceLocalityLbPolicyPtrOutputWithContext(ctx context.Context) RegionBackendServiceLocalityLbPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionBackendServiceLocalityLbPolicyPtrOutput)
}

// The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancers or for Traffic Director for more information. Must be set to GRPC when the backend service is referenced by a URL map that is bound to target gRPC proxy.
type RegionBackendServiceProtocol string

const (
	// ALL includes TCP, UDP, ICMP, ESP, AH and SCTP. Note that this should never be used together with target_xx_proxies.
	RegionBackendServiceProtocolAll = RegionBackendServiceProtocol("ALL")
	// gRPC (available for Traffic Director).
	RegionBackendServiceProtocolGrpc = RegionBackendServiceProtocol("GRPC")
	RegionBackendServiceProtocolHttp = RegionBackendServiceProtocol("HTTP")
	// HTTP/2 with SSL.
	RegionBackendServiceProtocolHttp2 = RegionBackendServiceProtocol("HTTP2")
	RegionBackendServiceProtocolHttps = RegionBackendServiceProtocol("HTTPS")
	// TCP proxying with SSL.
	RegionBackendServiceProtocolSsl = RegionBackendServiceProtocol("SSL")
	// TCP proxying or TCP pass-through.
	RegionBackendServiceProtocolTcp = RegionBackendServiceProtocol("TCP")
	// UDP.
	RegionBackendServiceProtocolUdp = RegionBackendServiceProtocol("UDP")
	// If a Backend Service has UNSPECIFIED as its protocol, it can be used with any L3/L4 Forwarding Rules.
	RegionBackendServiceProtocolUnspecified = RegionBackendServiceProtocol("UNSPECIFIED")
)

func (RegionBackendServiceProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceProtocol)(nil)).Elem()
}

func (e RegionBackendServiceProtocol) ToRegionBackendServiceProtocolOutput() RegionBackendServiceProtocolOutput {
	return pulumi.ToOutput(e).(RegionBackendServiceProtocolOutput)
}

func (e RegionBackendServiceProtocol) ToRegionBackendServiceProtocolOutputWithContext(ctx context.Context) RegionBackendServiceProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionBackendServiceProtocolOutput)
}

func (e RegionBackendServiceProtocol) ToRegionBackendServiceProtocolPtrOutput() RegionBackendServiceProtocolPtrOutput {
	return e.ToRegionBackendServiceProtocolPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceProtocol) ToRegionBackendServiceProtocolPtrOutputWithContext(ctx context.Context) RegionBackendServiceProtocolPtrOutput {
	return RegionBackendServiceProtocol(e).ToRegionBackendServiceProtocolOutputWithContext(ctx).ToRegionBackendServiceProtocolPtrOutputWithContext(ctx)
}

func (e RegionBackendServiceProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionBackendServiceProtocolOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceProtocol)(nil)).Elem()
}

func (o RegionBackendServiceProtocolOutput) ToRegionBackendServiceProtocolOutput() RegionBackendServiceProtocolOutput {
	return o
}

func (o RegionBackendServiceProtocolOutput) ToRegionBackendServiceProtocolOutputWithContext(ctx context.Context) RegionBackendServiceProtocolOutput {
	return o
}

func (o RegionBackendServiceProtocolOutput) ToRegionBackendServiceProtocolPtrOutput() RegionBackendServiceProtocolPtrOutput {
	return o.ToRegionBackendServiceProtocolPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceProtocolOutput) ToRegionBackendServiceProtocolPtrOutputWithContext(ctx context.Context) RegionBackendServiceProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionBackendServiceProtocol) *RegionBackendServiceProtocol {
		return &v
	}).(RegionBackendServiceProtocolPtrOutput)
}

func (o RegionBackendServiceProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionBackendServiceProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionBackendServiceProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionBackendServiceProtocolPtrOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionBackendServiceProtocol)(nil)).Elem()
}

func (o RegionBackendServiceProtocolPtrOutput) ToRegionBackendServiceProtocolPtrOutput() RegionBackendServiceProtocolPtrOutput {
	return o
}

func (o RegionBackendServiceProtocolPtrOutput) ToRegionBackendServiceProtocolPtrOutputWithContext(ctx context.Context) RegionBackendServiceProtocolPtrOutput {
	return o
}

func (o RegionBackendServiceProtocolPtrOutput) Elem() RegionBackendServiceProtocolOutput {
	return o.ApplyT(func(v *RegionBackendServiceProtocol) RegionBackendServiceProtocol {
		if v != nil {
			return *v
		}
		var ret RegionBackendServiceProtocol
		return ret
	}).(RegionBackendServiceProtocolOutput)
}

func (o RegionBackendServiceProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionBackendServiceProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionBackendServiceProtocolInput is an input type that accepts RegionBackendServiceProtocolArgs and RegionBackendServiceProtocolOutput values.
// You can construct a concrete instance of `RegionBackendServiceProtocolInput` via:
//
//          RegionBackendServiceProtocolArgs{...}
type RegionBackendServiceProtocolInput interface {
	pulumi.Input

	ToRegionBackendServiceProtocolOutput() RegionBackendServiceProtocolOutput
	ToRegionBackendServiceProtocolOutputWithContext(context.Context) RegionBackendServiceProtocolOutput
}

var regionBackendServiceProtocolPtrType = reflect.TypeOf((**RegionBackendServiceProtocol)(nil)).Elem()

type RegionBackendServiceProtocolPtrInput interface {
	pulumi.Input

	ToRegionBackendServiceProtocolPtrOutput() RegionBackendServiceProtocolPtrOutput
	ToRegionBackendServiceProtocolPtrOutputWithContext(context.Context) RegionBackendServiceProtocolPtrOutput
}

type regionBackendServiceProtocolPtr string

func RegionBackendServiceProtocolPtr(v string) RegionBackendServiceProtocolPtrInput {
	return (*regionBackendServiceProtocolPtr)(&v)
}

func (*regionBackendServiceProtocolPtr) ElementType() reflect.Type {
	return regionBackendServiceProtocolPtrType
}

func (in *regionBackendServiceProtocolPtr) ToRegionBackendServiceProtocolPtrOutput() RegionBackendServiceProtocolPtrOutput {
	return pulumi.ToOutput(in).(RegionBackendServiceProtocolPtrOutput)
}

func (in *regionBackendServiceProtocolPtr) ToRegionBackendServiceProtocolPtrOutputWithContext(ctx context.Context) RegionBackendServiceProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionBackendServiceProtocolPtrOutput)
}

// Type of session affinity to use. The default is NONE. Only NONE and HEADER_FIELD are supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true. For more details, see: [Session Affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity).
type RegionBackendServiceSessionAffinity string

const (
	// 2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy.
	RegionBackendServiceSessionAffinityClientIp = RegionBackendServiceSessionAffinity("CLIENT_IP")
	// 1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing.
	RegionBackendServiceSessionAffinityClientIpNoDestination = RegionBackendServiceSessionAffinity("CLIENT_IP_NO_DESTINATION")
	// 5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
	RegionBackendServiceSessionAffinityClientIpPortProto = RegionBackendServiceSessionAffinity("CLIENT_IP_PORT_PROTO")
	// 3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
	RegionBackendServiceSessionAffinityClientIpProto = RegionBackendServiceSessionAffinity("CLIENT_IP_PROTO")
	// Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing.
	RegionBackendServiceSessionAffinityGeneratedCookie = RegionBackendServiceSessionAffinity("GENERATED_COOKIE")
	// The hash is based on a user specified header field.
	RegionBackendServiceSessionAffinityHeaderField = RegionBackendServiceSessionAffinity("HEADER_FIELD")
	// The hash is based on a user provided cookie.
	RegionBackendServiceSessionAffinityHttpCookie = RegionBackendServiceSessionAffinity("HTTP_COOKIE")
	// No session affinity. Connections from the same client IP may go to any instance in the pool.
	RegionBackendServiceSessionAffinityNone = RegionBackendServiceSessionAffinity("NONE")
)

func (RegionBackendServiceSessionAffinity) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceSessionAffinity)(nil)).Elem()
}

func (e RegionBackendServiceSessionAffinity) ToRegionBackendServiceSessionAffinityOutput() RegionBackendServiceSessionAffinityOutput {
	return pulumi.ToOutput(e).(RegionBackendServiceSessionAffinityOutput)
}

func (e RegionBackendServiceSessionAffinity) ToRegionBackendServiceSessionAffinityOutputWithContext(ctx context.Context) RegionBackendServiceSessionAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionBackendServiceSessionAffinityOutput)
}

func (e RegionBackendServiceSessionAffinity) ToRegionBackendServiceSessionAffinityPtrOutput() RegionBackendServiceSessionAffinityPtrOutput {
	return e.ToRegionBackendServiceSessionAffinityPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceSessionAffinity) ToRegionBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) RegionBackendServiceSessionAffinityPtrOutput {
	return RegionBackendServiceSessionAffinity(e).ToRegionBackendServiceSessionAffinityOutputWithContext(ctx).ToRegionBackendServiceSessionAffinityPtrOutputWithContext(ctx)
}

func (e RegionBackendServiceSessionAffinity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceSessionAffinity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionBackendServiceSessionAffinity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionBackendServiceSessionAffinity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionBackendServiceSessionAffinityOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceSessionAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceSessionAffinity)(nil)).Elem()
}

func (o RegionBackendServiceSessionAffinityOutput) ToRegionBackendServiceSessionAffinityOutput() RegionBackendServiceSessionAffinityOutput {
	return o
}

func (o RegionBackendServiceSessionAffinityOutput) ToRegionBackendServiceSessionAffinityOutputWithContext(ctx context.Context) RegionBackendServiceSessionAffinityOutput {
	return o
}

func (o RegionBackendServiceSessionAffinityOutput) ToRegionBackendServiceSessionAffinityPtrOutput() RegionBackendServiceSessionAffinityPtrOutput {
	return o.ToRegionBackendServiceSessionAffinityPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceSessionAffinityOutput) ToRegionBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) RegionBackendServiceSessionAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionBackendServiceSessionAffinity) *RegionBackendServiceSessionAffinity {
		return &v
	}).(RegionBackendServiceSessionAffinityPtrOutput)
}

func (o RegionBackendServiceSessionAffinityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionBackendServiceSessionAffinityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceSessionAffinity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionBackendServiceSessionAffinityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceSessionAffinityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionBackendServiceSessionAffinity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionBackendServiceSessionAffinityPtrOutput struct{ *pulumi.OutputState }

func (RegionBackendServiceSessionAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionBackendServiceSessionAffinity)(nil)).Elem()
}

func (o RegionBackendServiceSessionAffinityPtrOutput) ToRegionBackendServiceSessionAffinityPtrOutput() RegionBackendServiceSessionAffinityPtrOutput {
	return o
}

func (o RegionBackendServiceSessionAffinityPtrOutput) ToRegionBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) RegionBackendServiceSessionAffinityPtrOutput {
	return o
}

func (o RegionBackendServiceSessionAffinityPtrOutput) Elem() RegionBackendServiceSessionAffinityOutput {
	return o.ApplyT(func(v *RegionBackendServiceSessionAffinity) RegionBackendServiceSessionAffinity {
		if v != nil {
			return *v
		}
		var ret RegionBackendServiceSessionAffinity
		return ret
	}).(RegionBackendServiceSessionAffinityOutput)
}

func (o RegionBackendServiceSessionAffinityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceSessionAffinityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionBackendServiceSessionAffinity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionBackendServiceSessionAffinityInput is an input type that accepts RegionBackendServiceSessionAffinityArgs and RegionBackendServiceSessionAffinityOutput values.
// You can construct a concrete instance of `RegionBackendServiceSessionAffinityInput` via:
//
//          RegionBackendServiceSessionAffinityArgs{...}
type RegionBackendServiceSessionAffinityInput interface {
	pulumi.Input

	ToRegionBackendServiceSessionAffinityOutput() RegionBackendServiceSessionAffinityOutput
	ToRegionBackendServiceSessionAffinityOutputWithContext(context.Context) RegionBackendServiceSessionAffinityOutput
}

var regionBackendServiceSessionAffinityPtrType = reflect.TypeOf((**RegionBackendServiceSessionAffinity)(nil)).Elem()

type RegionBackendServiceSessionAffinityPtrInput interface {
	pulumi.Input

	ToRegionBackendServiceSessionAffinityPtrOutput() RegionBackendServiceSessionAffinityPtrOutput
	ToRegionBackendServiceSessionAffinityPtrOutputWithContext(context.Context) RegionBackendServiceSessionAffinityPtrOutput
}

type regionBackendServiceSessionAffinityPtr string

func RegionBackendServiceSessionAffinityPtr(v string) RegionBackendServiceSessionAffinityPtrInput {
	return (*regionBackendServiceSessionAffinityPtr)(&v)
}

func (*regionBackendServiceSessionAffinityPtr) ElementType() reflect.Type {
	return regionBackendServiceSessionAffinityPtrType
}

func (in *regionBackendServiceSessionAffinityPtr) ToRegionBackendServiceSessionAffinityPtrOutput() RegionBackendServiceSessionAffinityPtrOutput {
	return pulumi.ToOutput(in).(RegionBackendServiceSessionAffinityPtrOutput)
}

func (in *regionBackendServiceSessionAffinityPtr) ToRegionBackendServiceSessionAffinityPtrOutputWithContext(ctx context.Context) RegionBackendServiceSessionAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionBackendServiceSessionAffinityPtrOutput)
}

// The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in licenseResources. Note that only MACHINE commitments should have a Type specified.
type RegionCommitmentCategory string

const (
	RegionCommitmentCategoryCategoryUnspecified = RegionCommitmentCategory("CATEGORY_UNSPECIFIED")
	RegionCommitmentCategoryLicense             = RegionCommitmentCategory("LICENSE")
	RegionCommitmentCategoryMachine             = RegionCommitmentCategory("MACHINE")
)

func (RegionCommitmentCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCommitmentCategory)(nil)).Elem()
}

func (e RegionCommitmentCategory) ToRegionCommitmentCategoryOutput() RegionCommitmentCategoryOutput {
	return pulumi.ToOutput(e).(RegionCommitmentCategoryOutput)
}

func (e RegionCommitmentCategory) ToRegionCommitmentCategoryOutputWithContext(ctx context.Context) RegionCommitmentCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionCommitmentCategoryOutput)
}

func (e RegionCommitmentCategory) ToRegionCommitmentCategoryPtrOutput() RegionCommitmentCategoryPtrOutput {
	return e.ToRegionCommitmentCategoryPtrOutputWithContext(context.Background())
}

func (e RegionCommitmentCategory) ToRegionCommitmentCategoryPtrOutputWithContext(ctx context.Context) RegionCommitmentCategoryPtrOutput {
	return RegionCommitmentCategory(e).ToRegionCommitmentCategoryOutputWithContext(ctx).ToRegionCommitmentCategoryPtrOutputWithContext(ctx)
}

func (e RegionCommitmentCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionCommitmentCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionCommitmentCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionCommitmentCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionCommitmentCategoryOutput struct{ *pulumi.OutputState }

func (RegionCommitmentCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCommitmentCategory)(nil)).Elem()
}

func (o RegionCommitmentCategoryOutput) ToRegionCommitmentCategoryOutput() RegionCommitmentCategoryOutput {
	return o
}

func (o RegionCommitmentCategoryOutput) ToRegionCommitmentCategoryOutputWithContext(ctx context.Context) RegionCommitmentCategoryOutput {
	return o
}

func (o RegionCommitmentCategoryOutput) ToRegionCommitmentCategoryPtrOutput() RegionCommitmentCategoryPtrOutput {
	return o.ToRegionCommitmentCategoryPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentCategoryOutput) ToRegionCommitmentCategoryPtrOutputWithContext(ctx context.Context) RegionCommitmentCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionCommitmentCategory) *RegionCommitmentCategory {
		return &v
	}).(RegionCommitmentCategoryPtrOutput)
}

func (o RegionCommitmentCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionCommitmentCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionCommitmentCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionCommitmentCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionCommitmentCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionCommitmentCategoryPtrOutput struct{ *pulumi.OutputState }

func (RegionCommitmentCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionCommitmentCategory)(nil)).Elem()
}

func (o RegionCommitmentCategoryPtrOutput) ToRegionCommitmentCategoryPtrOutput() RegionCommitmentCategoryPtrOutput {
	return o
}

func (o RegionCommitmentCategoryPtrOutput) ToRegionCommitmentCategoryPtrOutputWithContext(ctx context.Context) RegionCommitmentCategoryPtrOutput {
	return o
}

func (o RegionCommitmentCategoryPtrOutput) Elem() RegionCommitmentCategoryOutput {
	return o.ApplyT(func(v *RegionCommitmentCategory) RegionCommitmentCategory {
		if v != nil {
			return *v
		}
		var ret RegionCommitmentCategory
		return ret
	}).(RegionCommitmentCategoryOutput)
}

func (o RegionCommitmentCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionCommitmentCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionCommitmentCategoryInput is an input type that accepts RegionCommitmentCategoryArgs and RegionCommitmentCategoryOutput values.
// You can construct a concrete instance of `RegionCommitmentCategoryInput` via:
//
//          RegionCommitmentCategoryArgs{...}
type RegionCommitmentCategoryInput interface {
	pulumi.Input

	ToRegionCommitmentCategoryOutput() RegionCommitmentCategoryOutput
	ToRegionCommitmentCategoryOutputWithContext(context.Context) RegionCommitmentCategoryOutput
}

var regionCommitmentCategoryPtrType = reflect.TypeOf((**RegionCommitmentCategory)(nil)).Elem()

type RegionCommitmentCategoryPtrInput interface {
	pulumi.Input

	ToRegionCommitmentCategoryPtrOutput() RegionCommitmentCategoryPtrOutput
	ToRegionCommitmentCategoryPtrOutputWithContext(context.Context) RegionCommitmentCategoryPtrOutput
}

type regionCommitmentCategoryPtr string

func RegionCommitmentCategoryPtr(v string) RegionCommitmentCategoryPtrInput {
	return (*regionCommitmentCategoryPtr)(&v)
}

func (*regionCommitmentCategoryPtr) ElementType() reflect.Type {
	return regionCommitmentCategoryPtrType
}

func (in *regionCommitmentCategoryPtr) ToRegionCommitmentCategoryPtrOutput() RegionCommitmentCategoryPtrOutput {
	return pulumi.ToOutput(in).(RegionCommitmentCategoryPtrOutput)
}

func (in *regionCommitmentCategoryPtr) ToRegionCommitmentCategoryPtrOutputWithContext(ctx context.Context) RegionCommitmentCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionCommitmentCategoryPtrOutput)
}

// The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years).
type RegionCommitmentPlan string

const (
	RegionCommitmentPlanInvalid        = RegionCommitmentPlan("INVALID")
	RegionCommitmentPlanThirtySixMonth = RegionCommitmentPlan("THIRTY_SIX_MONTH")
	RegionCommitmentPlanTwelveMonth    = RegionCommitmentPlan("TWELVE_MONTH")
)

func (RegionCommitmentPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCommitmentPlan)(nil)).Elem()
}

func (e RegionCommitmentPlan) ToRegionCommitmentPlanOutput() RegionCommitmentPlanOutput {
	return pulumi.ToOutput(e).(RegionCommitmentPlanOutput)
}

func (e RegionCommitmentPlan) ToRegionCommitmentPlanOutputWithContext(ctx context.Context) RegionCommitmentPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionCommitmentPlanOutput)
}

func (e RegionCommitmentPlan) ToRegionCommitmentPlanPtrOutput() RegionCommitmentPlanPtrOutput {
	return e.ToRegionCommitmentPlanPtrOutputWithContext(context.Background())
}

func (e RegionCommitmentPlan) ToRegionCommitmentPlanPtrOutputWithContext(ctx context.Context) RegionCommitmentPlanPtrOutput {
	return RegionCommitmentPlan(e).ToRegionCommitmentPlanOutputWithContext(ctx).ToRegionCommitmentPlanPtrOutputWithContext(ctx)
}

func (e RegionCommitmentPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionCommitmentPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionCommitmentPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionCommitmentPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionCommitmentPlanOutput struct{ *pulumi.OutputState }

func (RegionCommitmentPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCommitmentPlan)(nil)).Elem()
}

func (o RegionCommitmentPlanOutput) ToRegionCommitmentPlanOutput() RegionCommitmentPlanOutput {
	return o
}

func (o RegionCommitmentPlanOutput) ToRegionCommitmentPlanOutputWithContext(ctx context.Context) RegionCommitmentPlanOutput {
	return o
}

func (o RegionCommitmentPlanOutput) ToRegionCommitmentPlanPtrOutput() RegionCommitmentPlanPtrOutput {
	return o.ToRegionCommitmentPlanPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentPlanOutput) ToRegionCommitmentPlanPtrOutputWithContext(ctx context.Context) RegionCommitmentPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionCommitmentPlan) *RegionCommitmentPlan {
		return &v
	}).(RegionCommitmentPlanPtrOutput)
}

func (o RegionCommitmentPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionCommitmentPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionCommitmentPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionCommitmentPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionCommitmentPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionCommitmentPlanPtrOutput struct{ *pulumi.OutputState }

func (RegionCommitmentPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionCommitmentPlan)(nil)).Elem()
}

func (o RegionCommitmentPlanPtrOutput) ToRegionCommitmentPlanPtrOutput() RegionCommitmentPlanPtrOutput {
	return o
}

func (o RegionCommitmentPlanPtrOutput) ToRegionCommitmentPlanPtrOutputWithContext(ctx context.Context) RegionCommitmentPlanPtrOutput {
	return o
}

func (o RegionCommitmentPlanPtrOutput) Elem() RegionCommitmentPlanOutput {
	return o.ApplyT(func(v *RegionCommitmentPlan) RegionCommitmentPlan {
		if v != nil {
			return *v
		}
		var ret RegionCommitmentPlan
		return ret
	}).(RegionCommitmentPlanOutput)
}

func (o RegionCommitmentPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionCommitmentPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionCommitmentPlanInput is an input type that accepts RegionCommitmentPlanArgs and RegionCommitmentPlanOutput values.
// You can construct a concrete instance of `RegionCommitmentPlanInput` via:
//
//          RegionCommitmentPlanArgs{...}
type RegionCommitmentPlanInput interface {
	pulumi.Input

	ToRegionCommitmentPlanOutput() RegionCommitmentPlanOutput
	ToRegionCommitmentPlanOutputWithContext(context.Context) RegionCommitmentPlanOutput
}

var regionCommitmentPlanPtrType = reflect.TypeOf((**RegionCommitmentPlan)(nil)).Elem()

type RegionCommitmentPlanPtrInput interface {
	pulumi.Input

	ToRegionCommitmentPlanPtrOutput() RegionCommitmentPlanPtrOutput
	ToRegionCommitmentPlanPtrOutputWithContext(context.Context) RegionCommitmentPlanPtrOutput
}

type regionCommitmentPlanPtr string

func RegionCommitmentPlanPtr(v string) RegionCommitmentPlanPtrInput {
	return (*regionCommitmentPlanPtr)(&v)
}

func (*regionCommitmentPlanPtr) ElementType() reflect.Type {
	return regionCommitmentPlanPtrType
}

func (in *regionCommitmentPlanPtr) ToRegionCommitmentPlanPtrOutput() RegionCommitmentPlanPtrOutput {
	return pulumi.ToOutput(in).(RegionCommitmentPlanPtrOutput)
}

func (in *regionCommitmentPlanPtr) ToRegionCommitmentPlanPtrOutputWithContext(ctx context.Context) RegionCommitmentPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionCommitmentPlanPtrOutput)
}

// The type of commitment, which affects the discount rate and the eligible resources. Type MEMORY_OPTIMIZED specifies a commitment that will only apply to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a commitment that will only apply to accelerator optimized machines.
type RegionCommitmentType string

const (
	RegionCommitmentTypeAcceleratorOptimized = RegionCommitmentType("ACCELERATOR_OPTIMIZED")
	RegionCommitmentTypeComputeOptimized     = RegionCommitmentType("COMPUTE_OPTIMIZED")
	RegionCommitmentTypeComputeOptimizedC2d  = RegionCommitmentType("COMPUTE_OPTIMIZED_C2D")
	RegionCommitmentTypeGeneralPurpose       = RegionCommitmentType("GENERAL_PURPOSE")
	RegionCommitmentTypeGeneralPurposeE2     = RegionCommitmentType("GENERAL_PURPOSE_E2")
	RegionCommitmentTypeGeneralPurposeN2     = RegionCommitmentType("GENERAL_PURPOSE_N2")
	RegionCommitmentTypeGeneralPurposeN2d    = RegionCommitmentType("GENERAL_PURPOSE_N2D")
	RegionCommitmentTypeGeneralPurposeT2d    = RegionCommitmentType("GENERAL_PURPOSE_T2D")
	RegionCommitmentTypeMemoryOptimized      = RegionCommitmentType("MEMORY_OPTIMIZED")
	RegionCommitmentTypeTypeUnspecified      = RegionCommitmentType("TYPE_UNSPECIFIED")
)

func (RegionCommitmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCommitmentType)(nil)).Elem()
}

func (e RegionCommitmentType) ToRegionCommitmentTypeOutput() RegionCommitmentTypeOutput {
	return pulumi.ToOutput(e).(RegionCommitmentTypeOutput)
}

func (e RegionCommitmentType) ToRegionCommitmentTypeOutputWithContext(ctx context.Context) RegionCommitmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionCommitmentTypeOutput)
}

func (e RegionCommitmentType) ToRegionCommitmentTypePtrOutput() RegionCommitmentTypePtrOutput {
	return e.ToRegionCommitmentTypePtrOutputWithContext(context.Background())
}

func (e RegionCommitmentType) ToRegionCommitmentTypePtrOutputWithContext(ctx context.Context) RegionCommitmentTypePtrOutput {
	return RegionCommitmentType(e).ToRegionCommitmentTypeOutputWithContext(ctx).ToRegionCommitmentTypePtrOutputWithContext(ctx)
}

func (e RegionCommitmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionCommitmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionCommitmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionCommitmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionCommitmentTypeOutput struct{ *pulumi.OutputState }

func (RegionCommitmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionCommitmentType)(nil)).Elem()
}

func (o RegionCommitmentTypeOutput) ToRegionCommitmentTypeOutput() RegionCommitmentTypeOutput {
	return o
}

func (o RegionCommitmentTypeOutput) ToRegionCommitmentTypeOutputWithContext(ctx context.Context) RegionCommitmentTypeOutput {
	return o
}

func (o RegionCommitmentTypeOutput) ToRegionCommitmentTypePtrOutput() RegionCommitmentTypePtrOutput {
	return o.ToRegionCommitmentTypePtrOutputWithContext(context.Background())
}

func (o RegionCommitmentTypeOutput) ToRegionCommitmentTypePtrOutputWithContext(ctx context.Context) RegionCommitmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionCommitmentType) *RegionCommitmentType {
		return &v
	}).(RegionCommitmentTypePtrOutput)
}

func (o RegionCommitmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionCommitmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionCommitmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionCommitmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionCommitmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionCommitmentTypePtrOutput struct{ *pulumi.OutputState }

func (RegionCommitmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionCommitmentType)(nil)).Elem()
}

func (o RegionCommitmentTypePtrOutput) ToRegionCommitmentTypePtrOutput() RegionCommitmentTypePtrOutput {
	return o
}

func (o RegionCommitmentTypePtrOutput) ToRegionCommitmentTypePtrOutputWithContext(ctx context.Context) RegionCommitmentTypePtrOutput {
	return o
}

func (o RegionCommitmentTypePtrOutput) Elem() RegionCommitmentTypeOutput {
	return o.ApplyT(func(v *RegionCommitmentType) RegionCommitmentType {
		if v != nil {
			return *v
		}
		var ret RegionCommitmentType
		return ret
	}).(RegionCommitmentTypeOutput)
}

func (o RegionCommitmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionCommitmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionCommitmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionCommitmentTypeInput is an input type that accepts RegionCommitmentTypeArgs and RegionCommitmentTypeOutput values.
// You can construct a concrete instance of `RegionCommitmentTypeInput` via:
//
//          RegionCommitmentTypeArgs{...}
type RegionCommitmentTypeInput interface {
	pulumi.Input

	ToRegionCommitmentTypeOutput() RegionCommitmentTypeOutput
	ToRegionCommitmentTypeOutputWithContext(context.Context) RegionCommitmentTypeOutput
}

var regionCommitmentTypePtrType = reflect.TypeOf((**RegionCommitmentType)(nil)).Elem()

type RegionCommitmentTypePtrInput interface {
	pulumi.Input

	ToRegionCommitmentTypePtrOutput() RegionCommitmentTypePtrOutput
	ToRegionCommitmentTypePtrOutputWithContext(context.Context) RegionCommitmentTypePtrOutput
}

type regionCommitmentTypePtr string

func RegionCommitmentTypePtr(v string) RegionCommitmentTypePtrInput {
	return (*regionCommitmentTypePtr)(&v)
}

func (*regionCommitmentTypePtr) ElementType() reflect.Type {
	return regionCommitmentTypePtrType
}

func (in *regionCommitmentTypePtr) ToRegionCommitmentTypePtrOutput() RegionCommitmentTypePtrOutput {
	return pulumi.ToOutput(in).(RegionCommitmentTypePtrOutput)
}

func (in *regionCommitmentTypePtr) ToRegionCommitmentTypePtrOutputWithContext(ctx context.Context) RegionCommitmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionCommitmentTypePtrOutput)
}

// The architecture of the disk. Valid values are ARM64 or X86_64.
type RegionDiskArchitecture string

const (
	// Default value indicating Architecture is not set.
	RegionDiskArchitectureArchitectureUnspecified = RegionDiskArchitecture("ARCHITECTURE_UNSPECIFIED")
	// Machines with architecture ARM64
	RegionDiskArchitectureArm64 = RegionDiskArchitecture("ARM64")
	// Machines with architecture X86_64
	RegionDiskArchitectureX8664 = RegionDiskArchitecture("X86_64")
)

func (RegionDiskArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionDiskArchitecture)(nil)).Elem()
}

func (e RegionDiskArchitecture) ToRegionDiskArchitectureOutput() RegionDiskArchitectureOutput {
	return pulumi.ToOutput(e).(RegionDiskArchitectureOutput)
}

func (e RegionDiskArchitecture) ToRegionDiskArchitectureOutputWithContext(ctx context.Context) RegionDiskArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionDiskArchitectureOutput)
}

func (e RegionDiskArchitecture) ToRegionDiskArchitecturePtrOutput() RegionDiskArchitecturePtrOutput {
	return e.ToRegionDiskArchitecturePtrOutputWithContext(context.Background())
}

func (e RegionDiskArchitecture) ToRegionDiskArchitecturePtrOutputWithContext(ctx context.Context) RegionDiskArchitecturePtrOutput {
	return RegionDiskArchitecture(e).ToRegionDiskArchitectureOutputWithContext(ctx).ToRegionDiskArchitecturePtrOutputWithContext(ctx)
}

func (e RegionDiskArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionDiskArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionDiskArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionDiskArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionDiskArchitectureOutput struct{ *pulumi.OutputState }

func (RegionDiskArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionDiskArchitecture)(nil)).Elem()
}

func (o RegionDiskArchitectureOutput) ToRegionDiskArchitectureOutput() RegionDiskArchitectureOutput {
	return o
}

func (o RegionDiskArchitectureOutput) ToRegionDiskArchitectureOutputWithContext(ctx context.Context) RegionDiskArchitectureOutput {
	return o
}

func (o RegionDiskArchitectureOutput) ToRegionDiskArchitecturePtrOutput() RegionDiskArchitecturePtrOutput {
	return o.ToRegionDiskArchitecturePtrOutputWithContext(context.Background())
}

func (o RegionDiskArchitectureOutput) ToRegionDiskArchitecturePtrOutputWithContext(ctx context.Context) RegionDiskArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionDiskArchitecture) *RegionDiskArchitecture {
		return &v
	}).(RegionDiskArchitecturePtrOutput)
}

func (o RegionDiskArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionDiskArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionDiskArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionDiskArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionDiskArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionDiskArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionDiskArchitecturePtrOutput struct{ *pulumi.OutputState }

func (RegionDiskArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionDiskArchitecture)(nil)).Elem()
}

func (o RegionDiskArchitecturePtrOutput) ToRegionDiskArchitecturePtrOutput() RegionDiskArchitecturePtrOutput {
	return o
}

func (o RegionDiskArchitecturePtrOutput) ToRegionDiskArchitecturePtrOutputWithContext(ctx context.Context) RegionDiskArchitecturePtrOutput {
	return o
}

func (o RegionDiskArchitecturePtrOutput) Elem() RegionDiskArchitectureOutput {
	return o.ApplyT(func(v *RegionDiskArchitecture) RegionDiskArchitecture {
		if v != nil {
			return *v
		}
		var ret RegionDiskArchitecture
		return ret
	}).(RegionDiskArchitectureOutput)
}

func (o RegionDiskArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionDiskArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionDiskArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionDiskArchitectureInput is an input type that accepts RegionDiskArchitectureArgs and RegionDiskArchitectureOutput values.
// You can construct a concrete instance of `RegionDiskArchitectureInput` via:
//
//          RegionDiskArchitectureArgs{...}
type RegionDiskArchitectureInput interface {
	pulumi.Input

	ToRegionDiskArchitectureOutput() RegionDiskArchitectureOutput
	ToRegionDiskArchitectureOutputWithContext(context.Context) RegionDiskArchitectureOutput
}

var regionDiskArchitecturePtrType = reflect.TypeOf((**RegionDiskArchitecture)(nil)).Elem()

type RegionDiskArchitecturePtrInput interface {
	pulumi.Input

	ToRegionDiskArchitecturePtrOutput() RegionDiskArchitecturePtrOutput
	ToRegionDiskArchitecturePtrOutputWithContext(context.Context) RegionDiskArchitecturePtrOutput
}

type regionDiskArchitecturePtr string

func RegionDiskArchitecturePtr(v string) RegionDiskArchitecturePtrInput {
	return (*regionDiskArchitecturePtr)(&v)
}

func (*regionDiskArchitecturePtr) ElementType() reflect.Type {
	return regionDiskArchitecturePtrType
}

func (in *regionDiskArchitecturePtr) ToRegionDiskArchitecturePtrOutput() RegionDiskArchitecturePtrOutput {
	return pulumi.ToOutput(in).(RegionDiskArchitecturePtrOutput)
}

func (in *regionDiskArchitecturePtr) ToRegionDiskArchitecturePtrOutputWithContext(ctx context.Context) RegionDiskArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionDiskArchitecturePtrOutput)
}

// [Deprecated] Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
type RegionDiskInterface string

const (
	RegionDiskInterfaceNvme        = RegionDiskInterface("NVME")
	RegionDiskInterfaceScsi        = RegionDiskInterface("SCSI")
	RegionDiskInterfaceUnspecified = RegionDiskInterface("UNSPECIFIED")
)

func (RegionDiskInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionDiskInterface)(nil)).Elem()
}

func (e RegionDiskInterface) ToRegionDiskInterfaceOutput() RegionDiskInterfaceOutput {
	return pulumi.ToOutput(e).(RegionDiskInterfaceOutput)
}

func (e RegionDiskInterface) ToRegionDiskInterfaceOutputWithContext(ctx context.Context) RegionDiskInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionDiskInterfaceOutput)
}

func (e RegionDiskInterface) ToRegionDiskInterfacePtrOutput() RegionDiskInterfacePtrOutput {
	return e.ToRegionDiskInterfacePtrOutputWithContext(context.Background())
}

func (e RegionDiskInterface) ToRegionDiskInterfacePtrOutputWithContext(ctx context.Context) RegionDiskInterfacePtrOutput {
	return RegionDiskInterface(e).ToRegionDiskInterfaceOutputWithContext(ctx).ToRegionDiskInterfacePtrOutputWithContext(ctx)
}

func (e RegionDiskInterface) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionDiskInterface) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionDiskInterface) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionDiskInterface) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionDiskInterfaceOutput struct{ *pulumi.OutputState }

func (RegionDiskInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionDiskInterface)(nil)).Elem()
}

func (o RegionDiskInterfaceOutput) ToRegionDiskInterfaceOutput() RegionDiskInterfaceOutput {
	return o
}

func (o RegionDiskInterfaceOutput) ToRegionDiskInterfaceOutputWithContext(ctx context.Context) RegionDiskInterfaceOutput {
	return o
}

func (o RegionDiskInterfaceOutput) ToRegionDiskInterfacePtrOutput() RegionDiskInterfacePtrOutput {
	return o.ToRegionDiskInterfacePtrOutputWithContext(context.Background())
}

func (o RegionDiskInterfaceOutput) ToRegionDiskInterfacePtrOutputWithContext(ctx context.Context) RegionDiskInterfacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionDiskInterface) *RegionDiskInterface {
		return &v
	}).(RegionDiskInterfacePtrOutput)
}

func (o RegionDiskInterfaceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionDiskInterfaceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionDiskInterface) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionDiskInterfaceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionDiskInterfaceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionDiskInterface) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionDiskInterfacePtrOutput struct{ *pulumi.OutputState }

func (RegionDiskInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionDiskInterface)(nil)).Elem()
}

func (o RegionDiskInterfacePtrOutput) ToRegionDiskInterfacePtrOutput() RegionDiskInterfacePtrOutput {
	return o
}

func (o RegionDiskInterfacePtrOutput) ToRegionDiskInterfacePtrOutputWithContext(ctx context.Context) RegionDiskInterfacePtrOutput {
	return o
}

func (o RegionDiskInterfacePtrOutput) Elem() RegionDiskInterfaceOutput {
	return o.ApplyT(func(v *RegionDiskInterface) RegionDiskInterface {
		if v != nil {
			return *v
		}
		var ret RegionDiskInterface
		return ret
	}).(RegionDiskInterfaceOutput)
}

func (o RegionDiskInterfacePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionDiskInterfacePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionDiskInterface) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionDiskInterfaceInput is an input type that accepts RegionDiskInterfaceArgs and RegionDiskInterfaceOutput values.
// You can construct a concrete instance of `RegionDiskInterfaceInput` via:
//
//          RegionDiskInterfaceArgs{...}
type RegionDiskInterfaceInput interface {
	pulumi.Input

	ToRegionDiskInterfaceOutput() RegionDiskInterfaceOutput
	ToRegionDiskInterfaceOutputWithContext(context.Context) RegionDiskInterfaceOutput
}

var regionDiskInterfacePtrType = reflect.TypeOf((**RegionDiskInterface)(nil)).Elem()

type RegionDiskInterfacePtrInput interface {
	pulumi.Input

	ToRegionDiskInterfacePtrOutput() RegionDiskInterfacePtrOutput
	ToRegionDiskInterfacePtrOutputWithContext(context.Context) RegionDiskInterfacePtrOutput
}

type regionDiskInterfacePtr string

func RegionDiskInterfacePtr(v string) RegionDiskInterfacePtrInput {
	return (*regionDiskInterfacePtr)(&v)
}

func (*regionDiskInterfacePtr) ElementType() reflect.Type {
	return regionDiskInterfacePtrType
}

func (in *regionDiskInterfacePtr) ToRegionDiskInterfacePtrOutput() RegionDiskInterfacePtrOutput {
	return pulumi.ToOutput(in).(RegionDiskInterfacePtrOutput)
}

func (in *regionDiskInterfacePtr) ToRegionDiskInterfacePtrOutputWithContext(ctx context.Context) RegionDiskInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionDiskInterfacePtrOutput)
}

// [Deprecated] Storage type of the persistent disk.
type RegionDiskStorageType string

const (
	RegionDiskStorageTypeHdd = RegionDiskStorageType("HDD")
	RegionDiskStorageTypeSsd = RegionDiskStorageType("SSD")
)

func (RegionDiskStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionDiskStorageType)(nil)).Elem()
}

func (e RegionDiskStorageType) ToRegionDiskStorageTypeOutput() RegionDiskStorageTypeOutput {
	return pulumi.ToOutput(e).(RegionDiskStorageTypeOutput)
}

func (e RegionDiskStorageType) ToRegionDiskStorageTypeOutputWithContext(ctx context.Context) RegionDiskStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionDiskStorageTypeOutput)
}

func (e RegionDiskStorageType) ToRegionDiskStorageTypePtrOutput() RegionDiskStorageTypePtrOutput {
	return e.ToRegionDiskStorageTypePtrOutputWithContext(context.Background())
}

func (e RegionDiskStorageType) ToRegionDiskStorageTypePtrOutputWithContext(ctx context.Context) RegionDiskStorageTypePtrOutput {
	return RegionDiskStorageType(e).ToRegionDiskStorageTypeOutputWithContext(ctx).ToRegionDiskStorageTypePtrOutputWithContext(ctx)
}

func (e RegionDiskStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionDiskStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionDiskStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionDiskStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionDiskStorageTypeOutput struct{ *pulumi.OutputState }

func (RegionDiskStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionDiskStorageType)(nil)).Elem()
}

func (o RegionDiskStorageTypeOutput) ToRegionDiskStorageTypeOutput() RegionDiskStorageTypeOutput {
	return o
}

func (o RegionDiskStorageTypeOutput) ToRegionDiskStorageTypeOutputWithContext(ctx context.Context) RegionDiskStorageTypeOutput {
	return o
}

func (o RegionDiskStorageTypeOutput) ToRegionDiskStorageTypePtrOutput() RegionDiskStorageTypePtrOutput {
	return o.ToRegionDiskStorageTypePtrOutputWithContext(context.Background())
}

func (o RegionDiskStorageTypeOutput) ToRegionDiskStorageTypePtrOutputWithContext(ctx context.Context) RegionDiskStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionDiskStorageType) *RegionDiskStorageType {
		return &v
	}).(RegionDiskStorageTypePtrOutput)
}

func (o RegionDiskStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionDiskStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionDiskStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionDiskStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionDiskStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionDiskStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionDiskStorageTypePtrOutput struct{ *pulumi.OutputState }

func (RegionDiskStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionDiskStorageType)(nil)).Elem()
}

func (o RegionDiskStorageTypePtrOutput) ToRegionDiskStorageTypePtrOutput() RegionDiskStorageTypePtrOutput {
	return o
}

func (o RegionDiskStorageTypePtrOutput) ToRegionDiskStorageTypePtrOutputWithContext(ctx context.Context) RegionDiskStorageTypePtrOutput {
	return o
}

func (o RegionDiskStorageTypePtrOutput) Elem() RegionDiskStorageTypeOutput {
	return o.ApplyT(func(v *RegionDiskStorageType) RegionDiskStorageType {
		if v != nil {
			return *v
		}
		var ret RegionDiskStorageType
		return ret
	}).(RegionDiskStorageTypeOutput)
}

func (o RegionDiskStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionDiskStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionDiskStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionDiskStorageTypeInput is an input type that accepts RegionDiskStorageTypeArgs and RegionDiskStorageTypeOutput values.
// You can construct a concrete instance of `RegionDiskStorageTypeInput` via:
//
//          RegionDiskStorageTypeArgs{...}
type RegionDiskStorageTypeInput interface {
	pulumi.Input

	ToRegionDiskStorageTypeOutput() RegionDiskStorageTypeOutput
	ToRegionDiskStorageTypeOutputWithContext(context.Context) RegionDiskStorageTypeOutput
}

var regionDiskStorageTypePtrType = reflect.TypeOf((**RegionDiskStorageType)(nil)).Elem()

type RegionDiskStorageTypePtrInput interface {
	pulumi.Input

	ToRegionDiskStorageTypePtrOutput() RegionDiskStorageTypePtrOutput
	ToRegionDiskStorageTypePtrOutputWithContext(context.Context) RegionDiskStorageTypePtrOutput
}

type regionDiskStorageTypePtr string

func RegionDiskStorageTypePtr(v string) RegionDiskStorageTypePtrInput {
	return (*regionDiskStorageTypePtr)(&v)
}

func (*regionDiskStorageTypePtr) ElementType() reflect.Type {
	return regionDiskStorageTypePtrType
}

func (in *regionDiskStorageTypePtr) ToRegionDiskStorageTypePtrOutput() RegionDiskStorageTypePtrOutput {
	return pulumi.ToOutput(in).(RegionDiskStorageTypePtrOutput)
}

func (in *regionDiskStorageTypePtr) ToRegionDiskStorageTypePtrOutputWithContext(ctx context.Context) RegionDiskStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionDiskStorageTypePtrOutput)
}

// Optional. Policy for how the results from multiple health checks for the same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. - NO_AGGREGATION. An EndpointHealth message is returned for each pair in the health check service. - AND. If any health check of an endpoint reports UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health checks report HEALTHY, the HealthState of the endpoint is HEALTHY. .
type RegionHealthCheckServiceHealthStatusAggregationPolicy string

const (
	// If any backend's health check reports UNHEALTHY, then UNHEALTHY is the HealthState of the entire health check service. If all backend's are healthy, the HealthState of the health check service is HEALTHY.
	RegionHealthCheckServiceHealthStatusAggregationPolicyAnd = RegionHealthCheckServiceHealthStatusAggregationPolicy("AND")
	// An EndpointHealth message is returned for each backend in the health check service.
	RegionHealthCheckServiceHealthStatusAggregationPolicyNoAggregation = RegionHealthCheckServiceHealthStatusAggregationPolicy("NO_AGGREGATION")
)

func (RegionHealthCheckServiceHealthStatusAggregationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationPolicy)(nil)).Elem()
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToRegionHealthCheckServiceHealthStatusAggregationPolicyOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyOutput {
	return pulumi.ToOutput(e).(RegionHealthCheckServiceHealthStatusAggregationPolicyOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToRegionHealthCheckServiceHealthStatusAggregationPolicyOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionHealthCheckServiceHealthStatusAggregationPolicyOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return e.ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(context.Background())
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return RegionHealthCheckServiceHealthStatusAggregationPolicy(e).ToRegionHealthCheckServiceHealthStatusAggregationPolicyOutputWithContext(ctx).ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(ctx)
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionHealthCheckServiceHealthStatusAggregationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionHealthCheckServiceHealthStatusAggregationPolicyOutput struct{ *pulumi.OutputState }

func (RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationPolicy)(nil)).Elem()
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToRegionHealthCheckServiceHealthStatusAggregationPolicyOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToRegionHealthCheckServiceHealthStatusAggregationPolicyOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return o.ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionHealthCheckServiceHealthStatusAggregationPolicy) *RegionHealthCheckServiceHealthStatusAggregationPolicy {
		return &v
	}).(RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput)
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionHealthCheckServiceHealthStatusAggregationPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionHealthCheckServiceHealthStatusAggregationPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput struct{ *pulumi.OutputState }

func (RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionHealthCheckServiceHealthStatusAggregationPolicy)(nil)).Elem()
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput) Elem() RegionHealthCheckServiceHealthStatusAggregationPolicyOutput {
	return o.ApplyT(func(v *RegionHealthCheckServiceHealthStatusAggregationPolicy) RegionHealthCheckServiceHealthStatusAggregationPolicy {
		if v != nil {
			return *v
		}
		var ret RegionHealthCheckServiceHealthStatusAggregationPolicy
		return ret
	}).(RegionHealthCheckServiceHealthStatusAggregationPolicyOutput)
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionHealthCheckServiceHealthStatusAggregationPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionHealthCheckServiceHealthStatusAggregationPolicyInput is an input type that accepts RegionHealthCheckServiceHealthStatusAggregationPolicyArgs and RegionHealthCheckServiceHealthStatusAggregationPolicyOutput values.
// You can construct a concrete instance of `RegionHealthCheckServiceHealthStatusAggregationPolicyInput` via:
//
//          RegionHealthCheckServiceHealthStatusAggregationPolicyArgs{...}
type RegionHealthCheckServiceHealthStatusAggregationPolicyInput interface {
	pulumi.Input

	ToRegionHealthCheckServiceHealthStatusAggregationPolicyOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyOutput
	ToRegionHealthCheckServiceHealthStatusAggregationPolicyOutputWithContext(context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyOutput
}

var regionHealthCheckServiceHealthStatusAggregationPolicyPtrType = reflect.TypeOf((**RegionHealthCheckServiceHealthStatusAggregationPolicy)(nil)).Elem()

type RegionHealthCheckServiceHealthStatusAggregationPolicyPtrInput interface {
	pulumi.Input

	ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput
	ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput
}

type regionHealthCheckServiceHealthStatusAggregationPolicyPtr string

func RegionHealthCheckServiceHealthStatusAggregationPolicyPtr(v string) RegionHealthCheckServiceHealthStatusAggregationPolicyPtrInput {
	return (*regionHealthCheckServiceHealthStatusAggregationPolicyPtr)(&v)
}

func (*regionHealthCheckServiceHealthStatusAggregationPolicyPtr) ElementType() reflect.Type {
	return regionHealthCheckServiceHealthStatusAggregationPolicyPtrType
}

func (in *regionHealthCheckServiceHealthStatusAggregationPolicyPtr) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return pulumi.ToOutput(in).(RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput)
}

func (in *regionHealthCheckServiceHealthStatusAggregationPolicyPtr) ToRegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput)
}

// This field is deprecated. Use health_status_aggregation_policy instead. Policy for how the results from multiple health checks for the same endpoint are aggregated. - NO_AGGREGATION. An EndpointHealth message is returned for each backend in the health check service. - AND. If any backend's health check reports UNHEALTHY, then UNHEALTHY is the HealthState of the entire health check service. If all backend's are healthy, the HealthState of the health check service is HEALTHY. .
type RegionHealthCheckServiceHealthStatusAggregationStrategy string

const (
	// This is deprecated. Use health_status_aggregation_policy instead. If any backend's health check reports UNHEALTHY, then UNHEALTHY is the HealthState of the entire health check service. If all backend's are healthy, the HealthState of the health check service is HEALTHY.
	RegionHealthCheckServiceHealthStatusAggregationStrategyAnd = RegionHealthCheckServiceHealthStatusAggregationStrategy("AND")
	// This is deprecated. Use health_status_aggregation_policy instead. An EndpointHealth message is returned for each backend in the health check service.
	RegionHealthCheckServiceHealthStatusAggregationStrategyNoAggregation = RegionHealthCheckServiceHealthStatusAggregationStrategy("NO_AGGREGATION")
)

func (RegionHealthCheckServiceHealthStatusAggregationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationStrategy)(nil)).Elem()
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToRegionHealthCheckServiceHealthStatusAggregationStrategyOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyOutput {
	return pulumi.ToOutput(e).(RegionHealthCheckServiceHealthStatusAggregationStrategyOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToRegionHealthCheckServiceHealthStatusAggregationStrategyOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionHealthCheckServiceHealthStatusAggregationStrategyOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return e.ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(context.Background())
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return RegionHealthCheckServiceHealthStatusAggregationStrategy(e).ToRegionHealthCheckServiceHealthStatusAggregationStrategyOutputWithContext(ctx).ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(ctx)
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionHealthCheckServiceHealthStatusAggregationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionHealthCheckServiceHealthStatusAggregationStrategyOutput struct{ *pulumi.OutputState }

func (RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationStrategy)(nil)).Elem()
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToRegionHealthCheckServiceHealthStatusAggregationStrategyOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToRegionHealthCheckServiceHealthStatusAggregationStrategyOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return o.ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionHealthCheckServiceHealthStatusAggregationStrategy) *RegionHealthCheckServiceHealthStatusAggregationStrategy {
		return &v
	}).(RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput)
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionHealthCheckServiceHealthStatusAggregationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionHealthCheckServiceHealthStatusAggregationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput struct{ *pulumi.OutputState }

func (RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionHealthCheckServiceHealthStatusAggregationStrategy)(nil)).Elem()
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return o
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput) Elem() RegionHealthCheckServiceHealthStatusAggregationStrategyOutput {
	return o.ApplyT(func(v *RegionHealthCheckServiceHealthStatusAggregationStrategy) RegionHealthCheckServiceHealthStatusAggregationStrategy {
		if v != nil {
			return *v
		}
		var ret RegionHealthCheckServiceHealthStatusAggregationStrategy
		return ret
	}).(RegionHealthCheckServiceHealthStatusAggregationStrategyOutput)
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionHealthCheckServiceHealthStatusAggregationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionHealthCheckServiceHealthStatusAggregationStrategyInput is an input type that accepts RegionHealthCheckServiceHealthStatusAggregationStrategyArgs and RegionHealthCheckServiceHealthStatusAggregationStrategyOutput values.
// You can construct a concrete instance of `RegionHealthCheckServiceHealthStatusAggregationStrategyInput` via:
//
//          RegionHealthCheckServiceHealthStatusAggregationStrategyArgs{...}
type RegionHealthCheckServiceHealthStatusAggregationStrategyInput interface {
	pulumi.Input

	ToRegionHealthCheckServiceHealthStatusAggregationStrategyOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyOutput
	ToRegionHealthCheckServiceHealthStatusAggregationStrategyOutputWithContext(context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyOutput
}

var regionHealthCheckServiceHealthStatusAggregationStrategyPtrType = reflect.TypeOf((**RegionHealthCheckServiceHealthStatusAggregationStrategy)(nil)).Elem()

type RegionHealthCheckServiceHealthStatusAggregationStrategyPtrInput interface {
	pulumi.Input

	ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput
	ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput
}

type regionHealthCheckServiceHealthStatusAggregationStrategyPtr string

func RegionHealthCheckServiceHealthStatusAggregationStrategyPtr(v string) RegionHealthCheckServiceHealthStatusAggregationStrategyPtrInput {
	return (*regionHealthCheckServiceHealthStatusAggregationStrategyPtr)(&v)
}

func (*regionHealthCheckServiceHealthStatusAggregationStrategyPtr) ElementType() reflect.Type {
	return regionHealthCheckServiceHealthStatusAggregationStrategyPtrType
}

func (in *regionHealthCheckServiceHealthStatusAggregationStrategyPtr) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput() RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return pulumi.ToOutput(in).(RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput)
}

func (in *regionHealthCheckServiceHealthStatusAggregationStrategyPtr) ToRegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutputWithContext(ctx context.Context) RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput)
}

// Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2. Exactly one of the protocol-specific health check field must be specified, which must match type field.
type RegionHealthCheckType string

const (
	RegionHealthCheckTypeGrpc    = RegionHealthCheckType("GRPC")
	RegionHealthCheckTypeHttp    = RegionHealthCheckType("HTTP")
	RegionHealthCheckTypeHttp2   = RegionHealthCheckType("HTTP2")
	RegionHealthCheckTypeHttps   = RegionHealthCheckType("HTTPS")
	RegionHealthCheckTypeInvalid = RegionHealthCheckType("INVALID")
	RegionHealthCheckTypeSsl     = RegionHealthCheckType("SSL")
	RegionHealthCheckTypeTcp     = RegionHealthCheckType("TCP")
	RegionHealthCheckTypeUdp     = RegionHealthCheckType("UDP")
)

func (RegionHealthCheckType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionHealthCheckType)(nil)).Elem()
}

func (e RegionHealthCheckType) ToRegionHealthCheckTypeOutput() RegionHealthCheckTypeOutput {
	return pulumi.ToOutput(e).(RegionHealthCheckTypeOutput)
}

func (e RegionHealthCheckType) ToRegionHealthCheckTypeOutputWithContext(ctx context.Context) RegionHealthCheckTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionHealthCheckTypeOutput)
}

func (e RegionHealthCheckType) ToRegionHealthCheckTypePtrOutput() RegionHealthCheckTypePtrOutput {
	return e.ToRegionHealthCheckTypePtrOutputWithContext(context.Background())
}

func (e RegionHealthCheckType) ToRegionHealthCheckTypePtrOutputWithContext(ctx context.Context) RegionHealthCheckTypePtrOutput {
	return RegionHealthCheckType(e).ToRegionHealthCheckTypeOutputWithContext(ctx).ToRegionHealthCheckTypePtrOutputWithContext(ctx)
}

func (e RegionHealthCheckType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionHealthCheckType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionHealthCheckType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionHealthCheckType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionHealthCheckTypeOutput struct{ *pulumi.OutputState }

func (RegionHealthCheckTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionHealthCheckType)(nil)).Elem()
}

func (o RegionHealthCheckTypeOutput) ToRegionHealthCheckTypeOutput() RegionHealthCheckTypeOutput {
	return o
}

func (o RegionHealthCheckTypeOutput) ToRegionHealthCheckTypeOutputWithContext(ctx context.Context) RegionHealthCheckTypeOutput {
	return o
}

func (o RegionHealthCheckTypeOutput) ToRegionHealthCheckTypePtrOutput() RegionHealthCheckTypePtrOutput {
	return o.ToRegionHealthCheckTypePtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckTypeOutput) ToRegionHealthCheckTypePtrOutputWithContext(ctx context.Context) RegionHealthCheckTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionHealthCheckType) *RegionHealthCheckType {
		return &v
	}).(RegionHealthCheckTypePtrOutput)
}

func (o RegionHealthCheckTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionHealthCheckTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionHealthCheckType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionHealthCheckTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionHealthCheckType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionHealthCheckTypePtrOutput struct{ *pulumi.OutputState }

func (RegionHealthCheckTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionHealthCheckType)(nil)).Elem()
}

func (o RegionHealthCheckTypePtrOutput) ToRegionHealthCheckTypePtrOutput() RegionHealthCheckTypePtrOutput {
	return o
}

func (o RegionHealthCheckTypePtrOutput) ToRegionHealthCheckTypePtrOutputWithContext(ctx context.Context) RegionHealthCheckTypePtrOutput {
	return o
}

func (o RegionHealthCheckTypePtrOutput) Elem() RegionHealthCheckTypeOutput {
	return o.ApplyT(func(v *RegionHealthCheckType) RegionHealthCheckType {
		if v != nil {
			return *v
		}
		var ret RegionHealthCheckType
		return ret
	}).(RegionHealthCheckTypeOutput)
}

func (o RegionHealthCheckTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionHealthCheckTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionHealthCheckType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionHealthCheckTypeInput is an input type that accepts RegionHealthCheckTypeArgs and RegionHealthCheckTypeOutput values.
// You can construct a concrete instance of `RegionHealthCheckTypeInput` via:
//
//          RegionHealthCheckTypeArgs{...}
type RegionHealthCheckTypeInput interface {
	pulumi.Input

	ToRegionHealthCheckTypeOutput() RegionHealthCheckTypeOutput
	ToRegionHealthCheckTypeOutputWithContext(context.Context) RegionHealthCheckTypeOutput
}

var regionHealthCheckTypePtrType = reflect.TypeOf((**RegionHealthCheckType)(nil)).Elem()

type RegionHealthCheckTypePtrInput interface {
	pulumi.Input

	ToRegionHealthCheckTypePtrOutput() RegionHealthCheckTypePtrOutput
	ToRegionHealthCheckTypePtrOutputWithContext(context.Context) RegionHealthCheckTypePtrOutput
}

type regionHealthCheckTypePtr string

func RegionHealthCheckTypePtr(v string) RegionHealthCheckTypePtrInput {
	return (*regionHealthCheckTypePtr)(&v)
}

func (*regionHealthCheckTypePtr) ElementType() reflect.Type {
	return regionHealthCheckTypePtrType
}

func (in *regionHealthCheckTypePtr) ToRegionHealthCheckTypePtrOutput() RegionHealthCheckTypePtrOutput {
	return pulumi.ToOutput(in).(RegionHealthCheckTypePtrOutput)
}

func (in *regionHealthCheckTypePtr) ToRegionHealthCheckTypePtrOutputWithContext(ctx context.Context) RegionHealthCheckTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionHealthCheckTypePtrOutput)
}

// The action to perform in case of zone failure. Only one value is supported, NO_FAILOVER. The default is NO_FAILOVER.
type RegionInstanceGroupManagerFailoverAction string

const (
	RegionInstanceGroupManagerFailoverActionNoFailover = RegionInstanceGroupManagerFailoverAction("NO_FAILOVER")
	RegionInstanceGroupManagerFailoverActionUnknown    = RegionInstanceGroupManagerFailoverAction("UNKNOWN")
)

func (RegionInstanceGroupManagerFailoverAction) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerFailoverAction)(nil)).Elem()
}

func (e RegionInstanceGroupManagerFailoverAction) ToRegionInstanceGroupManagerFailoverActionOutput() RegionInstanceGroupManagerFailoverActionOutput {
	return pulumi.ToOutput(e).(RegionInstanceGroupManagerFailoverActionOutput)
}

func (e RegionInstanceGroupManagerFailoverAction) ToRegionInstanceGroupManagerFailoverActionOutputWithContext(ctx context.Context) RegionInstanceGroupManagerFailoverActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionInstanceGroupManagerFailoverActionOutput)
}

func (e RegionInstanceGroupManagerFailoverAction) ToRegionInstanceGroupManagerFailoverActionPtrOutput() RegionInstanceGroupManagerFailoverActionPtrOutput {
	return e.ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(context.Background())
}

func (e RegionInstanceGroupManagerFailoverAction) ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerFailoverActionPtrOutput {
	return RegionInstanceGroupManagerFailoverAction(e).ToRegionInstanceGroupManagerFailoverActionOutputWithContext(ctx).ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx)
}

func (e RegionInstanceGroupManagerFailoverAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionInstanceGroupManagerFailoverAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionInstanceGroupManagerFailoverAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionInstanceGroupManagerFailoverAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionInstanceGroupManagerFailoverActionOutput struct{ *pulumi.OutputState }

func (RegionInstanceGroupManagerFailoverActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerFailoverAction)(nil)).Elem()
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToRegionInstanceGroupManagerFailoverActionOutput() RegionInstanceGroupManagerFailoverActionOutput {
	return o
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToRegionInstanceGroupManagerFailoverActionOutputWithContext(ctx context.Context) RegionInstanceGroupManagerFailoverActionOutput {
	return o
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToRegionInstanceGroupManagerFailoverActionPtrOutput() RegionInstanceGroupManagerFailoverActionPtrOutput {
	return o.ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerFailoverActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionInstanceGroupManagerFailoverAction) *RegionInstanceGroupManagerFailoverAction {
		return &v
	}).(RegionInstanceGroupManagerFailoverActionPtrOutput)
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionInstanceGroupManagerFailoverAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerFailoverActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionInstanceGroupManagerFailoverAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionInstanceGroupManagerFailoverActionPtrOutput struct{ *pulumi.OutputState }

func (RegionInstanceGroupManagerFailoverActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionInstanceGroupManagerFailoverAction)(nil)).Elem()
}

func (o RegionInstanceGroupManagerFailoverActionPtrOutput) ToRegionInstanceGroupManagerFailoverActionPtrOutput() RegionInstanceGroupManagerFailoverActionPtrOutput {
	return o
}

func (o RegionInstanceGroupManagerFailoverActionPtrOutput) ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerFailoverActionPtrOutput {
	return o
}

func (o RegionInstanceGroupManagerFailoverActionPtrOutput) Elem() RegionInstanceGroupManagerFailoverActionOutput {
	return o.ApplyT(func(v *RegionInstanceGroupManagerFailoverAction) RegionInstanceGroupManagerFailoverAction {
		if v != nil {
			return *v
		}
		var ret RegionInstanceGroupManagerFailoverAction
		return ret
	}).(RegionInstanceGroupManagerFailoverActionOutput)
}

func (o RegionInstanceGroupManagerFailoverActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerFailoverActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionInstanceGroupManagerFailoverAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionInstanceGroupManagerFailoverActionInput is an input type that accepts RegionInstanceGroupManagerFailoverActionArgs and RegionInstanceGroupManagerFailoverActionOutput values.
// You can construct a concrete instance of `RegionInstanceGroupManagerFailoverActionInput` via:
//
//          RegionInstanceGroupManagerFailoverActionArgs{...}
type RegionInstanceGroupManagerFailoverActionInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerFailoverActionOutput() RegionInstanceGroupManagerFailoverActionOutput
	ToRegionInstanceGroupManagerFailoverActionOutputWithContext(context.Context) RegionInstanceGroupManagerFailoverActionOutput
}

var regionInstanceGroupManagerFailoverActionPtrType = reflect.TypeOf((**RegionInstanceGroupManagerFailoverAction)(nil)).Elem()

type RegionInstanceGroupManagerFailoverActionPtrInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerFailoverActionPtrOutput() RegionInstanceGroupManagerFailoverActionPtrOutput
	ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(context.Context) RegionInstanceGroupManagerFailoverActionPtrOutput
}

type regionInstanceGroupManagerFailoverActionPtr string

func RegionInstanceGroupManagerFailoverActionPtr(v string) RegionInstanceGroupManagerFailoverActionPtrInput {
	return (*regionInstanceGroupManagerFailoverActionPtr)(&v)
}

func (*regionInstanceGroupManagerFailoverActionPtr) ElementType() reflect.Type {
	return regionInstanceGroupManagerFailoverActionPtrType
}

func (in *regionInstanceGroupManagerFailoverActionPtr) ToRegionInstanceGroupManagerFailoverActionPtrOutput() RegionInstanceGroupManagerFailoverActionPtrOutput {
	return pulumi.ToOutput(in).(RegionInstanceGroupManagerFailoverActionPtrOutput)
}

func (in *regionInstanceGroupManagerFailoverActionPtr) ToRegionInstanceGroupManagerFailoverActionPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerFailoverActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionInstanceGroupManagerFailoverActionPtrOutput)
}

// Pagination behavior of listManagedInstances API method for this Managed Instance Group.
type RegionInstanceGroupManagerListManagedInstancesResults string

const (
	// (Default) Pagination is disabled for listManagedInstances API method. maxResults and pageToken query parameters are ignored and all instances are returned in a single response.
	RegionInstanceGroupManagerListManagedInstancesResultsPageless = RegionInstanceGroupManagerListManagedInstancesResults("PAGELESS")
	// Pagination is enabled for listManagedInstances API method. maxResults and pageToken query parameters are respected.
	RegionInstanceGroupManagerListManagedInstancesResultsPaginated = RegionInstanceGroupManagerListManagedInstancesResults("PAGINATED")
)

func (RegionInstanceGroupManagerListManagedInstancesResults) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerListManagedInstancesResults)(nil)).Elem()
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToRegionInstanceGroupManagerListManagedInstancesResultsOutput() RegionInstanceGroupManagerListManagedInstancesResultsOutput {
	return pulumi.ToOutput(e).(RegionInstanceGroupManagerListManagedInstancesResultsOutput)
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToRegionInstanceGroupManagerListManagedInstancesResultsOutputWithContext(ctx context.Context) RegionInstanceGroupManagerListManagedInstancesResultsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionInstanceGroupManagerListManagedInstancesResultsOutput)
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutput() RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return e.ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(context.Background())
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return RegionInstanceGroupManagerListManagedInstancesResults(e).ToRegionInstanceGroupManagerListManagedInstancesResultsOutputWithContext(ctx).ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx)
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionInstanceGroupManagerListManagedInstancesResults) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionInstanceGroupManagerListManagedInstancesResultsOutput struct{ *pulumi.OutputState }

func (RegionInstanceGroupManagerListManagedInstancesResultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerListManagedInstancesResults)(nil)).Elem()
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToRegionInstanceGroupManagerListManagedInstancesResultsOutput() RegionInstanceGroupManagerListManagedInstancesResultsOutput {
	return o
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToRegionInstanceGroupManagerListManagedInstancesResultsOutputWithContext(ctx context.Context) RegionInstanceGroupManagerListManagedInstancesResultsOutput {
	return o
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutput() RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o.ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionInstanceGroupManagerListManagedInstancesResults) *RegionInstanceGroupManagerListManagedInstancesResults {
		return &v
	}).(RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput)
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionInstanceGroupManagerListManagedInstancesResults) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionInstanceGroupManagerListManagedInstancesResults) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput struct{ *pulumi.OutputState }

func (RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionInstanceGroupManagerListManagedInstancesResults)(nil)).Elem()
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutput() RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return o
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput) Elem() RegionInstanceGroupManagerListManagedInstancesResultsOutput {
	return o.ApplyT(func(v *RegionInstanceGroupManagerListManagedInstancesResults) RegionInstanceGroupManagerListManagedInstancesResults {
		if v != nil {
			return *v
		}
		var ret RegionInstanceGroupManagerListManagedInstancesResults
		return ret
	}).(RegionInstanceGroupManagerListManagedInstancesResultsOutput)
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionInstanceGroupManagerListManagedInstancesResults) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionInstanceGroupManagerListManagedInstancesResultsInput is an input type that accepts RegionInstanceGroupManagerListManagedInstancesResultsArgs and RegionInstanceGroupManagerListManagedInstancesResultsOutput values.
// You can construct a concrete instance of `RegionInstanceGroupManagerListManagedInstancesResultsInput` via:
//
//          RegionInstanceGroupManagerListManagedInstancesResultsArgs{...}
type RegionInstanceGroupManagerListManagedInstancesResultsInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerListManagedInstancesResultsOutput() RegionInstanceGroupManagerListManagedInstancesResultsOutput
	ToRegionInstanceGroupManagerListManagedInstancesResultsOutputWithContext(context.Context) RegionInstanceGroupManagerListManagedInstancesResultsOutput
}

var regionInstanceGroupManagerListManagedInstancesResultsPtrType = reflect.TypeOf((**RegionInstanceGroupManagerListManagedInstancesResults)(nil)).Elem()

type RegionInstanceGroupManagerListManagedInstancesResultsPtrInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutput() RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput
	ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(context.Context) RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput
}

type regionInstanceGroupManagerListManagedInstancesResultsPtr string

func RegionInstanceGroupManagerListManagedInstancesResultsPtr(v string) RegionInstanceGroupManagerListManagedInstancesResultsPtrInput {
	return (*regionInstanceGroupManagerListManagedInstancesResultsPtr)(&v)
}

func (*regionInstanceGroupManagerListManagedInstancesResultsPtr) ElementType() reflect.Type {
	return regionInstanceGroupManagerListManagedInstancesResultsPtrType
}

func (in *regionInstanceGroupManagerListManagedInstancesResultsPtr) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutput() RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return pulumi.ToOutput(in).(RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput)
}

func (in *regionInstanceGroupManagerListManagedInstancesResultsPtr) ToRegionInstanceGroupManagerListManagedInstancesResultsPtrOutputWithContext(ctx context.Context) RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput)
}

// Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
type RegionNetworkEndpointGroupNetworkEndpointType string

const (
	// The network endpoint is represented by an IP address.
	RegionNetworkEndpointGroupNetworkEndpointTypeGceVmIp = RegionNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP")
	// The network endpoint is represented by IP address and port pair.
	RegionNetworkEndpointGroupNetworkEndpointTypeGceVmIpPort = RegionNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP_PORT")
	// The network endpoint is the primary IP address on any network interface of a VM in Compute Engine.
	RegionNetworkEndpointGroupNetworkEndpointTypeGceVmPrimaryIp = RegionNetworkEndpointGroupNetworkEndpointType("GCE_VM_PRIMARY_IP")
	// The network endpoint is represented by fully qualified domain name and port.
	RegionNetworkEndpointGroupNetworkEndpointTypeInternetFqdnPort = RegionNetworkEndpointGroupNetworkEndpointType("INTERNET_FQDN_PORT")
	// The network endpoint is represented by an internet IP address and port.
	RegionNetworkEndpointGroupNetworkEndpointTypeInternetIpPort = RegionNetworkEndpointGroupNetworkEndpointType("INTERNET_IP_PORT")
	// The network endpoint is represented by an IP address and port. The endpoint belongs to a VM or pod running in a customer's on-premises.
	RegionNetworkEndpointGroupNetworkEndpointTypeNonGcpPrivateIpPort = RegionNetworkEndpointGroupNetworkEndpointType("NON_GCP_PRIVATE_IP_PORT")
	// The network endpoint is either public Google APIs or services exposed by other GCP Project with a Service Attachment. The connection is set up by private service connect
	RegionNetworkEndpointGroupNetworkEndpointTypePrivateServiceConnect = RegionNetworkEndpointGroupNetworkEndpointType("PRIVATE_SERVICE_CONNECT")
	// The network endpoint is handled by specified serverless infrastructure.
	RegionNetworkEndpointGroupNetworkEndpointTypeServerless = RegionNetworkEndpointGroupNetworkEndpointType("SERVERLESS")
)

func (RegionNetworkEndpointGroupNetworkEndpointType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToRegionNetworkEndpointGroupNetworkEndpointTypeOutput() RegionNetworkEndpointGroupNetworkEndpointTypeOutput {
	return pulumi.ToOutput(e).(RegionNetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToRegionNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupNetworkEndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionNetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutput() RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return e.ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Background())
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return RegionNetworkEndpointGroupNetworkEndpointType(e).ToRegionNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx).ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx)
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionNetworkEndpointGroupNetworkEndpointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionNetworkEndpointGroupNetworkEndpointTypeOutput struct{ *pulumi.OutputState }

func (RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToRegionNetworkEndpointGroupNetworkEndpointTypeOutput() RegionNetworkEndpointGroupNetworkEndpointTypeOutput {
	return o
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToRegionNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupNetworkEndpointTypeOutput {
	return o
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutput() RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o.ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionNetworkEndpointGroupNetworkEndpointType) *RegionNetworkEndpointGroupNetworkEndpointType {
		return &v
	}).(RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkEndpointGroupNetworkEndpointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkEndpointGroupNetworkEndpointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput struct{ *pulumi.OutputState }

func (RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutput() RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return o
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput) Elem() RegionNetworkEndpointGroupNetworkEndpointTypeOutput {
	return o.ApplyT(func(v *RegionNetworkEndpointGroupNetworkEndpointType) RegionNetworkEndpointGroupNetworkEndpointType {
		if v != nil {
			return *v
		}
		var ret RegionNetworkEndpointGroupNetworkEndpointType
		return ret
	}).(RegionNetworkEndpointGroupNetworkEndpointTypeOutput)
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionNetworkEndpointGroupNetworkEndpointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionNetworkEndpointGroupNetworkEndpointTypeInput is an input type that accepts RegionNetworkEndpointGroupNetworkEndpointTypeArgs and RegionNetworkEndpointGroupNetworkEndpointTypeOutput values.
// You can construct a concrete instance of `RegionNetworkEndpointGroupNetworkEndpointTypeInput` via:
//
//          RegionNetworkEndpointGroupNetworkEndpointTypeArgs{...}
type RegionNetworkEndpointGroupNetworkEndpointTypeInput interface {
	pulumi.Input

	ToRegionNetworkEndpointGroupNetworkEndpointTypeOutput() RegionNetworkEndpointGroupNetworkEndpointTypeOutput
	ToRegionNetworkEndpointGroupNetworkEndpointTypeOutputWithContext(context.Context) RegionNetworkEndpointGroupNetworkEndpointTypeOutput
}

var regionNetworkEndpointGroupNetworkEndpointTypePtrType = reflect.TypeOf((**RegionNetworkEndpointGroupNetworkEndpointType)(nil)).Elem()

type RegionNetworkEndpointGroupNetworkEndpointTypePtrInput interface {
	pulumi.Input

	ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutput() RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput
	ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(context.Context) RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput
}

type regionNetworkEndpointGroupNetworkEndpointTypePtr string

func RegionNetworkEndpointGroupNetworkEndpointTypePtr(v string) RegionNetworkEndpointGroupNetworkEndpointTypePtrInput {
	return (*regionNetworkEndpointGroupNetworkEndpointTypePtr)(&v)
}

func (*regionNetworkEndpointGroupNetworkEndpointTypePtr) ElementType() reflect.Type {
	return regionNetworkEndpointGroupNetworkEndpointTypePtrType
}

func (in *regionNetworkEndpointGroupNetworkEndpointTypePtr) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutput() RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return pulumi.ToOutput(in).(RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

func (in *regionNetworkEndpointGroupNetworkEndpointTypePtr) ToRegionNetworkEndpointGroupNetworkEndpointTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput)
}

// Specify the type of this network endpoint group. Only LOAD_BALANCING is valid for now.
type RegionNetworkEndpointGroupType string

const (
	// The network endpoint group is a backend of a load balancer.
	RegionNetworkEndpointGroupTypeLoadBalancing = RegionNetworkEndpointGroupType("LOAD_BALANCING")
)

func (RegionNetworkEndpointGroupType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkEndpointGroupType)(nil)).Elem()
}

func (e RegionNetworkEndpointGroupType) ToRegionNetworkEndpointGroupTypeOutput() RegionNetworkEndpointGroupTypeOutput {
	return pulumi.ToOutput(e).(RegionNetworkEndpointGroupTypeOutput)
}

func (e RegionNetworkEndpointGroupType) ToRegionNetworkEndpointGroupTypeOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionNetworkEndpointGroupTypeOutput)
}

func (e RegionNetworkEndpointGroupType) ToRegionNetworkEndpointGroupTypePtrOutput() RegionNetworkEndpointGroupTypePtrOutput {
	return e.ToRegionNetworkEndpointGroupTypePtrOutputWithContext(context.Background())
}

func (e RegionNetworkEndpointGroupType) ToRegionNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupTypePtrOutput {
	return RegionNetworkEndpointGroupType(e).ToRegionNetworkEndpointGroupTypeOutputWithContext(ctx).ToRegionNetworkEndpointGroupTypePtrOutputWithContext(ctx)
}

func (e RegionNetworkEndpointGroupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkEndpointGroupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkEndpointGroupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionNetworkEndpointGroupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionNetworkEndpointGroupTypeOutput struct{ *pulumi.OutputState }

func (RegionNetworkEndpointGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkEndpointGroupType)(nil)).Elem()
}

func (o RegionNetworkEndpointGroupTypeOutput) ToRegionNetworkEndpointGroupTypeOutput() RegionNetworkEndpointGroupTypeOutput {
	return o
}

func (o RegionNetworkEndpointGroupTypeOutput) ToRegionNetworkEndpointGroupTypeOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupTypeOutput {
	return o
}

func (o RegionNetworkEndpointGroupTypeOutput) ToRegionNetworkEndpointGroupTypePtrOutput() RegionNetworkEndpointGroupTypePtrOutput {
	return o.ToRegionNetworkEndpointGroupTypePtrOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupTypeOutput) ToRegionNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionNetworkEndpointGroupType) *RegionNetworkEndpointGroupType {
		return &v
	}).(RegionNetworkEndpointGroupTypePtrOutput)
}

func (o RegionNetworkEndpointGroupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkEndpointGroupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionNetworkEndpointGroupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkEndpointGroupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionNetworkEndpointGroupTypePtrOutput struct{ *pulumi.OutputState }

func (RegionNetworkEndpointGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionNetworkEndpointGroupType)(nil)).Elem()
}

func (o RegionNetworkEndpointGroupTypePtrOutput) ToRegionNetworkEndpointGroupTypePtrOutput() RegionNetworkEndpointGroupTypePtrOutput {
	return o
}

func (o RegionNetworkEndpointGroupTypePtrOutput) ToRegionNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupTypePtrOutput {
	return o
}

func (o RegionNetworkEndpointGroupTypePtrOutput) Elem() RegionNetworkEndpointGroupTypeOutput {
	return o.ApplyT(func(v *RegionNetworkEndpointGroupType) RegionNetworkEndpointGroupType {
		if v != nil {
			return *v
		}
		var ret RegionNetworkEndpointGroupType
		return ret
	}).(RegionNetworkEndpointGroupTypeOutput)
}

func (o RegionNetworkEndpointGroupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkEndpointGroupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionNetworkEndpointGroupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionNetworkEndpointGroupTypeInput is an input type that accepts RegionNetworkEndpointGroupTypeArgs and RegionNetworkEndpointGroupTypeOutput values.
// You can construct a concrete instance of `RegionNetworkEndpointGroupTypeInput` via:
//
//          RegionNetworkEndpointGroupTypeArgs{...}
type RegionNetworkEndpointGroupTypeInput interface {
	pulumi.Input

	ToRegionNetworkEndpointGroupTypeOutput() RegionNetworkEndpointGroupTypeOutput
	ToRegionNetworkEndpointGroupTypeOutputWithContext(context.Context) RegionNetworkEndpointGroupTypeOutput
}

var regionNetworkEndpointGroupTypePtrType = reflect.TypeOf((**RegionNetworkEndpointGroupType)(nil)).Elem()

type RegionNetworkEndpointGroupTypePtrInput interface {
	pulumi.Input

	ToRegionNetworkEndpointGroupTypePtrOutput() RegionNetworkEndpointGroupTypePtrOutput
	ToRegionNetworkEndpointGroupTypePtrOutputWithContext(context.Context) RegionNetworkEndpointGroupTypePtrOutput
}

type regionNetworkEndpointGroupTypePtr string

func RegionNetworkEndpointGroupTypePtr(v string) RegionNetworkEndpointGroupTypePtrInput {
	return (*regionNetworkEndpointGroupTypePtr)(&v)
}

func (*regionNetworkEndpointGroupTypePtr) ElementType() reflect.Type {
	return regionNetworkEndpointGroupTypePtrType
}

func (in *regionNetworkEndpointGroupTypePtr) ToRegionNetworkEndpointGroupTypePtrOutput() RegionNetworkEndpointGroupTypePtrOutput {
	return pulumi.ToOutput(in).(RegionNetworkEndpointGroupTypePtrOutput)
}

func (in *regionNetworkEndpointGroupTypePtr) ToRegionNetworkEndpointGroupTypePtrOutputWithContext(ctx context.Context) RegionNetworkEndpointGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionNetworkEndpointGroupTypePtrOutput)
}

// The scope of networks allowed to be associated with the firewall policy. This field can be either GLOBAL_VPC_NETWORK or REGIONAL_VPC_NETWORK. A firewall policy with the VPC scope set to GLOBAL_VPC_NETWORK is allowed to be attached only to global networks. When the VPC scope is set to REGIONAL_VPC_NETWORK the firewall policy is allowed to be attached only to regional networks in the same scope as the firewall policy. Note: if not specified then GLOBAL_VPC_NETWORK will be used.
type RegionNetworkFirewallPolicyVpcNetworkScope string

const (
	// The firewall policy is allowed to be attached only to global networks.
	RegionNetworkFirewallPolicyVpcNetworkScopeGlobalVpcNetwork = RegionNetworkFirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK")
	// The firewall policy is allowed to be attached only to regional networks in the same scope as the firewall policy. This option is applicable only to regional firewall policies.
	RegionNetworkFirewallPolicyVpcNetworkScopeRegionalVpcNetwork = RegionNetworkFirewallPolicyVpcNetworkScope("REGIONAL_VPC_NETWORK")
)

func (RegionNetworkFirewallPolicyVpcNetworkScope) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToRegionNetworkFirewallPolicyVpcNetworkScopeOutput() RegionNetworkFirewallPolicyVpcNetworkScopeOutput {
	return pulumi.ToOutput(e).(RegionNetworkFirewallPolicyVpcNetworkScopeOutput)
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToRegionNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyVpcNetworkScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionNetworkFirewallPolicyVpcNetworkScopeOutput)
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutput() RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return e.ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Background())
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return RegionNetworkFirewallPolicyVpcNetworkScope(e).ToRegionNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(ctx).ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx)
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionNetworkFirewallPolicyVpcNetworkScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionNetworkFirewallPolicyVpcNetworkScopeOutput struct{ *pulumi.OutputState }

func (RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToRegionNetworkFirewallPolicyVpcNetworkScopeOutput() RegionNetworkFirewallPolicyVpcNetworkScopeOutput {
	return o
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToRegionNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyVpcNetworkScopeOutput {
	return o
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutput() RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o.ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Background())
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionNetworkFirewallPolicyVpcNetworkScope) *RegionNetworkFirewallPolicyVpcNetworkScope {
		return &v
	}).(RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput)
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkFirewallPolicyVpcNetworkScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkFirewallPolicyVpcNetworkScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput struct{ *pulumi.OutputState }

func (RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionNetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutput() RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return o
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput) Elem() RegionNetworkFirewallPolicyVpcNetworkScopeOutput {
	return o.ApplyT(func(v *RegionNetworkFirewallPolicyVpcNetworkScope) RegionNetworkFirewallPolicyVpcNetworkScope {
		if v != nil {
			return *v
		}
		var ret RegionNetworkFirewallPolicyVpcNetworkScope
		return ret
	}).(RegionNetworkFirewallPolicyVpcNetworkScopeOutput)
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionNetworkFirewallPolicyVpcNetworkScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionNetworkFirewallPolicyVpcNetworkScopeInput is an input type that accepts RegionNetworkFirewallPolicyVpcNetworkScopeArgs and RegionNetworkFirewallPolicyVpcNetworkScopeOutput values.
// You can construct a concrete instance of `RegionNetworkFirewallPolicyVpcNetworkScopeInput` via:
//
//          RegionNetworkFirewallPolicyVpcNetworkScopeArgs{...}
type RegionNetworkFirewallPolicyVpcNetworkScopeInput interface {
	pulumi.Input

	ToRegionNetworkFirewallPolicyVpcNetworkScopeOutput() RegionNetworkFirewallPolicyVpcNetworkScopeOutput
	ToRegionNetworkFirewallPolicyVpcNetworkScopeOutputWithContext(context.Context) RegionNetworkFirewallPolicyVpcNetworkScopeOutput
}

var regionNetworkFirewallPolicyVpcNetworkScopePtrType = reflect.TypeOf((**RegionNetworkFirewallPolicyVpcNetworkScope)(nil)).Elem()

type RegionNetworkFirewallPolicyVpcNetworkScopePtrInput interface {
	pulumi.Input

	ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutput() RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput
	ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(context.Context) RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput
}

type regionNetworkFirewallPolicyVpcNetworkScopePtr string

func RegionNetworkFirewallPolicyVpcNetworkScopePtr(v string) RegionNetworkFirewallPolicyVpcNetworkScopePtrInput {
	return (*regionNetworkFirewallPolicyVpcNetworkScopePtr)(&v)
}

func (*regionNetworkFirewallPolicyVpcNetworkScopePtr) ElementType() reflect.Type {
	return regionNetworkFirewallPolicyVpcNetworkScopePtrType
}

func (in *regionNetworkFirewallPolicyVpcNetworkScopePtr) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutput() RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return pulumi.ToOutput(in).(RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput)
}

func (in *regionNetworkFirewallPolicyVpcNetworkScopePtr) ToRegionNetworkFirewallPolicyVpcNetworkScopePtrOutputWithContext(ctx context.Context) RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput)
}

// The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
type RegionNetworkNetworkFirewallPolicyEnforcementOrder string

const (
	RegionNetworkNetworkFirewallPolicyEnforcementOrderAfterClassicFirewall  = RegionNetworkNetworkFirewallPolicyEnforcementOrder("AFTER_CLASSIC_FIREWALL")
	RegionNetworkNetworkFirewallPolicyEnforcementOrderBeforeClassicFirewall = RegionNetworkNetworkFirewallPolicyEnforcementOrder("BEFORE_CLASSIC_FIREWALL")
)

func (RegionNetworkNetworkFirewallPolicyEnforcementOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return pulumi.ToOutput(e).(RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput)
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(ctx context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput)
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return e.ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(context.Background())
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return RegionNetworkNetworkFirewallPolicyEnforcementOrder(e).ToRegionNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(ctx).ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx)
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionNetworkNetworkFirewallPolicyEnforcementOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput struct{ *pulumi.OutputState }

func (RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionNetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return o
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(ctx context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return o
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o.ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(context.Background())
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionNetworkNetworkFirewallPolicyEnforcementOrder) *RegionNetworkNetworkFirewallPolicyEnforcementOrder {
		return &v
	}).(RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput)
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkNetworkFirewallPolicyEnforcementOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionNetworkNetworkFirewallPolicyEnforcementOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput struct{ *pulumi.OutputState }

func (RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionNetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return o
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) Elem() RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput {
	return o.ApplyT(func(v *RegionNetworkNetworkFirewallPolicyEnforcementOrder) RegionNetworkNetworkFirewallPolicyEnforcementOrder {
		if v != nil {
			return *v
		}
		var ret RegionNetworkNetworkFirewallPolicyEnforcementOrder
		return ret
	}).(RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput)
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionNetworkNetworkFirewallPolicyEnforcementOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionNetworkNetworkFirewallPolicyEnforcementOrderInput is an input type that accepts RegionNetworkNetworkFirewallPolicyEnforcementOrderArgs and RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput values.
// You can construct a concrete instance of `RegionNetworkNetworkFirewallPolicyEnforcementOrderInput` via:
//
//          RegionNetworkNetworkFirewallPolicyEnforcementOrderArgs{...}
type RegionNetworkNetworkFirewallPolicyEnforcementOrderInput interface {
	pulumi.Input

	ToRegionNetworkNetworkFirewallPolicyEnforcementOrderOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput
	ToRegionNetworkNetworkFirewallPolicyEnforcementOrderOutputWithContext(context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput
}

var regionNetworkNetworkFirewallPolicyEnforcementOrderPtrType = reflect.TypeOf((**RegionNetworkNetworkFirewallPolicyEnforcementOrder)(nil)).Elem()

type RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrInput interface {
	pulumi.Input

	ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput
	ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput
}

type regionNetworkNetworkFirewallPolicyEnforcementOrderPtr string

func RegionNetworkNetworkFirewallPolicyEnforcementOrderPtr(v string) RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrInput {
	return (*regionNetworkNetworkFirewallPolicyEnforcementOrderPtr)(&v)
}

func (*regionNetworkNetworkFirewallPolicyEnforcementOrderPtr) ElementType() reflect.Type {
	return regionNetworkNetworkFirewallPolicyEnforcementOrderPtrType
}

func (in *regionNetworkNetworkFirewallPolicyEnforcementOrderPtr) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput() RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return pulumi.ToOutput(in).(RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput)
}

func (in *regionNetworkNetworkFirewallPolicyEnforcementOrderPtr) ToRegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutputWithContext(ctx context.Context) RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput)
}

// The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. This field can be set only at resource creation time.
type RegionSecurityPolicyType string

const (
	RegionSecurityPolicyTypeCloudArmor        = RegionSecurityPolicyType("CLOUD_ARMOR")
	RegionSecurityPolicyTypeCloudArmorEdge    = RegionSecurityPolicyType("CLOUD_ARMOR_EDGE")
	RegionSecurityPolicyTypeCloudArmorNetwork = RegionSecurityPolicyType("CLOUD_ARMOR_NETWORK")
	RegionSecurityPolicyTypeFirewall          = RegionSecurityPolicyType("FIREWALL")
)

func (RegionSecurityPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSecurityPolicyType)(nil)).Elem()
}

func (e RegionSecurityPolicyType) ToRegionSecurityPolicyTypeOutput() RegionSecurityPolicyTypeOutput {
	return pulumi.ToOutput(e).(RegionSecurityPolicyTypeOutput)
}

func (e RegionSecurityPolicyType) ToRegionSecurityPolicyTypeOutputWithContext(ctx context.Context) RegionSecurityPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionSecurityPolicyTypeOutput)
}

func (e RegionSecurityPolicyType) ToRegionSecurityPolicyTypePtrOutput() RegionSecurityPolicyTypePtrOutput {
	return e.ToRegionSecurityPolicyTypePtrOutputWithContext(context.Background())
}

func (e RegionSecurityPolicyType) ToRegionSecurityPolicyTypePtrOutputWithContext(ctx context.Context) RegionSecurityPolicyTypePtrOutput {
	return RegionSecurityPolicyType(e).ToRegionSecurityPolicyTypeOutputWithContext(ctx).ToRegionSecurityPolicyTypePtrOutputWithContext(ctx)
}

func (e RegionSecurityPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSecurityPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSecurityPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionSecurityPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionSecurityPolicyTypeOutput struct{ *pulumi.OutputState }

func (RegionSecurityPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSecurityPolicyType)(nil)).Elem()
}

func (o RegionSecurityPolicyTypeOutput) ToRegionSecurityPolicyTypeOutput() RegionSecurityPolicyTypeOutput {
	return o
}

func (o RegionSecurityPolicyTypeOutput) ToRegionSecurityPolicyTypeOutputWithContext(ctx context.Context) RegionSecurityPolicyTypeOutput {
	return o
}

func (o RegionSecurityPolicyTypeOutput) ToRegionSecurityPolicyTypePtrOutput() RegionSecurityPolicyTypePtrOutput {
	return o.ToRegionSecurityPolicyTypePtrOutputWithContext(context.Background())
}

func (o RegionSecurityPolicyTypeOutput) ToRegionSecurityPolicyTypePtrOutputWithContext(ctx context.Context) RegionSecurityPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionSecurityPolicyType) *RegionSecurityPolicyType {
		return &v
	}).(RegionSecurityPolicyTypePtrOutput)
}

func (o RegionSecurityPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionSecurityPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSecurityPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionSecurityPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSecurityPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSecurityPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionSecurityPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (RegionSecurityPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSecurityPolicyType)(nil)).Elem()
}

func (o RegionSecurityPolicyTypePtrOutput) ToRegionSecurityPolicyTypePtrOutput() RegionSecurityPolicyTypePtrOutput {
	return o
}

func (o RegionSecurityPolicyTypePtrOutput) ToRegionSecurityPolicyTypePtrOutputWithContext(ctx context.Context) RegionSecurityPolicyTypePtrOutput {
	return o
}

func (o RegionSecurityPolicyTypePtrOutput) Elem() RegionSecurityPolicyTypeOutput {
	return o.ApplyT(func(v *RegionSecurityPolicyType) RegionSecurityPolicyType {
		if v != nil {
			return *v
		}
		var ret RegionSecurityPolicyType
		return ret
	}).(RegionSecurityPolicyTypeOutput)
}

func (o RegionSecurityPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSecurityPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionSecurityPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionSecurityPolicyTypeInput is an input type that accepts RegionSecurityPolicyTypeArgs and RegionSecurityPolicyTypeOutput values.
// You can construct a concrete instance of `RegionSecurityPolicyTypeInput` via:
//
//          RegionSecurityPolicyTypeArgs{...}
type RegionSecurityPolicyTypeInput interface {
	pulumi.Input

	ToRegionSecurityPolicyTypeOutput() RegionSecurityPolicyTypeOutput
	ToRegionSecurityPolicyTypeOutputWithContext(context.Context) RegionSecurityPolicyTypeOutput
}

var regionSecurityPolicyTypePtrType = reflect.TypeOf((**RegionSecurityPolicyType)(nil)).Elem()

type RegionSecurityPolicyTypePtrInput interface {
	pulumi.Input

	ToRegionSecurityPolicyTypePtrOutput() RegionSecurityPolicyTypePtrOutput
	ToRegionSecurityPolicyTypePtrOutputWithContext(context.Context) RegionSecurityPolicyTypePtrOutput
}

type regionSecurityPolicyTypePtr string

func RegionSecurityPolicyTypePtr(v string) RegionSecurityPolicyTypePtrInput {
	return (*regionSecurityPolicyTypePtr)(&v)
}

func (*regionSecurityPolicyTypePtr) ElementType() reflect.Type {
	return regionSecurityPolicyTypePtrType
}

func (in *regionSecurityPolicyTypePtr) ToRegionSecurityPolicyTypePtrOutput() RegionSecurityPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(RegionSecurityPolicyTypePtrOutput)
}

func (in *regionSecurityPolicyTypePtr) ToRegionSecurityPolicyTypePtrOutputWithContext(ctx context.Context) RegionSecurityPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionSecurityPolicyTypePtrOutput)
}

// (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
type RegionSslCertificateType string

const (
	// Google-managed SSLCertificate.
	RegionSslCertificateTypeManaged = RegionSslCertificateType("MANAGED")
	// Certificate uploaded by user.
	RegionSslCertificateTypeSelfManaged     = RegionSslCertificateType("SELF_MANAGED")
	RegionSslCertificateTypeTypeUnspecified = RegionSslCertificateType("TYPE_UNSPECIFIED")
)

func (RegionSslCertificateType) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSslCertificateType)(nil)).Elem()
}

func (e RegionSslCertificateType) ToRegionSslCertificateTypeOutput() RegionSslCertificateTypeOutput {
	return pulumi.ToOutput(e).(RegionSslCertificateTypeOutput)
}

func (e RegionSslCertificateType) ToRegionSslCertificateTypeOutputWithContext(ctx context.Context) RegionSslCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionSslCertificateTypeOutput)
}

func (e RegionSslCertificateType) ToRegionSslCertificateTypePtrOutput() RegionSslCertificateTypePtrOutput {
	return e.ToRegionSslCertificateTypePtrOutputWithContext(context.Background())
}

func (e RegionSslCertificateType) ToRegionSslCertificateTypePtrOutputWithContext(ctx context.Context) RegionSslCertificateTypePtrOutput {
	return RegionSslCertificateType(e).ToRegionSslCertificateTypeOutputWithContext(ctx).ToRegionSslCertificateTypePtrOutputWithContext(ctx)
}

func (e RegionSslCertificateType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSslCertificateType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSslCertificateType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionSslCertificateType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionSslCertificateTypeOutput struct{ *pulumi.OutputState }

func (RegionSslCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSslCertificateType)(nil)).Elem()
}

func (o RegionSslCertificateTypeOutput) ToRegionSslCertificateTypeOutput() RegionSslCertificateTypeOutput {
	return o
}

func (o RegionSslCertificateTypeOutput) ToRegionSslCertificateTypeOutputWithContext(ctx context.Context) RegionSslCertificateTypeOutput {
	return o
}

func (o RegionSslCertificateTypeOutput) ToRegionSslCertificateTypePtrOutput() RegionSslCertificateTypePtrOutput {
	return o.ToRegionSslCertificateTypePtrOutputWithContext(context.Background())
}

func (o RegionSslCertificateTypeOutput) ToRegionSslCertificateTypePtrOutputWithContext(ctx context.Context) RegionSslCertificateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionSslCertificateType) *RegionSslCertificateType {
		return &v
	}).(RegionSslCertificateTypePtrOutput)
}

func (o RegionSslCertificateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionSslCertificateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSslCertificateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionSslCertificateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSslCertificateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSslCertificateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionSslCertificateTypePtrOutput struct{ *pulumi.OutputState }

func (RegionSslCertificateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSslCertificateType)(nil)).Elem()
}

func (o RegionSslCertificateTypePtrOutput) ToRegionSslCertificateTypePtrOutput() RegionSslCertificateTypePtrOutput {
	return o
}

func (o RegionSslCertificateTypePtrOutput) ToRegionSslCertificateTypePtrOutputWithContext(ctx context.Context) RegionSslCertificateTypePtrOutput {
	return o
}

func (o RegionSslCertificateTypePtrOutput) Elem() RegionSslCertificateTypeOutput {
	return o.ApplyT(func(v *RegionSslCertificateType) RegionSslCertificateType {
		if v != nil {
			return *v
		}
		var ret RegionSslCertificateType
		return ret
	}).(RegionSslCertificateTypeOutput)
}

func (o RegionSslCertificateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSslCertificateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionSslCertificateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionSslCertificateTypeInput is an input type that accepts RegionSslCertificateTypeArgs and RegionSslCertificateTypeOutput values.
// You can construct a concrete instance of `RegionSslCertificateTypeInput` via:
//
//          RegionSslCertificateTypeArgs{...}
type RegionSslCertificateTypeInput interface {
	pulumi.Input

	ToRegionSslCertificateTypeOutput() RegionSslCertificateTypeOutput
	ToRegionSslCertificateTypeOutputWithContext(context.Context) RegionSslCertificateTypeOutput
}

var regionSslCertificateTypePtrType = reflect.TypeOf((**RegionSslCertificateType)(nil)).Elem()

type RegionSslCertificateTypePtrInput interface {
	pulumi.Input

	ToRegionSslCertificateTypePtrOutput() RegionSslCertificateTypePtrOutput
	ToRegionSslCertificateTypePtrOutputWithContext(context.Context) RegionSslCertificateTypePtrOutput
}

type regionSslCertificateTypePtr string

func RegionSslCertificateTypePtr(v string) RegionSslCertificateTypePtrInput {
	return (*regionSslCertificateTypePtr)(&v)
}

func (*regionSslCertificateTypePtr) ElementType() reflect.Type {
	return regionSslCertificateTypePtrType
}

func (in *regionSslCertificateTypePtr) ToRegionSslCertificateTypePtrOutput() RegionSslCertificateTypePtrOutput {
	return pulumi.ToOutput(in).(RegionSslCertificateTypePtrOutput)
}

func (in *regionSslCertificateTypePtr) ToRegionSslCertificateTypePtrOutputWithContext(ctx context.Context) RegionSslCertificateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionSslCertificateTypePtrOutput)
}

// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
type RegionSslPolicyMinTlsVersion string

const (
	// TLS 1.0
	RegionSslPolicyMinTlsVersionTls10 = RegionSslPolicyMinTlsVersion("TLS_1_0")
	// TLS 1.1
	RegionSslPolicyMinTlsVersionTls11 = RegionSslPolicyMinTlsVersion("TLS_1_1")
	// TLS 1.2
	RegionSslPolicyMinTlsVersionTls12 = RegionSslPolicyMinTlsVersion("TLS_1_2")
)

func (RegionSslPolicyMinTlsVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSslPolicyMinTlsVersion)(nil)).Elem()
}

func (e RegionSslPolicyMinTlsVersion) ToRegionSslPolicyMinTlsVersionOutput() RegionSslPolicyMinTlsVersionOutput {
	return pulumi.ToOutput(e).(RegionSslPolicyMinTlsVersionOutput)
}

func (e RegionSslPolicyMinTlsVersion) ToRegionSslPolicyMinTlsVersionOutputWithContext(ctx context.Context) RegionSslPolicyMinTlsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionSslPolicyMinTlsVersionOutput)
}

func (e RegionSslPolicyMinTlsVersion) ToRegionSslPolicyMinTlsVersionPtrOutput() RegionSslPolicyMinTlsVersionPtrOutput {
	return e.ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(context.Background())
}

func (e RegionSslPolicyMinTlsVersion) ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) RegionSslPolicyMinTlsVersionPtrOutput {
	return RegionSslPolicyMinTlsVersion(e).ToRegionSslPolicyMinTlsVersionOutputWithContext(ctx).ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(ctx)
}

func (e RegionSslPolicyMinTlsVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSslPolicyMinTlsVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSslPolicyMinTlsVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionSslPolicyMinTlsVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionSslPolicyMinTlsVersionOutput struct{ *pulumi.OutputState }

func (RegionSslPolicyMinTlsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSslPolicyMinTlsVersion)(nil)).Elem()
}

func (o RegionSslPolicyMinTlsVersionOutput) ToRegionSslPolicyMinTlsVersionOutput() RegionSslPolicyMinTlsVersionOutput {
	return o
}

func (o RegionSslPolicyMinTlsVersionOutput) ToRegionSslPolicyMinTlsVersionOutputWithContext(ctx context.Context) RegionSslPolicyMinTlsVersionOutput {
	return o
}

func (o RegionSslPolicyMinTlsVersionOutput) ToRegionSslPolicyMinTlsVersionPtrOutput() RegionSslPolicyMinTlsVersionPtrOutput {
	return o.ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(context.Background())
}

func (o RegionSslPolicyMinTlsVersionOutput) ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) RegionSslPolicyMinTlsVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionSslPolicyMinTlsVersion) *RegionSslPolicyMinTlsVersion {
		return &v
	}).(RegionSslPolicyMinTlsVersionPtrOutput)
}

func (o RegionSslPolicyMinTlsVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionSslPolicyMinTlsVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSslPolicyMinTlsVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionSslPolicyMinTlsVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSslPolicyMinTlsVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSslPolicyMinTlsVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionSslPolicyMinTlsVersionPtrOutput struct{ *pulumi.OutputState }

func (RegionSslPolicyMinTlsVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSslPolicyMinTlsVersion)(nil)).Elem()
}

func (o RegionSslPolicyMinTlsVersionPtrOutput) ToRegionSslPolicyMinTlsVersionPtrOutput() RegionSslPolicyMinTlsVersionPtrOutput {
	return o
}

func (o RegionSslPolicyMinTlsVersionPtrOutput) ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) RegionSslPolicyMinTlsVersionPtrOutput {
	return o
}

func (o RegionSslPolicyMinTlsVersionPtrOutput) Elem() RegionSslPolicyMinTlsVersionOutput {
	return o.ApplyT(func(v *RegionSslPolicyMinTlsVersion) RegionSslPolicyMinTlsVersion {
		if v != nil {
			return *v
		}
		var ret RegionSslPolicyMinTlsVersion
		return ret
	}).(RegionSslPolicyMinTlsVersionOutput)
}

func (o RegionSslPolicyMinTlsVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSslPolicyMinTlsVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionSslPolicyMinTlsVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionSslPolicyMinTlsVersionInput is an input type that accepts RegionSslPolicyMinTlsVersionArgs and RegionSslPolicyMinTlsVersionOutput values.
// You can construct a concrete instance of `RegionSslPolicyMinTlsVersionInput` via:
//
//          RegionSslPolicyMinTlsVersionArgs{...}
type RegionSslPolicyMinTlsVersionInput interface {
	pulumi.Input

	ToRegionSslPolicyMinTlsVersionOutput() RegionSslPolicyMinTlsVersionOutput
	ToRegionSslPolicyMinTlsVersionOutputWithContext(context.Context) RegionSslPolicyMinTlsVersionOutput
}

var regionSslPolicyMinTlsVersionPtrType = reflect.TypeOf((**RegionSslPolicyMinTlsVersion)(nil)).Elem()

type RegionSslPolicyMinTlsVersionPtrInput interface {
	pulumi.Input

	ToRegionSslPolicyMinTlsVersionPtrOutput() RegionSslPolicyMinTlsVersionPtrOutput
	ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(context.Context) RegionSslPolicyMinTlsVersionPtrOutput
}

type regionSslPolicyMinTlsVersionPtr string

func RegionSslPolicyMinTlsVersionPtr(v string) RegionSslPolicyMinTlsVersionPtrInput {
	return (*regionSslPolicyMinTlsVersionPtr)(&v)
}

func (*regionSslPolicyMinTlsVersionPtr) ElementType() reflect.Type {
	return regionSslPolicyMinTlsVersionPtrType
}

func (in *regionSslPolicyMinTlsVersionPtr) ToRegionSslPolicyMinTlsVersionPtrOutput() RegionSslPolicyMinTlsVersionPtrOutput {
	return pulumi.ToOutput(in).(RegionSslPolicyMinTlsVersionPtrOutput)
}

func (in *regionSslPolicyMinTlsVersionPtr) ToRegionSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) RegionSslPolicyMinTlsVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionSslPolicyMinTlsVersionPtrOutput)
}

// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
type RegionSslPolicyProfile string

const (
	// Compatible profile. Allows the broadset set of clients, even those which support only out-of-date SSL features to negotiate with the load balancer.
	RegionSslPolicyProfileCompatible = RegionSslPolicyProfile("COMPATIBLE")
	// Custom profile. Allow only the set of allowed SSL features specified in the customFeatures field.
	RegionSslPolicyProfileCustom = RegionSslPolicyProfile("CUSTOM")
	// Modern profile. Supports a wide set of SSL features, allowing modern clients to negotiate SSL with the load balancer.
	RegionSslPolicyProfileModern = RegionSslPolicyProfile("MODERN")
	// Restricted profile. Supports a reduced set of SSL features, intended to meet stricter compliance requirements.
	RegionSslPolicyProfileRestricted = RegionSslPolicyProfile("RESTRICTED")
)

func (RegionSslPolicyProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSslPolicyProfile)(nil)).Elem()
}

func (e RegionSslPolicyProfile) ToRegionSslPolicyProfileOutput() RegionSslPolicyProfileOutput {
	return pulumi.ToOutput(e).(RegionSslPolicyProfileOutput)
}

func (e RegionSslPolicyProfile) ToRegionSslPolicyProfileOutputWithContext(ctx context.Context) RegionSslPolicyProfileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionSslPolicyProfileOutput)
}

func (e RegionSslPolicyProfile) ToRegionSslPolicyProfilePtrOutput() RegionSslPolicyProfilePtrOutput {
	return e.ToRegionSslPolicyProfilePtrOutputWithContext(context.Background())
}

func (e RegionSslPolicyProfile) ToRegionSslPolicyProfilePtrOutputWithContext(ctx context.Context) RegionSslPolicyProfilePtrOutput {
	return RegionSslPolicyProfile(e).ToRegionSslPolicyProfileOutputWithContext(ctx).ToRegionSslPolicyProfilePtrOutputWithContext(ctx)
}

func (e RegionSslPolicyProfile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSslPolicyProfile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionSslPolicyProfile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionSslPolicyProfile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionSslPolicyProfileOutput struct{ *pulumi.OutputState }

func (RegionSslPolicyProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSslPolicyProfile)(nil)).Elem()
}

func (o RegionSslPolicyProfileOutput) ToRegionSslPolicyProfileOutput() RegionSslPolicyProfileOutput {
	return o
}

func (o RegionSslPolicyProfileOutput) ToRegionSslPolicyProfileOutputWithContext(ctx context.Context) RegionSslPolicyProfileOutput {
	return o
}

func (o RegionSslPolicyProfileOutput) ToRegionSslPolicyProfilePtrOutput() RegionSslPolicyProfilePtrOutput {
	return o.ToRegionSslPolicyProfilePtrOutputWithContext(context.Background())
}

func (o RegionSslPolicyProfileOutput) ToRegionSslPolicyProfilePtrOutputWithContext(ctx context.Context) RegionSslPolicyProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionSslPolicyProfile) *RegionSslPolicyProfile {
		return &v
	}).(RegionSslPolicyProfilePtrOutput)
}

func (o RegionSslPolicyProfileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionSslPolicyProfileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSslPolicyProfile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionSslPolicyProfileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSslPolicyProfileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionSslPolicyProfile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionSslPolicyProfilePtrOutput struct{ *pulumi.OutputState }

func (RegionSslPolicyProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSslPolicyProfile)(nil)).Elem()
}

func (o RegionSslPolicyProfilePtrOutput) ToRegionSslPolicyProfilePtrOutput() RegionSslPolicyProfilePtrOutput {
	return o
}

func (o RegionSslPolicyProfilePtrOutput) ToRegionSslPolicyProfilePtrOutputWithContext(ctx context.Context) RegionSslPolicyProfilePtrOutput {
	return o
}

func (o RegionSslPolicyProfilePtrOutput) Elem() RegionSslPolicyProfileOutput {
	return o.ApplyT(func(v *RegionSslPolicyProfile) RegionSslPolicyProfile {
		if v != nil {
			return *v
		}
		var ret RegionSslPolicyProfile
		return ret
	}).(RegionSslPolicyProfileOutput)
}

func (o RegionSslPolicyProfilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionSslPolicyProfilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionSslPolicyProfile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionSslPolicyProfileInput is an input type that accepts RegionSslPolicyProfileArgs and RegionSslPolicyProfileOutput values.
// You can construct a concrete instance of `RegionSslPolicyProfileInput` via:
//
//          RegionSslPolicyProfileArgs{...}
type RegionSslPolicyProfileInput interface {
	pulumi.Input

	ToRegionSslPolicyProfileOutput() RegionSslPolicyProfileOutput
	ToRegionSslPolicyProfileOutputWithContext(context.Context) RegionSslPolicyProfileOutput
}

var regionSslPolicyProfilePtrType = reflect.TypeOf((**RegionSslPolicyProfile)(nil)).Elem()

type RegionSslPolicyProfilePtrInput interface {
	pulumi.Input

	ToRegionSslPolicyProfilePtrOutput() RegionSslPolicyProfilePtrOutput
	ToRegionSslPolicyProfilePtrOutputWithContext(context.Context) RegionSslPolicyProfilePtrOutput
}

type regionSslPolicyProfilePtr string

func RegionSslPolicyProfilePtr(v string) RegionSslPolicyProfilePtrInput {
	return (*regionSslPolicyProfilePtr)(&v)
}

func (*regionSslPolicyProfilePtr) ElementType() reflect.Type {
	return regionSslPolicyProfilePtrType
}

func (in *regionSslPolicyProfilePtr) ToRegionSslPolicyProfilePtrOutput() RegionSslPolicyProfilePtrOutput {
	return pulumi.ToOutput(in).(RegionSslPolicyProfilePtrOutput)
}

func (in *regionSslPolicyProfilePtr) ToRegionSslPolicyProfilePtrOutputWithContext(ctx context.Context) RegionSslPolicyProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionSslPolicyProfilePtrOutput)
}

// Specifies the QUIC override policy for this TargetHttpsProxy resource. This setting determines whether the load balancer attempts to negotiate QUIC with clients. You can specify NONE, ENABLE, or DISABLE. - When quic-override is set to NONE, Google manages whether QUIC is used. - When quic-override is set to ENABLE, the load balancer uses QUIC when possible. - When quic-override is set to DISABLE, the load balancer doesn't use QUIC. - If the quic-override flag is not specified, NONE is implied.
type RegionTargetHttpsProxyQuicOverride string

const (
	// The load balancer will not attempt to negotiate QUIC with clients.
	RegionTargetHttpsProxyQuicOverrideDisable = RegionTargetHttpsProxyQuicOverride("DISABLE")
	// The load balancer will attempt to negotiate QUIC with clients.
	RegionTargetHttpsProxyQuicOverrideEnable = RegionTargetHttpsProxyQuicOverride("ENABLE")
	// No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request.
	RegionTargetHttpsProxyQuicOverrideNone = RegionTargetHttpsProxyQuicOverride("NONE")
)

func (RegionTargetHttpsProxyQuicOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionTargetHttpsProxyQuicOverride)(nil)).Elem()
}

func (e RegionTargetHttpsProxyQuicOverride) ToRegionTargetHttpsProxyQuicOverrideOutput() RegionTargetHttpsProxyQuicOverrideOutput {
	return pulumi.ToOutput(e).(RegionTargetHttpsProxyQuicOverrideOutput)
}

func (e RegionTargetHttpsProxyQuicOverride) ToRegionTargetHttpsProxyQuicOverrideOutputWithContext(ctx context.Context) RegionTargetHttpsProxyQuicOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionTargetHttpsProxyQuicOverrideOutput)
}

func (e RegionTargetHttpsProxyQuicOverride) ToRegionTargetHttpsProxyQuicOverridePtrOutput() RegionTargetHttpsProxyQuicOverridePtrOutput {
	return e.ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(context.Background())
}

func (e RegionTargetHttpsProxyQuicOverride) ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) RegionTargetHttpsProxyQuicOverridePtrOutput {
	return RegionTargetHttpsProxyQuicOverride(e).ToRegionTargetHttpsProxyQuicOverrideOutputWithContext(ctx).ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx)
}

func (e RegionTargetHttpsProxyQuicOverride) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionTargetHttpsProxyQuicOverride) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionTargetHttpsProxyQuicOverride) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionTargetHttpsProxyQuicOverride) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionTargetHttpsProxyQuicOverrideOutput struct{ *pulumi.OutputState }

func (RegionTargetHttpsProxyQuicOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionTargetHttpsProxyQuicOverride)(nil)).Elem()
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToRegionTargetHttpsProxyQuicOverrideOutput() RegionTargetHttpsProxyQuicOverrideOutput {
	return o
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToRegionTargetHttpsProxyQuicOverrideOutputWithContext(ctx context.Context) RegionTargetHttpsProxyQuicOverrideOutput {
	return o
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToRegionTargetHttpsProxyQuicOverridePtrOutput() RegionTargetHttpsProxyQuicOverridePtrOutput {
	return o.ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(context.Background())
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) RegionTargetHttpsProxyQuicOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionTargetHttpsProxyQuicOverride) *RegionTargetHttpsProxyQuicOverride {
		return &v
	}).(RegionTargetHttpsProxyQuicOverridePtrOutput)
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionTargetHttpsProxyQuicOverride) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionTargetHttpsProxyQuicOverrideOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionTargetHttpsProxyQuicOverride) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionTargetHttpsProxyQuicOverridePtrOutput struct{ *pulumi.OutputState }

func (RegionTargetHttpsProxyQuicOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionTargetHttpsProxyQuicOverride)(nil)).Elem()
}

func (o RegionTargetHttpsProxyQuicOverridePtrOutput) ToRegionTargetHttpsProxyQuicOverridePtrOutput() RegionTargetHttpsProxyQuicOverridePtrOutput {
	return o
}

func (o RegionTargetHttpsProxyQuicOverridePtrOutput) ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) RegionTargetHttpsProxyQuicOverridePtrOutput {
	return o
}

func (o RegionTargetHttpsProxyQuicOverridePtrOutput) Elem() RegionTargetHttpsProxyQuicOverrideOutput {
	return o.ApplyT(func(v *RegionTargetHttpsProxyQuicOverride) RegionTargetHttpsProxyQuicOverride {
		if v != nil {
			return *v
		}
		var ret RegionTargetHttpsProxyQuicOverride
		return ret
	}).(RegionTargetHttpsProxyQuicOverrideOutput)
}

func (o RegionTargetHttpsProxyQuicOverridePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionTargetHttpsProxyQuicOverridePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionTargetHttpsProxyQuicOverride) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionTargetHttpsProxyQuicOverrideInput is an input type that accepts RegionTargetHttpsProxyQuicOverrideArgs and RegionTargetHttpsProxyQuicOverrideOutput values.
// You can construct a concrete instance of `RegionTargetHttpsProxyQuicOverrideInput` via:
//
//          RegionTargetHttpsProxyQuicOverrideArgs{...}
type RegionTargetHttpsProxyQuicOverrideInput interface {
	pulumi.Input

	ToRegionTargetHttpsProxyQuicOverrideOutput() RegionTargetHttpsProxyQuicOverrideOutput
	ToRegionTargetHttpsProxyQuicOverrideOutputWithContext(context.Context) RegionTargetHttpsProxyQuicOverrideOutput
}

var regionTargetHttpsProxyQuicOverridePtrType = reflect.TypeOf((**RegionTargetHttpsProxyQuicOverride)(nil)).Elem()

type RegionTargetHttpsProxyQuicOverridePtrInput interface {
	pulumi.Input

	ToRegionTargetHttpsProxyQuicOverridePtrOutput() RegionTargetHttpsProxyQuicOverridePtrOutput
	ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(context.Context) RegionTargetHttpsProxyQuicOverridePtrOutput
}

type regionTargetHttpsProxyQuicOverridePtr string

func RegionTargetHttpsProxyQuicOverridePtr(v string) RegionTargetHttpsProxyQuicOverridePtrInput {
	return (*regionTargetHttpsProxyQuicOverridePtr)(&v)
}

func (*regionTargetHttpsProxyQuicOverridePtr) ElementType() reflect.Type {
	return regionTargetHttpsProxyQuicOverridePtrType
}

func (in *regionTargetHttpsProxyQuicOverridePtr) ToRegionTargetHttpsProxyQuicOverridePtrOutput() RegionTargetHttpsProxyQuicOverridePtrOutput {
	return pulumi.ToOutput(in).(RegionTargetHttpsProxyQuicOverridePtrOutput)
}

func (in *regionTargetHttpsProxyQuicOverridePtr) ToRegionTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) RegionTargetHttpsProxyQuicOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionTargetHttpsProxyQuicOverridePtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type RegionTargetTcpProxyProxyHeader string

const (
	RegionTargetTcpProxyProxyHeaderNone    = RegionTargetTcpProxyProxyHeader("NONE")
	RegionTargetTcpProxyProxyHeaderProxyV1 = RegionTargetTcpProxyProxyHeader("PROXY_V1")
)

func (RegionTargetTcpProxyProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionTargetTcpProxyProxyHeader)(nil)).Elem()
}

func (e RegionTargetTcpProxyProxyHeader) ToRegionTargetTcpProxyProxyHeaderOutput() RegionTargetTcpProxyProxyHeaderOutput {
	return pulumi.ToOutput(e).(RegionTargetTcpProxyProxyHeaderOutput)
}

func (e RegionTargetTcpProxyProxyHeader) ToRegionTargetTcpProxyProxyHeaderOutputWithContext(ctx context.Context) RegionTargetTcpProxyProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionTargetTcpProxyProxyHeaderOutput)
}

func (e RegionTargetTcpProxyProxyHeader) ToRegionTargetTcpProxyProxyHeaderPtrOutput() RegionTargetTcpProxyProxyHeaderPtrOutput {
	return e.ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(context.Background())
}

func (e RegionTargetTcpProxyProxyHeader) ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) RegionTargetTcpProxyProxyHeaderPtrOutput {
	return RegionTargetTcpProxyProxyHeader(e).ToRegionTargetTcpProxyProxyHeaderOutputWithContext(ctx).ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx)
}

func (e RegionTargetTcpProxyProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionTargetTcpProxyProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegionTargetTcpProxyProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegionTargetTcpProxyProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionTargetTcpProxyProxyHeaderOutput struct{ *pulumi.OutputState }

func (RegionTargetTcpProxyProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionTargetTcpProxyProxyHeader)(nil)).Elem()
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToRegionTargetTcpProxyProxyHeaderOutput() RegionTargetTcpProxyProxyHeaderOutput {
	return o
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToRegionTargetTcpProxyProxyHeaderOutputWithContext(ctx context.Context) RegionTargetTcpProxyProxyHeaderOutput {
	return o
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToRegionTargetTcpProxyProxyHeaderPtrOutput() RegionTargetTcpProxyProxyHeaderPtrOutput {
	return o.ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(context.Background())
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) RegionTargetTcpProxyProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegionTargetTcpProxyProxyHeader) *RegionTargetTcpProxyProxyHeader {
		return &v
	}).(RegionTargetTcpProxyProxyHeaderPtrOutput)
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionTargetTcpProxyProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionTargetTcpProxyProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegionTargetTcpProxyProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionTargetTcpProxyProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (RegionTargetTcpProxyProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionTargetTcpProxyProxyHeader)(nil)).Elem()
}

func (o RegionTargetTcpProxyProxyHeaderPtrOutput) ToRegionTargetTcpProxyProxyHeaderPtrOutput() RegionTargetTcpProxyProxyHeaderPtrOutput {
	return o
}

func (o RegionTargetTcpProxyProxyHeaderPtrOutput) ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) RegionTargetTcpProxyProxyHeaderPtrOutput {
	return o
}

func (o RegionTargetTcpProxyProxyHeaderPtrOutput) Elem() RegionTargetTcpProxyProxyHeaderOutput {
	return o.ApplyT(func(v *RegionTargetTcpProxyProxyHeader) RegionTargetTcpProxyProxyHeader {
		if v != nil {
			return *v
		}
		var ret RegionTargetTcpProxyProxyHeader
		return ret
	}).(RegionTargetTcpProxyProxyHeaderOutput)
}

func (o RegionTargetTcpProxyProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionTargetTcpProxyProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegionTargetTcpProxyProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionTargetTcpProxyProxyHeaderInput is an input type that accepts RegionTargetTcpProxyProxyHeaderArgs and RegionTargetTcpProxyProxyHeaderOutput values.
// You can construct a concrete instance of `RegionTargetTcpProxyProxyHeaderInput` via:
//
//          RegionTargetTcpProxyProxyHeaderArgs{...}
type RegionTargetTcpProxyProxyHeaderInput interface {
	pulumi.Input

	ToRegionTargetTcpProxyProxyHeaderOutput() RegionTargetTcpProxyProxyHeaderOutput
	ToRegionTargetTcpProxyProxyHeaderOutputWithContext(context.Context) RegionTargetTcpProxyProxyHeaderOutput
}

var regionTargetTcpProxyProxyHeaderPtrType = reflect.TypeOf((**RegionTargetTcpProxyProxyHeader)(nil)).Elem()

type RegionTargetTcpProxyProxyHeaderPtrInput interface {
	pulumi.Input

	ToRegionTargetTcpProxyProxyHeaderPtrOutput() RegionTargetTcpProxyProxyHeaderPtrOutput
	ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(context.Context) RegionTargetTcpProxyProxyHeaderPtrOutput
}

type regionTargetTcpProxyProxyHeaderPtr string

func RegionTargetTcpProxyProxyHeaderPtr(v string) RegionTargetTcpProxyProxyHeaderPtrInput {
	return (*regionTargetTcpProxyProxyHeaderPtr)(&v)
}

func (*regionTargetTcpProxyProxyHeaderPtr) ElementType() reflect.Type {
	return regionTargetTcpProxyProxyHeaderPtrType
}

func (in *regionTargetTcpProxyProxyHeaderPtr) ToRegionTargetTcpProxyProxyHeaderPtrOutput() RegionTargetTcpProxyProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(RegionTargetTcpProxyProxyHeaderPtrOutput)
}

func (in *regionTargetTcpProxyProxyHeaderPtr) ToRegionTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) RegionTargetTcpProxyProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionTargetTcpProxyProxyHeaderPtrOutput)
}

// Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.
type ReservationAffinityConsumeReservationType string

const (
	// Consume any allocation available.
	ReservationAffinityConsumeReservationTypeAnyReservation = ReservationAffinityConsumeReservationType("ANY_RESERVATION")
	// Do not consume from any allocated capacity.
	ReservationAffinityConsumeReservationTypeNoReservation = ReservationAffinityConsumeReservationType("NO_RESERVATION")
	// Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
	ReservationAffinityConsumeReservationTypeSpecificReservation = ReservationAffinityConsumeReservationType("SPECIFIC_RESERVATION")
	// Prefer to consume from a specific reservation, but still consume any reservation available if the specified reservation is not available or exhausted. Must specify key value fields for specifying the reservations.
	ReservationAffinityConsumeReservationTypeSpecificThenAnyReservation = ReservationAffinityConsumeReservationType("SPECIFIC_THEN_ANY_RESERVATION")
	ReservationAffinityConsumeReservationTypeUnspecified                = ReservationAffinityConsumeReservationType("UNSPECIFIED")
)

func (ReservationAffinityConsumeReservationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinityConsumeReservationType)(nil)).Elem()
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypeOutput() ReservationAffinityConsumeReservationTypeOutput {
	return pulumi.ToOutput(e).(ReservationAffinityConsumeReservationTypeOutput)
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypeOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReservationAffinityConsumeReservationTypeOutput)
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return e.ToReservationAffinityConsumeReservationTypePtrOutputWithContext(context.Background())
}

func (e ReservationAffinityConsumeReservationType) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return ReservationAffinityConsumeReservationType(e).ToReservationAffinityConsumeReservationTypeOutputWithContext(ctx).ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx)
}

func (e ReservationAffinityConsumeReservationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationAffinityConsumeReservationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationAffinityConsumeReservationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReservationAffinityConsumeReservationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReservationAffinityConsumeReservationTypeOutput struct{ *pulumi.OutputState }

func (ReservationAffinityConsumeReservationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationAffinityConsumeReservationType)(nil)).Elem()
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypeOutput() ReservationAffinityConsumeReservationTypeOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypeOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypeOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return o.ToReservationAffinityConsumeReservationTypePtrOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReservationAffinityConsumeReservationType) *ReservationAffinityConsumeReservationType {
		return &v
	}).(ReservationAffinityConsumeReservationTypePtrOutput)
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservationAffinityConsumeReservationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservationAffinityConsumeReservationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReservationAffinityConsumeReservationTypePtrOutput struct{ *pulumi.OutputState }

func (ReservationAffinityConsumeReservationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationAffinityConsumeReservationType)(nil)).Elem()
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return o
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) Elem() ReservationAffinityConsumeReservationTypeOutput {
	return o.ApplyT(func(v *ReservationAffinityConsumeReservationType) ReservationAffinityConsumeReservationType {
		if v != nil {
			return *v
		}
		var ret ReservationAffinityConsumeReservationType
		return ret
	}).(ReservationAffinityConsumeReservationTypeOutput)
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservationAffinityConsumeReservationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReservationAffinityConsumeReservationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReservationAffinityConsumeReservationTypeInput is an input type that accepts ReservationAffinityConsumeReservationTypeArgs and ReservationAffinityConsumeReservationTypeOutput values.
// You can construct a concrete instance of `ReservationAffinityConsumeReservationTypeInput` via:
//
//          ReservationAffinityConsumeReservationTypeArgs{...}
type ReservationAffinityConsumeReservationTypeInput interface {
	pulumi.Input

	ToReservationAffinityConsumeReservationTypeOutput() ReservationAffinityConsumeReservationTypeOutput
	ToReservationAffinityConsumeReservationTypeOutputWithContext(context.Context) ReservationAffinityConsumeReservationTypeOutput
}

var reservationAffinityConsumeReservationTypePtrType = reflect.TypeOf((**ReservationAffinityConsumeReservationType)(nil)).Elem()

type ReservationAffinityConsumeReservationTypePtrInput interface {
	pulumi.Input

	ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput
	ToReservationAffinityConsumeReservationTypePtrOutputWithContext(context.Context) ReservationAffinityConsumeReservationTypePtrOutput
}

type reservationAffinityConsumeReservationTypePtr string

func ReservationAffinityConsumeReservationTypePtr(v string) ReservationAffinityConsumeReservationTypePtrInput {
	return (*reservationAffinityConsumeReservationTypePtr)(&v)
}

func (*reservationAffinityConsumeReservationTypePtr) ElementType() reflect.Type {
	return reservationAffinityConsumeReservationTypePtrType
}

func (in *reservationAffinityConsumeReservationTypePtr) ToReservationAffinityConsumeReservationTypePtrOutput() ReservationAffinityConsumeReservationTypePtrOutput {
	return pulumi.ToOutput(in).(ReservationAffinityConsumeReservationTypePtrOutput)
}

func (in *reservationAffinityConsumeReservationTypePtr) ToReservationAffinityConsumeReservationTypePtrOutputWithContext(ctx context.Context) ReservationAffinityConsumeReservationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReservationAffinityConsumeReservationTypePtrOutput)
}

// Type of resource for which this commitment applies. Possible values are VCPU and MEMORY
type ResourceCommitmentType string

const (
	ResourceCommitmentTypeAccelerator = ResourceCommitmentType("ACCELERATOR")
	ResourceCommitmentTypeLocalSsd    = ResourceCommitmentType("LOCAL_SSD")
	ResourceCommitmentTypeMemory      = ResourceCommitmentType("MEMORY")
	ResourceCommitmentTypeUnspecified = ResourceCommitmentType("UNSPECIFIED")
	ResourceCommitmentTypeVcpu        = ResourceCommitmentType("VCPU")
)

func (ResourceCommitmentType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCommitmentType)(nil)).Elem()
}

func (e ResourceCommitmentType) ToResourceCommitmentTypeOutput() ResourceCommitmentTypeOutput {
	return pulumi.ToOutput(e).(ResourceCommitmentTypeOutput)
}

func (e ResourceCommitmentType) ToResourceCommitmentTypeOutputWithContext(ctx context.Context) ResourceCommitmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceCommitmentTypeOutput)
}

func (e ResourceCommitmentType) ToResourceCommitmentTypePtrOutput() ResourceCommitmentTypePtrOutput {
	return e.ToResourceCommitmentTypePtrOutputWithContext(context.Background())
}

func (e ResourceCommitmentType) ToResourceCommitmentTypePtrOutputWithContext(ctx context.Context) ResourceCommitmentTypePtrOutput {
	return ResourceCommitmentType(e).ToResourceCommitmentTypeOutputWithContext(ctx).ToResourceCommitmentTypePtrOutputWithContext(ctx)
}

func (e ResourceCommitmentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceCommitmentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceCommitmentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceCommitmentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceCommitmentTypeOutput struct{ *pulumi.OutputState }

func (ResourceCommitmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCommitmentType)(nil)).Elem()
}

func (o ResourceCommitmentTypeOutput) ToResourceCommitmentTypeOutput() ResourceCommitmentTypeOutput {
	return o
}

func (o ResourceCommitmentTypeOutput) ToResourceCommitmentTypeOutputWithContext(ctx context.Context) ResourceCommitmentTypeOutput {
	return o
}

func (o ResourceCommitmentTypeOutput) ToResourceCommitmentTypePtrOutput() ResourceCommitmentTypePtrOutput {
	return o.ToResourceCommitmentTypePtrOutputWithContext(context.Background())
}

func (o ResourceCommitmentTypeOutput) ToResourceCommitmentTypePtrOutputWithContext(ctx context.Context) ResourceCommitmentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceCommitmentType) *ResourceCommitmentType {
		return &v
	}).(ResourceCommitmentTypePtrOutput)
}

func (o ResourceCommitmentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceCommitmentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceCommitmentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceCommitmentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceCommitmentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceCommitmentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceCommitmentTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceCommitmentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCommitmentType)(nil)).Elem()
}

func (o ResourceCommitmentTypePtrOutput) ToResourceCommitmentTypePtrOutput() ResourceCommitmentTypePtrOutput {
	return o
}

func (o ResourceCommitmentTypePtrOutput) ToResourceCommitmentTypePtrOutputWithContext(ctx context.Context) ResourceCommitmentTypePtrOutput {
	return o
}

func (o ResourceCommitmentTypePtrOutput) Elem() ResourceCommitmentTypeOutput {
	return o.ApplyT(func(v *ResourceCommitmentType) ResourceCommitmentType {
		if v != nil {
			return *v
		}
		var ret ResourceCommitmentType
		return ret
	}).(ResourceCommitmentTypeOutput)
}

func (o ResourceCommitmentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceCommitmentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceCommitmentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceCommitmentTypeInput is an input type that accepts ResourceCommitmentTypeArgs and ResourceCommitmentTypeOutput values.
// You can construct a concrete instance of `ResourceCommitmentTypeInput` via:
//
//          ResourceCommitmentTypeArgs{...}
type ResourceCommitmentTypeInput interface {
	pulumi.Input

	ToResourceCommitmentTypeOutput() ResourceCommitmentTypeOutput
	ToResourceCommitmentTypeOutputWithContext(context.Context) ResourceCommitmentTypeOutput
}

var resourceCommitmentTypePtrType = reflect.TypeOf((**ResourceCommitmentType)(nil)).Elem()

type ResourceCommitmentTypePtrInput interface {
	pulumi.Input

	ToResourceCommitmentTypePtrOutput() ResourceCommitmentTypePtrOutput
	ToResourceCommitmentTypePtrOutputWithContext(context.Context) ResourceCommitmentTypePtrOutput
}

type resourceCommitmentTypePtr string

func ResourceCommitmentTypePtr(v string) ResourceCommitmentTypePtrInput {
	return (*resourceCommitmentTypePtr)(&v)
}

func (*resourceCommitmentTypePtr) ElementType() reflect.Type {
	return resourceCommitmentTypePtrType
}

func (in *resourceCommitmentTypePtr) ToResourceCommitmentTypePtrOutput() ResourceCommitmentTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceCommitmentTypePtrOutput)
}

func (in *resourceCommitmentTypePtr) ToResourceCommitmentTypePtrOutputWithContext(ctx context.Context) ResourceCommitmentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceCommitmentTypePtrOutput)
}

// Specifies network collocation
type ResourcePolicyGroupPlacementPolicyCollocation string

const (
	// Specifies collocation option that provides tight collocation with minimum network latency.
	ResourcePolicyGroupPlacementPolicyCollocationClustered              = ResourcePolicyGroupPlacementPolicyCollocation("CLUSTERED")
	ResourcePolicyGroupPlacementPolicyCollocationCollocated             = ResourcePolicyGroupPlacementPolicyCollocation("COLLOCATED")
	ResourcePolicyGroupPlacementPolicyCollocationUnspecifiedCollocation = ResourcePolicyGroupPlacementPolicyCollocation("UNSPECIFIED_COLLOCATION")
)

func (ResourcePolicyGroupPlacementPolicyCollocation) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyCollocation)(nil)).Elem()
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToResourcePolicyGroupPlacementPolicyCollocationOutput() ResourcePolicyGroupPlacementPolicyCollocationOutput {
	return pulumi.ToOutput(e).(ResourcePolicyGroupPlacementPolicyCollocationOutput)
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToResourcePolicyGroupPlacementPolicyCollocationOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyCollocationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourcePolicyGroupPlacementPolicyCollocationOutput)
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutput() ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return e.ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return ResourcePolicyGroupPlacementPolicyCollocation(e).ToResourcePolicyGroupPlacementPolicyCollocationOutputWithContext(ctx).ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(ctx)
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyCollocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourcePolicyGroupPlacementPolicyCollocationOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyCollocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyCollocation)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToResourcePolicyGroupPlacementPolicyCollocationOutput() ResourcePolicyGroupPlacementPolicyCollocationOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToResourcePolicyGroupPlacementPolicyCollocationOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyCollocationOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutput() ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return o.ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicyGroupPlacementPolicyCollocation) *ResourcePolicyGroupPlacementPolicyCollocation {
		return &v
	}).(ResourcePolicyGroupPlacementPolicyCollocationPtrOutput)
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyCollocation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyCollocationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyCollocation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicyGroupPlacementPolicyCollocationPtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyCollocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyCollocation)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyCollocationPtrOutput) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutput() ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyCollocationPtrOutput) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyCollocationPtrOutput) Elem() ResourcePolicyGroupPlacementPolicyCollocationOutput {
	return o.ApplyT(func(v *ResourcePolicyGroupPlacementPolicyCollocation) ResourcePolicyGroupPlacementPolicyCollocation {
		if v != nil {
			return *v
		}
		var ret ResourcePolicyGroupPlacementPolicyCollocation
		return ret
	}).(ResourcePolicyGroupPlacementPolicyCollocationOutput)
}

func (o ResourcePolicyGroupPlacementPolicyCollocationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyCollocationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourcePolicyGroupPlacementPolicyCollocation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourcePolicyGroupPlacementPolicyCollocationInput is an input type that accepts ResourcePolicyGroupPlacementPolicyCollocationArgs and ResourcePolicyGroupPlacementPolicyCollocationOutput values.
// You can construct a concrete instance of `ResourcePolicyGroupPlacementPolicyCollocationInput` via:
//
//          ResourcePolicyGroupPlacementPolicyCollocationArgs{...}
type ResourcePolicyGroupPlacementPolicyCollocationInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyCollocationOutput() ResourcePolicyGroupPlacementPolicyCollocationOutput
	ToResourcePolicyGroupPlacementPolicyCollocationOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyCollocationOutput
}

var resourcePolicyGroupPlacementPolicyCollocationPtrType = reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyCollocation)(nil)).Elem()

type ResourcePolicyGroupPlacementPolicyCollocationPtrInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyCollocationPtrOutput() ResourcePolicyGroupPlacementPolicyCollocationPtrOutput
	ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyCollocationPtrOutput
}

type resourcePolicyGroupPlacementPolicyCollocationPtr string

func ResourcePolicyGroupPlacementPolicyCollocationPtr(v string) ResourcePolicyGroupPlacementPolicyCollocationPtrInput {
	return (*resourcePolicyGroupPlacementPolicyCollocationPtr)(&v)
}

func (*resourcePolicyGroupPlacementPolicyCollocationPtr) ElementType() reflect.Type {
	return resourcePolicyGroupPlacementPolicyCollocationPtrType
}

func (in *resourcePolicyGroupPlacementPolicyCollocationPtr) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutput() ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return pulumi.ToOutput(in).(ResourcePolicyGroupPlacementPolicyCollocationPtrOutput)
}

func (in *resourcePolicyGroupPlacementPolicyCollocationPtr) ToResourcePolicyGroupPlacementPolicyCollocationPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyCollocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourcePolicyGroupPlacementPolicyCollocationPtrOutput)
}

// Specifies network locality
type ResourcePolicyGroupPlacementPolicyLocality string

const (
	ResourcePolicyGroupPlacementPolicyLocalityBestEffort          = ResourcePolicyGroupPlacementPolicyLocality("BEST_EFFORT")
	ResourcePolicyGroupPlacementPolicyLocalityStrict              = ResourcePolicyGroupPlacementPolicyLocality("STRICT")
	ResourcePolicyGroupPlacementPolicyLocalityUnspecifiedLocality = ResourcePolicyGroupPlacementPolicyLocality("UNSPECIFIED_LOCALITY")
)

func (ResourcePolicyGroupPlacementPolicyLocality) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyLocality)(nil)).Elem()
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToResourcePolicyGroupPlacementPolicyLocalityOutput() ResourcePolicyGroupPlacementPolicyLocalityOutput {
	return pulumi.ToOutput(e).(ResourcePolicyGroupPlacementPolicyLocalityOutput)
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToResourcePolicyGroupPlacementPolicyLocalityOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyLocalityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourcePolicyGroupPlacementPolicyLocalityOutput)
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutput() ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return e.ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return ResourcePolicyGroupPlacementPolicyLocality(e).ToResourcePolicyGroupPlacementPolicyLocalityOutputWithContext(ctx).ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(ctx)
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyLocality) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourcePolicyGroupPlacementPolicyLocalityOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyLocalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyLocality)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToResourcePolicyGroupPlacementPolicyLocalityOutput() ResourcePolicyGroupPlacementPolicyLocalityOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToResourcePolicyGroupPlacementPolicyLocalityOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyLocalityOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutput() ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return o.ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicyGroupPlacementPolicyLocality) *ResourcePolicyGroupPlacementPolicyLocality {
		return &v
	}).(ResourcePolicyGroupPlacementPolicyLocalityPtrOutput)
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyLocality) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyLocalityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyLocality) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicyGroupPlacementPolicyLocalityPtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyLocalityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyLocality)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyLocalityPtrOutput) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutput() ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyLocalityPtrOutput) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyLocalityPtrOutput) Elem() ResourcePolicyGroupPlacementPolicyLocalityOutput {
	return o.ApplyT(func(v *ResourcePolicyGroupPlacementPolicyLocality) ResourcePolicyGroupPlacementPolicyLocality {
		if v != nil {
			return *v
		}
		var ret ResourcePolicyGroupPlacementPolicyLocality
		return ret
	}).(ResourcePolicyGroupPlacementPolicyLocalityOutput)
}

func (o ResourcePolicyGroupPlacementPolicyLocalityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyLocalityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourcePolicyGroupPlacementPolicyLocality) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourcePolicyGroupPlacementPolicyLocalityInput is an input type that accepts ResourcePolicyGroupPlacementPolicyLocalityArgs and ResourcePolicyGroupPlacementPolicyLocalityOutput values.
// You can construct a concrete instance of `ResourcePolicyGroupPlacementPolicyLocalityInput` via:
//
//          ResourcePolicyGroupPlacementPolicyLocalityArgs{...}
type ResourcePolicyGroupPlacementPolicyLocalityInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyLocalityOutput() ResourcePolicyGroupPlacementPolicyLocalityOutput
	ToResourcePolicyGroupPlacementPolicyLocalityOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyLocalityOutput
}

var resourcePolicyGroupPlacementPolicyLocalityPtrType = reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyLocality)(nil)).Elem()

type ResourcePolicyGroupPlacementPolicyLocalityPtrInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyLocalityPtrOutput() ResourcePolicyGroupPlacementPolicyLocalityPtrOutput
	ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyLocalityPtrOutput
}

type resourcePolicyGroupPlacementPolicyLocalityPtr string

func ResourcePolicyGroupPlacementPolicyLocalityPtr(v string) ResourcePolicyGroupPlacementPolicyLocalityPtrInput {
	return (*resourcePolicyGroupPlacementPolicyLocalityPtr)(&v)
}

func (*resourcePolicyGroupPlacementPolicyLocalityPtr) ElementType() reflect.Type {
	return resourcePolicyGroupPlacementPolicyLocalityPtrType
}

func (in *resourcePolicyGroupPlacementPolicyLocalityPtr) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutput() ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return pulumi.ToOutput(in).(ResourcePolicyGroupPlacementPolicyLocalityPtrOutput)
}

func (in *resourcePolicyGroupPlacementPolicyLocalityPtr) ToResourcePolicyGroupPlacementPolicyLocalityPtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyLocalityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourcePolicyGroupPlacementPolicyLocalityPtrOutput)
}

// Scope specifies the availability domain to which the VMs should be spread.
type ResourcePolicyGroupPlacementPolicyScope string

const (
	// Specifies availability domain scope across hosts. VMs will be spread across different hosts.
	ResourcePolicyGroupPlacementPolicyScopeHost = ResourcePolicyGroupPlacementPolicyScope("HOST")
	// VMs will be spread across different instrastructure to not share power, host and networking.
	ResourcePolicyGroupPlacementPolicyScopeUnspecifiedScope = ResourcePolicyGroupPlacementPolicyScope("UNSPECIFIED_SCOPE")
)

func (ResourcePolicyGroupPlacementPolicyScope) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyScope)(nil)).Elem()
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToResourcePolicyGroupPlacementPolicyScopeOutput() ResourcePolicyGroupPlacementPolicyScopeOutput {
	return pulumi.ToOutput(e).(ResourcePolicyGroupPlacementPolicyScopeOutput)
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToResourcePolicyGroupPlacementPolicyScopeOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourcePolicyGroupPlacementPolicyScopeOutput)
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToResourcePolicyGroupPlacementPolicyScopePtrOutput() ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return e.ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return ResourcePolicyGroupPlacementPolicyScope(e).ToResourcePolicyGroupPlacementPolicyScopeOutputWithContext(ctx).ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(ctx)
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourcePolicyGroupPlacementPolicyScopeOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyScope)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToResourcePolicyGroupPlacementPolicyScopeOutput() ResourcePolicyGroupPlacementPolicyScopeOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToResourcePolicyGroupPlacementPolicyScopeOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyScopeOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToResourcePolicyGroupPlacementPolicyScopePtrOutput() ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return o.ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicyGroupPlacementPolicyScope) *ResourcePolicyGroupPlacementPolicyScope {
		return &v
	}).(ResourcePolicyGroupPlacementPolicyScopePtrOutput)
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicyGroupPlacementPolicyScopePtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyScope)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyScopePtrOutput) ToResourcePolicyGroupPlacementPolicyScopePtrOutput() ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyScopePtrOutput) ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyScopePtrOutput) Elem() ResourcePolicyGroupPlacementPolicyScopeOutput {
	return o.ApplyT(func(v *ResourcePolicyGroupPlacementPolicyScope) ResourcePolicyGroupPlacementPolicyScope {
		if v != nil {
			return *v
		}
		var ret ResourcePolicyGroupPlacementPolicyScope
		return ret
	}).(ResourcePolicyGroupPlacementPolicyScopeOutput)
}

func (o ResourcePolicyGroupPlacementPolicyScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourcePolicyGroupPlacementPolicyScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourcePolicyGroupPlacementPolicyScopeInput is an input type that accepts ResourcePolicyGroupPlacementPolicyScopeArgs and ResourcePolicyGroupPlacementPolicyScopeOutput values.
// You can construct a concrete instance of `ResourcePolicyGroupPlacementPolicyScopeInput` via:
//
//          ResourcePolicyGroupPlacementPolicyScopeArgs{...}
type ResourcePolicyGroupPlacementPolicyScopeInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyScopeOutput() ResourcePolicyGroupPlacementPolicyScopeOutput
	ToResourcePolicyGroupPlacementPolicyScopeOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyScopeOutput
}

var resourcePolicyGroupPlacementPolicyScopePtrType = reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyScope)(nil)).Elem()

type ResourcePolicyGroupPlacementPolicyScopePtrInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyScopePtrOutput() ResourcePolicyGroupPlacementPolicyScopePtrOutput
	ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyScopePtrOutput
}

type resourcePolicyGroupPlacementPolicyScopePtr string

func ResourcePolicyGroupPlacementPolicyScopePtr(v string) ResourcePolicyGroupPlacementPolicyScopePtrInput {
	return (*resourcePolicyGroupPlacementPolicyScopePtr)(&v)
}

func (*resourcePolicyGroupPlacementPolicyScopePtr) ElementType() reflect.Type {
	return resourcePolicyGroupPlacementPolicyScopePtrType
}

func (in *resourcePolicyGroupPlacementPolicyScopePtr) ToResourcePolicyGroupPlacementPolicyScopePtrOutput() ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return pulumi.ToOutput(in).(ResourcePolicyGroupPlacementPolicyScopePtrOutput)
}

func (in *resourcePolicyGroupPlacementPolicyScopePtr) ToResourcePolicyGroupPlacementPolicyScopePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourcePolicyGroupPlacementPolicyScopePtrOutput)
}

// Specifies instances to hosts placement relationship
type ResourcePolicyGroupPlacementPolicyStyle string

const (
	// VMs are placed without regard for shared hosts
	ResourcePolicyGroupPlacementPolicyStyleCompact = ResourcePolicyGroupPlacementPolicyStyle("COMPACT")
	// VMs do not share the same hosts
	ResourcePolicyGroupPlacementPolicyStyleFullySpread              = ResourcePolicyGroupPlacementPolicyStyle("FULLY_SPREAD")
	ResourcePolicyGroupPlacementPolicyStyleUnspecifiedPlacementType = ResourcePolicyGroupPlacementPolicyStyle("UNSPECIFIED_PLACEMENT_TYPE")
)

func (ResourcePolicyGroupPlacementPolicyStyle) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyStyle)(nil)).Elem()
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToResourcePolicyGroupPlacementPolicyStyleOutput() ResourcePolicyGroupPlacementPolicyStyleOutput {
	return pulumi.ToOutput(e).(ResourcePolicyGroupPlacementPolicyStyleOutput)
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToResourcePolicyGroupPlacementPolicyStyleOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyStyleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourcePolicyGroupPlacementPolicyStyleOutput)
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToResourcePolicyGroupPlacementPolicyStylePtrOutput() ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return e.ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return ResourcePolicyGroupPlacementPolicyStyle(e).ToResourcePolicyGroupPlacementPolicyStyleOutputWithContext(ctx).ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(ctx)
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyGroupPlacementPolicyStyle) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourcePolicyGroupPlacementPolicyStyleOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyStyle)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToResourcePolicyGroupPlacementPolicyStyleOutput() ResourcePolicyGroupPlacementPolicyStyleOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToResourcePolicyGroupPlacementPolicyStyleOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyStyleOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToResourcePolicyGroupPlacementPolicyStylePtrOutput() ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return o.ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicyGroupPlacementPolicyStyle) *ResourcePolicyGroupPlacementPolicyStyle {
		return &v
	}).(ResourcePolicyGroupPlacementPolicyStylePtrOutput)
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyStyle) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyStyleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyGroupPlacementPolicyStyle) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicyGroupPlacementPolicyStylePtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyGroupPlacementPolicyStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyStyle)(nil)).Elem()
}

func (o ResourcePolicyGroupPlacementPolicyStylePtrOutput) ToResourcePolicyGroupPlacementPolicyStylePtrOutput() ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyStylePtrOutput) ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return o
}

func (o ResourcePolicyGroupPlacementPolicyStylePtrOutput) Elem() ResourcePolicyGroupPlacementPolicyStyleOutput {
	return o.ApplyT(func(v *ResourcePolicyGroupPlacementPolicyStyle) ResourcePolicyGroupPlacementPolicyStyle {
		if v != nil {
			return *v
		}
		var ret ResourcePolicyGroupPlacementPolicyStyle
		return ret
	}).(ResourcePolicyGroupPlacementPolicyStyleOutput)
}

func (o ResourcePolicyGroupPlacementPolicyStylePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyGroupPlacementPolicyStylePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourcePolicyGroupPlacementPolicyStyle) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourcePolicyGroupPlacementPolicyStyleInput is an input type that accepts ResourcePolicyGroupPlacementPolicyStyleArgs and ResourcePolicyGroupPlacementPolicyStyleOutput values.
// You can construct a concrete instance of `ResourcePolicyGroupPlacementPolicyStyleInput` via:
//
//          ResourcePolicyGroupPlacementPolicyStyleArgs{...}
type ResourcePolicyGroupPlacementPolicyStyleInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyStyleOutput() ResourcePolicyGroupPlacementPolicyStyleOutput
	ToResourcePolicyGroupPlacementPolicyStyleOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyStyleOutput
}

var resourcePolicyGroupPlacementPolicyStylePtrType = reflect.TypeOf((**ResourcePolicyGroupPlacementPolicyStyle)(nil)).Elem()

type ResourcePolicyGroupPlacementPolicyStylePtrInput interface {
	pulumi.Input

	ToResourcePolicyGroupPlacementPolicyStylePtrOutput() ResourcePolicyGroupPlacementPolicyStylePtrOutput
	ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(context.Context) ResourcePolicyGroupPlacementPolicyStylePtrOutput
}

type resourcePolicyGroupPlacementPolicyStylePtr string

func ResourcePolicyGroupPlacementPolicyStylePtr(v string) ResourcePolicyGroupPlacementPolicyStylePtrInput {
	return (*resourcePolicyGroupPlacementPolicyStylePtr)(&v)
}

func (*resourcePolicyGroupPlacementPolicyStylePtr) ElementType() reflect.Type {
	return resourcePolicyGroupPlacementPolicyStylePtrType
}

func (in *resourcePolicyGroupPlacementPolicyStylePtr) ToResourcePolicyGroupPlacementPolicyStylePtrOutput() ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return pulumi.ToOutput(in).(ResourcePolicyGroupPlacementPolicyStylePtrOutput)
}

func (in *resourcePolicyGroupPlacementPolicyStylePtr) ToResourcePolicyGroupPlacementPolicyStylePtrOutputWithContext(ctx context.Context) ResourcePolicyGroupPlacementPolicyStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourcePolicyGroupPlacementPolicyStylePtrOutput)
}

type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch string

const (
	ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchDoNotRetroactivelyApply   = ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch("DO_NOT_RETROACTIVELY_APPLY")
	ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchRetroactivelyApply        = ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch("RETROACTIVELY_APPLY")
	ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchUnspecifiedOnPolicySwitch = ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch("UNSPECIFIED_ON_POLICY_SWITCH")
)

func (ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch)(nil)).Elem()
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput {
	return pulumi.ToOutput(e).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return e.ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(context.Background())
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch(e).ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutputWithContext(ctx).ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(ctx)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput struct{ *pulumi.OutputState }

func (ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch)(nil)).Elem()
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return o.ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) *ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch {
		return &v
	}).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput)
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch)(nil)).Elem()
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput) Elem() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput {
	return o.ApplyT(func(v *ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch {
		if v != nil {
			return *v
		}
		var ret ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch
		return ret
	}).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput)
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchInput is an input type that accepts ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchArgs and ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput values.
// You can construct a concrete instance of `ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchInput` via:
//
//          ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchArgs{...}
type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchInput interface {
	pulumi.Input

	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput
	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutputWithContext(context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput
}

var resourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrType = reflect.TypeOf((**ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch)(nil)).Elem()

type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrInput interface {
	pulumi.Input

	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput
	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput
}

type resourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtr string

func ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtr(v string) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrInput {
	return (*resourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtr)(&v)
}

func (*resourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtr) ElementType() reflect.Type {
	return resourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrType
}

func (in *resourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtr) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return pulumi.ToOutput(in).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput)
}

func (in *resourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtr) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput)
}

// Specifies the behavior to apply to scheduled snapshots when the source disk is deleted.
type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete string

const (
	ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteApplyRetentionPolicy          = ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete("APPLY_RETENTION_POLICY")
	ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteKeepAutoSnapshots             = ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete("KEEP_AUTO_SNAPSHOTS")
	ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteUnspecifiedOnSourceDiskDelete = ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete("UNSPECIFIED_ON_SOURCE_DISK_DELETE")
)

func (ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete)(nil)).Elem()
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput {
	return pulumi.ToOutput(e).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return e.ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(context.Background())
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete(e).ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutputWithContext(ctx).ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(ctx)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput struct{ *pulumi.OutputState }

func (ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete)(nil)).Elem()
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return o.ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) *ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete {
		return &v
	}).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput)
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete)(nil)).Elem()
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return o
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput) Elem() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput {
	return o.ApplyT(func(v *ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete {
		if v != nil {
			return *v
		}
		var ret ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete
		return ret
	}).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput)
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteInput is an input type that accepts ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteArgs and ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput values.
// You can construct a concrete instance of `ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteInput` via:
//
//          ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteArgs{...}
type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteInput interface {
	pulumi.Input

	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput
	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutputWithContext(context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput
}

var resourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrType = reflect.TypeOf((**ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete)(nil)).Elem()

type ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrInput interface {
	pulumi.Input

	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput
	ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput
}

type resourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtr string

func ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtr(v string) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrInput {
	return (*resourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtr)(&v)
}

func (*resourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtr) ElementType() reflect.Type {
	return resourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrType
}

func (in *resourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtr) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput() ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return pulumi.ToOutput(in).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput)
}

func (in *resourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtr) ToResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutputWithContext(ctx context.Context) ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput)
}

// Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
type ResourcePolicyWeeklyCycleDayOfWeekDay string

const (
	ResourcePolicyWeeklyCycleDayOfWeekDayFriday    = ResourcePolicyWeeklyCycleDayOfWeekDay("FRIDAY")
	ResourcePolicyWeeklyCycleDayOfWeekDayInvalid   = ResourcePolicyWeeklyCycleDayOfWeekDay("INVALID")
	ResourcePolicyWeeklyCycleDayOfWeekDayMonday    = ResourcePolicyWeeklyCycleDayOfWeekDay("MONDAY")
	ResourcePolicyWeeklyCycleDayOfWeekDaySaturday  = ResourcePolicyWeeklyCycleDayOfWeekDay("SATURDAY")
	ResourcePolicyWeeklyCycleDayOfWeekDaySunday    = ResourcePolicyWeeklyCycleDayOfWeekDay("SUNDAY")
	ResourcePolicyWeeklyCycleDayOfWeekDayThursday  = ResourcePolicyWeeklyCycleDayOfWeekDay("THURSDAY")
	ResourcePolicyWeeklyCycleDayOfWeekDayTuesday   = ResourcePolicyWeeklyCycleDayOfWeekDay("TUESDAY")
	ResourcePolicyWeeklyCycleDayOfWeekDayWednesday = ResourcePolicyWeeklyCycleDayOfWeekDay("WEDNESDAY")
)

func (ResourcePolicyWeeklyCycleDayOfWeekDay) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyWeeklyCycleDayOfWeekDay)(nil)).Elem()
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToResourcePolicyWeeklyCycleDayOfWeekDayOutput() ResourcePolicyWeeklyCycleDayOfWeekDayOutput {
	return pulumi.ToOutput(e).(ResourcePolicyWeeklyCycleDayOfWeekDayOutput)
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToResourcePolicyWeeklyCycleDayOfWeekDayOutputWithContext(ctx context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourcePolicyWeeklyCycleDayOfWeekDayOutput)
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput() ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return e.ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(ctx context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return ResourcePolicyWeeklyCycleDayOfWeekDay(e).ToResourcePolicyWeeklyCycleDayOfWeekDayOutputWithContext(ctx).ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(ctx)
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourcePolicyWeeklyCycleDayOfWeekDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourcePolicyWeeklyCycleDayOfWeekDayOutput struct{ *pulumi.OutputState }

func (ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePolicyWeeklyCycleDayOfWeekDay)(nil)).Elem()
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToResourcePolicyWeeklyCycleDayOfWeekDayOutput() ResourcePolicyWeeklyCycleDayOfWeekDayOutput {
	return o
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToResourcePolicyWeeklyCycleDayOfWeekDayOutputWithContext(ctx context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayOutput {
	return o
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput() ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return o.ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(ctx context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePolicyWeeklyCycleDayOfWeekDay) *ResourcePolicyWeeklyCycleDayOfWeekDay {
		return &v
	}).(ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput)
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyWeeklyCycleDayOfWeekDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourcePolicyWeeklyCycleDayOfWeekDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput struct{ *pulumi.OutputState }

func (ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePolicyWeeklyCycleDayOfWeekDay)(nil)).Elem()
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput() ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return o
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(ctx context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return o
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput) Elem() ResourcePolicyWeeklyCycleDayOfWeekDayOutput {
	return o.ApplyT(func(v *ResourcePolicyWeeklyCycleDayOfWeekDay) ResourcePolicyWeeklyCycleDayOfWeekDay {
		if v != nil {
			return *v
		}
		var ret ResourcePolicyWeeklyCycleDayOfWeekDay
		return ret
	}).(ResourcePolicyWeeklyCycleDayOfWeekDayOutput)
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourcePolicyWeeklyCycleDayOfWeekDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourcePolicyWeeklyCycleDayOfWeekDayInput is an input type that accepts ResourcePolicyWeeklyCycleDayOfWeekDayArgs and ResourcePolicyWeeklyCycleDayOfWeekDayOutput values.
// You can construct a concrete instance of `ResourcePolicyWeeklyCycleDayOfWeekDayInput` via:
//
//          ResourcePolicyWeeklyCycleDayOfWeekDayArgs{...}
type ResourcePolicyWeeklyCycleDayOfWeekDayInput interface {
	pulumi.Input

	ToResourcePolicyWeeklyCycleDayOfWeekDayOutput() ResourcePolicyWeeklyCycleDayOfWeekDayOutput
	ToResourcePolicyWeeklyCycleDayOfWeekDayOutputWithContext(context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayOutput
}

var resourcePolicyWeeklyCycleDayOfWeekDayPtrType = reflect.TypeOf((**ResourcePolicyWeeklyCycleDayOfWeekDay)(nil)).Elem()

type ResourcePolicyWeeklyCycleDayOfWeekDayPtrInput interface {
	pulumi.Input

	ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput() ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput
	ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput
}

type resourcePolicyWeeklyCycleDayOfWeekDayPtr string

func ResourcePolicyWeeklyCycleDayOfWeekDayPtr(v string) ResourcePolicyWeeklyCycleDayOfWeekDayPtrInput {
	return (*resourcePolicyWeeklyCycleDayOfWeekDayPtr)(&v)
}

func (*resourcePolicyWeeklyCycleDayOfWeekDayPtr) ElementType() reflect.Type {
	return resourcePolicyWeeklyCycleDayOfWeekDayPtrType
}

func (in *resourcePolicyWeeklyCycleDayOfWeekDayPtr) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput() ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return pulumi.ToOutput(in).(ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput)
}

func (in *resourcePolicyWeeklyCycleDayOfWeekDayPtr) ToResourcePolicyWeeklyCycleDayOfWeekDayPtrOutputWithContext(ctx context.Context) ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput)
}

// ILB route behavior when ILB is deemed unhealthy based on user specified threshold on the Backend Service of the internal load balancing.
type RouteIlbRouteBehaviorOnUnhealthy string

const (
	// Do not Withdraw route if the ILB is deemed unhealthy based on user specified threshold on the Backend Service of the ILB. This is default behavior for ilb as next hop route without IlbRouteBehavior.
	RouteIlbRouteBehaviorOnUnhealthyDoNotWithdrawRouteIfIlbUnhealthy = RouteIlbRouteBehaviorOnUnhealthy("DO_NOT_WITHDRAW_ROUTE_IF_ILB_UNHEALTHY")
	// Withdraw route if the ILB is deemed unhealthy based on user specified threshold on the Backend Service of the internal load balancing. Currently the withdrawn route will be reinserted when the backends are restored to healthy. If you wish to prevent the re-insertion of the route and trigger the fall-back at your discretion, override the health result from the backends to signal as healthy only when ready to fallback.
	RouteIlbRouteBehaviorOnUnhealthyWithdrawRouteIfIlbUnhealthy = RouteIlbRouteBehaviorOnUnhealthy("WITHDRAW_ROUTE_IF_ILB_UNHEALTHY")
)

func (RouteIlbRouteBehaviorOnUnhealthy) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteIlbRouteBehaviorOnUnhealthy)(nil)).Elem()
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToRouteIlbRouteBehaviorOnUnhealthyOutput() RouteIlbRouteBehaviorOnUnhealthyOutput {
	return pulumi.ToOutput(e).(RouteIlbRouteBehaviorOnUnhealthyOutput)
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToRouteIlbRouteBehaviorOnUnhealthyOutputWithContext(ctx context.Context) RouteIlbRouteBehaviorOnUnhealthyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouteIlbRouteBehaviorOnUnhealthyOutput)
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutput() RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return e.ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(context.Background())
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(ctx context.Context) RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return RouteIlbRouteBehaviorOnUnhealthy(e).ToRouteIlbRouteBehaviorOnUnhealthyOutputWithContext(ctx).ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(ctx)
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouteIlbRouteBehaviorOnUnhealthy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouteIlbRouteBehaviorOnUnhealthyOutput struct{ *pulumi.OutputState }

func (RouteIlbRouteBehaviorOnUnhealthyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteIlbRouteBehaviorOnUnhealthy)(nil)).Elem()
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToRouteIlbRouteBehaviorOnUnhealthyOutput() RouteIlbRouteBehaviorOnUnhealthyOutput {
	return o
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToRouteIlbRouteBehaviorOnUnhealthyOutputWithContext(ctx context.Context) RouteIlbRouteBehaviorOnUnhealthyOutput {
	return o
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutput() RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return o.ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(context.Background())
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(ctx context.Context) RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteIlbRouteBehaviorOnUnhealthy) *RouteIlbRouteBehaviorOnUnhealthy {
		return &v
	}).(RouteIlbRouteBehaviorOnUnhealthyPtrOutput)
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteIlbRouteBehaviorOnUnhealthy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteIlbRouteBehaviorOnUnhealthyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteIlbRouteBehaviorOnUnhealthy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouteIlbRouteBehaviorOnUnhealthyPtrOutput struct{ *pulumi.OutputState }

func (RouteIlbRouteBehaviorOnUnhealthyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteIlbRouteBehaviorOnUnhealthy)(nil)).Elem()
}

func (o RouteIlbRouteBehaviorOnUnhealthyPtrOutput) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutput() RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return o
}

func (o RouteIlbRouteBehaviorOnUnhealthyPtrOutput) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(ctx context.Context) RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return o
}

func (o RouteIlbRouteBehaviorOnUnhealthyPtrOutput) Elem() RouteIlbRouteBehaviorOnUnhealthyOutput {
	return o.ApplyT(func(v *RouteIlbRouteBehaviorOnUnhealthy) RouteIlbRouteBehaviorOnUnhealthy {
		if v != nil {
			return *v
		}
		var ret RouteIlbRouteBehaviorOnUnhealthy
		return ret
	}).(RouteIlbRouteBehaviorOnUnhealthyOutput)
}

func (o RouteIlbRouteBehaviorOnUnhealthyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteIlbRouteBehaviorOnUnhealthyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouteIlbRouteBehaviorOnUnhealthy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouteIlbRouteBehaviorOnUnhealthyInput is an input type that accepts RouteIlbRouteBehaviorOnUnhealthyArgs and RouteIlbRouteBehaviorOnUnhealthyOutput values.
// You can construct a concrete instance of `RouteIlbRouteBehaviorOnUnhealthyInput` via:
//
//          RouteIlbRouteBehaviorOnUnhealthyArgs{...}
type RouteIlbRouteBehaviorOnUnhealthyInput interface {
	pulumi.Input

	ToRouteIlbRouteBehaviorOnUnhealthyOutput() RouteIlbRouteBehaviorOnUnhealthyOutput
	ToRouteIlbRouteBehaviorOnUnhealthyOutputWithContext(context.Context) RouteIlbRouteBehaviorOnUnhealthyOutput
}

var routeIlbRouteBehaviorOnUnhealthyPtrType = reflect.TypeOf((**RouteIlbRouteBehaviorOnUnhealthy)(nil)).Elem()

type RouteIlbRouteBehaviorOnUnhealthyPtrInput interface {
	pulumi.Input

	ToRouteIlbRouteBehaviorOnUnhealthyPtrOutput() RouteIlbRouteBehaviorOnUnhealthyPtrOutput
	ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(context.Context) RouteIlbRouteBehaviorOnUnhealthyPtrOutput
}

type routeIlbRouteBehaviorOnUnhealthyPtr string

func RouteIlbRouteBehaviorOnUnhealthyPtr(v string) RouteIlbRouteBehaviorOnUnhealthyPtrInput {
	return (*routeIlbRouteBehaviorOnUnhealthyPtr)(&v)
}

func (*routeIlbRouteBehaviorOnUnhealthyPtr) ElementType() reflect.Type {
	return routeIlbRouteBehaviorOnUnhealthyPtrType
}

func (in *routeIlbRouteBehaviorOnUnhealthyPtr) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutput() RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return pulumi.ToOutput(in).(RouteIlbRouteBehaviorOnUnhealthyPtrOutput)
}

func (in *routeIlbRouteBehaviorOnUnhealthyPtr) ToRouteIlbRouteBehaviorOnUnhealthyPtrOutputWithContext(ctx context.Context) RouteIlbRouteBehaviorOnUnhealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouteIlbRouteBehaviorOnUnhealthyPtrOutput)
}

// User-specified flag to indicate which mode to use for advertisement. The options are DEFAULT or CUSTOM.
type RouterBgpAdvertiseMode string

const (
	RouterBgpAdvertiseModeCustom  = RouterBgpAdvertiseMode("CUSTOM")
	RouterBgpAdvertiseModeDefault = RouterBgpAdvertiseMode("DEFAULT")
)

func (RouterBgpAdvertiseMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdvertiseMode)(nil)).Elem()
}

func (e RouterBgpAdvertiseMode) ToRouterBgpAdvertiseModeOutput() RouterBgpAdvertiseModeOutput {
	return pulumi.ToOutput(e).(RouterBgpAdvertiseModeOutput)
}

func (e RouterBgpAdvertiseMode) ToRouterBgpAdvertiseModeOutputWithContext(ctx context.Context) RouterBgpAdvertiseModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpAdvertiseModeOutput)
}

func (e RouterBgpAdvertiseMode) ToRouterBgpAdvertiseModePtrOutput() RouterBgpAdvertiseModePtrOutput {
	return e.ToRouterBgpAdvertiseModePtrOutputWithContext(context.Background())
}

func (e RouterBgpAdvertiseMode) ToRouterBgpAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpAdvertiseModePtrOutput {
	return RouterBgpAdvertiseMode(e).ToRouterBgpAdvertiseModeOutputWithContext(ctx).ToRouterBgpAdvertiseModePtrOutputWithContext(ctx)
}

func (e RouterBgpAdvertiseMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpAdvertiseMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpAdvertiseMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpAdvertiseMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpAdvertiseModeOutput struct{ *pulumi.OutputState }

func (RouterBgpAdvertiseModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdvertiseMode)(nil)).Elem()
}

func (o RouterBgpAdvertiseModeOutput) ToRouterBgpAdvertiseModeOutput() RouterBgpAdvertiseModeOutput {
	return o
}

func (o RouterBgpAdvertiseModeOutput) ToRouterBgpAdvertiseModeOutputWithContext(ctx context.Context) RouterBgpAdvertiseModeOutput {
	return o
}

func (o RouterBgpAdvertiseModeOutput) ToRouterBgpAdvertiseModePtrOutput() RouterBgpAdvertiseModePtrOutput {
	return o.ToRouterBgpAdvertiseModePtrOutputWithContext(context.Background())
}

func (o RouterBgpAdvertiseModeOutput) ToRouterBgpAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpAdvertiseModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpAdvertiseMode) *RouterBgpAdvertiseMode {
		return &v
	}).(RouterBgpAdvertiseModePtrOutput)
}

func (o RouterBgpAdvertiseModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpAdvertiseModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpAdvertiseMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpAdvertiseModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpAdvertiseModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpAdvertiseMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpAdvertiseModePtrOutput struct{ *pulumi.OutputState }

func (RouterBgpAdvertiseModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpAdvertiseMode)(nil)).Elem()
}

func (o RouterBgpAdvertiseModePtrOutput) ToRouterBgpAdvertiseModePtrOutput() RouterBgpAdvertiseModePtrOutput {
	return o
}

func (o RouterBgpAdvertiseModePtrOutput) ToRouterBgpAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpAdvertiseModePtrOutput {
	return o
}

func (o RouterBgpAdvertiseModePtrOutput) Elem() RouterBgpAdvertiseModeOutput {
	return o.ApplyT(func(v *RouterBgpAdvertiseMode) RouterBgpAdvertiseMode {
		if v != nil {
			return *v
		}
		var ret RouterBgpAdvertiseMode
		return ret
	}).(RouterBgpAdvertiseModeOutput)
}

func (o RouterBgpAdvertiseModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpAdvertiseModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpAdvertiseMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpAdvertiseModeInput is an input type that accepts RouterBgpAdvertiseModeArgs and RouterBgpAdvertiseModeOutput values.
// You can construct a concrete instance of `RouterBgpAdvertiseModeInput` via:
//
//          RouterBgpAdvertiseModeArgs{...}
type RouterBgpAdvertiseModeInput interface {
	pulumi.Input

	ToRouterBgpAdvertiseModeOutput() RouterBgpAdvertiseModeOutput
	ToRouterBgpAdvertiseModeOutputWithContext(context.Context) RouterBgpAdvertiseModeOutput
}

var routerBgpAdvertiseModePtrType = reflect.TypeOf((**RouterBgpAdvertiseMode)(nil)).Elem()

type RouterBgpAdvertiseModePtrInput interface {
	pulumi.Input

	ToRouterBgpAdvertiseModePtrOutput() RouterBgpAdvertiseModePtrOutput
	ToRouterBgpAdvertiseModePtrOutputWithContext(context.Context) RouterBgpAdvertiseModePtrOutput
}

type routerBgpAdvertiseModePtr string

func RouterBgpAdvertiseModePtr(v string) RouterBgpAdvertiseModePtrInput {
	return (*routerBgpAdvertiseModePtr)(&v)
}

func (*routerBgpAdvertiseModePtr) ElementType() reflect.Type {
	return routerBgpAdvertiseModePtrType
}

func (in *routerBgpAdvertiseModePtr) ToRouterBgpAdvertiseModePtrOutput() RouterBgpAdvertiseModePtrOutput {
	return pulumi.ToOutput(in).(RouterBgpAdvertiseModePtrOutput)
}

func (in *routerBgpAdvertiseModePtr) ToRouterBgpAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpAdvertiseModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpAdvertiseModePtrOutput)
}

type RouterBgpAdvertisedGroupsItem string

const (
	// Advertise peer subnets of the router's VPC.
	RouterBgpAdvertisedGroupsItemAllPeerVpcSubnets = RouterBgpAdvertisedGroupsItem("ALL_PEER_VPC_SUBNETS")
	// Advertise all available subnets (including peer VPC subnets).
	RouterBgpAdvertisedGroupsItemAllSubnets = RouterBgpAdvertisedGroupsItem("ALL_SUBNETS")
	// Advertise the router's own VPC subnets.
	RouterBgpAdvertisedGroupsItemAllVpcSubnets = RouterBgpAdvertisedGroupsItem("ALL_VPC_SUBNETS")
)

func (RouterBgpAdvertisedGroupsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdvertisedGroupsItem)(nil)).Elem()
}

func (e RouterBgpAdvertisedGroupsItem) ToRouterBgpAdvertisedGroupsItemOutput() RouterBgpAdvertisedGroupsItemOutput {
	return pulumi.ToOutput(e).(RouterBgpAdvertisedGroupsItemOutput)
}

func (e RouterBgpAdvertisedGroupsItem) ToRouterBgpAdvertisedGroupsItemOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpAdvertisedGroupsItemOutput)
}

func (e RouterBgpAdvertisedGroupsItem) ToRouterBgpAdvertisedGroupsItemPtrOutput() RouterBgpAdvertisedGroupsItemPtrOutput {
	return e.ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(context.Background())
}

func (e RouterBgpAdvertisedGroupsItem) ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemPtrOutput {
	return RouterBgpAdvertisedGroupsItem(e).ToRouterBgpAdvertisedGroupsItemOutputWithContext(ctx).ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(ctx)
}

func (e RouterBgpAdvertisedGroupsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpAdvertisedGroupsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpAdvertisedGroupsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpAdvertisedGroupsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpAdvertisedGroupsItemOutput struct{ *pulumi.OutputState }

func (RouterBgpAdvertisedGroupsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdvertisedGroupsItem)(nil)).Elem()
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToRouterBgpAdvertisedGroupsItemOutput() RouterBgpAdvertisedGroupsItemOutput {
	return o
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToRouterBgpAdvertisedGroupsItemOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemOutput {
	return o
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToRouterBgpAdvertisedGroupsItemPtrOutput() RouterBgpAdvertisedGroupsItemPtrOutput {
	return o.ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(context.Background())
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpAdvertisedGroupsItem) *RouterBgpAdvertisedGroupsItem {
		return &v
	}).(RouterBgpAdvertisedGroupsItemPtrOutput)
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpAdvertisedGroupsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpAdvertisedGroupsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpAdvertisedGroupsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpAdvertisedGroupsItemPtrOutput struct{ *pulumi.OutputState }

func (RouterBgpAdvertisedGroupsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpAdvertisedGroupsItem)(nil)).Elem()
}

func (o RouterBgpAdvertisedGroupsItemPtrOutput) ToRouterBgpAdvertisedGroupsItemPtrOutput() RouterBgpAdvertisedGroupsItemPtrOutput {
	return o
}

func (o RouterBgpAdvertisedGroupsItemPtrOutput) ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemPtrOutput {
	return o
}

func (o RouterBgpAdvertisedGroupsItemPtrOutput) Elem() RouterBgpAdvertisedGroupsItemOutput {
	return o.ApplyT(func(v *RouterBgpAdvertisedGroupsItem) RouterBgpAdvertisedGroupsItem {
		if v != nil {
			return *v
		}
		var ret RouterBgpAdvertisedGroupsItem
		return ret
	}).(RouterBgpAdvertisedGroupsItemOutput)
}

func (o RouterBgpAdvertisedGroupsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpAdvertisedGroupsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpAdvertisedGroupsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpAdvertisedGroupsItemInput is an input type that accepts RouterBgpAdvertisedGroupsItemArgs and RouterBgpAdvertisedGroupsItemOutput values.
// You can construct a concrete instance of `RouterBgpAdvertisedGroupsItemInput` via:
//
//          RouterBgpAdvertisedGroupsItemArgs{...}
type RouterBgpAdvertisedGroupsItemInput interface {
	pulumi.Input

	ToRouterBgpAdvertisedGroupsItemOutput() RouterBgpAdvertisedGroupsItemOutput
	ToRouterBgpAdvertisedGroupsItemOutputWithContext(context.Context) RouterBgpAdvertisedGroupsItemOutput
}

var routerBgpAdvertisedGroupsItemPtrType = reflect.TypeOf((**RouterBgpAdvertisedGroupsItem)(nil)).Elem()

type RouterBgpAdvertisedGroupsItemPtrInput interface {
	pulumi.Input

	ToRouterBgpAdvertisedGroupsItemPtrOutput() RouterBgpAdvertisedGroupsItemPtrOutput
	ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(context.Context) RouterBgpAdvertisedGroupsItemPtrOutput
}

type routerBgpAdvertisedGroupsItemPtr string

func RouterBgpAdvertisedGroupsItemPtr(v string) RouterBgpAdvertisedGroupsItemPtrInput {
	return (*routerBgpAdvertisedGroupsItemPtr)(&v)
}

func (*routerBgpAdvertisedGroupsItemPtr) ElementType() reflect.Type {
	return routerBgpAdvertisedGroupsItemPtrType
}

func (in *routerBgpAdvertisedGroupsItemPtr) ToRouterBgpAdvertisedGroupsItemPtrOutput() RouterBgpAdvertisedGroupsItemPtrOutput {
	return pulumi.ToOutput(in).(RouterBgpAdvertisedGroupsItemPtrOutput)
}

func (in *routerBgpAdvertisedGroupsItemPtr) ToRouterBgpAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpAdvertisedGroupsItemPtrOutput)
}

// RouterBgpAdvertisedGroupsItemArrayInput is an input type that accepts RouterBgpAdvertisedGroupsItemArray and RouterBgpAdvertisedGroupsItemArrayOutput values.
// You can construct a concrete instance of `RouterBgpAdvertisedGroupsItemArrayInput` via:
//
//          RouterBgpAdvertisedGroupsItemArray{ RouterBgpAdvertisedGroupsItemArgs{...} }
type RouterBgpAdvertisedGroupsItemArrayInput interface {
	pulumi.Input

	ToRouterBgpAdvertisedGroupsItemArrayOutput() RouterBgpAdvertisedGroupsItemArrayOutput
	ToRouterBgpAdvertisedGroupsItemArrayOutputWithContext(context.Context) RouterBgpAdvertisedGroupsItemArrayOutput
}

type RouterBgpAdvertisedGroupsItemArray []RouterBgpAdvertisedGroupsItem

func (RouterBgpAdvertisedGroupsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdvertisedGroupsItem)(nil)).Elem()
}

func (i RouterBgpAdvertisedGroupsItemArray) ToRouterBgpAdvertisedGroupsItemArrayOutput() RouterBgpAdvertisedGroupsItemArrayOutput {
	return i.ToRouterBgpAdvertisedGroupsItemArrayOutputWithContext(context.Background())
}

func (i RouterBgpAdvertisedGroupsItemArray) ToRouterBgpAdvertisedGroupsItemArrayOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAdvertisedGroupsItemArrayOutput)
}

type RouterBgpAdvertisedGroupsItemArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpAdvertisedGroupsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdvertisedGroupsItem)(nil)).Elem()
}

func (o RouterBgpAdvertisedGroupsItemArrayOutput) ToRouterBgpAdvertisedGroupsItemArrayOutput() RouterBgpAdvertisedGroupsItemArrayOutput {
	return o
}

func (o RouterBgpAdvertisedGroupsItemArrayOutput) ToRouterBgpAdvertisedGroupsItemArrayOutputWithContext(ctx context.Context) RouterBgpAdvertisedGroupsItemArrayOutput {
	return o
}

func (o RouterBgpAdvertisedGroupsItemArrayOutput) Index(i pulumi.IntInput) RouterBgpAdvertisedGroupsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpAdvertisedGroupsItem {
		return vs[0].([]RouterBgpAdvertisedGroupsItem)[vs[1].(int)]
	}).(RouterBgpAdvertisedGroupsItemOutput)
}

// User-specified flag to indicate which mode to use for advertisement.
type RouterBgpPeerAdvertiseMode string

const (
	RouterBgpPeerAdvertiseModeCustom  = RouterBgpPeerAdvertiseMode("CUSTOM")
	RouterBgpPeerAdvertiseModeDefault = RouterBgpPeerAdvertiseMode("DEFAULT")
)

func (RouterBgpPeerAdvertiseMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerAdvertiseMode)(nil)).Elem()
}

func (e RouterBgpPeerAdvertiseMode) ToRouterBgpPeerAdvertiseModeOutput() RouterBgpPeerAdvertiseModeOutput {
	return pulumi.ToOutput(e).(RouterBgpPeerAdvertiseModeOutput)
}

func (e RouterBgpPeerAdvertiseMode) ToRouterBgpPeerAdvertiseModeOutputWithContext(ctx context.Context) RouterBgpPeerAdvertiseModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpPeerAdvertiseModeOutput)
}

func (e RouterBgpPeerAdvertiseMode) ToRouterBgpPeerAdvertiseModePtrOutput() RouterBgpPeerAdvertiseModePtrOutput {
	return e.ToRouterBgpPeerAdvertiseModePtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerAdvertiseMode) ToRouterBgpPeerAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertiseModePtrOutput {
	return RouterBgpPeerAdvertiseMode(e).ToRouterBgpPeerAdvertiseModeOutputWithContext(ctx).ToRouterBgpPeerAdvertiseModePtrOutputWithContext(ctx)
}

func (e RouterBgpPeerAdvertiseMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerAdvertiseMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerAdvertiseMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerAdvertiseMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpPeerAdvertiseModeOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerAdvertiseModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerAdvertiseMode)(nil)).Elem()
}

func (o RouterBgpPeerAdvertiseModeOutput) ToRouterBgpPeerAdvertiseModeOutput() RouterBgpPeerAdvertiseModeOutput {
	return o
}

func (o RouterBgpPeerAdvertiseModeOutput) ToRouterBgpPeerAdvertiseModeOutputWithContext(ctx context.Context) RouterBgpPeerAdvertiseModeOutput {
	return o
}

func (o RouterBgpPeerAdvertiseModeOutput) ToRouterBgpPeerAdvertiseModePtrOutput() RouterBgpPeerAdvertiseModePtrOutput {
	return o.ToRouterBgpPeerAdvertiseModePtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertiseModeOutput) ToRouterBgpPeerAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertiseModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpPeerAdvertiseMode) *RouterBgpPeerAdvertiseMode {
		return &v
	}).(RouterBgpPeerAdvertiseModePtrOutput)
}

func (o RouterBgpPeerAdvertiseModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertiseModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerAdvertiseMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpPeerAdvertiseModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertiseModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerAdvertiseMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpPeerAdvertiseModePtrOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerAdvertiseModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpPeerAdvertiseMode)(nil)).Elem()
}

func (o RouterBgpPeerAdvertiseModePtrOutput) ToRouterBgpPeerAdvertiseModePtrOutput() RouterBgpPeerAdvertiseModePtrOutput {
	return o
}

func (o RouterBgpPeerAdvertiseModePtrOutput) ToRouterBgpPeerAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertiseModePtrOutput {
	return o
}

func (o RouterBgpPeerAdvertiseModePtrOutput) Elem() RouterBgpPeerAdvertiseModeOutput {
	return o.ApplyT(func(v *RouterBgpPeerAdvertiseMode) RouterBgpPeerAdvertiseMode {
		if v != nil {
			return *v
		}
		var ret RouterBgpPeerAdvertiseMode
		return ret
	}).(RouterBgpPeerAdvertiseModeOutput)
}

func (o RouterBgpPeerAdvertiseModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertiseModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpPeerAdvertiseMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpPeerAdvertiseModeInput is an input type that accepts RouterBgpPeerAdvertiseModeArgs and RouterBgpPeerAdvertiseModeOutput values.
// You can construct a concrete instance of `RouterBgpPeerAdvertiseModeInput` via:
//
//          RouterBgpPeerAdvertiseModeArgs{...}
type RouterBgpPeerAdvertiseModeInput interface {
	pulumi.Input

	ToRouterBgpPeerAdvertiseModeOutput() RouterBgpPeerAdvertiseModeOutput
	ToRouterBgpPeerAdvertiseModeOutputWithContext(context.Context) RouterBgpPeerAdvertiseModeOutput
}

var routerBgpPeerAdvertiseModePtrType = reflect.TypeOf((**RouterBgpPeerAdvertiseMode)(nil)).Elem()

type RouterBgpPeerAdvertiseModePtrInput interface {
	pulumi.Input

	ToRouterBgpPeerAdvertiseModePtrOutput() RouterBgpPeerAdvertiseModePtrOutput
	ToRouterBgpPeerAdvertiseModePtrOutputWithContext(context.Context) RouterBgpPeerAdvertiseModePtrOutput
}

type routerBgpPeerAdvertiseModePtr string

func RouterBgpPeerAdvertiseModePtr(v string) RouterBgpPeerAdvertiseModePtrInput {
	return (*routerBgpPeerAdvertiseModePtr)(&v)
}

func (*routerBgpPeerAdvertiseModePtr) ElementType() reflect.Type {
	return routerBgpPeerAdvertiseModePtrType
}

func (in *routerBgpPeerAdvertiseModePtr) ToRouterBgpPeerAdvertiseModePtrOutput() RouterBgpPeerAdvertiseModePtrOutput {
	return pulumi.ToOutput(in).(RouterBgpPeerAdvertiseModePtrOutput)
}

func (in *routerBgpPeerAdvertiseModePtr) ToRouterBgpPeerAdvertiseModePtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertiseModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpPeerAdvertiseModePtrOutput)
}

type RouterBgpPeerAdvertisedGroupsItem string

const (
	// Advertise peer subnets of the router's VPC.
	RouterBgpPeerAdvertisedGroupsItemAllPeerVpcSubnets = RouterBgpPeerAdvertisedGroupsItem("ALL_PEER_VPC_SUBNETS")
	// Advertise all available subnets (including peer VPC subnets).
	RouterBgpPeerAdvertisedGroupsItemAllSubnets = RouterBgpPeerAdvertisedGroupsItem("ALL_SUBNETS")
	// Advertise the router's own VPC subnets.
	RouterBgpPeerAdvertisedGroupsItemAllVpcSubnets = RouterBgpPeerAdvertisedGroupsItem("ALL_VPC_SUBNETS")
)

func (RouterBgpPeerAdvertisedGroupsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerAdvertisedGroupsItem)(nil)).Elem()
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToRouterBgpPeerAdvertisedGroupsItemOutput() RouterBgpPeerAdvertisedGroupsItemOutput {
	return pulumi.ToOutput(e).(RouterBgpPeerAdvertisedGroupsItemOutput)
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToRouterBgpPeerAdvertisedGroupsItemOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpPeerAdvertisedGroupsItemOutput)
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToRouterBgpPeerAdvertisedGroupsItemPtrOutput() RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return e.ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return RouterBgpPeerAdvertisedGroupsItem(e).ToRouterBgpPeerAdvertisedGroupsItemOutputWithContext(ctx).ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(ctx)
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerAdvertisedGroupsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpPeerAdvertisedGroupsItemOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerAdvertisedGroupsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerAdvertisedGroupsItem)(nil)).Elem()
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToRouterBgpPeerAdvertisedGroupsItemOutput() RouterBgpPeerAdvertisedGroupsItemOutput {
	return o
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToRouterBgpPeerAdvertisedGroupsItemOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemOutput {
	return o
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToRouterBgpPeerAdvertisedGroupsItemPtrOutput() RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return o.ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpPeerAdvertisedGroupsItem) *RouterBgpPeerAdvertisedGroupsItem {
		return &v
	}).(RouterBgpPeerAdvertisedGroupsItemPtrOutput)
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerAdvertisedGroupsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertisedGroupsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerAdvertisedGroupsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpPeerAdvertisedGroupsItemPtrOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerAdvertisedGroupsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpPeerAdvertisedGroupsItem)(nil)).Elem()
}

func (o RouterBgpPeerAdvertisedGroupsItemPtrOutput) ToRouterBgpPeerAdvertisedGroupsItemPtrOutput() RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return o
}

func (o RouterBgpPeerAdvertisedGroupsItemPtrOutput) ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return o
}

func (o RouterBgpPeerAdvertisedGroupsItemPtrOutput) Elem() RouterBgpPeerAdvertisedGroupsItemOutput {
	return o.ApplyT(func(v *RouterBgpPeerAdvertisedGroupsItem) RouterBgpPeerAdvertisedGroupsItem {
		if v != nil {
			return *v
		}
		var ret RouterBgpPeerAdvertisedGroupsItem
		return ret
	}).(RouterBgpPeerAdvertisedGroupsItemOutput)
}

func (o RouterBgpPeerAdvertisedGroupsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerAdvertisedGroupsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpPeerAdvertisedGroupsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpPeerAdvertisedGroupsItemInput is an input type that accepts RouterBgpPeerAdvertisedGroupsItemArgs and RouterBgpPeerAdvertisedGroupsItemOutput values.
// You can construct a concrete instance of `RouterBgpPeerAdvertisedGroupsItemInput` via:
//
//          RouterBgpPeerAdvertisedGroupsItemArgs{...}
type RouterBgpPeerAdvertisedGroupsItemInput interface {
	pulumi.Input

	ToRouterBgpPeerAdvertisedGroupsItemOutput() RouterBgpPeerAdvertisedGroupsItemOutput
	ToRouterBgpPeerAdvertisedGroupsItemOutputWithContext(context.Context) RouterBgpPeerAdvertisedGroupsItemOutput
}

var routerBgpPeerAdvertisedGroupsItemPtrType = reflect.TypeOf((**RouterBgpPeerAdvertisedGroupsItem)(nil)).Elem()

type RouterBgpPeerAdvertisedGroupsItemPtrInput interface {
	pulumi.Input

	ToRouterBgpPeerAdvertisedGroupsItemPtrOutput() RouterBgpPeerAdvertisedGroupsItemPtrOutput
	ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(context.Context) RouterBgpPeerAdvertisedGroupsItemPtrOutput
}

type routerBgpPeerAdvertisedGroupsItemPtr string

func RouterBgpPeerAdvertisedGroupsItemPtr(v string) RouterBgpPeerAdvertisedGroupsItemPtrInput {
	return (*routerBgpPeerAdvertisedGroupsItemPtr)(&v)
}

func (*routerBgpPeerAdvertisedGroupsItemPtr) ElementType() reflect.Type {
	return routerBgpPeerAdvertisedGroupsItemPtrType
}

func (in *routerBgpPeerAdvertisedGroupsItemPtr) ToRouterBgpPeerAdvertisedGroupsItemPtrOutput() RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return pulumi.ToOutput(in).(RouterBgpPeerAdvertisedGroupsItemPtrOutput)
}

func (in *routerBgpPeerAdvertisedGroupsItemPtr) ToRouterBgpPeerAdvertisedGroupsItemPtrOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpPeerAdvertisedGroupsItemPtrOutput)
}

// RouterBgpPeerAdvertisedGroupsItemArrayInput is an input type that accepts RouterBgpPeerAdvertisedGroupsItemArray and RouterBgpPeerAdvertisedGroupsItemArrayOutput values.
// You can construct a concrete instance of `RouterBgpPeerAdvertisedGroupsItemArrayInput` via:
//
//          RouterBgpPeerAdvertisedGroupsItemArray{ RouterBgpPeerAdvertisedGroupsItemArgs{...} }
type RouterBgpPeerAdvertisedGroupsItemArrayInput interface {
	pulumi.Input

	ToRouterBgpPeerAdvertisedGroupsItemArrayOutput() RouterBgpPeerAdvertisedGroupsItemArrayOutput
	ToRouterBgpPeerAdvertisedGroupsItemArrayOutputWithContext(context.Context) RouterBgpPeerAdvertisedGroupsItemArrayOutput
}

type RouterBgpPeerAdvertisedGroupsItemArray []RouterBgpPeerAdvertisedGroupsItem

func (RouterBgpPeerAdvertisedGroupsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpPeerAdvertisedGroupsItem)(nil)).Elem()
}

func (i RouterBgpPeerAdvertisedGroupsItemArray) ToRouterBgpPeerAdvertisedGroupsItemArrayOutput() RouterBgpPeerAdvertisedGroupsItemArrayOutput {
	return i.ToRouterBgpPeerAdvertisedGroupsItemArrayOutputWithContext(context.Background())
}

func (i RouterBgpPeerAdvertisedGroupsItemArray) ToRouterBgpPeerAdvertisedGroupsItemArrayOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpPeerAdvertisedGroupsItemArrayOutput)
}

type RouterBgpPeerAdvertisedGroupsItemArrayOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerAdvertisedGroupsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpPeerAdvertisedGroupsItem)(nil)).Elem()
}

func (o RouterBgpPeerAdvertisedGroupsItemArrayOutput) ToRouterBgpPeerAdvertisedGroupsItemArrayOutput() RouterBgpPeerAdvertisedGroupsItemArrayOutput {
	return o
}

func (o RouterBgpPeerAdvertisedGroupsItemArrayOutput) ToRouterBgpPeerAdvertisedGroupsItemArrayOutputWithContext(ctx context.Context) RouterBgpPeerAdvertisedGroupsItemArrayOutput {
	return o
}

func (o RouterBgpPeerAdvertisedGroupsItemArrayOutput) Index(i pulumi.IntInput) RouterBgpPeerAdvertisedGroupsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterBgpPeerAdvertisedGroupsItem {
		return vs[0].([]RouterBgpPeerAdvertisedGroupsItem)[vs[1].(int)]
	}).(RouterBgpPeerAdvertisedGroupsItemOutput)
}

// The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is PASSIVE.
type RouterBgpPeerBfdMode string

const (
	RouterBgpPeerBfdModeActive   = RouterBgpPeerBfdMode("ACTIVE")
	RouterBgpPeerBfdModeDisabled = RouterBgpPeerBfdMode("DISABLED")
	RouterBgpPeerBfdModePassive  = RouterBgpPeerBfdMode("PASSIVE")
)

func (RouterBgpPeerBfdMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerBfdMode)(nil)).Elem()
}

func (e RouterBgpPeerBfdMode) ToRouterBgpPeerBfdModeOutput() RouterBgpPeerBfdModeOutput {
	return pulumi.ToOutput(e).(RouterBgpPeerBfdModeOutput)
}

func (e RouterBgpPeerBfdMode) ToRouterBgpPeerBfdModeOutputWithContext(ctx context.Context) RouterBgpPeerBfdModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpPeerBfdModeOutput)
}

func (e RouterBgpPeerBfdMode) ToRouterBgpPeerBfdModePtrOutput() RouterBgpPeerBfdModePtrOutput {
	return e.ToRouterBgpPeerBfdModePtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerBfdMode) ToRouterBgpPeerBfdModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdModePtrOutput {
	return RouterBgpPeerBfdMode(e).ToRouterBgpPeerBfdModeOutputWithContext(ctx).ToRouterBgpPeerBfdModePtrOutputWithContext(ctx)
}

func (e RouterBgpPeerBfdMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerBfdMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerBfdMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerBfdMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpPeerBfdModeOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerBfdModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerBfdMode)(nil)).Elem()
}

func (o RouterBgpPeerBfdModeOutput) ToRouterBgpPeerBfdModeOutput() RouterBgpPeerBfdModeOutput {
	return o
}

func (o RouterBgpPeerBfdModeOutput) ToRouterBgpPeerBfdModeOutputWithContext(ctx context.Context) RouterBgpPeerBfdModeOutput {
	return o
}

func (o RouterBgpPeerBfdModeOutput) ToRouterBgpPeerBfdModePtrOutput() RouterBgpPeerBfdModePtrOutput {
	return o.ToRouterBgpPeerBfdModePtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdModeOutput) ToRouterBgpPeerBfdModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpPeerBfdMode) *RouterBgpPeerBfdMode {
		return &v
	}).(RouterBgpPeerBfdModePtrOutput)
}

func (o RouterBgpPeerBfdModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerBfdMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpPeerBfdModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerBfdMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpPeerBfdModePtrOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerBfdModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpPeerBfdMode)(nil)).Elem()
}

func (o RouterBgpPeerBfdModePtrOutput) ToRouterBgpPeerBfdModePtrOutput() RouterBgpPeerBfdModePtrOutput {
	return o
}

func (o RouterBgpPeerBfdModePtrOutput) ToRouterBgpPeerBfdModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdModePtrOutput {
	return o
}

func (o RouterBgpPeerBfdModePtrOutput) Elem() RouterBgpPeerBfdModeOutput {
	return o.ApplyT(func(v *RouterBgpPeerBfdMode) RouterBgpPeerBfdMode {
		if v != nil {
			return *v
		}
		var ret RouterBgpPeerBfdMode
		return ret
	}).(RouterBgpPeerBfdModeOutput)
}

func (o RouterBgpPeerBfdModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpPeerBfdMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpPeerBfdModeInput is an input type that accepts RouterBgpPeerBfdModeArgs and RouterBgpPeerBfdModeOutput values.
// You can construct a concrete instance of `RouterBgpPeerBfdModeInput` via:
//
//          RouterBgpPeerBfdModeArgs{...}
type RouterBgpPeerBfdModeInput interface {
	pulumi.Input

	ToRouterBgpPeerBfdModeOutput() RouterBgpPeerBfdModeOutput
	ToRouterBgpPeerBfdModeOutputWithContext(context.Context) RouterBgpPeerBfdModeOutput
}

var routerBgpPeerBfdModePtrType = reflect.TypeOf((**RouterBgpPeerBfdMode)(nil)).Elem()

type RouterBgpPeerBfdModePtrInput interface {
	pulumi.Input

	ToRouterBgpPeerBfdModePtrOutput() RouterBgpPeerBfdModePtrOutput
	ToRouterBgpPeerBfdModePtrOutputWithContext(context.Context) RouterBgpPeerBfdModePtrOutput
}

type routerBgpPeerBfdModePtr string

func RouterBgpPeerBfdModePtr(v string) RouterBgpPeerBfdModePtrInput {
	return (*routerBgpPeerBfdModePtr)(&v)
}

func (*routerBgpPeerBfdModePtr) ElementType() reflect.Type {
	return routerBgpPeerBfdModePtrType
}

func (in *routerBgpPeerBfdModePtr) ToRouterBgpPeerBfdModePtrOutput() RouterBgpPeerBfdModePtrOutput {
	return pulumi.ToOutput(in).(RouterBgpPeerBfdModePtrOutput)
}

func (in *routerBgpPeerBfdModePtr) ToRouterBgpPeerBfdModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpPeerBfdModePtrOutput)
}

// The BFD packet mode for this BGP peer. If set to CONTROL_AND_ECHO, BFD echo mode is enabled for this BGP peer. In this mode, if the peer router also has BFD echo mode enabled, BFD echo packets will be sent to the other router. If the peer router does not have BFD echo mode enabled, only control packets will be sent. If set to CONTROL_ONLY, BFD echo mode is disabled for this BGP peer. If this router and the peer router have a multihop connection, this should be set to CONTROL_ONLY as BFD echo mode is only supported on singlehop connections. The default is CONTROL_AND_ECHO.
type RouterBgpPeerBfdPacketMode string

const (
	RouterBgpPeerBfdPacketModeControlAndEcho = RouterBgpPeerBfdPacketMode("CONTROL_AND_ECHO")
	RouterBgpPeerBfdPacketModeControlOnly    = RouterBgpPeerBfdPacketMode("CONTROL_ONLY")
)

func (RouterBgpPeerBfdPacketMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerBfdPacketMode)(nil)).Elem()
}

func (e RouterBgpPeerBfdPacketMode) ToRouterBgpPeerBfdPacketModeOutput() RouterBgpPeerBfdPacketModeOutput {
	return pulumi.ToOutput(e).(RouterBgpPeerBfdPacketModeOutput)
}

func (e RouterBgpPeerBfdPacketMode) ToRouterBgpPeerBfdPacketModeOutputWithContext(ctx context.Context) RouterBgpPeerBfdPacketModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpPeerBfdPacketModeOutput)
}

func (e RouterBgpPeerBfdPacketMode) ToRouterBgpPeerBfdPacketModePtrOutput() RouterBgpPeerBfdPacketModePtrOutput {
	return e.ToRouterBgpPeerBfdPacketModePtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerBfdPacketMode) ToRouterBgpPeerBfdPacketModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdPacketModePtrOutput {
	return RouterBgpPeerBfdPacketMode(e).ToRouterBgpPeerBfdPacketModeOutputWithContext(ctx).ToRouterBgpPeerBfdPacketModePtrOutputWithContext(ctx)
}

func (e RouterBgpPeerBfdPacketMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerBfdPacketMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerBfdPacketMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerBfdPacketMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpPeerBfdPacketModeOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerBfdPacketModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerBfdPacketMode)(nil)).Elem()
}

func (o RouterBgpPeerBfdPacketModeOutput) ToRouterBgpPeerBfdPacketModeOutput() RouterBgpPeerBfdPacketModeOutput {
	return o
}

func (o RouterBgpPeerBfdPacketModeOutput) ToRouterBgpPeerBfdPacketModeOutputWithContext(ctx context.Context) RouterBgpPeerBfdPacketModeOutput {
	return o
}

func (o RouterBgpPeerBfdPacketModeOutput) ToRouterBgpPeerBfdPacketModePtrOutput() RouterBgpPeerBfdPacketModePtrOutput {
	return o.ToRouterBgpPeerBfdPacketModePtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdPacketModeOutput) ToRouterBgpPeerBfdPacketModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdPacketModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpPeerBfdPacketMode) *RouterBgpPeerBfdPacketMode {
		return &v
	}).(RouterBgpPeerBfdPacketModePtrOutput)
}

func (o RouterBgpPeerBfdPacketModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdPacketModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerBfdPacketMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpPeerBfdPacketModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdPacketModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerBfdPacketMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpPeerBfdPacketModePtrOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerBfdPacketModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpPeerBfdPacketMode)(nil)).Elem()
}

func (o RouterBgpPeerBfdPacketModePtrOutput) ToRouterBgpPeerBfdPacketModePtrOutput() RouterBgpPeerBfdPacketModePtrOutput {
	return o
}

func (o RouterBgpPeerBfdPacketModePtrOutput) ToRouterBgpPeerBfdPacketModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdPacketModePtrOutput {
	return o
}

func (o RouterBgpPeerBfdPacketModePtrOutput) Elem() RouterBgpPeerBfdPacketModeOutput {
	return o.ApplyT(func(v *RouterBgpPeerBfdPacketMode) RouterBgpPeerBfdPacketMode {
		if v != nil {
			return *v
		}
		var ret RouterBgpPeerBfdPacketMode
		return ret
	}).(RouterBgpPeerBfdPacketModeOutput)
}

func (o RouterBgpPeerBfdPacketModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdPacketModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpPeerBfdPacketMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpPeerBfdPacketModeInput is an input type that accepts RouterBgpPeerBfdPacketModeArgs and RouterBgpPeerBfdPacketModeOutput values.
// You can construct a concrete instance of `RouterBgpPeerBfdPacketModeInput` via:
//
//          RouterBgpPeerBfdPacketModeArgs{...}
type RouterBgpPeerBfdPacketModeInput interface {
	pulumi.Input

	ToRouterBgpPeerBfdPacketModeOutput() RouterBgpPeerBfdPacketModeOutput
	ToRouterBgpPeerBfdPacketModeOutputWithContext(context.Context) RouterBgpPeerBfdPacketModeOutput
}

var routerBgpPeerBfdPacketModePtrType = reflect.TypeOf((**RouterBgpPeerBfdPacketMode)(nil)).Elem()

type RouterBgpPeerBfdPacketModePtrInput interface {
	pulumi.Input

	ToRouterBgpPeerBfdPacketModePtrOutput() RouterBgpPeerBfdPacketModePtrOutput
	ToRouterBgpPeerBfdPacketModePtrOutputWithContext(context.Context) RouterBgpPeerBfdPacketModePtrOutput
}

type routerBgpPeerBfdPacketModePtr string

func RouterBgpPeerBfdPacketModePtr(v string) RouterBgpPeerBfdPacketModePtrInput {
	return (*routerBgpPeerBfdPacketModePtr)(&v)
}

func (*routerBgpPeerBfdPacketModePtr) ElementType() reflect.Type {
	return routerBgpPeerBfdPacketModePtrType
}

func (in *routerBgpPeerBfdPacketModePtr) ToRouterBgpPeerBfdPacketModePtrOutput() RouterBgpPeerBfdPacketModePtrOutput {
	return pulumi.ToOutput(in).(RouterBgpPeerBfdPacketModePtrOutput)
}

func (in *routerBgpPeerBfdPacketModePtr) ToRouterBgpPeerBfdPacketModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdPacketModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpPeerBfdPacketModePtrOutput)
}

// The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is DISABLED.
type RouterBgpPeerBfdSessionInitializationMode string

const (
	RouterBgpPeerBfdSessionInitializationModeActive   = RouterBgpPeerBfdSessionInitializationMode("ACTIVE")
	RouterBgpPeerBfdSessionInitializationModeDisabled = RouterBgpPeerBfdSessionInitializationMode("DISABLED")
	RouterBgpPeerBfdSessionInitializationModePassive  = RouterBgpPeerBfdSessionInitializationMode("PASSIVE")
)

func (RouterBgpPeerBfdSessionInitializationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerBfdSessionInitializationMode)(nil)).Elem()
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToRouterBgpPeerBfdSessionInitializationModeOutput() RouterBgpPeerBfdSessionInitializationModeOutput {
	return pulumi.ToOutput(e).(RouterBgpPeerBfdSessionInitializationModeOutput)
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToRouterBgpPeerBfdSessionInitializationModeOutputWithContext(ctx context.Context) RouterBgpPeerBfdSessionInitializationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpPeerBfdSessionInitializationModeOutput)
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToRouterBgpPeerBfdSessionInitializationModePtrOutput() RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return e.ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return RouterBgpPeerBfdSessionInitializationMode(e).ToRouterBgpPeerBfdSessionInitializationModeOutputWithContext(ctx).ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(ctx)
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerBfdSessionInitializationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpPeerBfdSessionInitializationModeOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerBfdSessionInitializationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerBfdSessionInitializationMode)(nil)).Elem()
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToRouterBgpPeerBfdSessionInitializationModeOutput() RouterBgpPeerBfdSessionInitializationModeOutput {
	return o
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToRouterBgpPeerBfdSessionInitializationModeOutputWithContext(ctx context.Context) RouterBgpPeerBfdSessionInitializationModeOutput {
	return o
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToRouterBgpPeerBfdSessionInitializationModePtrOutput() RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return o.ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpPeerBfdSessionInitializationMode) *RouterBgpPeerBfdSessionInitializationMode {
		return &v
	}).(RouterBgpPeerBfdSessionInitializationModePtrOutput)
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerBfdSessionInitializationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdSessionInitializationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerBfdSessionInitializationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpPeerBfdSessionInitializationModePtrOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerBfdSessionInitializationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpPeerBfdSessionInitializationMode)(nil)).Elem()
}

func (o RouterBgpPeerBfdSessionInitializationModePtrOutput) ToRouterBgpPeerBfdSessionInitializationModePtrOutput() RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return o
}

func (o RouterBgpPeerBfdSessionInitializationModePtrOutput) ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return o
}

func (o RouterBgpPeerBfdSessionInitializationModePtrOutput) Elem() RouterBgpPeerBfdSessionInitializationModeOutput {
	return o.ApplyT(func(v *RouterBgpPeerBfdSessionInitializationMode) RouterBgpPeerBfdSessionInitializationMode {
		if v != nil {
			return *v
		}
		var ret RouterBgpPeerBfdSessionInitializationMode
		return ret
	}).(RouterBgpPeerBfdSessionInitializationModeOutput)
}

func (o RouterBgpPeerBfdSessionInitializationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerBfdSessionInitializationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpPeerBfdSessionInitializationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpPeerBfdSessionInitializationModeInput is an input type that accepts RouterBgpPeerBfdSessionInitializationModeArgs and RouterBgpPeerBfdSessionInitializationModeOutput values.
// You can construct a concrete instance of `RouterBgpPeerBfdSessionInitializationModeInput` via:
//
//          RouterBgpPeerBfdSessionInitializationModeArgs{...}
type RouterBgpPeerBfdSessionInitializationModeInput interface {
	pulumi.Input

	ToRouterBgpPeerBfdSessionInitializationModeOutput() RouterBgpPeerBfdSessionInitializationModeOutput
	ToRouterBgpPeerBfdSessionInitializationModeOutputWithContext(context.Context) RouterBgpPeerBfdSessionInitializationModeOutput
}

var routerBgpPeerBfdSessionInitializationModePtrType = reflect.TypeOf((**RouterBgpPeerBfdSessionInitializationMode)(nil)).Elem()

type RouterBgpPeerBfdSessionInitializationModePtrInput interface {
	pulumi.Input

	ToRouterBgpPeerBfdSessionInitializationModePtrOutput() RouterBgpPeerBfdSessionInitializationModePtrOutput
	ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(context.Context) RouterBgpPeerBfdSessionInitializationModePtrOutput
}

type routerBgpPeerBfdSessionInitializationModePtr string

func RouterBgpPeerBfdSessionInitializationModePtr(v string) RouterBgpPeerBfdSessionInitializationModePtrInput {
	return (*routerBgpPeerBfdSessionInitializationModePtr)(&v)
}

func (*routerBgpPeerBfdSessionInitializationModePtr) ElementType() reflect.Type {
	return routerBgpPeerBfdSessionInitializationModePtrType
}

func (in *routerBgpPeerBfdSessionInitializationModePtr) ToRouterBgpPeerBfdSessionInitializationModePtrOutput() RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return pulumi.ToOutput(in).(RouterBgpPeerBfdSessionInitializationModePtrOutput)
}

func (in *routerBgpPeerBfdSessionInitializationModePtr) ToRouterBgpPeerBfdSessionInitializationModePtrOutputWithContext(ctx context.Context) RouterBgpPeerBfdSessionInitializationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpPeerBfdSessionInitializationModePtrOutput)
}

// The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE.
type RouterBgpPeerEnable string

const (
	RouterBgpPeerEnableFalse = RouterBgpPeerEnable("FALSE")
	RouterBgpPeerEnableTrue  = RouterBgpPeerEnable("TRUE")
)

func (RouterBgpPeerEnable) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerEnable)(nil)).Elem()
}

func (e RouterBgpPeerEnable) ToRouterBgpPeerEnableOutput() RouterBgpPeerEnableOutput {
	return pulumi.ToOutput(e).(RouterBgpPeerEnableOutput)
}

func (e RouterBgpPeerEnable) ToRouterBgpPeerEnableOutputWithContext(ctx context.Context) RouterBgpPeerEnableOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterBgpPeerEnableOutput)
}

func (e RouterBgpPeerEnable) ToRouterBgpPeerEnablePtrOutput() RouterBgpPeerEnablePtrOutput {
	return e.ToRouterBgpPeerEnablePtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerEnable) ToRouterBgpPeerEnablePtrOutputWithContext(ctx context.Context) RouterBgpPeerEnablePtrOutput {
	return RouterBgpPeerEnable(e).ToRouterBgpPeerEnableOutputWithContext(ctx).ToRouterBgpPeerEnablePtrOutputWithContext(ctx)
}

func (e RouterBgpPeerEnable) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerEnable) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterBgpPeerEnable) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterBgpPeerEnable) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterBgpPeerEnableOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerEnableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpPeerEnable)(nil)).Elem()
}

func (o RouterBgpPeerEnableOutput) ToRouterBgpPeerEnableOutput() RouterBgpPeerEnableOutput {
	return o
}

func (o RouterBgpPeerEnableOutput) ToRouterBgpPeerEnableOutputWithContext(ctx context.Context) RouterBgpPeerEnableOutput {
	return o
}

func (o RouterBgpPeerEnableOutput) ToRouterBgpPeerEnablePtrOutput() RouterBgpPeerEnablePtrOutput {
	return o.ToRouterBgpPeerEnablePtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerEnableOutput) ToRouterBgpPeerEnablePtrOutputWithContext(ctx context.Context) RouterBgpPeerEnablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterBgpPeerEnable) *RouterBgpPeerEnable {
		return &v
	}).(RouterBgpPeerEnablePtrOutput)
}

func (o RouterBgpPeerEnableOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterBgpPeerEnableOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerEnable) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterBgpPeerEnableOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerEnableOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterBgpPeerEnable) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterBgpPeerEnablePtrOutput struct{ *pulumi.OutputState }

func (RouterBgpPeerEnablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterBgpPeerEnable)(nil)).Elem()
}

func (o RouterBgpPeerEnablePtrOutput) ToRouterBgpPeerEnablePtrOutput() RouterBgpPeerEnablePtrOutput {
	return o
}

func (o RouterBgpPeerEnablePtrOutput) ToRouterBgpPeerEnablePtrOutputWithContext(ctx context.Context) RouterBgpPeerEnablePtrOutput {
	return o
}

func (o RouterBgpPeerEnablePtrOutput) Elem() RouterBgpPeerEnableOutput {
	return o.ApplyT(func(v *RouterBgpPeerEnable) RouterBgpPeerEnable {
		if v != nil {
			return *v
		}
		var ret RouterBgpPeerEnable
		return ret
	}).(RouterBgpPeerEnableOutput)
}

func (o RouterBgpPeerEnablePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterBgpPeerEnablePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterBgpPeerEnable) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterBgpPeerEnableInput is an input type that accepts RouterBgpPeerEnableArgs and RouterBgpPeerEnableOutput values.
// You can construct a concrete instance of `RouterBgpPeerEnableInput` via:
//
//          RouterBgpPeerEnableArgs{...}
type RouterBgpPeerEnableInput interface {
	pulumi.Input

	ToRouterBgpPeerEnableOutput() RouterBgpPeerEnableOutput
	ToRouterBgpPeerEnableOutputWithContext(context.Context) RouterBgpPeerEnableOutput
}

var routerBgpPeerEnablePtrType = reflect.TypeOf((**RouterBgpPeerEnable)(nil)).Elem()

type RouterBgpPeerEnablePtrInput interface {
	pulumi.Input

	ToRouterBgpPeerEnablePtrOutput() RouterBgpPeerEnablePtrOutput
	ToRouterBgpPeerEnablePtrOutputWithContext(context.Context) RouterBgpPeerEnablePtrOutput
}

type routerBgpPeerEnablePtr string

func RouterBgpPeerEnablePtr(v string) RouterBgpPeerEnablePtrInput {
	return (*routerBgpPeerEnablePtr)(&v)
}

func (*routerBgpPeerEnablePtr) ElementType() reflect.Type {
	return routerBgpPeerEnablePtrType
}

func (in *routerBgpPeerEnablePtr) ToRouterBgpPeerEnablePtrOutput() RouterBgpPeerEnablePtrOutput {
	return pulumi.ToOutput(in).(RouterBgpPeerEnablePtrOutput)
}

func (in *routerBgpPeerEnablePtr) ToRouterBgpPeerEnablePtrOutputWithContext(ctx context.Context) RouterBgpPeerEnablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterBgpPeerEnablePtrOutput)
}

type RouterNatEndpointTypesItem string

const (
	// This is used for Secure Web Gateway (go/securewebgateway) endpoints.
	RouterNatEndpointTypesItemEndpointTypeSwg = RouterNatEndpointTypesItem("ENDPOINT_TYPE_SWG")
	// This is the default.
	RouterNatEndpointTypesItemEndpointTypeVm = RouterNatEndpointTypesItem("ENDPOINT_TYPE_VM")
)

func (RouterNatEndpointTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatEndpointTypesItem)(nil)).Elem()
}

func (e RouterNatEndpointTypesItem) ToRouterNatEndpointTypesItemOutput() RouterNatEndpointTypesItemOutput {
	return pulumi.ToOutput(e).(RouterNatEndpointTypesItemOutput)
}

func (e RouterNatEndpointTypesItem) ToRouterNatEndpointTypesItemOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterNatEndpointTypesItemOutput)
}

func (e RouterNatEndpointTypesItem) ToRouterNatEndpointTypesItemPtrOutput() RouterNatEndpointTypesItemPtrOutput {
	return e.ToRouterNatEndpointTypesItemPtrOutputWithContext(context.Background())
}

func (e RouterNatEndpointTypesItem) ToRouterNatEndpointTypesItemPtrOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemPtrOutput {
	return RouterNatEndpointTypesItem(e).ToRouterNatEndpointTypesItemOutputWithContext(ctx).ToRouterNatEndpointTypesItemPtrOutputWithContext(ctx)
}

func (e RouterNatEndpointTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatEndpointTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatEndpointTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterNatEndpointTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterNatEndpointTypesItemOutput struct{ *pulumi.OutputState }

func (RouterNatEndpointTypesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatEndpointTypesItem)(nil)).Elem()
}

func (o RouterNatEndpointTypesItemOutput) ToRouterNatEndpointTypesItemOutput() RouterNatEndpointTypesItemOutput {
	return o
}

func (o RouterNatEndpointTypesItemOutput) ToRouterNatEndpointTypesItemOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemOutput {
	return o
}

func (o RouterNatEndpointTypesItemOutput) ToRouterNatEndpointTypesItemPtrOutput() RouterNatEndpointTypesItemPtrOutput {
	return o.ToRouterNatEndpointTypesItemPtrOutputWithContext(context.Background())
}

func (o RouterNatEndpointTypesItemOutput) ToRouterNatEndpointTypesItemPtrOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterNatEndpointTypesItem) *RouterNatEndpointTypesItem {
		return &v
	}).(RouterNatEndpointTypesItemPtrOutput)
}

func (o RouterNatEndpointTypesItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterNatEndpointTypesItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatEndpointTypesItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterNatEndpointTypesItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatEndpointTypesItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatEndpointTypesItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterNatEndpointTypesItemPtrOutput struct{ *pulumi.OutputState }

func (RouterNatEndpointTypesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterNatEndpointTypesItem)(nil)).Elem()
}

func (o RouterNatEndpointTypesItemPtrOutput) ToRouterNatEndpointTypesItemPtrOutput() RouterNatEndpointTypesItemPtrOutput {
	return o
}

func (o RouterNatEndpointTypesItemPtrOutput) ToRouterNatEndpointTypesItemPtrOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemPtrOutput {
	return o
}

func (o RouterNatEndpointTypesItemPtrOutput) Elem() RouterNatEndpointTypesItemOutput {
	return o.ApplyT(func(v *RouterNatEndpointTypesItem) RouterNatEndpointTypesItem {
		if v != nil {
			return *v
		}
		var ret RouterNatEndpointTypesItem
		return ret
	}).(RouterNatEndpointTypesItemOutput)
}

func (o RouterNatEndpointTypesItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatEndpointTypesItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterNatEndpointTypesItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterNatEndpointTypesItemInput is an input type that accepts RouterNatEndpointTypesItemArgs and RouterNatEndpointTypesItemOutput values.
// You can construct a concrete instance of `RouterNatEndpointTypesItemInput` via:
//
//          RouterNatEndpointTypesItemArgs{...}
type RouterNatEndpointTypesItemInput interface {
	pulumi.Input

	ToRouterNatEndpointTypesItemOutput() RouterNatEndpointTypesItemOutput
	ToRouterNatEndpointTypesItemOutputWithContext(context.Context) RouterNatEndpointTypesItemOutput
}

var routerNatEndpointTypesItemPtrType = reflect.TypeOf((**RouterNatEndpointTypesItem)(nil)).Elem()

type RouterNatEndpointTypesItemPtrInput interface {
	pulumi.Input

	ToRouterNatEndpointTypesItemPtrOutput() RouterNatEndpointTypesItemPtrOutput
	ToRouterNatEndpointTypesItemPtrOutputWithContext(context.Context) RouterNatEndpointTypesItemPtrOutput
}

type routerNatEndpointTypesItemPtr string

func RouterNatEndpointTypesItemPtr(v string) RouterNatEndpointTypesItemPtrInput {
	return (*routerNatEndpointTypesItemPtr)(&v)
}

func (*routerNatEndpointTypesItemPtr) ElementType() reflect.Type {
	return routerNatEndpointTypesItemPtrType
}

func (in *routerNatEndpointTypesItemPtr) ToRouterNatEndpointTypesItemPtrOutput() RouterNatEndpointTypesItemPtrOutput {
	return pulumi.ToOutput(in).(RouterNatEndpointTypesItemPtrOutput)
}

func (in *routerNatEndpointTypesItemPtr) ToRouterNatEndpointTypesItemPtrOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterNatEndpointTypesItemPtrOutput)
}

// RouterNatEndpointTypesItemArrayInput is an input type that accepts RouterNatEndpointTypesItemArray and RouterNatEndpointTypesItemArrayOutput values.
// You can construct a concrete instance of `RouterNatEndpointTypesItemArrayInput` via:
//
//          RouterNatEndpointTypesItemArray{ RouterNatEndpointTypesItemArgs{...} }
type RouterNatEndpointTypesItemArrayInput interface {
	pulumi.Input

	ToRouterNatEndpointTypesItemArrayOutput() RouterNatEndpointTypesItemArrayOutput
	ToRouterNatEndpointTypesItemArrayOutputWithContext(context.Context) RouterNatEndpointTypesItemArrayOutput
}

type RouterNatEndpointTypesItemArray []RouterNatEndpointTypesItem

func (RouterNatEndpointTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterNatEndpointTypesItem)(nil)).Elem()
}

func (i RouterNatEndpointTypesItemArray) ToRouterNatEndpointTypesItemArrayOutput() RouterNatEndpointTypesItemArrayOutput {
	return i.ToRouterNatEndpointTypesItemArrayOutputWithContext(context.Background())
}

func (i RouterNatEndpointTypesItemArray) ToRouterNatEndpointTypesItemArrayOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterNatEndpointTypesItemArrayOutput)
}

type RouterNatEndpointTypesItemArrayOutput struct{ *pulumi.OutputState }

func (RouterNatEndpointTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterNatEndpointTypesItem)(nil)).Elem()
}

func (o RouterNatEndpointTypesItemArrayOutput) ToRouterNatEndpointTypesItemArrayOutput() RouterNatEndpointTypesItemArrayOutput {
	return o
}

func (o RouterNatEndpointTypesItemArrayOutput) ToRouterNatEndpointTypesItemArrayOutputWithContext(ctx context.Context) RouterNatEndpointTypesItemArrayOutput {
	return o
}

func (o RouterNatEndpointTypesItemArrayOutput) Index(i pulumi.IntInput) RouterNatEndpointTypesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterNatEndpointTypesItem {
		return vs[0].([]RouterNatEndpointTypesItem)[vs[1].(int)]
	}).(RouterNatEndpointTypesItemOutput)
}

// Specify the desired filtering of logs on this NAT. If unspecified, logs are exported for all connections handled by this NAT. This option can take one of the following values: - ERRORS_ONLY: Export logs only for connection failures. - TRANSLATIONS_ONLY: Export logs only for successful connections. - ALL: Export logs for all connections, successful and unsuccessful.
type RouterNatLogConfigFilter string

const (
	// Export logs for all (successful and unsuccessful) connections.
	RouterNatLogConfigFilterAll = RouterNatLogConfigFilter("ALL")
	// Export logs for connection failures only.
	RouterNatLogConfigFilterErrorsOnly = RouterNatLogConfigFilter("ERRORS_ONLY")
	// Export logs for successful connections only.
	RouterNatLogConfigFilterTranslationsOnly = RouterNatLogConfigFilter("TRANSLATIONS_ONLY")
)

func (RouterNatLogConfigFilter) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatLogConfigFilter)(nil)).Elem()
}

func (e RouterNatLogConfigFilter) ToRouterNatLogConfigFilterOutput() RouterNatLogConfigFilterOutput {
	return pulumi.ToOutput(e).(RouterNatLogConfigFilterOutput)
}

func (e RouterNatLogConfigFilter) ToRouterNatLogConfigFilterOutputWithContext(ctx context.Context) RouterNatLogConfigFilterOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterNatLogConfigFilterOutput)
}

func (e RouterNatLogConfigFilter) ToRouterNatLogConfigFilterPtrOutput() RouterNatLogConfigFilterPtrOutput {
	return e.ToRouterNatLogConfigFilterPtrOutputWithContext(context.Background())
}

func (e RouterNatLogConfigFilter) ToRouterNatLogConfigFilterPtrOutputWithContext(ctx context.Context) RouterNatLogConfigFilterPtrOutput {
	return RouterNatLogConfigFilter(e).ToRouterNatLogConfigFilterOutputWithContext(ctx).ToRouterNatLogConfigFilterPtrOutputWithContext(ctx)
}

func (e RouterNatLogConfigFilter) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatLogConfigFilter) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatLogConfigFilter) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterNatLogConfigFilter) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterNatLogConfigFilterOutput struct{ *pulumi.OutputState }

func (RouterNatLogConfigFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatLogConfigFilter)(nil)).Elem()
}

func (o RouterNatLogConfigFilterOutput) ToRouterNatLogConfigFilterOutput() RouterNatLogConfigFilterOutput {
	return o
}

func (o RouterNatLogConfigFilterOutput) ToRouterNatLogConfigFilterOutputWithContext(ctx context.Context) RouterNatLogConfigFilterOutput {
	return o
}

func (o RouterNatLogConfigFilterOutput) ToRouterNatLogConfigFilterPtrOutput() RouterNatLogConfigFilterPtrOutput {
	return o.ToRouterNatLogConfigFilterPtrOutputWithContext(context.Background())
}

func (o RouterNatLogConfigFilterOutput) ToRouterNatLogConfigFilterPtrOutputWithContext(ctx context.Context) RouterNatLogConfigFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterNatLogConfigFilter) *RouterNatLogConfigFilter {
		return &v
	}).(RouterNatLogConfigFilterPtrOutput)
}

func (o RouterNatLogConfigFilterOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterNatLogConfigFilterOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatLogConfigFilter) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterNatLogConfigFilterOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatLogConfigFilterOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatLogConfigFilter) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterNatLogConfigFilterPtrOutput struct{ *pulumi.OutputState }

func (RouterNatLogConfigFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterNatLogConfigFilter)(nil)).Elem()
}

func (o RouterNatLogConfigFilterPtrOutput) ToRouterNatLogConfigFilterPtrOutput() RouterNatLogConfigFilterPtrOutput {
	return o
}

func (o RouterNatLogConfigFilterPtrOutput) ToRouterNatLogConfigFilterPtrOutputWithContext(ctx context.Context) RouterNatLogConfigFilterPtrOutput {
	return o
}

func (o RouterNatLogConfigFilterPtrOutput) Elem() RouterNatLogConfigFilterOutput {
	return o.ApplyT(func(v *RouterNatLogConfigFilter) RouterNatLogConfigFilter {
		if v != nil {
			return *v
		}
		var ret RouterNatLogConfigFilter
		return ret
	}).(RouterNatLogConfigFilterOutput)
}

func (o RouterNatLogConfigFilterPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatLogConfigFilterPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterNatLogConfigFilter) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterNatLogConfigFilterInput is an input type that accepts RouterNatLogConfigFilterArgs and RouterNatLogConfigFilterOutput values.
// You can construct a concrete instance of `RouterNatLogConfigFilterInput` via:
//
//          RouterNatLogConfigFilterArgs{...}
type RouterNatLogConfigFilterInput interface {
	pulumi.Input

	ToRouterNatLogConfigFilterOutput() RouterNatLogConfigFilterOutput
	ToRouterNatLogConfigFilterOutputWithContext(context.Context) RouterNatLogConfigFilterOutput
}

var routerNatLogConfigFilterPtrType = reflect.TypeOf((**RouterNatLogConfigFilter)(nil)).Elem()

type RouterNatLogConfigFilterPtrInput interface {
	pulumi.Input

	ToRouterNatLogConfigFilterPtrOutput() RouterNatLogConfigFilterPtrOutput
	ToRouterNatLogConfigFilterPtrOutputWithContext(context.Context) RouterNatLogConfigFilterPtrOutput
}

type routerNatLogConfigFilterPtr string

func RouterNatLogConfigFilterPtr(v string) RouterNatLogConfigFilterPtrInput {
	return (*routerNatLogConfigFilterPtr)(&v)
}

func (*routerNatLogConfigFilterPtr) ElementType() reflect.Type {
	return routerNatLogConfigFilterPtrType
}

func (in *routerNatLogConfigFilterPtr) ToRouterNatLogConfigFilterPtrOutput() RouterNatLogConfigFilterPtrOutput {
	return pulumi.ToOutput(in).(RouterNatLogConfigFilterPtrOutput)
}

func (in *routerNatLogConfigFilterPtr) ToRouterNatLogConfigFilterPtrOutputWithContext(ctx context.Context) RouterNatLogConfigFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterNatLogConfigFilterPtrOutput)
}

// Specify the NatIpAllocateOption, which can take one of the following values: - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there are not enough specified Nat IPs, the Nat service fails for new VMs. - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty.
type RouterNatNatIpAllocateOption string

const (
	// Nat IPs are allocated by GCP; customers can not specify any Nat IPs.
	RouterNatNatIpAllocateOptionAutoOnly = RouterNatNatIpAllocateOption("AUTO_ONLY")
	// Only use Nat IPs provided by customers. When specified Nat IPs are not enough then the Nat service fails for new VMs.
	RouterNatNatIpAllocateOptionManualOnly = RouterNatNatIpAllocateOption("MANUAL_ONLY")
)

func (RouterNatNatIpAllocateOption) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatNatIpAllocateOption)(nil)).Elem()
}

func (e RouterNatNatIpAllocateOption) ToRouterNatNatIpAllocateOptionOutput() RouterNatNatIpAllocateOptionOutput {
	return pulumi.ToOutput(e).(RouterNatNatIpAllocateOptionOutput)
}

func (e RouterNatNatIpAllocateOption) ToRouterNatNatIpAllocateOptionOutputWithContext(ctx context.Context) RouterNatNatIpAllocateOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterNatNatIpAllocateOptionOutput)
}

func (e RouterNatNatIpAllocateOption) ToRouterNatNatIpAllocateOptionPtrOutput() RouterNatNatIpAllocateOptionPtrOutput {
	return e.ToRouterNatNatIpAllocateOptionPtrOutputWithContext(context.Background())
}

func (e RouterNatNatIpAllocateOption) ToRouterNatNatIpAllocateOptionPtrOutputWithContext(ctx context.Context) RouterNatNatIpAllocateOptionPtrOutput {
	return RouterNatNatIpAllocateOption(e).ToRouterNatNatIpAllocateOptionOutputWithContext(ctx).ToRouterNatNatIpAllocateOptionPtrOutputWithContext(ctx)
}

func (e RouterNatNatIpAllocateOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatNatIpAllocateOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatNatIpAllocateOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterNatNatIpAllocateOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterNatNatIpAllocateOptionOutput struct{ *pulumi.OutputState }

func (RouterNatNatIpAllocateOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatNatIpAllocateOption)(nil)).Elem()
}

func (o RouterNatNatIpAllocateOptionOutput) ToRouterNatNatIpAllocateOptionOutput() RouterNatNatIpAllocateOptionOutput {
	return o
}

func (o RouterNatNatIpAllocateOptionOutput) ToRouterNatNatIpAllocateOptionOutputWithContext(ctx context.Context) RouterNatNatIpAllocateOptionOutput {
	return o
}

func (o RouterNatNatIpAllocateOptionOutput) ToRouterNatNatIpAllocateOptionPtrOutput() RouterNatNatIpAllocateOptionPtrOutput {
	return o.ToRouterNatNatIpAllocateOptionPtrOutputWithContext(context.Background())
}

func (o RouterNatNatIpAllocateOptionOutput) ToRouterNatNatIpAllocateOptionPtrOutputWithContext(ctx context.Context) RouterNatNatIpAllocateOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterNatNatIpAllocateOption) *RouterNatNatIpAllocateOption {
		return &v
	}).(RouterNatNatIpAllocateOptionPtrOutput)
}

func (o RouterNatNatIpAllocateOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterNatNatIpAllocateOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatNatIpAllocateOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterNatNatIpAllocateOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatNatIpAllocateOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatNatIpAllocateOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterNatNatIpAllocateOptionPtrOutput struct{ *pulumi.OutputState }

func (RouterNatNatIpAllocateOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterNatNatIpAllocateOption)(nil)).Elem()
}

func (o RouterNatNatIpAllocateOptionPtrOutput) ToRouterNatNatIpAllocateOptionPtrOutput() RouterNatNatIpAllocateOptionPtrOutput {
	return o
}

func (o RouterNatNatIpAllocateOptionPtrOutput) ToRouterNatNatIpAllocateOptionPtrOutputWithContext(ctx context.Context) RouterNatNatIpAllocateOptionPtrOutput {
	return o
}

func (o RouterNatNatIpAllocateOptionPtrOutput) Elem() RouterNatNatIpAllocateOptionOutput {
	return o.ApplyT(func(v *RouterNatNatIpAllocateOption) RouterNatNatIpAllocateOption {
		if v != nil {
			return *v
		}
		var ret RouterNatNatIpAllocateOption
		return ret
	}).(RouterNatNatIpAllocateOptionOutput)
}

func (o RouterNatNatIpAllocateOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatNatIpAllocateOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterNatNatIpAllocateOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterNatNatIpAllocateOptionInput is an input type that accepts RouterNatNatIpAllocateOptionArgs and RouterNatNatIpAllocateOptionOutput values.
// You can construct a concrete instance of `RouterNatNatIpAllocateOptionInput` via:
//
//          RouterNatNatIpAllocateOptionArgs{...}
type RouterNatNatIpAllocateOptionInput interface {
	pulumi.Input

	ToRouterNatNatIpAllocateOptionOutput() RouterNatNatIpAllocateOptionOutput
	ToRouterNatNatIpAllocateOptionOutputWithContext(context.Context) RouterNatNatIpAllocateOptionOutput
}

var routerNatNatIpAllocateOptionPtrType = reflect.TypeOf((**RouterNatNatIpAllocateOption)(nil)).Elem()

type RouterNatNatIpAllocateOptionPtrInput interface {
	pulumi.Input

	ToRouterNatNatIpAllocateOptionPtrOutput() RouterNatNatIpAllocateOptionPtrOutput
	ToRouterNatNatIpAllocateOptionPtrOutputWithContext(context.Context) RouterNatNatIpAllocateOptionPtrOutput
}

type routerNatNatIpAllocateOptionPtr string

func RouterNatNatIpAllocateOptionPtr(v string) RouterNatNatIpAllocateOptionPtrInput {
	return (*routerNatNatIpAllocateOptionPtr)(&v)
}

func (*routerNatNatIpAllocateOptionPtr) ElementType() reflect.Type {
	return routerNatNatIpAllocateOptionPtrType
}

func (in *routerNatNatIpAllocateOptionPtr) ToRouterNatNatIpAllocateOptionPtrOutput() RouterNatNatIpAllocateOptionPtrOutput {
	return pulumi.ToOutput(in).(RouterNatNatIpAllocateOptionPtrOutput)
}

func (in *routerNatNatIpAllocateOptionPtr) ToRouterNatNatIpAllocateOptionPtrOutputWithContext(ctx context.Context) RouterNatNatIpAllocateOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterNatNatIpAllocateOptionPtrOutput)
}

// Specify the Nat option, which can take one of the following values: - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other Router.Nat section in any Router for this network in this region.
type RouterNatSourceSubnetworkIpRangesToNat string

const (
	// All the IP ranges in every Subnetwork are allowed to Nat.
	RouterNatSourceSubnetworkIpRangesToNatAllSubnetworksAllIpRanges = RouterNatSourceSubnetworkIpRangesToNat("ALL_SUBNETWORKS_ALL_IP_RANGES")
	// All the primary IP ranges in every Subnetwork are allowed to Nat.
	RouterNatSourceSubnetworkIpRangesToNatAllSubnetworksAllPrimaryIpRanges = RouterNatSourceSubnetworkIpRangesToNat("ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES")
	// A list of Subnetworks are allowed to Nat (specified in the field subnetwork below)
	RouterNatSourceSubnetworkIpRangesToNatListOfSubnetworks = RouterNatSourceSubnetworkIpRangesToNat("LIST_OF_SUBNETWORKS")
)

func (RouterNatSourceSubnetworkIpRangesToNat) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatSourceSubnetworkIpRangesToNat)(nil)).Elem()
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToRouterNatSourceSubnetworkIpRangesToNatOutput() RouterNatSourceSubnetworkIpRangesToNatOutput {
	return pulumi.ToOutput(e).(RouterNatSourceSubnetworkIpRangesToNatOutput)
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToRouterNatSourceSubnetworkIpRangesToNatOutputWithContext(ctx context.Context) RouterNatSourceSubnetworkIpRangesToNatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterNatSourceSubnetworkIpRangesToNatOutput)
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutput() RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return e.ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(context.Background())
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(ctx context.Context) RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return RouterNatSourceSubnetworkIpRangesToNat(e).ToRouterNatSourceSubnetworkIpRangesToNatOutputWithContext(ctx).ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(ctx)
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterNatSourceSubnetworkIpRangesToNat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterNatSourceSubnetworkIpRangesToNatOutput struct{ *pulumi.OutputState }

func (RouterNatSourceSubnetworkIpRangesToNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatSourceSubnetworkIpRangesToNat)(nil)).Elem()
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToRouterNatSourceSubnetworkIpRangesToNatOutput() RouterNatSourceSubnetworkIpRangesToNatOutput {
	return o
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToRouterNatSourceSubnetworkIpRangesToNatOutputWithContext(ctx context.Context) RouterNatSourceSubnetworkIpRangesToNatOutput {
	return o
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutput() RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return o.ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(context.Background())
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(ctx context.Context) RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterNatSourceSubnetworkIpRangesToNat) *RouterNatSourceSubnetworkIpRangesToNat {
		return &v
	}).(RouterNatSourceSubnetworkIpRangesToNatPtrOutput)
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatSourceSubnetworkIpRangesToNat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatSourceSubnetworkIpRangesToNatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatSourceSubnetworkIpRangesToNat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterNatSourceSubnetworkIpRangesToNatPtrOutput struct{ *pulumi.OutputState }

func (RouterNatSourceSubnetworkIpRangesToNatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterNatSourceSubnetworkIpRangesToNat)(nil)).Elem()
}

func (o RouterNatSourceSubnetworkIpRangesToNatPtrOutput) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutput() RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return o
}

func (o RouterNatSourceSubnetworkIpRangesToNatPtrOutput) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(ctx context.Context) RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return o
}

func (o RouterNatSourceSubnetworkIpRangesToNatPtrOutput) Elem() RouterNatSourceSubnetworkIpRangesToNatOutput {
	return o.ApplyT(func(v *RouterNatSourceSubnetworkIpRangesToNat) RouterNatSourceSubnetworkIpRangesToNat {
		if v != nil {
			return *v
		}
		var ret RouterNatSourceSubnetworkIpRangesToNat
		return ret
	}).(RouterNatSourceSubnetworkIpRangesToNatOutput)
}

func (o RouterNatSourceSubnetworkIpRangesToNatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatSourceSubnetworkIpRangesToNatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterNatSourceSubnetworkIpRangesToNat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterNatSourceSubnetworkIpRangesToNatInput is an input type that accepts RouterNatSourceSubnetworkIpRangesToNatArgs and RouterNatSourceSubnetworkIpRangesToNatOutput values.
// You can construct a concrete instance of `RouterNatSourceSubnetworkIpRangesToNatInput` via:
//
//          RouterNatSourceSubnetworkIpRangesToNatArgs{...}
type RouterNatSourceSubnetworkIpRangesToNatInput interface {
	pulumi.Input

	ToRouterNatSourceSubnetworkIpRangesToNatOutput() RouterNatSourceSubnetworkIpRangesToNatOutput
	ToRouterNatSourceSubnetworkIpRangesToNatOutputWithContext(context.Context) RouterNatSourceSubnetworkIpRangesToNatOutput
}

var routerNatSourceSubnetworkIpRangesToNatPtrType = reflect.TypeOf((**RouterNatSourceSubnetworkIpRangesToNat)(nil)).Elem()

type RouterNatSourceSubnetworkIpRangesToNatPtrInput interface {
	pulumi.Input

	ToRouterNatSourceSubnetworkIpRangesToNatPtrOutput() RouterNatSourceSubnetworkIpRangesToNatPtrOutput
	ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(context.Context) RouterNatSourceSubnetworkIpRangesToNatPtrOutput
}

type routerNatSourceSubnetworkIpRangesToNatPtr string

func RouterNatSourceSubnetworkIpRangesToNatPtr(v string) RouterNatSourceSubnetworkIpRangesToNatPtrInput {
	return (*routerNatSourceSubnetworkIpRangesToNatPtr)(&v)
}

func (*routerNatSourceSubnetworkIpRangesToNatPtr) ElementType() reflect.Type {
	return routerNatSourceSubnetworkIpRangesToNatPtrType
}

func (in *routerNatSourceSubnetworkIpRangesToNatPtr) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutput() RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return pulumi.ToOutput(in).(RouterNatSourceSubnetworkIpRangesToNatPtrOutput)
}

func (in *routerNatSourceSubnetworkIpRangesToNatPtr) ToRouterNatSourceSubnetworkIpRangesToNatPtrOutputWithContext(ctx context.Context) RouterNatSourceSubnetworkIpRangesToNatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterNatSourceSubnetworkIpRangesToNatPtrOutput)
}

type RouterNatSubnetworkToNatSourceIpRangesToNatItem string

const (
	// The primary and all the secondary ranges are allowed to Nat.
	RouterNatSubnetworkToNatSourceIpRangesToNatItemAllIpRanges = RouterNatSubnetworkToNatSourceIpRangesToNatItem("ALL_IP_RANGES")
	// A list of secondary ranges are allowed to Nat.
	RouterNatSubnetworkToNatSourceIpRangesToNatItemListOfSecondaryIpRanges = RouterNatSubnetworkToNatSourceIpRangesToNatItem("LIST_OF_SECONDARY_IP_RANGES")
	// The primary range is allowed to Nat.
	RouterNatSubnetworkToNatSourceIpRangesToNatItemPrimaryIpRange = RouterNatSubnetworkToNatSourceIpRangesToNatItem("PRIMARY_IP_RANGE")
)

func (RouterNatSubnetworkToNatSourceIpRangesToNatItem) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatSubnetworkToNatSourceIpRangesToNatItem)(nil)).Elem()
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput {
	return pulumi.ToOutput(e).(RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput)
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput)
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return e.ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(context.Background())
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return RouterNatSubnetworkToNatSourceIpRangesToNatItem(e).ToRouterNatSubnetworkToNatSourceIpRangesToNatItemOutputWithContext(ctx).ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(ctx)
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterNatSubnetworkToNatSourceIpRangesToNatItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput struct{ *pulumi.OutputState }

func (RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatSubnetworkToNatSourceIpRangesToNatItem)(nil)).Elem()
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput {
	return o
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput {
	return o
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return o.ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(context.Background())
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterNatSubnetworkToNatSourceIpRangesToNatItem) *RouterNatSubnetworkToNatSourceIpRangesToNatItem {
		return &v
	}).(RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput)
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatSubnetworkToNatSourceIpRangesToNatItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatSubnetworkToNatSourceIpRangesToNatItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput struct{ *pulumi.OutputState }

func (RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterNatSubnetworkToNatSourceIpRangesToNatItem)(nil)).Elem()
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return o
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return o
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput) Elem() RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput {
	return o.ApplyT(func(v *RouterNatSubnetworkToNatSourceIpRangesToNatItem) RouterNatSubnetworkToNatSourceIpRangesToNatItem {
		if v != nil {
			return *v
		}
		var ret RouterNatSubnetworkToNatSourceIpRangesToNatItem
		return ret
	}).(RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput)
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterNatSubnetworkToNatSourceIpRangesToNatItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterNatSubnetworkToNatSourceIpRangesToNatItemInput is an input type that accepts RouterNatSubnetworkToNatSourceIpRangesToNatItemArgs and RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput values.
// You can construct a concrete instance of `RouterNatSubnetworkToNatSourceIpRangesToNatItemInput` via:
//
//          RouterNatSubnetworkToNatSourceIpRangesToNatItemArgs{...}
type RouterNatSubnetworkToNatSourceIpRangesToNatItemInput interface {
	pulumi.Input

	ToRouterNatSubnetworkToNatSourceIpRangesToNatItemOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput
	ToRouterNatSubnetworkToNatSourceIpRangesToNatItemOutputWithContext(context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput
}

var routerNatSubnetworkToNatSourceIpRangesToNatItemPtrType = reflect.TypeOf((**RouterNatSubnetworkToNatSourceIpRangesToNatItem)(nil)).Elem()

type RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrInput interface {
	pulumi.Input

	ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput
	ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput
}

type routerNatSubnetworkToNatSourceIpRangesToNatItemPtr string

func RouterNatSubnetworkToNatSourceIpRangesToNatItemPtr(v string) RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrInput {
	return (*routerNatSubnetworkToNatSourceIpRangesToNatItemPtr)(&v)
}

func (*routerNatSubnetworkToNatSourceIpRangesToNatItemPtr) ElementType() reflect.Type {
	return routerNatSubnetworkToNatSourceIpRangesToNatItemPtrType
}

func (in *routerNatSubnetworkToNatSourceIpRangesToNatItemPtr) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return pulumi.ToOutput(in).(RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput)
}

func (in *routerNatSubnetworkToNatSourceIpRangesToNatItemPtr) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput)
}

// RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayInput is an input type that accepts RouterNatSubnetworkToNatSourceIpRangesToNatItemArray and RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput values.
// You can construct a concrete instance of `RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayInput` via:
//
//          RouterNatSubnetworkToNatSourceIpRangesToNatItemArray{ RouterNatSubnetworkToNatSourceIpRangesToNatItemArgs{...} }
type RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayInput interface {
	pulumi.Input

	ToRouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput
	ToRouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutputWithContext(context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput
}

type RouterNatSubnetworkToNatSourceIpRangesToNatItemArray []RouterNatSubnetworkToNatSourceIpRangesToNatItem

func (RouterNatSubnetworkToNatSourceIpRangesToNatItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterNatSubnetworkToNatSourceIpRangesToNatItem)(nil)).Elem()
}

func (i RouterNatSubnetworkToNatSourceIpRangesToNatItemArray) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput {
	return i.ToRouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutputWithContext(context.Background())
}

func (i RouterNatSubnetworkToNatSourceIpRangesToNatItemArray) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput)
}

type RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput struct{ *pulumi.OutputState }

func (RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterNatSubnetworkToNatSourceIpRangesToNatItem)(nil)).Elem()
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput() RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput {
	return o
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput) ToRouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutputWithContext(ctx context.Context) RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput {
	return o
}

func (o RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput) Index(i pulumi.IntInput) RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterNatSubnetworkToNatSourceIpRangesToNatItem {
		return vs[0].([]RouterNatSubnetworkToNatSourceIpRangesToNatItem)[vs[1].(int)]
	}).(RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput)
}

// Indicates whether this NAT is used for public or private IP translation. If unspecified, it defaults to PUBLIC.
type RouterNatType string

const (
	// NAT used for private IP translation.
	RouterNatTypePrivate = RouterNatType("PRIVATE")
	// NAT used for public IP translation. This is the default.
	RouterNatTypePublic = RouterNatType("PUBLIC")
)

func (RouterNatType) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatType)(nil)).Elem()
}

func (e RouterNatType) ToRouterNatTypeOutput() RouterNatTypeOutput {
	return pulumi.ToOutput(e).(RouterNatTypeOutput)
}

func (e RouterNatType) ToRouterNatTypeOutputWithContext(ctx context.Context) RouterNatTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouterNatTypeOutput)
}

func (e RouterNatType) ToRouterNatTypePtrOutput() RouterNatTypePtrOutput {
	return e.ToRouterNatTypePtrOutputWithContext(context.Background())
}

func (e RouterNatType) ToRouterNatTypePtrOutputWithContext(ctx context.Context) RouterNatTypePtrOutput {
	return RouterNatType(e).ToRouterNatTypeOutputWithContext(ctx).ToRouterNatTypePtrOutputWithContext(ctx)
}

func (e RouterNatType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouterNatType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouterNatType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouterNatTypeOutput struct{ *pulumi.OutputState }

func (RouterNatTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatType)(nil)).Elem()
}

func (o RouterNatTypeOutput) ToRouterNatTypeOutput() RouterNatTypeOutput {
	return o
}

func (o RouterNatTypeOutput) ToRouterNatTypeOutputWithContext(ctx context.Context) RouterNatTypeOutput {
	return o
}

func (o RouterNatTypeOutput) ToRouterNatTypePtrOutput() RouterNatTypePtrOutput {
	return o.ToRouterNatTypePtrOutputWithContext(context.Background())
}

func (o RouterNatTypeOutput) ToRouterNatTypePtrOutputWithContext(ctx context.Context) RouterNatTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouterNatType) *RouterNatType {
		return &v
	}).(RouterNatTypePtrOutput)
}

func (o RouterNatTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouterNatTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouterNatTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouterNatType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouterNatTypePtrOutput struct{ *pulumi.OutputState }

func (RouterNatTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouterNatType)(nil)).Elem()
}

func (o RouterNatTypePtrOutput) ToRouterNatTypePtrOutput() RouterNatTypePtrOutput {
	return o
}

func (o RouterNatTypePtrOutput) ToRouterNatTypePtrOutputWithContext(ctx context.Context) RouterNatTypePtrOutput {
	return o
}

func (o RouterNatTypePtrOutput) Elem() RouterNatTypeOutput {
	return o.ApplyT(func(v *RouterNatType) RouterNatType {
		if v != nil {
			return *v
		}
		var ret RouterNatType
		return ret
	}).(RouterNatTypeOutput)
}

func (o RouterNatTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouterNatTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouterNatType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouterNatTypeInput is an input type that accepts RouterNatTypeArgs and RouterNatTypeOutput values.
// You can construct a concrete instance of `RouterNatTypeInput` via:
//
//          RouterNatTypeArgs{...}
type RouterNatTypeInput interface {
	pulumi.Input

	ToRouterNatTypeOutput() RouterNatTypeOutput
	ToRouterNatTypeOutputWithContext(context.Context) RouterNatTypeOutput
}

var routerNatTypePtrType = reflect.TypeOf((**RouterNatType)(nil)).Elem()

type RouterNatTypePtrInput interface {
	pulumi.Input

	ToRouterNatTypePtrOutput() RouterNatTypePtrOutput
	ToRouterNatTypePtrOutputWithContext(context.Context) RouterNatTypePtrOutput
}

type routerNatTypePtr string

func RouterNatTypePtr(v string) RouterNatTypePtrInput {
	return (*routerNatTypePtr)(&v)
}

func (*routerNatTypePtr) ElementType() reflect.Type {
	return routerNatTypePtrType
}

func (in *routerNatTypePtr) ToRouterNatTypePtrOutput() RouterNatTypePtrOutput {
	return pulumi.ToOutput(in).(RouterNatTypePtrOutput)
}

func (in *routerNatTypePtr) ToRouterNatTypePtrOutputWithContext(ctx context.Context) RouterNatTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouterNatTypePtrOutput)
}

// This is deprecated and has no effect. Do not use.
type RuleAction string

const (
	// This is deprecated and has no effect. Do not use.
	RuleActionAllow = RuleAction("ALLOW")
	// This is deprecated and has no effect. Do not use.
	RuleActionAllowWithLog = RuleAction("ALLOW_WITH_LOG")
	// This is deprecated and has no effect. Do not use.
	RuleActionDeny = RuleAction("DENY")
	// This is deprecated and has no effect. Do not use.
	RuleActionDenyWithLog = RuleAction("DENY_WITH_LOG")
	// This is deprecated and has no effect. Do not use.
	RuleActionLog = RuleAction("LOG")
	// This is deprecated and has no effect. Do not use.
	RuleActionNoAction = RuleAction("NO_ACTION")
)

func (RuleAction) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAction)(nil)).Elem()
}

func (e RuleAction) ToRuleActionOutput() RuleActionOutput {
	return pulumi.ToOutput(e).(RuleActionOutput)
}

func (e RuleAction) ToRuleActionOutputWithContext(ctx context.Context) RuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleActionOutput)
}

func (e RuleAction) ToRuleActionPtrOutput() RuleActionPtrOutput {
	return e.ToRuleActionPtrOutputWithContext(context.Background())
}

func (e RuleAction) ToRuleActionPtrOutputWithContext(ctx context.Context) RuleActionPtrOutput {
	return RuleAction(e).ToRuleActionOutputWithContext(ctx).ToRuleActionPtrOutputWithContext(ctx)
}

func (e RuleAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleActionOutput struct{ *pulumi.OutputState }

func (RuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAction)(nil)).Elem()
}

func (o RuleActionOutput) ToRuleActionOutput() RuleActionOutput {
	return o
}

func (o RuleActionOutput) ToRuleActionOutputWithContext(ctx context.Context) RuleActionOutput {
	return o
}

func (o RuleActionOutput) ToRuleActionPtrOutput() RuleActionPtrOutput {
	return o.ToRuleActionPtrOutputWithContext(context.Background())
}

func (o RuleActionOutput) ToRuleActionPtrOutputWithContext(ctx context.Context) RuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleAction) *RuleAction {
		return &v
	}).(RuleActionPtrOutput)
}

func (o RuleActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleActionPtrOutput struct{ *pulumi.OutputState }

func (RuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleAction)(nil)).Elem()
}

func (o RuleActionPtrOutput) ToRuleActionPtrOutput() RuleActionPtrOutput {
	return o
}

func (o RuleActionPtrOutput) ToRuleActionPtrOutputWithContext(ctx context.Context) RuleActionPtrOutput {
	return o
}

func (o RuleActionPtrOutput) Elem() RuleActionOutput {
	return o.ApplyT(func(v *RuleAction) RuleAction {
		if v != nil {
			return *v
		}
		var ret RuleAction
		return ret
	}).(RuleActionOutput)
}

func (o RuleActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleActionInput is an input type that accepts RuleActionArgs and RuleActionOutput values.
// You can construct a concrete instance of `RuleActionInput` via:
//
//          RuleActionArgs{...}
type RuleActionInput interface {
	pulumi.Input

	ToRuleActionOutput() RuleActionOutput
	ToRuleActionOutputWithContext(context.Context) RuleActionOutput
}

var ruleActionPtrType = reflect.TypeOf((**RuleAction)(nil)).Elem()

type RuleActionPtrInput interface {
	pulumi.Input

	ToRuleActionPtrOutput() RuleActionPtrOutput
	ToRuleActionPtrOutputWithContext(context.Context) RuleActionPtrOutput
}

type ruleActionPtr string

func RuleActionPtr(v string) RuleActionPtrInput {
	return (*ruleActionPtr)(&v)
}

func (*ruleActionPtr) ElementType() reflect.Type {
	return ruleActionPtrType
}

func (in *ruleActionPtr) ToRuleActionPtrOutput() RuleActionPtrOutput {
	return pulumi.ToOutput(in).(RuleActionPtrOutput)
}

func (in *ruleActionPtr) ToRuleActionPtrOutputWithContext(ctx context.Context) RuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleActionPtrOutput)
}

// Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, SSL health check follows behavior specified in port and portName fields.
type SSLHealthCheckPortSpecification string

const (
	// The port number in port is used for health checking.
	SSLHealthCheckPortSpecificationUseFixedPort = SSLHealthCheckPortSpecification("USE_FIXED_PORT")
	// The portName is used for health checking.
	SSLHealthCheckPortSpecificationUseNamedPort = SSLHealthCheckPortSpecification("USE_NAMED_PORT")
	// For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
	SSLHealthCheckPortSpecificationUseServingPort = SSLHealthCheckPortSpecification("USE_SERVING_PORT")
)

func (SSLHealthCheckPortSpecification) ElementType() reflect.Type {
	return reflect.TypeOf((*SSLHealthCheckPortSpecification)(nil)).Elem()
}

func (e SSLHealthCheckPortSpecification) ToSSLHealthCheckPortSpecificationOutput() SSLHealthCheckPortSpecificationOutput {
	return pulumi.ToOutput(e).(SSLHealthCheckPortSpecificationOutput)
}

func (e SSLHealthCheckPortSpecification) ToSSLHealthCheckPortSpecificationOutputWithContext(ctx context.Context) SSLHealthCheckPortSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SSLHealthCheckPortSpecificationOutput)
}

func (e SSLHealthCheckPortSpecification) ToSSLHealthCheckPortSpecificationPtrOutput() SSLHealthCheckPortSpecificationPtrOutput {
	return e.ToSSLHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (e SSLHealthCheckPortSpecification) ToSSLHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) SSLHealthCheckPortSpecificationPtrOutput {
	return SSLHealthCheckPortSpecification(e).ToSSLHealthCheckPortSpecificationOutputWithContext(ctx).ToSSLHealthCheckPortSpecificationPtrOutputWithContext(ctx)
}

func (e SSLHealthCheckPortSpecification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SSLHealthCheckPortSpecification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SSLHealthCheckPortSpecification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SSLHealthCheckPortSpecification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SSLHealthCheckPortSpecificationOutput struct{ *pulumi.OutputState }

func (SSLHealthCheckPortSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSLHealthCheckPortSpecification)(nil)).Elem()
}

func (o SSLHealthCheckPortSpecificationOutput) ToSSLHealthCheckPortSpecificationOutput() SSLHealthCheckPortSpecificationOutput {
	return o
}

func (o SSLHealthCheckPortSpecificationOutput) ToSSLHealthCheckPortSpecificationOutputWithContext(ctx context.Context) SSLHealthCheckPortSpecificationOutput {
	return o
}

func (o SSLHealthCheckPortSpecificationOutput) ToSSLHealthCheckPortSpecificationPtrOutput() SSLHealthCheckPortSpecificationPtrOutput {
	return o.ToSSLHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (o SSLHealthCheckPortSpecificationOutput) ToSSLHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) SSLHealthCheckPortSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSLHealthCheckPortSpecification) *SSLHealthCheckPortSpecification {
		return &v
	}).(SSLHealthCheckPortSpecificationPtrOutput)
}

func (o SSLHealthCheckPortSpecificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SSLHealthCheckPortSpecificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SSLHealthCheckPortSpecification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SSLHealthCheckPortSpecificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SSLHealthCheckPortSpecificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SSLHealthCheckPortSpecification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SSLHealthCheckPortSpecificationPtrOutput struct{ *pulumi.OutputState }

func (SSLHealthCheckPortSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSLHealthCheckPortSpecification)(nil)).Elem()
}

func (o SSLHealthCheckPortSpecificationPtrOutput) ToSSLHealthCheckPortSpecificationPtrOutput() SSLHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o SSLHealthCheckPortSpecificationPtrOutput) ToSSLHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) SSLHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o SSLHealthCheckPortSpecificationPtrOutput) Elem() SSLHealthCheckPortSpecificationOutput {
	return o.ApplyT(func(v *SSLHealthCheckPortSpecification) SSLHealthCheckPortSpecification {
		if v != nil {
			return *v
		}
		var ret SSLHealthCheckPortSpecification
		return ret
	}).(SSLHealthCheckPortSpecificationOutput)
}

func (o SSLHealthCheckPortSpecificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SSLHealthCheckPortSpecificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SSLHealthCheckPortSpecification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SSLHealthCheckPortSpecificationInput is an input type that accepts SSLHealthCheckPortSpecificationArgs and SSLHealthCheckPortSpecificationOutput values.
// You can construct a concrete instance of `SSLHealthCheckPortSpecificationInput` via:
//
//          SSLHealthCheckPortSpecificationArgs{...}
type SSLHealthCheckPortSpecificationInput interface {
	pulumi.Input

	ToSSLHealthCheckPortSpecificationOutput() SSLHealthCheckPortSpecificationOutput
	ToSSLHealthCheckPortSpecificationOutputWithContext(context.Context) SSLHealthCheckPortSpecificationOutput
}

var sslhealthCheckPortSpecificationPtrType = reflect.TypeOf((**SSLHealthCheckPortSpecification)(nil)).Elem()

type SSLHealthCheckPortSpecificationPtrInput interface {
	pulumi.Input

	ToSSLHealthCheckPortSpecificationPtrOutput() SSLHealthCheckPortSpecificationPtrOutput
	ToSSLHealthCheckPortSpecificationPtrOutputWithContext(context.Context) SSLHealthCheckPortSpecificationPtrOutput
}

type sslhealthCheckPortSpecificationPtr string

func SSLHealthCheckPortSpecificationPtr(v string) SSLHealthCheckPortSpecificationPtrInput {
	return (*sslhealthCheckPortSpecificationPtr)(&v)
}

func (*sslhealthCheckPortSpecificationPtr) ElementType() reflect.Type {
	return sslhealthCheckPortSpecificationPtrType
}

func (in *sslhealthCheckPortSpecificationPtr) ToSSLHealthCheckPortSpecificationPtrOutput() SSLHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutput(in).(SSLHealthCheckPortSpecificationPtrOutput)
}

func (in *sslhealthCheckPortSpecificationPtr) ToSSLHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) SSLHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SSLHealthCheckPortSpecificationPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type SSLHealthCheckProxyHeader string

const (
	SSLHealthCheckProxyHeaderNone    = SSLHealthCheckProxyHeader("NONE")
	SSLHealthCheckProxyHeaderProxyV1 = SSLHealthCheckProxyHeader("PROXY_V1")
)

func (SSLHealthCheckProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*SSLHealthCheckProxyHeader)(nil)).Elem()
}

func (e SSLHealthCheckProxyHeader) ToSSLHealthCheckProxyHeaderOutput() SSLHealthCheckProxyHeaderOutput {
	return pulumi.ToOutput(e).(SSLHealthCheckProxyHeaderOutput)
}

func (e SSLHealthCheckProxyHeader) ToSSLHealthCheckProxyHeaderOutputWithContext(ctx context.Context) SSLHealthCheckProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SSLHealthCheckProxyHeaderOutput)
}

func (e SSLHealthCheckProxyHeader) ToSSLHealthCheckProxyHeaderPtrOutput() SSLHealthCheckProxyHeaderPtrOutput {
	return e.ToSSLHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (e SSLHealthCheckProxyHeader) ToSSLHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) SSLHealthCheckProxyHeaderPtrOutput {
	return SSLHealthCheckProxyHeader(e).ToSSLHealthCheckProxyHeaderOutputWithContext(ctx).ToSSLHealthCheckProxyHeaderPtrOutputWithContext(ctx)
}

func (e SSLHealthCheckProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SSLHealthCheckProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SSLHealthCheckProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SSLHealthCheckProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SSLHealthCheckProxyHeaderOutput struct{ *pulumi.OutputState }

func (SSLHealthCheckProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SSLHealthCheckProxyHeader)(nil)).Elem()
}

func (o SSLHealthCheckProxyHeaderOutput) ToSSLHealthCheckProxyHeaderOutput() SSLHealthCheckProxyHeaderOutput {
	return o
}

func (o SSLHealthCheckProxyHeaderOutput) ToSSLHealthCheckProxyHeaderOutputWithContext(ctx context.Context) SSLHealthCheckProxyHeaderOutput {
	return o
}

func (o SSLHealthCheckProxyHeaderOutput) ToSSLHealthCheckProxyHeaderPtrOutput() SSLHealthCheckProxyHeaderPtrOutput {
	return o.ToSSLHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (o SSLHealthCheckProxyHeaderOutput) ToSSLHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) SSLHealthCheckProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SSLHealthCheckProxyHeader) *SSLHealthCheckProxyHeader {
		return &v
	}).(SSLHealthCheckProxyHeaderPtrOutput)
}

func (o SSLHealthCheckProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SSLHealthCheckProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SSLHealthCheckProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SSLHealthCheckProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SSLHealthCheckProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SSLHealthCheckProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SSLHealthCheckProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (SSLHealthCheckProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SSLHealthCheckProxyHeader)(nil)).Elem()
}

func (o SSLHealthCheckProxyHeaderPtrOutput) ToSSLHealthCheckProxyHeaderPtrOutput() SSLHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o SSLHealthCheckProxyHeaderPtrOutput) ToSSLHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) SSLHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o SSLHealthCheckProxyHeaderPtrOutput) Elem() SSLHealthCheckProxyHeaderOutput {
	return o.ApplyT(func(v *SSLHealthCheckProxyHeader) SSLHealthCheckProxyHeader {
		if v != nil {
			return *v
		}
		var ret SSLHealthCheckProxyHeader
		return ret
	}).(SSLHealthCheckProxyHeaderOutput)
}

func (o SSLHealthCheckProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SSLHealthCheckProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SSLHealthCheckProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SSLHealthCheckProxyHeaderInput is an input type that accepts SSLHealthCheckProxyHeaderArgs and SSLHealthCheckProxyHeaderOutput values.
// You can construct a concrete instance of `SSLHealthCheckProxyHeaderInput` via:
//
//          SSLHealthCheckProxyHeaderArgs{...}
type SSLHealthCheckProxyHeaderInput interface {
	pulumi.Input

	ToSSLHealthCheckProxyHeaderOutput() SSLHealthCheckProxyHeaderOutput
	ToSSLHealthCheckProxyHeaderOutputWithContext(context.Context) SSLHealthCheckProxyHeaderOutput
}

var sslhealthCheckProxyHeaderPtrType = reflect.TypeOf((**SSLHealthCheckProxyHeader)(nil)).Elem()

type SSLHealthCheckProxyHeaderPtrInput interface {
	pulumi.Input

	ToSSLHealthCheckProxyHeaderPtrOutput() SSLHealthCheckProxyHeaderPtrOutput
	ToSSLHealthCheckProxyHeaderPtrOutputWithContext(context.Context) SSLHealthCheckProxyHeaderPtrOutput
}

type sslhealthCheckProxyHeaderPtr string

func SSLHealthCheckProxyHeaderPtr(v string) SSLHealthCheckProxyHeaderPtrInput {
	return (*sslhealthCheckProxyHeaderPtr)(&v)
}

func (*sslhealthCheckProxyHeaderPtr) ElementType() reflect.Type {
	return sslhealthCheckProxyHeaderPtrType
}

func (in *sslhealthCheckProxyHeaderPtr) ToSSLHealthCheckProxyHeaderPtrOutput() SSLHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(SSLHealthCheckProxyHeaderPtrOutput)
}

func (in *sslhealthCheckProxyHeaderPtr) ToSSLHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) SSLHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SSLHealthCheckProxyHeaderPtrOutput)
}

// Specifies the termination action for the instance.
type SchedulingInstanceTerminationAction string

const (
	// Delete the VM.
	SchedulingInstanceTerminationActionDelete = SchedulingInstanceTerminationAction("DELETE")
	// Default value. This value is unused.
	SchedulingInstanceTerminationActionInstanceTerminationActionUnspecified = SchedulingInstanceTerminationAction("INSTANCE_TERMINATION_ACTION_UNSPECIFIED")
	// Stop the VM without storing in-memory content. default action.
	SchedulingInstanceTerminationActionStop = SchedulingInstanceTerminationAction("STOP")
)

func (SchedulingInstanceTerminationAction) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingInstanceTerminationAction)(nil)).Elem()
}

func (e SchedulingInstanceTerminationAction) ToSchedulingInstanceTerminationActionOutput() SchedulingInstanceTerminationActionOutput {
	return pulumi.ToOutput(e).(SchedulingInstanceTerminationActionOutput)
}

func (e SchedulingInstanceTerminationAction) ToSchedulingInstanceTerminationActionOutputWithContext(ctx context.Context) SchedulingInstanceTerminationActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchedulingInstanceTerminationActionOutput)
}

func (e SchedulingInstanceTerminationAction) ToSchedulingInstanceTerminationActionPtrOutput() SchedulingInstanceTerminationActionPtrOutput {
	return e.ToSchedulingInstanceTerminationActionPtrOutputWithContext(context.Background())
}

func (e SchedulingInstanceTerminationAction) ToSchedulingInstanceTerminationActionPtrOutputWithContext(ctx context.Context) SchedulingInstanceTerminationActionPtrOutput {
	return SchedulingInstanceTerminationAction(e).ToSchedulingInstanceTerminationActionOutputWithContext(ctx).ToSchedulingInstanceTerminationActionPtrOutputWithContext(ctx)
}

func (e SchedulingInstanceTerminationAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingInstanceTerminationAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingInstanceTerminationAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchedulingInstanceTerminationAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchedulingInstanceTerminationActionOutput struct{ *pulumi.OutputState }

func (SchedulingInstanceTerminationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingInstanceTerminationAction)(nil)).Elem()
}

func (o SchedulingInstanceTerminationActionOutput) ToSchedulingInstanceTerminationActionOutput() SchedulingInstanceTerminationActionOutput {
	return o
}

func (o SchedulingInstanceTerminationActionOutput) ToSchedulingInstanceTerminationActionOutputWithContext(ctx context.Context) SchedulingInstanceTerminationActionOutput {
	return o
}

func (o SchedulingInstanceTerminationActionOutput) ToSchedulingInstanceTerminationActionPtrOutput() SchedulingInstanceTerminationActionPtrOutput {
	return o.ToSchedulingInstanceTerminationActionPtrOutputWithContext(context.Background())
}

func (o SchedulingInstanceTerminationActionOutput) ToSchedulingInstanceTerminationActionPtrOutputWithContext(ctx context.Context) SchedulingInstanceTerminationActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulingInstanceTerminationAction) *SchedulingInstanceTerminationAction {
		return &v
	}).(SchedulingInstanceTerminationActionPtrOutput)
}

func (o SchedulingInstanceTerminationActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchedulingInstanceTerminationActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingInstanceTerminationAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchedulingInstanceTerminationActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingInstanceTerminationActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingInstanceTerminationAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchedulingInstanceTerminationActionPtrOutput struct{ *pulumi.OutputState }

func (SchedulingInstanceTerminationActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulingInstanceTerminationAction)(nil)).Elem()
}

func (o SchedulingInstanceTerminationActionPtrOutput) ToSchedulingInstanceTerminationActionPtrOutput() SchedulingInstanceTerminationActionPtrOutput {
	return o
}

func (o SchedulingInstanceTerminationActionPtrOutput) ToSchedulingInstanceTerminationActionPtrOutputWithContext(ctx context.Context) SchedulingInstanceTerminationActionPtrOutput {
	return o
}

func (o SchedulingInstanceTerminationActionPtrOutput) Elem() SchedulingInstanceTerminationActionOutput {
	return o.ApplyT(func(v *SchedulingInstanceTerminationAction) SchedulingInstanceTerminationAction {
		if v != nil {
			return *v
		}
		var ret SchedulingInstanceTerminationAction
		return ret
	}).(SchedulingInstanceTerminationActionOutput)
}

func (o SchedulingInstanceTerminationActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingInstanceTerminationActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchedulingInstanceTerminationAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchedulingInstanceTerminationActionInput is an input type that accepts SchedulingInstanceTerminationActionArgs and SchedulingInstanceTerminationActionOutput values.
// You can construct a concrete instance of `SchedulingInstanceTerminationActionInput` via:
//
//          SchedulingInstanceTerminationActionArgs{...}
type SchedulingInstanceTerminationActionInput interface {
	pulumi.Input

	ToSchedulingInstanceTerminationActionOutput() SchedulingInstanceTerminationActionOutput
	ToSchedulingInstanceTerminationActionOutputWithContext(context.Context) SchedulingInstanceTerminationActionOutput
}

var schedulingInstanceTerminationActionPtrType = reflect.TypeOf((**SchedulingInstanceTerminationAction)(nil)).Elem()

type SchedulingInstanceTerminationActionPtrInput interface {
	pulumi.Input

	ToSchedulingInstanceTerminationActionPtrOutput() SchedulingInstanceTerminationActionPtrOutput
	ToSchedulingInstanceTerminationActionPtrOutputWithContext(context.Context) SchedulingInstanceTerminationActionPtrOutput
}

type schedulingInstanceTerminationActionPtr string

func SchedulingInstanceTerminationActionPtr(v string) SchedulingInstanceTerminationActionPtrInput {
	return (*schedulingInstanceTerminationActionPtr)(&v)
}

func (*schedulingInstanceTerminationActionPtr) ElementType() reflect.Type {
	return schedulingInstanceTerminationActionPtrType
}

func (in *schedulingInstanceTerminationActionPtr) ToSchedulingInstanceTerminationActionPtrOutput() SchedulingInstanceTerminationActionPtrOutput {
	return pulumi.ToOutput(in).(SchedulingInstanceTerminationActionPtrOutput)
}

func (in *schedulingInstanceTerminationActionPtr) ToSchedulingInstanceTerminationActionPtrOutputWithContext(ctx context.Context) SchedulingInstanceTerminationActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchedulingInstanceTerminationActionPtrOutput)
}

// For more information about maintenance intervals, see Setting maintenance intervals.
type SchedulingMaintenanceInterval string

const (
	// VMs receive infrastructure and hypervisor updates on a periodic basis, minimizing the number of maintenance operations (live migrations or terminations) on an individual VM. This may mean a VM will take longer to receive an update than if it was configured for AS_NEEDED. Security updates will still be applied as soon as they are available.
	SchedulingMaintenanceIntervalPeriodic = SchedulingMaintenanceInterval("PERIODIC")
)

func (SchedulingMaintenanceInterval) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingMaintenanceInterval)(nil)).Elem()
}

func (e SchedulingMaintenanceInterval) ToSchedulingMaintenanceIntervalOutput() SchedulingMaintenanceIntervalOutput {
	return pulumi.ToOutput(e).(SchedulingMaintenanceIntervalOutput)
}

func (e SchedulingMaintenanceInterval) ToSchedulingMaintenanceIntervalOutputWithContext(ctx context.Context) SchedulingMaintenanceIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchedulingMaintenanceIntervalOutput)
}

func (e SchedulingMaintenanceInterval) ToSchedulingMaintenanceIntervalPtrOutput() SchedulingMaintenanceIntervalPtrOutput {
	return e.ToSchedulingMaintenanceIntervalPtrOutputWithContext(context.Background())
}

func (e SchedulingMaintenanceInterval) ToSchedulingMaintenanceIntervalPtrOutputWithContext(ctx context.Context) SchedulingMaintenanceIntervalPtrOutput {
	return SchedulingMaintenanceInterval(e).ToSchedulingMaintenanceIntervalOutputWithContext(ctx).ToSchedulingMaintenanceIntervalPtrOutputWithContext(ctx)
}

func (e SchedulingMaintenanceInterval) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingMaintenanceInterval) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingMaintenanceInterval) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchedulingMaintenanceInterval) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchedulingMaintenanceIntervalOutput struct{ *pulumi.OutputState }

func (SchedulingMaintenanceIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingMaintenanceInterval)(nil)).Elem()
}

func (o SchedulingMaintenanceIntervalOutput) ToSchedulingMaintenanceIntervalOutput() SchedulingMaintenanceIntervalOutput {
	return o
}

func (o SchedulingMaintenanceIntervalOutput) ToSchedulingMaintenanceIntervalOutputWithContext(ctx context.Context) SchedulingMaintenanceIntervalOutput {
	return o
}

func (o SchedulingMaintenanceIntervalOutput) ToSchedulingMaintenanceIntervalPtrOutput() SchedulingMaintenanceIntervalPtrOutput {
	return o.ToSchedulingMaintenanceIntervalPtrOutputWithContext(context.Background())
}

func (o SchedulingMaintenanceIntervalOutput) ToSchedulingMaintenanceIntervalPtrOutputWithContext(ctx context.Context) SchedulingMaintenanceIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulingMaintenanceInterval) *SchedulingMaintenanceInterval {
		return &v
	}).(SchedulingMaintenanceIntervalPtrOutput)
}

func (o SchedulingMaintenanceIntervalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchedulingMaintenanceIntervalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingMaintenanceInterval) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchedulingMaintenanceIntervalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingMaintenanceIntervalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingMaintenanceInterval) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchedulingMaintenanceIntervalPtrOutput struct{ *pulumi.OutputState }

func (SchedulingMaintenanceIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulingMaintenanceInterval)(nil)).Elem()
}

func (o SchedulingMaintenanceIntervalPtrOutput) ToSchedulingMaintenanceIntervalPtrOutput() SchedulingMaintenanceIntervalPtrOutput {
	return o
}

func (o SchedulingMaintenanceIntervalPtrOutput) ToSchedulingMaintenanceIntervalPtrOutputWithContext(ctx context.Context) SchedulingMaintenanceIntervalPtrOutput {
	return o
}

func (o SchedulingMaintenanceIntervalPtrOutput) Elem() SchedulingMaintenanceIntervalOutput {
	return o.ApplyT(func(v *SchedulingMaintenanceInterval) SchedulingMaintenanceInterval {
		if v != nil {
			return *v
		}
		var ret SchedulingMaintenanceInterval
		return ret
	}).(SchedulingMaintenanceIntervalOutput)
}

func (o SchedulingMaintenanceIntervalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingMaintenanceIntervalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchedulingMaintenanceInterval) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchedulingMaintenanceIntervalInput is an input type that accepts SchedulingMaintenanceIntervalArgs and SchedulingMaintenanceIntervalOutput values.
// You can construct a concrete instance of `SchedulingMaintenanceIntervalInput` via:
//
//          SchedulingMaintenanceIntervalArgs{...}
type SchedulingMaintenanceIntervalInput interface {
	pulumi.Input

	ToSchedulingMaintenanceIntervalOutput() SchedulingMaintenanceIntervalOutput
	ToSchedulingMaintenanceIntervalOutputWithContext(context.Context) SchedulingMaintenanceIntervalOutput
}

var schedulingMaintenanceIntervalPtrType = reflect.TypeOf((**SchedulingMaintenanceInterval)(nil)).Elem()

type SchedulingMaintenanceIntervalPtrInput interface {
	pulumi.Input

	ToSchedulingMaintenanceIntervalPtrOutput() SchedulingMaintenanceIntervalPtrOutput
	ToSchedulingMaintenanceIntervalPtrOutputWithContext(context.Context) SchedulingMaintenanceIntervalPtrOutput
}

type schedulingMaintenanceIntervalPtr string

func SchedulingMaintenanceIntervalPtr(v string) SchedulingMaintenanceIntervalPtrInput {
	return (*schedulingMaintenanceIntervalPtr)(&v)
}

func (*schedulingMaintenanceIntervalPtr) ElementType() reflect.Type {
	return schedulingMaintenanceIntervalPtrType
}

func (in *schedulingMaintenanceIntervalPtr) ToSchedulingMaintenanceIntervalPtrOutput() SchedulingMaintenanceIntervalPtrOutput {
	return pulumi.ToOutput(in).(SchedulingMaintenanceIntervalPtrOutput)
}

func (in *schedulingMaintenanceIntervalPtr) ToSchedulingMaintenanceIntervalPtrOutputWithContext(ctx context.Context) SchedulingMaintenanceIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchedulingMaintenanceIntervalPtrOutput)
}

// Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity.
type SchedulingNodeAffinityOperator string

const (
	// Requires Compute Engine to seek for matched nodes.
	SchedulingNodeAffinityOperatorIn = SchedulingNodeAffinityOperator("IN")
	// Requires Compute Engine to avoid certain nodes.
	SchedulingNodeAffinityOperatorNotIn               = SchedulingNodeAffinityOperator("NOT_IN")
	SchedulingNodeAffinityOperatorOperatorUnspecified = SchedulingNodeAffinityOperator("OPERATOR_UNSPECIFIED")
)

func (SchedulingNodeAffinityOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingNodeAffinityOperator)(nil)).Elem()
}

func (e SchedulingNodeAffinityOperator) ToSchedulingNodeAffinityOperatorOutput() SchedulingNodeAffinityOperatorOutput {
	return pulumi.ToOutput(e).(SchedulingNodeAffinityOperatorOutput)
}

func (e SchedulingNodeAffinityOperator) ToSchedulingNodeAffinityOperatorOutputWithContext(ctx context.Context) SchedulingNodeAffinityOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchedulingNodeAffinityOperatorOutput)
}

func (e SchedulingNodeAffinityOperator) ToSchedulingNodeAffinityOperatorPtrOutput() SchedulingNodeAffinityOperatorPtrOutput {
	return e.ToSchedulingNodeAffinityOperatorPtrOutputWithContext(context.Background())
}

func (e SchedulingNodeAffinityOperator) ToSchedulingNodeAffinityOperatorPtrOutputWithContext(ctx context.Context) SchedulingNodeAffinityOperatorPtrOutput {
	return SchedulingNodeAffinityOperator(e).ToSchedulingNodeAffinityOperatorOutputWithContext(ctx).ToSchedulingNodeAffinityOperatorPtrOutputWithContext(ctx)
}

func (e SchedulingNodeAffinityOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingNodeAffinityOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingNodeAffinityOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchedulingNodeAffinityOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchedulingNodeAffinityOperatorOutput struct{ *pulumi.OutputState }

func (SchedulingNodeAffinityOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingNodeAffinityOperator)(nil)).Elem()
}

func (o SchedulingNodeAffinityOperatorOutput) ToSchedulingNodeAffinityOperatorOutput() SchedulingNodeAffinityOperatorOutput {
	return o
}

func (o SchedulingNodeAffinityOperatorOutput) ToSchedulingNodeAffinityOperatorOutputWithContext(ctx context.Context) SchedulingNodeAffinityOperatorOutput {
	return o
}

func (o SchedulingNodeAffinityOperatorOutput) ToSchedulingNodeAffinityOperatorPtrOutput() SchedulingNodeAffinityOperatorPtrOutput {
	return o.ToSchedulingNodeAffinityOperatorPtrOutputWithContext(context.Background())
}

func (o SchedulingNodeAffinityOperatorOutput) ToSchedulingNodeAffinityOperatorPtrOutputWithContext(ctx context.Context) SchedulingNodeAffinityOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulingNodeAffinityOperator) *SchedulingNodeAffinityOperator {
		return &v
	}).(SchedulingNodeAffinityOperatorPtrOutput)
}

func (o SchedulingNodeAffinityOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchedulingNodeAffinityOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingNodeAffinityOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchedulingNodeAffinityOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingNodeAffinityOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingNodeAffinityOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchedulingNodeAffinityOperatorPtrOutput struct{ *pulumi.OutputState }

func (SchedulingNodeAffinityOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulingNodeAffinityOperator)(nil)).Elem()
}

func (o SchedulingNodeAffinityOperatorPtrOutput) ToSchedulingNodeAffinityOperatorPtrOutput() SchedulingNodeAffinityOperatorPtrOutput {
	return o
}

func (o SchedulingNodeAffinityOperatorPtrOutput) ToSchedulingNodeAffinityOperatorPtrOutputWithContext(ctx context.Context) SchedulingNodeAffinityOperatorPtrOutput {
	return o
}

func (o SchedulingNodeAffinityOperatorPtrOutput) Elem() SchedulingNodeAffinityOperatorOutput {
	return o.ApplyT(func(v *SchedulingNodeAffinityOperator) SchedulingNodeAffinityOperator {
		if v != nil {
			return *v
		}
		var ret SchedulingNodeAffinityOperator
		return ret
	}).(SchedulingNodeAffinityOperatorOutput)
}

func (o SchedulingNodeAffinityOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingNodeAffinityOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchedulingNodeAffinityOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchedulingNodeAffinityOperatorInput is an input type that accepts SchedulingNodeAffinityOperatorArgs and SchedulingNodeAffinityOperatorOutput values.
// You can construct a concrete instance of `SchedulingNodeAffinityOperatorInput` via:
//
//          SchedulingNodeAffinityOperatorArgs{...}
type SchedulingNodeAffinityOperatorInput interface {
	pulumi.Input

	ToSchedulingNodeAffinityOperatorOutput() SchedulingNodeAffinityOperatorOutput
	ToSchedulingNodeAffinityOperatorOutputWithContext(context.Context) SchedulingNodeAffinityOperatorOutput
}

var schedulingNodeAffinityOperatorPtrType = reflect.TypeOf((**SchedulingNodeAffinityOperator)(nil)).Elem()

type SchedulingNodeAffinityOperatorPtrInput interface {
	pulumi.Input

	ToSchedulingNodeAffinityOperatorPtrOutput() SchedulingNodeAffinityOperatorPtrOutput
	ToSchedulingNodeAffinityOperatorPtrOutputWithContext(context.Context) SchedulingNodeAffinityOperatorPtrOutput
}

type schedulingNodeAffinityOperatorPtr string

func SchedulingNodeAffinityOperatorPtr(v string) SchedulingNodeAffinityOperatorPtrInput {
	return (*schedulingNodeAffinityOperatorPtr)(&v)
}

func (*schedulingNodeAffinityOperatorPtr) ElementType() reflect.Type {
	return schedulingNodeAffinityOperatorPtrType
}

func (in *schedulingNodeAffinityOperatorPtr) ToSchedulingNodeAffinityOperatorPtrOutput() SchedulingNodeAffinityOperatorPtrOutput {
	return pulumi.ToOutput(in).(SchedulingNodeAffinityOperatorPtrOutput)
}

func (in *schedulingNodeAffinityOperatorPtr) ToSchedulingNodeAffinityOperatorPtrOutputWithContext(ctx context.Context) SchedulingNodeAffinityOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchedulingNodeAffinityOperatorPtrOutput)
}

// Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM availability policies.
type SchedulingOnHostMaintenance string

const (
	// *[Default]* Allows Compute Engine to automatically migrate instances out of the way of maintenance events.
	SchedulingOnHostMaintenanceMigrate = SchedulingOnHostMaintenance("MIGRATE")
	// Tells Compute Engine to terminate and (optionally) restart the instance away from the maintenance activity. If you would like your instance to be restarted, set the automaticRestart flag to true. Your instance may be restarted more than once, and it may be restarted outside the window of maintenance events.
	SchedulingOnHostMaintenanceTerminate = SchedulingOnHostMaintenance("TERMINATE")
)

func (SchedulingOnHostMaintenance) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingOnHostMaintenance)(nil)).Elem()
}

func (e SchedulingOnHostMaintenance) ToSchedulingOnHostMaintenanceOutput() SchedulingOnHostMaintenanceOutput {
	return pulumi.ToOutput(e).(SchedulingOnHostMaintenanceOutput)
}

func (e SchedulingOnHostMaintenance) ToSchedulingOnHostMaintenanceOutputWithContext(ctx context.Context) SchedulingOnHostMaintenanceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchedulingOnHostMaintenanceOutput)
}

func (e SchedulingOnHostMaintenance) ToSchedulingOnHostMaintenancePtrOutput() SchedulingOnHostMaintenancePtrOutput {
	return e.ToSchedulingOnHostMaintenancePtrOutputWithContext(context.Background())
}

func (e SchedulingOnHostMaintenance) ToSchedulingOnHostMaintenancePtrOutputWithContext(ctx context.Context) SchedulingOnHostMaintenancePtrOutput {
	return SchedulingOnHostMaintenance(e).ToSchedulingOnHostMaintenanceOutputWithContext(ctx).ToSchedulingOnHostMaintenancePtrOutputWithContext(ctx)
}

func (e SchedulingOnHostMaintenance) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingOnHostMaintenance) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingOnHostMaintenance) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchedulingOnHostMaintenance) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchedulingOnHostMaintenanceOutput struct{ *pulumi.OutputState }

func (SchedulingOnHostMaintenanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingOnHostMaintenance)(nil)).Elem()
}

func (o SchedulingOnHostMaintenanceOutput) ToSchedulingOnHostMaintenanceOutput() SchedulingOnHostMaintenanceOutput {
	return o
}

func (o SchedulingOnHostMaintenanceOutput) ToSchedulingOnHostMaintenanceOutputWithContext(ctx context.Context) SchedulingOnHostMaintenanceOutput {
	return o
}

func (o SchedulingOnHostMaintenanceOutput) ToSchedulingOnHostMaintenancePtrOutput() SchedulingOnHostMaintenancePtrOutput {
	return o.ToSchedulingOnHostMaintenancePtrOutputWithContext(context.Background())
}

func (o SchedulingOnHostMaintenanceOutput) ToSchedulingOnHostMaintenancePtrOutputWithContext(ctx context.Context) SchedulingOnHostMaintenancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulingOnHostMaintenance) *SchedulingOnHostMaintenance {
		return &v
	}).(SchedulingOnHostMaintenancePtrOutput)
}

func (o SchedulingOnHostMaintenanceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchedulingOnHostMaintenanceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingOnHostMaintenance) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchedulingOnHostMaintenanceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingOnHostMaintenanceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingOnHostMaintenance) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchedulingOnHostMaintenancePtrOutput struct{ *pulumi.OutputState }

func (SchedulingOnHostMaintenancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulingOnHostMaintenance)(nil)).Elem()
}

func (o SchedulingOnHostMaintenancePtrOutput) ToSchedulingOnHostMaintenancePtrOutput() SchedulingOnHostMaintenancePtrOutput {
	return o
}

func (o SchedulingOnHostMaintenancePtrOutput) ToSchedulingOnHostMaintenancePtrOutputWithContext(ctx context.Context) SchedulingOnHostMaintenancePtrOutput {
	return o
}

func (o SchedulingOnHostMaintenancePtrOutput) Elem() SchedulingOnHostMaintenanceOutput {
	return o.ApplyT(func(v *SchedulingOnHostMaintenance) SchedulingOnHostMaintenance {
		if v != nil {
			return *v
		}
		var ret SchedulingOnHostMaintenance
		return ret
	}).(SchedulingOnHostMaintenanceOutput)
}

func (o SchedulingOnHostMaintenancePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingOnHostMaintenancePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchedulingOnHostMaintenance) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchedulingOnHostMaintenanceInput is an input type that accepts SchedulingOnHostMaintenanceArgs and SchedulingOnHostMaintenanceOutput values.
// You can construct a concrete instance of `SchedulingOnHostMaintenanceInput` via:
//
//          SchedulingOnHostMaintenanceArgs{...}
type SchedulingOnHostMaintenanceInput interface {
	pulumi.Input

	ToSchedulingOnHostMaintenanceOutput() SchedulingOnHostMaintenanceOutput
	ToSchedulingOnHostMaintenanceOutputWithContext(context.Context) SchedulingOnHostMaintenanceOutput
}

var schedulingOnHostMaintenancePtrType = reflect.TypeOf((**SchedulingOnHostMaintenance)(nil)).Elem()

type SchedulingOnHostMaintenancePtrInput interface {
	pulumi.Input

	ToSchedulingOnHostMaintenancePtrOutput() SchedulingOnHostMaintenancePtrOutput
	ToSchedulingOnHostMaintenancePtrOutputWithContext(context.Context) SchedulingOnHostMaintenancePtrOutput
}

type schedulingOnHostMaintenancePtr string

func SchedulingOnHostMaintenancePtr(v string) SchedulingOnHostMaintenancePtrInput {
	return (*schedulingOnHostMaintenancePtr)(&v)
}

func (*schedulingOnHostMaintenancePtr) ElementType() reflect.Type {
	return schedulingOnHostMaintenancePtrType
}

func (in *schedulingOnHostMaintenancePtr) ToSchedulingOnHostMaintenancePtrOutput() SchedulingOnHostMaintenancePtrOutput {
	return pulumi.ToOutput(in).(SchedulingOnHostMaintenancePtrOutput)
}

func (in *schedulingOnHostMaintenancePtr) ToSchedulingOnHostMaintenancePtrOutputWithContext(ctx context.Context) SchedulingOnHostMaintenancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchedulingOnHostMaintenancePtrOutput)
}

// Specifies the provisioning model of the instance.
type SchedulingProvisioningModel string

const (
	// Heavily discounted, no guaranteed runtime.
	SchedulingProvisioningModelSpot = SchedulingProvisioningModel("SPOT")
	// Standard provisioning with user controlled runtime, no discounts.
	SchedulingProvisioningModelStandard = SchedulingProvisioningModel("STANDARD")
)

func (SchedulingProvisioningModel) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingProvisioningModel)(nil)).Elem()
}

func (e SchedulingProvisioningModel) ToSchedulingProvisioningModelOutput() SchedulingProvisioningModelOutput {
	return pulumi.ToOutput(e).(SchedulingProvisioningModelOutput)
}

func (e SchedulingProvisioningModel) ToSchedulingProvisioningModelOutputWithContext(ctx context.Context) SchedulingProvisioningModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SchedulingProvisioningModelOutput)
}

func (e SchedulingProvisioningModel) ToSchedulingProvisioningModelPtrOutput() SchedulingProvisioningModelPtrOutput {
	return e.ToSchedulingProvisioningModelPtrOutputWithContext(context.Background())
}

func (e SchedulingProvisioningModel) ToSchedulingProvisioningModelPtrOutputWithContext(ctx context.Context) SchedulingProvisioningModelPtrOutput {
	return SchedulingProvisioningModel(e).ToSchedulingProvisioningModelOutputWithContext(ctx).ToSchedulingProvisioningModelPtrOutputWithContext(ctx)
}

func (e SchedulingProvisioningModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingProvisioningModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SchedulingProvisioningModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SchedulingProvisioningModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SchedulingProvisioningModelOutput struct{ *pulumi.OutputState }

func (SchedulingProvisioningModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchedulingProvisioningModel)(nil)).Elem()
}

func (o SchedulingProvisioningModelOutput) ToSchedulingProvisioningModelOutput() SchedulingProvisioningModelOutput {
	return o
}

func (o SchedulingProvisioningModelOutput) ToSchedulingProvisioningModelOutputWithContext(ctx context.Context) SchedulingProvisioningModelOutput {
	return o
}

func (o SchedulingProvisioningModelOutput) ToSchedulingProvisioningModelPtrOutput() SchedulingProvisioningModelPtrOutput {
	return o.ToSchedulingProvisioningModelPtrOutputWithContext(context.Background())
}

func (o SchedulingProvisioningModelOutput) ToSchedulingProvisioningModelPtrOutputWithContext(ctx context.Context) SchedulingProvisioningModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchedulingProvisioningModel) *SchedulingProvisioningModel {
		return &v
	}).(SchedulingProvisioningModelPtrOutput)
}

func (o SchedulingProvisioningModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SchedulingProvisioningModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingProvisioningModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SchedulingProvisioningModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingProvisioningModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SchedulingProvisioningModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SchedulingProvisioningModelPtrOutput struct{ *pulumi.OutputState }

func (SchedulingProvisioningModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchedulingProvisioningModel)(nil)).Elem()
}

func (o SchedulingProvisioningModelPtrOutput) ToSchedulingProvisioningModelPtrOutput() SchedulingProvisioningModelPtrOutput {
	return o
}

func (o SchedulingProvisioningModelPtrOutput) ToSchedulingProvisioningModelPtrOutputWithContext(ctx context.Context) SchedulingProvisioningModelPtrOutput {
	return o
}

func (o SchedulingProvisioningModelPtrOutput) Elem() SchedulingProvisioningModelOutput {
	return o.ApplyT(func(v *SchedulingProvisioningModel) SchedulingProvisioningModel {
		if v != nil {
			return *v
		}
		var ret SchedulingProvisioningModel
		return ret
	}).(SchedulingProvisioningModelOutput)
}

func (o SchedulingProvisioningModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SchedulingProvisioningModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SchedulingProvisioningModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SchedulingProvisioningModelInput is an input type that accepts SchedulingProvisioningModelArgs and SchedulingProvisioningModelOutput values.
// You can construct a concrete instance of `SchedulingProvisioningModelInput` via:
//
//          SchedulingProvisioningModelArgs{...}
type SchedulingProvisioningModelInput interface {
	pulumi.Input

	ToSchedulingProvisioningModelOutput() SchedulingProvisioningModelOutput
	ToSchedulingProvisioningModelOutputWithContext(context.Context) SchedulingProvisioningModelOutput
}

var schedulingProvisioningModelPtrType = reflect.TypeOf((**SchedulingProvisioningModel)(nil)).Elem()

type SchedulingProvisioningModelPtrInput interface {
	pulumi.Input

	ToSchedulingProvisioningModelPtrOutput() SchedulingProvisioningModelPtrOutput
	ToSchedulingProvisioningModelPtrOutputWithContext(context.Context) SchedulingProvisioningModelPtrOutput
}

type schedulingProvisioningModelPtr string

func SchedulingProvisioningModelPtr(v string) SchedulingProvisioningModelPtrInput {
	return (*schedulingProvisioningModelPtr)(&v)
}

func (*schedulingProvisioningModelPtr) ElementType() reflect.Type {
	return schedulingProvisioningModelPtrType
}

func (in *schedulingProvisioningModelPtr) ToSchedulingProvisioningModelPtrOutput() SchedulingProvisioningModelPtrOutput {
	return pulumi.ToOutput(in).(SchedulingProvisioningModelPtrOutput)
}

func (in *schedulingProvisioningModelPtr) ToSchedulingProvisioningModelPtrOutputWithContext(ctx context.Context) SchedulingProvisioningModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SchedulingProvisioningModelPtrOutput)
}

// Rule visibility can be one of the following: STANDARD - opaque rules. (default) PREMIUM - transparent rules.
type SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility string

const (
	SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPremium  = SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility("PREMIUM")
	SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityStandard = SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility("STANDARD")
)

func (SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility)(nil)).Elem()
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput {
	return pulumi.ToOutput(e).(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput)
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutputWithContext(ctx context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput)
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return e.ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(ctx context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility(e).ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutputWithContext(ctx).ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(ctx)
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput struct{ *pulumi.OutputState }

func (SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility)(nil)).Elem()
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput {
	return o
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutputWithContext(ctx context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput {
	return o
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return o.ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(ctx context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) *SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility {
		return &v
	}).(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput)
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility)(nil)).Elem()
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return o
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(ctx context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return o
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput) Elem() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput {
	return o.ApplyT(func(v *SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility
		return ret
	}).(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput)
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityInput is an input type that accepts SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityArgs and SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput values.
// You can construct a concrete instance of `SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityInput` via:
//
//          SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityArgs{...}
type SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityInput interface {
	pulumi.Input

	ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput
	ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutputWithContext(context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput
}

var securityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrType = reflect.TypeOf((**SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility)(nil)).Elem()

type SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrInput interface {
	pulumi.Input

	ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput
	ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput
}

type securityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtr string

func SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtr(v string) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrInput {
	return (*securityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtr)(&v)
}

func (*securityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtr) ElementType() reflect.Type {
	return securityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrType
}

func (in *securityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtr) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput() SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput)
}

func (in *securityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtr) ToSecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutputWithContext(ctx context.Context) SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput)
}

type SecurityPolicyAdvancedOptionsConfigJsonParsing string

const (
	SecurityPolicyAdvancedOptionsConfigJsonParsingDisabled = SecurityPolicyAdvancedOptionsConfigJsonParsing("DISABLED")
	SecurityPolicyAdvancedOptionsConfigJsonParsingStandard = SecurityPolicyAdvancedOptionsConfigJsonParsing("STANDARD")
)

func (SecurityPolicyAdvancedOptionsConfigJsonParsing) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigJsonParsing)(nil)).Elem()
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToSecurityPolicyAdvancedOptionsConfigJsonParsingOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingOutput {
	return pulumi.ToOutput(e).(SecurityPolicyAdvancedOptionsConfigJsonParsingOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToSecurityPolicyAdvancedOptionsConfigJsonParsingOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyAdvancedOptionsConfigJsonParsingOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return e.ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return SecurityPolicyAdvancedOptionsConfigJsonParsing(e).ToSecurityPolicyAdvancedOptionsConfigJsonParsingOutputWithContext(ctx).ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(ctx)
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyAdvancedOptionsConfigJsonParsing) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyAdvancedOptionsConfigJsonParsingOutput struct{ *pulumi.OutputState }

func (SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigJsonParsing)(nil)).Elem()
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToSecurityPolicyAdvancedOptionsConfigJsonParsingOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToSecurityPolicyAdvancedOptionsConfigJsonParsingOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return o.ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyAdvancedOptionsConfigJsonParsing) *SecurityPolicyAdvancedOptionsConfigJsonParsing {
		return &v
	}).(SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput)
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyAdvancedOptionsConfigJsonParsing) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyAdvancedOptionsConfigJsonParsing) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyAdvancedOptionsConfigJsonParsing)(nil)).Elem()
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput) Elem() SecurityPolicyAdvancedOptionsConfigJsonParsingOutput {
	return o.ApplyT(func(v *SecurityPolicyAdvancedOptionsConfigJsonParsing) SecurityPolicyAdvancedOptionsConfigJsonParsing {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyAdvancedOptionsConfigJsonParsing
		return ret
	}).(SecurityPolicyAdvancedOptionsConfigJsonParsingOutput)
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyAdvancedOptionsConfigJsonParsing) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyAdvancedOptionsConfigJsonParsingInput is an input type that accepts SecurityPolicyAdvancedOptionsConfigJsonParsingArgs and SecurityPolicyAdvancedOptionsConfigJsonParsingOutput values.
// You can construct a concrete instance of `SecurityPolicyAdvancedOptionsConfigJsonParsingInput` via:
//
//          SecurityPolicyAdvancedOptionsConfigJsonParsingArgs{...}
type SecurityPolicyAdvancedOptionsConfigJsonParsingInput interface {
	pulumi.Input

	ToSecurityPolicyAdvancedOptionsConfigJsonParsingOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingOutput
	ToSecurityPolicyAdvancedOptionsConfigJsonParsingOutputWithContext(context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingOutput
}

var securityPolicyAdvancedOptionsConfigJsonParsingPtrType = reflect.TypeOf((**SecurityPolicyAdvancedOptionsConfigJsonParsing)(nil)).Elem()

type SecurityPolicyAdvancedOptionsConfigJsonParsingPtrInput interface {
	pulumi.Input

	ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput
	ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput
}

type securityPolicyAdvancedOptionsConfigJsonParsingPtr string

func SecurityPolicyAdvancedOptionsConfigJsonParsingPtr(v string) SecurityPolicyAdvancedOptionsConfigJsonParsingPtrInput {
	return (*securityPolicyAdvancedOptionsConfigJsonParsingPtr)(&v)
}

func (*securityPolicyAdvancedOptionsConfigJsonParsingPtr) ElementType() reflect.Type {
	return securityPolicyAdvancedOptionsConfigJsonParsingPtrType
}

func (in *securityPolicyAdvancedOptionsConfigJsonParsingPtr) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput() SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput)
}

func (in *securityPolicyAdvancedOptionsConfigJsonParsingPtr) ToSecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput)
}

type SecurityPolicyAdvancedOptionsConfigLogLevel string

const (
	SecurityPolicyAdvancedOptionsConfigLogLevelNormal  = SecurityPolicyAdvancedOptionsConfigLogLevel("NORMAL")
	SecurityPolicyAdvancedOptionsConfigLogLevelVerbose = SecurityPolicyAdvancedOptionsConfigLogLevel("VERBOSE")
)

func (SecurityPolicyAdvancedOptionsConfigLogLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigLogLevel)(nil)).Elem()
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToSecurityPolicyAdvancedOptionsConfigLogLevelOutput() SecurityPolicyAdvancedOptionsConfigLogLevelOutput {
	return pulumi.ToOutput(e).(SecurityPolicyAdvancedOptionsConfigLogLevelOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToSecurityPolicyAdvancedOptionsConfigLogLevelOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyAdvancedOptionsConfigLogLevelOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput() SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return e.ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return SecurityPolicyAdvancedOptionsConfigLogLevel(e).ToSecurityPolicyAdvancedOptionsConfigLogLevelOutputWithContext(ctx).ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(ctx)
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyAdvancedOptionsConfigLogLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyAdvancedOptionsConfigLogLevelOutput struct{ *pulumi.OutputState }

func (SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigLogLevel)(nil)).Elem()
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToSecurityPolicyAdvancedOptionsConfigLogLevelOutput() SecurityPolicyAdvancedOptionsConfigLogLevelOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToSecurityPolicyAdvancedOptionsConfigLogLevelOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput() SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return o.ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyAdvancedOptionsConfigLogLevel) *SecurityPolicyAdvancedOptionsConfigLogLevel {
		return &v
	}).(SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput)
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyAdvancedOptionsConfigLogLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyAdvancedOptionsConfigLogLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyAdvancedOptionsConfigLogLevel)(nil)).Elem()
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput() SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return o
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput) Elem() SecurityPolicyAdvancedOptionsConfigLogLevelOutput {
	return o.ApplyT(func(v *SecurityPolicyAdvancedOptionsConfigLogLevel) SecurityPolicyAdvancedOptionsConfigLogLevel {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyAdvancedOptionsConfigLogLevel
		return ret
	}).(SecurityPolicyAdvancedOptionsConfigLogLevelOutput)
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyAdvancedOptionsConfigLogLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyAdvancedOptionsConfigLogLevelInput is an input type that accepts SecurityPolicyAdvancedOptionsConfigLogLevelArgs and SecurityPolicyAdvancedOptionsConfigLogLevelOutput values.
// You can construct a concrete instance of `SecurityPolicyAdvancedOptionsConfigLogLevelInput` via:
//
//          SecurityPolicyAdvancedOptionsConfigLogLevelArgs{...}
type SecurityPolicyAdvancedOptionsConfigLogLevelInput interface {
	pulumi.Input

	ToSecurityPolicyAdvancedOptionsConfigLogLevelOutput() SecurityPolicyAdvancedOptionsConfigLogLevelOutput
	ToSecurityPolicyAdvancedOptionsConfigLogLevelOutputWithContext(context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelOutput
}

var securityPolicyAdvancedOptionsConfigLogLevelPtrType = reflect.TypeOf((**SecurityPolicyAdvancedOptionsConfigLogLevel)(nil)).Elem()

type SecurityPolicyAdvancedOptionsConfigLogLevelPtrInput interface {
	pulumi.Input

	ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput() SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput
	ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput
}

type securityPolicyAdvancedOptionsConfigLogLevelPtr string

func SecurityPolicyAdvancedOptionsConfigLogLevelPtr(v string) SecurityPolicyAdvancedOptionsConfigLogLevelPtrInput {
	return (*securityPolicyAdvancedOptionsConfigLogLevelPtr)(&v)
}

func (*securityPolicyAdvancedOptionsConfigLogLevelPtr) ElementType() reflect.Type {
	return securityPolicyAdvancedOptionsConfigLogLevelPtrType
}

func (in *securityPolicyAdvancedOptionsConfigLogLevelPtr) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput() SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput)
}

func (in *securityPolicyAdvancedOptionsConfigLogLevelPtr) ToSecurityPolicyAdvancedOptionsConfigLogLevelPtrOutputWithContext(ctx context.Context) SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput)
}

type SecurityPolicyDdosProtectionConfigDdosProtection string

const (
	SecurityPolicyDdosProtectionConfigDdosProtectionAdvanced = SecurityPolicyDdosProtectionConfigDdosProtection("ADVANCED")
	SecurityPolicyDdosProtectionConfigDdosProtectionStandard = SecurityPolicyDdosProtectionConfigDdosProtection("STANDARD")
)

func (SecurityPolicyDdosProtectionConfigDdosProtection) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyDdosProtectionConfigDdosProtection)(nil)).Elem()
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToSecurityPolicyDdosProtectionConfigDdosProtectionOutput() SecurityPolicyDdosProtectionConfigDdosProtectionOutput {
	return pulumi.ToOutput(e).(SecurityPolicyDdosProtectionConfigDdosProtectionOutput)
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToSecurityPolicyDdosProtectionConfigDdosProtectionOutputWithContext(ctx context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyDdosProtectionConfigDdosProtectionOutput)
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput() SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return e.ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(ctx context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return SecurityPolicyDdosProtectionConfigDdosProtection(e).ToSecurityPolicyDdosProtectionConfigDdosProtectionOutputWithContext(ctx).ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(ctx)
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyDdosProtectionConfigDdosProtection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyDdosProtectionConfigDdosProtectionOutput struct{ *pulumi.OutputState }

func (SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyDdosProtectionConfigDdosProtection)(nil)).Elem()
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToSecurityPolicyDdosProtectionConfigDdosProtectionOutput() SecurityPolicyDdosProtectionConfigDdosProtectionOutput {
	return o
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToSecurityPolicyDdosProtectionConfigDdosProtectionOutputWithContext(ctx context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionOutput {
	return o
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput() SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return o.ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(ctx context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyDdosProtectionConfigDdosProtection) *SecurityPolicyDdosProtectionConfigDdosProtection {
		return &v
	}).(SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput)
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyDdosProtectionConfigDdosProtection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyDdosProtectionConfigDdosProtection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyDdosProtectionConfigDdosProtection)(nil)).Elem()
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput() SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return o
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(ctx context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return o
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput) Elem() SecurityPolicyDdosProtectionConfigDdosProtectionOutput {
	return o.ApplyT(func(v *SecurityPolicyDdosProtectionConfigDdosProtection) SecurityPolicyDdosProtectionConfigDdosProtection {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyDdosProtectionConfigDdosProtection
		return ret
	}).(SecurityPolicyDdosProtectionConfigDdosProtectionOutput)
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyDdosProtectionConfigDdosProtection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyDdosProtectionConfigDdosProtectionInput is an input type that accepts SecurityPolicyDdosProtectionConfigDdosProtectionArgs and SecurityPolicyDdosProtectionConfigDdosProtectionOutput values.
// You can construct a concrete instance of `SecurityPolicyDdosProtectionConfigDdosProtectionInput` via:
//
//          SecurityPolicyDdosProtectionConfigDdosProtectionArgs{...}
type SecurityPolicyDdosProtectionConfigDdosProtectionInput interface {
	pulumi.Input

	ToSecurityPolicyDdosProtectionConfigDdosProtectionOutput() SecurityPolicyDdosProtectionConfigDdosProtectionOutput
	ToSecurityPolicyDdosProtectionConfigDdosProtectionOutputWithContext(context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionOutput
}

var securityPolicyDdosProtectionConfigDdosProtectionPtrType = reflect.TypeOf((**SecurityPolicyDdosProtectionConfigDdosProtection)(nil)).Elem()

type SecurityPolicyDdosProtectionConfigDdosProtectionPtrInput interface {
	pulumi.Input

	ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput() SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput
	ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput
}

type securityPolicyDdosProtectionConfigDdosProtectionPtr string

func SecurityPolicyDdosProtectionConfigDdosProtectionPtr(v string) SecurityPolicyDdosProtectionConfigDdosProtectionPtrInput {
	return (*securityPolicyDdosProtectionConfigDdosProtectionPtr)(&v)
}

func (*securityPolicyDdosProtectionConfigDdosProtectionPtr) ElementType() reflect.Type {
	return securityPolicyDdosProtectionConfigDdosProtectionPtrType
}

func (in *securityPolicyDdosProtectionConfigDdosProtectionPtr) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput() SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput)
}

func (in *securityPolicyDdosProtectionConfigDdosProtectionPtr) ToSecurityPolicyDdosProtectionConfigDdosProtectionPtrOutputWithContext(ctx context.Context) SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput)
}

// The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
type SecurityPolicyRuleDirection string

const (
	SecurityPolicyRuleDirectionEgress  = SecurityPolicyRuleDirection("EGRESS")
	SecurityPolicyRuleDirectionIngress = SecurityPolicyRuleDirection("INGRESS")
)

func (SecurityPolicyRuleDirection) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleDirection)(nil)).Elem()
}

func (e SecurityPolicyRuleDirection) ToSecurityPolicyRuleDirectionOutput() SecurityPolicyRuleDirectionOutput {
	return pulumi.ToOutput(e).(SecurityPolicyRuleDirectionOutput)
}

func (e SecurityPolicyRuleDirection) ToSecurityPolicyRuleDirectionOutputWithContext(ctx context.Context) SecurityPolicyRuleDirectionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyRuleDirectionOutput)
}

func (e SecurityPolicyRuleDirection) ToSecurityPolicyRuleDirectionPtrOutput() SecurityPolicyRuleDirectionPtrOutput {
	return e.ToSecurityPolicyRuleDirectionPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleDirection) ToSecurityPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleDirectionPtrOutput {
	return SecurityPolicyRuleDirection(e).ToSecurityPolicyRuleDirectionOutputWithContext(ctx).ToSecurityPolicyRuleDirectionPtrOutputWithContext(ctx)
}

func (e SecurityPolicyRuleDirection) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleDirection) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleDirection) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleDirection) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyRuleDirectionOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleDirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleDirection)(nil)).Elem()
}

func (o SecurityPolicyRuleDirectionOutput) ToSecurityPolicyRuleDirectionOutput() SecurityPolicyRuleDirectionOutput {
	return o
}

func (o SecurityPolicyRuleDirectionOutput) ToSecurityPolicyRuleDirectionOutputWithContext(ctx context.Context) SecurityPolicyRuleDirectionOutput {
	return o
}

func (o SecurityPolicyRuleDirectionOutput) ToSecurityPolicyRuleDirectionPtrOutput() SecurityPolicyRuleDirectionPtrOutput {
	return o.ToSecurityPolicyRuleDirectionPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleDirectionOutput) ToSecurityPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleDirectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleDirection) *SecurityPolicyRuleDirection {
		return &v
	}).(SecurityPolicyRuleDirectionPtrOutput)
}

func (o SecurityPolicyRuleDirectionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleDirectionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleDirection) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyRuleDirectionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleDirectionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleDirection) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyRuleDirectionPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleDirectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleDirection)(nil)).Elem()
}

func (o SecurityPolicyRuleDirectionPtrOutput) ToSecurityPolicyRuleDirectionPtrOutput() SecurityPolicyRuleDirectionPtrOutput {
	return o
}

func (o SecurityPolicyRuleDirectionPtrOutput) ToSecurityPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleDirectionPtrOutput {
	return o
}

func (o SecurityPolicyRuleDirectionPtrOutput) Elem() SecurityPolicyRuleDirectionOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleDirection) SecurityPolicyRuleDirection {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleDirection
		return ret
	}).(SecurityPolicyRuleDirectionOutput)
}

func (o SecurityPolicyRuleDirectionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleDirectionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyRuleDirection) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyRuleDirectionInput is an input type that accepts SecurityPolicyRuleDirectionArgs and SecurityPolicyRuleDirectionOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleDirectionInput` via:
//
//          SecurityPolicyRuleDirectionArgs{...}
type SecurityPolicyRuleDirectionInput interface {
	pulumi.Input

	ToSecurityPolicyRuleDirectionOutput() SecurityPolicyRuleDirectionOutput
	ToSecurityPolicyRuleDirectionOutputWithContext(context.Context) SecurityPolicyRuleDirectionOutput
}

var securityPolicyRuleDirectionPtrType = reflect.TypeOf((**SecurityPolicyRuleDirection)(nil)).Elem()

type SecurityPolicyRuleDirectionPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleDirectionPtrOutput() SecurityPolicyRuleDirectionPtrOutput
	ToSecurityPolicyRuleDirectionPtrOutputWithContext(context.Context) SecurityPolicyRuleDirectionPtrOutput
}

type securityPolicyRuleDirectionPtr string

func SecurityPolicyRuleDirectionPtr(v string) SecurityPolicyRuleDirectionPtrInput {
	return (*securityPolicyRuleDirectionPtr)(&v)
}

func (*securityPolicyRuleDirectionPtr) ElementType() reflect.Type {
	return securityPolicyRuleDirectionPtrType
}

func (in *securityPolicyRuleDirectionPtr) ToSecurityPolicyRuleDirectionPtrOutput() SecurityPolicyRuleDirectionPtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyRuleDirectionPtrOutput)
}

func (in *securityPolicyRuleDirectionPtr) ToSecurityPolicyRuleDirectionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleDirectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyRuleDirectionPtrOutput)
}

// Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
type SecurityPolicyRuleMatcherVersionedExpr string

const (
	SecurityPolicyRuleMatcherVersionedExprFirewall = SecurityPolicyRuleMatcherVersionedExpr("FIREWALL")
	// Matches the source IP address of a request to the IP ranges supplied in config.
	SecurityPolicyRuleMatcherVersionedExprSrcIpsV1 = SecurityPolicyRuleMatcherVersionedExpr("SRC_IPS_V1")
)

func (SecurityPolicyRuleMatcherVersionedExpr) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherVersionedExpr)(nil)).Elem()
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToSecurityPolicyRuleMatcherVersionedExprOutput() SecurityPolicyRuleMatcherVersionedExprOutput {
	return pulumi.ToOutput(e).(SecurityPolicyRuleMatcherVersionedExprOutput)
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToSecurityPolicyRuleMatcherVersionedExprOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherVersionedExprOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyRuleMatcherVersionedExprOutput)
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToSecurityPolicyRuleMatcherVersionedExprPtrOutput() SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return e.ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return SecurityPolicyRuleMatcherVersionedExpr(e).ToSecurityPolicyRuleMatcherVersionedExprOutputWithContext(ctx).ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(ctx)
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleMatcherVersionedExpr) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyRuleMatcherVersionedExprOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherVersionedExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherVersionedExpr)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToSecurityPolicyRuleMatcherVersionedExprOutput() SecurityPolicyRuleMatcherVersionedExprOutput {
	return o
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToSecurityPolicyRuleMatcherVersionedExprOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherVersionedExprOutput {
	return o
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToSecurityPolicyRuleMatcherVersionedExprPtrOutput() SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return o.ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleMatcherVersionedExpr) *SecurityPolicyRuleMatcherVersionedExpr {
		return &v
	}).(SecurityPolicyRuleMatcherVersionedExprPtrOutput)
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleMatcherVersionedExpr) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherVersionedExprOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleMatcherVersionedExpr) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyRuleMatcherVersionedExprPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherVersionedExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcherVersionedExpr)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherVersionedExprPtrOutput) ToSecurityPolicyRuleMatcherVersionedExprPtrOutput() SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherVersionedExprPtrOutput) ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherVersionedExprPtrOutput) Elem() SecurityPolicyRuleMatcherVersionedExprOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherVersionedExpr) SecurityPolicyRuleMatcherVersionedExpr {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleMatcherVersionedExpr
		return ret
	}).(SecurityPolicyRuleMatcherVersionedExprOutput)
}

func (o SecurityPolicyRuleMatcherVersionedExprPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherVersionedExprPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyRuleMatcherVersionedExpr) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyRuleMatcherVersionedExprInput is an input type that accepts SecurityPolicyRuleMatcherVersionedExprArgs and SecurityPolicyRuleMatcherVersionedExprOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherVersionedExprInput` via:
//
//          SecurityPolicyRuleMatcherVersionedExprArgs{...}
type SecurityPolicyRuleMatcherVersionedExprInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherVersionedExprOutput() SecurityPolicyRuleMatcherVersionedExprOutput
	ToSecurityPolicyRuleMatcherVersionedExprOutputWithContext(context.Context) SecurityPolicyRuleMatcherVersionedExprOutput
}

var securityPolicyRuleMatcherVersionedExprPtrType = reflect.TypeOf((**SecurityPolicyRuleMatcherVersionedExpr)(nil)).Elem()

type SecurityPolicyRuleMatcherVersionedExprPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherVersionedExprPtrOutput() SecurityPolicyRuleMatcherVersionedExprPtrOutput
	ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(context.Context) SecurityPolicyRuleMatcherVersionedExprPtrOutput
}

type securityPolicyRuleMatcherVersionedExprPtr string

func SecurityPolicyRuleMatcherVersionedExprPtr(v string) SecurityPolicyRuleMatcherVersionedExprPtrInput {
	return (*securityPolicyRuleMatcherVersionedExprPtr)(&v)
}

func (*securityPolicyRuleMatcherVersionedExprPtr) ElementType() reflect.Type {
	return securityPolicyRuleMatcherVersionedExprPtrType
}

func (in *securityPolicyRuleMatcherVersionedExprPtr) ToSecurityPolicyRuleMatcherVersionedExprPtrOutput() SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyRuleMatcherVersionedExprPtrOutput)
}

func (in *securityPolicyRuleMatcherVersionedExprPtr) ToSecurityPolicyRuleMatcherVersionedExprPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyRuleMatcherVersionedExprPtrOutput)
}

// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if this field 'enforce_on_key' is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforce_on_key_name". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforce_on_key_name". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL.
type SecurityPolicyRuleRateLimitOptionsEnforceOnKey string

const (
	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyAll        = SecurityPolicyRuleRateLimitOptionsEnforceOnKey("ALL")
	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyAllIps     = SecurityPolicyRuleRateLimitOptionsEnforceOnKey("ALL_IPS")
	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyHttpCookie = SecurityPolicyRuleRateLimitOptionsEnforceOnKey("HTTP_COOKIE")
	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyHttpHeader = SecurityPolicyRuleRateLimitOptionsEnforceOnKey("HTTP_HEADER")
	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyIp         = SecurityPolicyRuleRateLimitOptionsEnforceOnKey("IP")
	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyXffIp      = SecurityPolicyRuleRateLimitOptionsEnforceOnKey("XFF_IP")
)

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKey)(nil)).Elem()
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput {
	return pulumi.ToOutput(e).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput)
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput)
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return e.ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return SecurityPolicyRuleRateLimitOptionsEnforceOnKey(e).ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutputWithContext(ctx).ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(ctx)
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKey)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return o.ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleRateLimitOptionsEnforceOnKey) *SecurityPolicyRuleRateLimitOptionsEnforceOnKey {
		return &v
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput)
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleRateLimitOptionsEnforceOnKey) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRateLimitOptionsEnforceOnKey)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput) Elem() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptionsEnforceOnKey) SecurityPolicyRuleRateLimitOptionsEnforceOnKey {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleRateLimitOptionsEnforceOnKey
		return ret
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput)
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyRuleRateLimitOptionsEnforceOnKey) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyRuleRateLimitOptionsEnforceOnKeyInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsEnforceOnKeyArgs and SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsEnforceOnKeyInput` via:
//
//          SecurityPolicyRuleRateLimitOptionsEnforceOnKeyArgs{...}
type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput
	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput
}

var securityPolicyRuleRateLimitOptionsEnforceOnKeyPtrType = reflect.TypeOf((**SecurityPolicyRuleRateLimitOptionsEnforceOnKey)(nil)).Elem()

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput
	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput
}

type securityPolicyRuleRateLimitOptionsEnforceOnKeyPtr string

func SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtr(v string) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrInput {
	return (*securityPolicyRuleRateLimitOptionsEnforceOnKeyPtr)(&v)
}

func (*securityPolicyRuleRateLimitOptionsEnforceOnKeyPtr) ElementType() reflect.Type {
	return securityPolicyRuleRateLimitOptionsEnforceOnKeyPtrType
}

func (in *securityPolicyRuleRateLimitOptionsEnforceOnKeyPtr) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput)
}

func (in *securityPolicyRuleRateLimitOptionsEnforceOnKeyPtr) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput)
}

// Type of the redirect action.
type SecurityPolicyRuleRedirectOptionsType string

const (
	SecurityPolicyRuleRedirectOptionsTypeExternal302     = SecurityPolicyRuleRedirectOptionsType("EXTERNAL_302")
	SecurityPolicyRuleRedirectOptionsTypeGoogleRecaptcha = SecurityPolicyRuleRedirectOptionsType("GOOGLE_RECAPTCHA")
)

func (SecurityPolicyRuleRedirectOptionsType) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRedirectOptionsType)(nil)).Elem()
}

func (e SecurityPolicyRuleRedirectOptionsType) ToSecurityPolicyRuleRedirectOptionsTypeOutput() SecurityPolicyRuleRedirectOptionsTypeOutput {
	return pulumi.ToOutput(e).(SecurityPolicyRuleRedirectOptionsTypeOutput)
}

func (e SecurityPolicyRuleRedirectOptionsType) ToSecurityPolicyRuleRedirectOptionsTypeOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyRuleRedirectOptionsTypeOutput)
}

func (e SecurityPolicyRuleRedirectOptionsType) ToSecurityPolicyRuleRedirectOptionsTypePtrOutput() SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return e.ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleRedirectOptionsType) ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return SecurityPolicyRuleRedirectOptionsType(e).ToSecurityPolicyRuleRedirectOptionsTypeOutputWithContext(ctx).ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(ctx)
}

func (e SecurityPolicyRuleRedirectOptionsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleRedirectOptionsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyRuleRedirectOptionsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyRuleRedirectOptionsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyRuleRedirectOptionsTypeOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRedirectOptionsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRedirectOptionsType)(nil)).Elem()
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToSecurityPolicyRuleRedirectOptionsTypeOutput() SecurityPolicyRuleRedirectOptionsTypeOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToSecurityPolicyRuleRedirectOptionsTypeOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsTypeOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToSecurityPolicyRuleRedirectOptionsTypePtrOutput() SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return o.ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleRedirectOptionsType) *SecurityPolicyRuleRedirectOptionsType {
		return &v
	}).(SecurityPolicyRuleRedirectOptionsTypePtrOutput)
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleRedirectOptionsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRedirectOptionsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyRuleRedirectOptionsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyRuleRedirectOptionsTypePtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRedirectOptionsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRedirectOptionsType)(nil)).Elem()
}

func (o SecurityPolicyRuleRedirectOptionsTypePtrOutput) ToSecurityPolicyRuleRedirectOptionsTypePtrOutput() SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsTypePtrOutput) ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsTypePtrOutput) Elem() SecurityPolicyRuleRedirectOptionsTypeOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRedirectOptionsType) SecurityPolicyRuleRedirectOptionsType {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleRedirectOptionsType
		return ret
	}).(SecurityPolicyRuleRedirectOptionsTypeOutput)
}

func (o SecurityPolicyRuleRedirectOptionsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRedirectOptionsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyRuleRedirectOptionsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyRuleRedirectOptionsTypeInput is an input type that accepts SecurityPolicyRuleRedirectOptionsTypeArgs and SecurityPolicyRuleRedirectOptionsTypeOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRedirectOptionsTypeInput` via:
//
//          SecurityPolicyRuleRedirectOptionsTypeArgs{...}
type SecurityPolicyRuleRedirectOptionsTypeInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRedirectOptionsTypeOutput() SecurityPolicyRuleRedirectOptionsTypeOutput
	ToSecurityPolicyRuleRedirectOptionsTypeOutputWithContext(context.Context) SecurityPolicyRuleRedirectOptionsTypeOutput
}

var securityPolicyRuleRedirectOptionsTypePtrType = reflect.TypeOf((**SecurityPolicyRuleRedirectOptionsType)(nil)).Elem()

type SecurityPolicyRuleRedirectOptionsTypePtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRedirectOptionsTypePtrOutput() SecurityPolicyRuleRedirectOptionsTypePtrOutput
	ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(context.Context) SecurityPolicyRuleRedirectOptionsTypePtrOutput
}

type securityPolicyRuleRedirectOptionsTypePtr string

func SecurityPolicyRuleRedirectOptionsTypePtr(v string) SecurityPolicyRuleRedirectOptionsTypePtrInput {
	return (*securityPolicyRuleRedirectOptionsTypePtr)(&v)
}

func (*securityPolicyRuleRedirectOptionsTypePtr) ElementType() reflect.Type {
	return securityPolicyRuleRedirectOptionsTypePtrType
}

func (in *securityPolicyRuleRedirectOptionsTypePtr) ToSecurityPolicyRuleRedirectOptionsTypePtrOutput() SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyRuleRedirectOptionsTypePtrOutput)
}

func (in *securityPolicyRuleRedirectOptionsTypePtr) ToSecurityPolicyRuleRedirectOptionsTypePtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyRuleRedirectOptionsTypePtrOutput)
}

// The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. This field can be set only at resource creation time.
type SecurityPolicyType string

const (
	SecurityPolicyTypeCloudArmor        = SecurityPolicyType("CLOUD_ARMOR")
	SecurityPolicyTypeCloudArmorEdge    = SecurityPolicyType("CLOUD_ARMOR_EDGE")
	SecurityPolicyTypeCloudArmorNetwork = SecurityPolicyType("CLOUD_ARMOR_NETWORK")
	SecurityPolicyTypeFirewall          = SecurityPolicyType("FIREWALL")
)

func (SecurityPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyType)(nil)).Elem()
}

func (e SecurityPolicyType) ToSecurityPolicyTypeOutput() SecurityPolicyTypeOutput {
	return pulumi.ToOutput(e).(SecurityPolicyTypeOutput)
}

func (e SecurityPolicyType) ToSecurityPolicyTypeOutputWithContext(ctx context.Context) SecurityPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SecurityPolicyTypeOutput)
}

func (e SecurityPolicyType) ToSecurityPolicyTypePtrOutput() SecurityPolicyTypePtrOutput {
	return e.ToSecurityPolicyTypePtrOutputWithContext(context.Background())
}

func (e SecurityPolicyType) ToSecurityPolicyTypePtrOutputWithContext(ctx context.Context) SecurityPolicyTypePtrOutput {
	return SecurityPolicyType(e).ToSecurityPolicyTypeOutputWithContext(ctx).ToSecurityPolicyTypePtrOutputWithContext(ctx)
}

func (e SecurityPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecurityPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecurityPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecurityPolicyTypeOutput struct{ *pulumi.OutputState }

func (SecurityPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyType)(nil)).Elem()
}

func (o SecurityPolicyTypeOutput) ToSecurityPolicyTypeOutput() SecurityPolicyTypeOutput {
	return o
}

func (o SecurityPolicyTypeOutput) ToSecurityPolicyTypeOutputWithContext(ctx context.Context) SecurityPolicyTypeOutput {
	return o
}

func (o SecurityPolicyTypeOutput) ToSecurityPolicyTypePtrOutput() SecurityPolicyTypePtrOutput {
	return o.ToSecurityPolicyTypePtrOutputWithContext(context.Background())
}

func (o SecurityPolicyTypeOutput) ToSecurityPolicyTypePtrOutputWithContext(ctx context.Context) SecurityPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyType) *SecurityPolicyType {
		return &v
	}).(SecurityPolicyTypePtrOutput)
}

func (o SecurityPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SecurityPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SecurityPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SecurityPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SecurityPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyType)(nil)).Elem()
}

func (o SecurityPolicyTypePtrOutput) ToSecurityPolicyTypePtrOutput() SecurityPolicyTypePtrOutput {
	return o
}

func (o SecurityPolicyTypePtrOutput) ToSecurityPolicyTypePtrOutputWithContext(ctx context.Context) SecurityPolicyTypePtrOutput {
	return o
}

func (o SecurityPolicyTypePtrOutput) Elem() SecurityPolicyTypeOutput {
	return o.ApplyT(func(v *SecurityPolicyType) SecurityPolicyType {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyType
		return ret
	}).(SecurityPolicyTypeOutput)
}

func (o SecurityPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SecurityPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SecurityPolicyTypeInput is an input type that accepts SecurityPolicyTypeArgs and SecurityPolicyTypeOutput values.
// You can construct a concrete instance of `SecurityPolicyTypeInput` via:
//
//          SecurityPolicyTypeArgs{...}
type SecurityPolicyTypeInput interface {
	pulumi.Input

	ToSecurityPolicyTypeOutput() SecurityPolicyTypeOutput
	ToSecurityPolicyTypeOutputWithContext(context.Context) SecurityPolicyTypeOutput
}

var securityPolicyTypePtrType = reflect.TypeOf((**SecurityPolicyType)(nil)).Elem()

type SecurityPolicyTypePtrInput interface {
	pulumi.Input

	ToSecurityPolicyTypePtrOutput() SecurityPolicyTypePtrOutput
	ToSecurityPolicyTypePtrOutputWithContext(context.Context) SecurityPolicyTypePtrOutput
}

type securityPolicyTypePtr string

func SecurityPolicyTypePtr(v string) SecurityPolicyTypePtrInput {
	return (*securityPolicyTypePtr)(&v)
}

func (*securityPolicyTypePtr) ElementType() reflect.Type {
	return securityPolicyTypePtrType
}

func (in *securityPolicyTypePtr) ToSecurityPolicyTypePtrOutput() SecurityPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(SecurityPolicyTypePtrOutput)
}

func (in *securityPolicyTypePtr) ToSecurityPolicyTypePtrOutputWithContext(ctx context.Context) SecurityPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SecurityPolicyTypePtrOutput)
}

type ServerBindingType string

const (
	// Node may associate with any physical server over its lifetime.
	ServerBindingTypeRestartNodeOnAnyServer = ServerBindingType("RESTART_NODE_ON_ANY_SERVER")
	// Node may associate with minimal physical servers over its lifetime.
	ServerBindingTypeRestartNodeOnMinimalServers  = ServerBindingType("RESTART_NODE_ON_MINIMAL_SERVERS")
	ServerBindingTypeServerBindingTypeUnspecified = ServerBindingType("SERVER_BINDING_TYPE_UNSPECIFIED")
)

func (ServerBindingType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerBindingType)(nil)).Elem()
}

func (e ServerBindingType) ToServerBindingTypeOutput() ServerBindingTypeOutput {
	return pulumi.ToOutput(e).(ServerBindingTypeOutput)
}

func (e ServerBindingType) ToServerBindingTypeOutputWithContext(ctx context.Context) ServerBindingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServerBindingTypeOutput)
}

func (e ServerBindingType) ToServerBindingTypePtrOutput() ServerBindingTypePtrOutput {
	return e.ToServerBindingTypePtrOutputWithContext(context.Background())
}

func (e ServerBindingType) ToServerBindingTypePtrOutputWithContext(ctx context.Context) ServerBindingTypePtrOutput {
	return ServerBindingType(e).ToServerBindingTypeOutputWithContext(ctx).ToServerBindingTypePtrOutputWithContext(ctx)
}

func (e ServerBindingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerBindingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerBindingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServerBindingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServerBindingTypeOutput struct{ *pulumi.OutputState }

func (ServerBindingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerBindingType)(nil)).Elem()
}

func (o ServerBindingTypeOutput) ToServerBindingTypeOutput() ServerBindingTypeOutput {
	return o
}

func (o ServerBindingTypeOutput) ToServerBindingTypeOutputWithContext(ctx context.Context) ServerBindingTypeOutput {
	return o
}

func (o ServerBindingTypeOutput) ToServerBindingTypePtrOutput() ServerBindingTypePtrOutput {
	return o.ToServerBindingTypePtrOutputWithContext(context.Background())
}

func (o ServerBindingTypeOutput) ToServerBindingTypePtrOutputWithContext(ctx context.Context) ServerBindingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerBindingType) *ServerBindingType {
		return &v
	}).(ServerBindingTypePtrOutput)
}

func (o ServerBindingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServerBindingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerBindingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServerBindingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerBindingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerBindingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServerBindingTypePtrOutput struct{ *pulumi.OutputState }

func (ServerBindingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerBindingType)(nil)).Elem()
}

func (o ServerBindingTypePtrOutput) ToServerBindingTypePtrOutput() ServerBindingTypePtrOutput {
	return o
}

func (o ServerBindingTypePtrOutput) ToServerBindingTypePtrOutputWithContext(ctx context.Context) ServerBindingTypePtrOutput {
	return o
}

func (o ServerBindingTypePtrOutput) Elem() ServerBindingTypeOutput {
	return o.ApplyT(func(v *ServerBindingType) ServerBindingType {
		if v != nil {
			return *v
		}
		var ret ServerBindingType
		return ret
	}).(ServerBindingTypeOutput)
}

func (o ServerBindingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerBindingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServerBindingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServerBindingTypeInput is an input type that accepts ServerBindingTypeArgs and ServerBindingTypeOutput values.
// You can construct a concrete instance of `ServerBindingTypeInput` via:
//
//          ServerBindingTypeArgs{...}
type ServerBindingTypeInput interface {
	pulumi.Input

	ToServerBindingTypeOutput() ServerBindingTypeOutput
	ToServerBindingTypeOutputWithContext(context.Context) ServerBindingTypeOutput
}

var serverBindingTypePtrType = reflect.TypeOf((**ServerBindingType)(nil)).Elem()

type ServerBindingTypePtrInput interface {
	pulumi.Input

	ToServerBindingTypePtrOutput() ServerBindingTypePtrOutput
	ToServerBindingTypePtrOutputWithContext(context.Context) ServerBindingTypePtrOutput
}

type serverBindingTypePtr string

func ServerBindingTypePtr(v string) ServerBindingTypePtrInput {
	return (*serverBindingTypePtr)(&v)
}

func (*serverBindingTypePtr) ElementType() reflect.Type {
	return serverBindingTypePtrType
}

func (in *serverBindingTypePtr) ToServerBindingTypePtrOutput() ServerBindingTypePtrOutput {
	return pulumi.ToOutput(in).(ServerBindingTypePtrOutput)
}

func (in *serverBindingTypePtr) ToServerBindingTypePtrOutputWithContext(ctx context.Context) ServerBindingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServerBindingTypePtrOutput)
}

// Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
type ServerTlsSettingsTlsMode string

const (
	ServerTlsSettingsTlsModeInvalid = ServerTlsSettingsTlsMode("INVALID")
	// Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
	ServerTlsSettingsTlsModeMutual = ServerTlsSettingsTlsMode("MUTUAL")
	// Secure connections with standard TLS semantics.
	ServerTlsSettingsTlsModeSimple = ServerTlsSettingsTlsMode("SIMPLE")
)

func (ServerTlsSettingsTlsMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTlsSettingsTlsMode)(nil)).Elem()
}

func (e ServerTlsSettingsTlsMode) ToServerTlsSettingsTlsModeOutput() ServerTlsSettingsTlsModeOutput {
	return pulumi.ToOutput(e).(ServerTlsSettingsTlsModeOutput)
}

func (e ServerTlsSettingsTlsMode) ToServerTlsSettingsTlsModeOutputWithContext(ctx context.Context) ServerTlsSettingsTlsModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServerTlsSettingsTlsModeOutput)
}

func (e ServerTlsSettingsTlsMode) ToServerTlsSettingsTlsModePtrOutput() ServerTlsSettingsTlsModePtrOutput {
	return e.ToServerTlsSettingsTlsModePtrOutputWithContext(context.Background())
}

func (e ServerTlsSettingsTlsMode) ToServerTlsSettingsTlsModePtrOutputWithContext(ctx context.Context) ServerTlsSettingsTlsModePtrOutput {
	return ServerTlsSettingsTlsMode(e).ToServerTlsSettingsTlsModeOutputWithContext(ctx).ToServerTlsSettingsTlsModePtrOutputWithContext(ctx)
}

func (e ServerTlsSettingsTlsMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerTlsSettingsTlsMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerTlsSettingsTlsMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServerTlsSettingsTlsMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServerTlsSettingsTlsModeOutput struct{ *pulumi.OutputState }

func (ServerTlsSettingsTlsModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTlsSettingsTlsMode)(nil)).Elem()
}

func (o ServerTlsSettingsTlsModeOutput) ToServerTlsSettingsTlsModeOutput() ServerTlsSettingsTlsModeOutput {
	return o
}

func (o ServerTlsSettingsTlsModeOutput) ToServerTlsSettingsTlsModeOutputWithContext(ctx context.Context) ServerTlsSettingsTlsModeOutput {
	return o
}

func (o ServerTlsSettingsTlsModeOutput) ToServerTlsSettingsTlsModePtrOutput() ServerTlsSettingsTlsModePtrOutput {
	return o.ToServerTlsSettingsTlsModePtrOutputWithContext(context.Background())
}

func (o ServerTlsSettingsTlsModeOutput) ToServerTlsSettingsTlsModePtrOutputWithContext(ctx context.Context) ServerTlsSettingsTlsModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerTlsSettingsTlsMode) *ServerTlsSettingsTlsMode {
		return &v
	}).(ServerTlsSettingsTlsModePtrOutput)
}

func (o ServerTlsSettingsTlsModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServerTlsSettingsTlsModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerTlsSettingsTlsMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServerTlsSettingsTlsModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerTlsSettingsTlsModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerTlsSettingsTlsMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServerTlsSettingsTlsModePtrOutput struct{ *pulumi.OutputState }

func (ServerTlsSettingsTlsModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTlsSettingsTlsMode)(nil)).Elem()
}

func (o ServerTlsSettingsTlsModePtrOutput) ToServerTlsSettingsTlsModePtrOutput() ServerTlsSettingsTlsModePtrOutput {
	return o
}

func (o ServerTlsSettingsTlsModePtrOutput) ToServerTlsSettingsTlsModePtrOutputWithContext(ctx context.Context) ServerTlsSettingsTlsModePtrOutput {
	return o
}

func (o ServerTlsSettingsTlsModePtrOutput) Elem() ServerTlsSettingsTlsModeOutput {
	return o.ApplyT(func(v *ServerTlsSettingsTlsMode) ServerTlsSettingsTlsMode {
		if v != nil {
			return *v
		}
		var ret ServerTlsSettingsTlsMode
		return ret
	}).(ServerTlsSettingsTlsModeOutput)
}

func (o ServerTlsSettingsTlsModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerTlsSettingsTlsModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServerTlsSettingsTlsMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServerTlsSettingsTlsModeInput is an input type that accepts ServerTlsSettingsTlsModeArgs and ServerTlsSettingsTlsModeOutput values.
// You can construct a concrete instance of `ServerTlsSettingsTlsModeInput` via:
//
//          ServerTlsSettingsTlsModeArgs{...}
type ServerTlsSettingsTlsModeInput interface {
	pulumi.Input

	ToServerTlsSettingsTlsModeOutput() ServerTlsSettingsTlsModeOutput
	ToServerTlsSettingsTlsModeOutputWithContext(context.Context) ServerTlsSettingsTlsModeOutput
}

var serverTlsSettingsTlsModePtrType = reflect.TypeOf((**ServerTlsSettingsTlsMode)(nil)).Elem()

type ServerTlsSettingsTlsModePtrInput interface {
	pulumi.Input

	ToServerTlsSettingsTlsModePtrOutput() ServerTlsSettingsTlsModePtrOutput
	ToServerTlsSettingsTlsModePtrOutputWithContext(context.Context) ServerTlsSettingsTlsModePtrOutput
}

type serverTlsSettingsTlsModePtr string

func ServerTlsSettingsTlsModePtr(v string) ServerTlsSettingsTlsModePtrInput {
	return (*serverTlsSettingsTlsModePtr)(&v)
}

func (*serverTlsSettingsTlsModePtr) ElementType() reflect.Type {
	return serverTlsSettingsTlsModePtrType
}

func (in *serverTlsSettingsTlsModePtr) ToServerTlsSettingsTlsModePtrOutput() ServerTlsSettingsTlsModePtrOutput {
	return pulumi.ToOutput(in).(ServerTlsSettingsTlsModePtrOutput)
}

func (in *serverTlsSettingsTlsModePtr) ToServerTlsSettingsTlsModePtrOutputWithContext(ctx context.Context) ServerTlsSettingsTlsModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServerTlsSettingsTlsModePtrOutput)
}

// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
type ServiceAttachmentConnectionPreference string

const (
	ServiceAttachmentConnectionPreferenceAcceptAutomatic                 = ServiceAttachmentConnectionPreference("ACCEPT_AUTOMATIC")
	ServiceAttachmentConnectionPreferenceAcceptManual                    = ServiceAttachmentConnectionPreference("ACCEPT_MANUAL")
	ServiceAttachmentConnectionPreferenceConnectionPreferenceUnspecified = ServiceAttachmentConnectionPreference("CONNECTION_PREFERENCE_UNSPECIFIED")
)

func (ServiceAttachmentConnectionPreference) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentConnectionPreference)(nil)).Elem()
}

func (e ServiceAttachmentConnectionPreference) ToServiceAttachmentConnectionPreferenceOutput() ServiceAttachmentConnectionPreferenceOutput {
	return pulumi.ToOutput(e).(ServiceAttachmentConnectionPreferenceOutput)
}

func (e ServiceAttachmentConnectionPreference) ToServiceAttachmentConnectionPreferenceOutputWithContext(ctx context.Context) ServiceAttachmentConnectionPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceAttachmentConnectionPreferenceOutput)
}

func (e ServiceAttachmentConnectionPreference) ToServiceAttachmentConnectionPreferencePtrOutput() ServiceAttachmentConnectionPreferencePtrOutput {
	return e.ToServiceAttachmentConnectionPreferencePtrOutputWithContext(context.Background())
}

func (e ServiceAttachmentConnectionPreference) ToServiceAttachmentConnectionPreferencePtrOutputWithContext(ctx context.Context) ServiceAttachmentConnectionPreferencePtrOutput {
	return ServiceAttachmentConnectionPreference(e).ToServiceAttachmentConnectionPreferenceOutputWithContext(ctx).ToServiceAttachmentConnectionPreferencePtrOutputWithContext(ctx)
}

func (e ServiceAttachmentConnectionPreference) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceAttachmentConnectionPreference) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceAttachmentConnectionPreference) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceAttachmentConnectionPreference) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceAttachmentConnectionPreferenceOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConnectionPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentConnectionPreference)(nil)).Elem()
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToServiceAttachmentConnectionPreferenceOutput() ServiceAttachmentConnectionPreferenceOutput {
	return o
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToServiceAttachmentConnectionPreferenceOutputWithContext(ctx context.Context) ServiceAttachmentConnectionPreferenceOutput {
	return o
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToServiceAttachmentConnectionPreferencePtrOutput() ServiceAttachmentConnectionPreferencePtrOutput {
	return o.ToServiceAttachmentConnectionPreferencePtrOutputWithContext(context.Background())
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToServiceAttachmentConnectionPreferencePtrOutputWithContext(ctx context.Context) ServiceAttachmentConnectionPreferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAttachmentConnectionPreference) *ServiceAttachmentConnectionPreference {
		return &v
	}).(ServiceAttachmentConnectionPreferencePtrOutput)
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceAttachmentConnectionPreference) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceAttachmentConnectionPreferenceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceAttachmentConnectionPreference) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceAttachmentConnectionPreferencePtrOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConnectionPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAttachmentConnectionPreference)(nil)).Elem()
}

func (o ServiceAttachmentConnectionPreferencePtrOutput) ToServiceAttachmentConnectionPreferencePtrOutput() ServiceAttachmentConnectionPreferencePtrOutput {
	return o
}

func (o ServiceAttachmentConnectionPreferencePtrOutput) ToServiceAttachmentConnectionPreferencePtrOutputWithContext(ctx context.Context) ServiceAttachmentConnectionPreferencePtrOutput {
	return o
}

func (o ServiceAttachmentConnectionPreferencePtrOutput) Elem() ServiceAttachmentConnectionPreferenceOutput {
	return o.ApplyT(func(v *ServiceAttachmentConnectionPreference) ServiceAttachmentConnectionPreference {
		if v != nil {
			return *v
		}
		var ret ServiceAttachmentConnectionPreference
		return ret
	}).(ServiceAttachmentConnectionPreferenceOutput)
}

func (o ServiceAttachmentConnectionPreferencePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceAttachmentConnectionPreferencePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceAttachmentConnectionPreference) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceAttachmentConnectionPreferenceInput is an input type that accepts ServiceAttachmentConnectionPreferenceArgs and ServiceAttachmentConnectionPreferenceOutput values.
// You can construct a concrete instance of `ServiceAttachmentConnectionPreferenceInput` via:
//
//          ServiceAttachmentConnectionPreferenceArgs{...}
type ServiceAttachmentConnectionPreferenceInput interface {
	pulumi.Input

	ToServiceAttachmentConnectionPreferenceOutput() ServiceAttachmentConnectionPreferenceOutput
	ToServiceAttachmentConnectionPreferenceOutputWithContext(context.Context) ServiceAttachmentConnectionPreferenceOutput
}

var serviceAttachmentConnectionPreferencePtrType = reflect.TypeOf((**ServiceAttachmentConnectionPreference)(nil)).Elem()

type ServiceAttachmentConnectionPreferencePtrInput interface {
	pulumi.Input

	ToServiceAttachmentConnectionPreferencePtrOutput() ServiceAttachmentConnectionPreferencePtrOutput
	ToServiceAttachmentConnectionPreferencePtrOutputWithContext(context.Context) ServiceAttachmentConnectionPreferencePtrOutput
}

type serviceAttachmentConnectionPreferencePtr string

func ServiceAttachmentConnectionPreferencePtr(v string) ServiceAttachmentConnectionPreferencePtrInput {
	return (*serviceAttachmentConnectionPreferencePtr)(&v)
}

func (*serviceAttachmentConnectionPreferencePtr) ElementType() reflect.Type {
	return serviceAttachmentConnectionPreferencePtrType
}

func (in *serviceAttachmentConnectionPreferencePtr) ToServiceAttachmentConnectionPreferencePtrOutput() ServiceAttachmentConnectionPreferencePtrOutput {
	return pulumi.ToOutput(in).(ServiceAttachmentConnectionPreferencePtrOutput)
}

func (in *serviceAttachmentConnectionPreferencePtr) ToServiceAttachmentConnectionPreferencePtrOutputWithContext(ctx context.Context) ServiceAttachmentConnectionPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceAttachmentConnectionPreferencePtrOutput)
}

// Type of sharing for this shared-reservation
type ShareSettingsShareType string

const (
	// Shared-reservation is open to direct child projects of specific folders.
	ShareSettingsShareTypeDirectProjectsUnderSpecificFolders = ShareSettingsShareType("DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS")
	// Default value.
	ShareSettingsShareTypeLocal = ShareSettingsShareType("LOCAL")
	// Shared-reservation is open to entire Organization
	ShareSettingsShareTypeOrganization = ShareSettingsShareType("ORGANIZATION")
	// Default value. This value is unused.
	ShareSettingsShareTypeShareTypeUnspecified = ShareSettingsShareType("SHARE_TYPE_UNSPECIFIED")
	// Shared-reservation is open to specific projects
	ShareSettingsShareTypeSpecificProjects = ShareSettingsShareType("SPECIFIC_PROJECTS")
)

func (ShareSettingsShareType) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsShareType)(nil)).Elem()
}

func (e ShareSettingsShareType) ToShareSettingsShareTypeOutput() ShareSettingsShareTypeOutput {
	return pulumi.ToOutput(e).(ShareSettingsShareTypeOutput)
}

func (e ShareSettingsShareType) ToShareSettingsShareTypeOutputWithContext(ctx context.Context) ShareSettingsShareTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ShareSettingsShareTypeOutput)
}

func (e ShareSettingsShareType) ToShareSettingsShareTypePtrOutput() ShareSettingsShareTypePtrOutput {
	return e.ToShareSettingsShareTypePtrOutputWithContext(context.Background())
}

func (e ShareSettingsShareType) ToShareSettingsShareTypePtrOutputWithContext(ctx context.Context) ShareSettingsShareTypePtrOutput {
	return ShareSettingsShareType(e).ToShareSettingsShareTypeOutputWithContext(ctx).ToShareSettingsShareTypePtrOutputWithContext(ctx)
}

func (e ShareSettingsShareType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShareSettingsShareType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ShareSettingsShareType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ShareSettingsShareType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ShareSettingsShareTypeOutput struct{ *pulumi.OutputState }

func (ShareSettingsShareTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsShareType)(nil)).Elem()
}

func (o ShareSettingsShareTypeOutput) ToShareSettingsShareTypeOutput() ShareSettingsShareTypeOutput {
	return o
}

func (o ShareSettingsShareTypeOutput) ToShareSettingsShareTypeOutputWithContext(ctx context.Context) ShareSettingsShareTypeOutput {
	return o
}

func (o ShareSettingsShareTypeOutput) ToShareSettingsShareTypePtrOutput() ShareSettingsShareTypePtrOutput {
	return o.ToShareSettingsShareTypePtrOutputWithContext(context.Background())
}

func (o ShareSettingsShareTypeOutput) ToShareSettingsShareTypePtrOutputWithContext(ctx context.Context) ShareSettingsShareTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShareSettingsShareType) *ShareSettingsShareType {
		return &v
	}).(ShareSettingsShareTypePtrOutput)
}

func (o ShareSettingsShareTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ShareSettingsShareTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShareSettingsShareType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ShareSettingsShareTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShareSettingsShareTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ShareSettingsShareType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ShareSettingsShareTypePtrOutput struct{ *pulumi.OutputState }

func (ShareSettingsShareTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSettingsShareType)(nil)).Elem()
}

func (o ShareSettingsShareTypePtrOutput) ToShareSettingsShareTypePtrOutput() ShareSettingsShareTypePtrOutput {
	return o
}

func (o ShareSettingsShareTypePtrOutput) ToShareSettingsShareTypePtrOutputWithContext(ctx context.Context) ShareSettingsShareTypePtrOutput {
	return o
}

func (o ShareSettingsShareTypePtrOutput) Elem() ShareSettingsShareTypeOutput {
	return o.ApplyT(func(v *ShareSettingsShareType) ShareSettingsShareType {
		if v != nil {
			return *v
		}
		var ret ShareSettingsShareType
		return ret
	}).(ShareSettingsShareTypeOutput)
}

func (o ShareSettingsShareTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ShareSettingsShareTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ShareSettingsShareType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ShareSettingsShareTypeInput is an input type that accepts ShareSettingsShareTypeArgs and ShareSettingsShareTypeOutput values.
// You can construct a concrete instance of `ShareSettingsShareTypeInput` via:
//
//          ShareSettingsShareTypeArgs{...}
type ShareSettingsShareTypeInput interface {
	pulumi.Input

	ToShareSettingsShareTypeOutput() ShareSettingsShareTypeOutput
	ToShareSettingsShareTypeOutputWithContext(context.Context) ShareSettingsShareTypeOutput
}

var shareSettingsShareTypePtrType = reflect.TypeOf((**ShareSettingsShareType)(nil)).Elem()

type ShareSettingsShareTypePtrInput interface {
	pulumi.Input

	ToShareSettingsShareTypePtrOutput() ShareSettingsShareTypePtrOutput
	ToShareSettingsShareTypePtrOutputWithContext(context.Context) ShareSettingsShareTypePtrOutput
}

type shareSettingsShareTypePtr string

func ShareSettingsShareTypePtr(v string) ShareSettingsShareTypePtrInput {
	return (*shareSettingsShareTypePtr)(&v)
}

func (*shareSettingsShareTypePtr) ElementType() reflect.Type {
	return shareSettingsShareTypePtrType
}

func (in *shareSettingsShareTypePtr) ToShareSettingsShareTypePtrOutput() ShareSettingsShareTypePtrOutput {
	return pulumi.ToOutput(in).(ShareSettingsShareTypePtrOutput)
}

func (in *shareSettingsShareTypePtr) ToShareSettingsShareTypePtrOutputWithContext(ctx context.Context) ShareSettingsShareTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ShareSettingsShareTypePtrOutput)
}

// Indicates the type of the snapshot.
type SnapshotSnapshotType string

const (
	SnapshotSnapshotTypeArchive  = SnapshotSnapshotType("ARCHIVE")
	SnapshotSnapshotTypeStandard = SnapshotSnapshotType("STANDARD")
)

func (SnapshotSnapshotType) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotSnapshotType)(nil)).Elem()
}

func (e SnapshotSnapshotType) ToSnapshotSnapshotTypeOutput() SnapshotSnapshotTypeOutput {
	return pulumi.ToOutput(e).(SnapshotSnapshotTypeOutput)
}

func (e SnapshotSnapshotType) ToSnapshotSnapshotTypeOutputWithContext(ctx context.Context) SnapshotSnapshotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SnapshotSnapshotTypeOutput)
}

func (e SnapshotSnapshotType) ToSnapshotSnapshotTypePtrOutput() SnapshotSnapshotTypePtrOutput {
	return e.ToSnapshotSnapshotTypePtrOutputWithContext(context.Background())
}

func (e SnapshotSnapshotType) ToSnapshotSnapshotTypePtrOutputWithContext(ctx context.Context) SnapshotSnapshotTypePtrOutput {
	return SnapshotSnapshotType(e).ToSnapshotSnapshotTypeOutputWithContext(ctx).ToSnapshotSnapshotTypePtrOutputWithContext(ctx)
}

func (e SnapshotSnapshotType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotSnapshotType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SnapshotSnapshotType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SnapshotSnapshotType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SnapshotSnapshotTypeOutput struct{ *pulumi.OutputState }

func (SnapshotSnapshotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotSnapshotType)(nil)).Elem()
}

func (o SnapshotSnapshotTypeOutput) ToSnapshotSnapshotTypeOutput() SnapshotSnapshotTypeOutput {
	return o
}

func (o SnapshotSnapshotTypeOutput) ToSnapshotSnapshotTypeOutputWithContext(ctx context.Context) SnapshotSnapshotTypeOutput {
	return o
}

func (o SnapshotSnapshotTypeOutput) ToSnapshotSnapshotTypePtrOutput() SnapshotSnapshotTypePtrOutput {
	return o.ToSnapshotSnapshotTypePtrOutputWithContext(context.Background())
}

func (o SnapshotSnapshotTypeOutput) ToSnapshotSnapshotTypePtrOutputWithContext(ctx context.Context) SnapshotSnapshotTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotSnapshotType) *SnapshotSnapshotType {
		return &v
	}).(SnapshotSnapshotTypePtrOutput)
}

func (o SnapshotSnapshotTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotSnapshotTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotSnapshotType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotSnapshotTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotSnapshotTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotSnapshotType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotSnapshotTypePtrOutput struct{ *pulumi.OutputState }

func (SnapshotSnapshotTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotSnapshotType)(nil)).Elem()
}

func (o SnapshotSnapshotTypePtrOutput) ToSnapshotSnapshotTypePtrOutput() SnapshotSnapshotTypePtrOutput {
	return o
}

func (o SnapshotSnapshotTypePtrOutput) ToSnapshotSnapshotTypePtrOutputWithContext(ctx context.Context) SnapshotSnapshotTypePtrOutput {
	return o
}

func (o SnapshotSnapshotTypePtrOutput) Elem() SnapshotSnapshotTypeOutput {
	return o.ApplyT(func(v *SnapshotSnapshotType) SnapshotSnapshotType {
		if v != nil {
			return *v
		}
		var ret SnapshotSnapshotType
		return ret
	}).(SnapshotSnapshotTypeOutput)
}

func (o SnapshotSnapshotTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotSnapshotTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotSnapshotType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SnapshotSnapshotTypeInput is an input type that accepts SnapshotSnapshotTypeArgs and SnapshotSnapshotTypeOutput values.
// You can construct a concrete instance of `SnapshotSnapshotTypeInput` via:
//
//          SnapshotSnapshotTypeArgs{...}
type SnapshotSnapshotTypeInput interface {
	pulumi.Input

	ToSnapshotSnapshotTypeOutput() SnapshotSnapshotTypeOutput
	ToSnapshotSnapshotTypeOutputWithContext(context.Context) SnapshotSnapshotTypeOutput
}

var snapshotSnapshotTypePtrType = reflect.TypeOf((**SnapshotSnapshotType)(nil)).Elem()

type SnapshotSnapshotTypePtrInput interface {
	pulumi.Input

	ToSnapshotSnapshotTypePtrOutput() SnapshotSnapshotTypePtrOutput
	ToSnapshotSnapshotTypePtrOutputWithContext(context.Context) SnapshotSnapshotTypePtrOutput
}

type snapshotSnapshotTypePtr string

func SnapshotSnapshotTypePtr(v string) SnapshotSnapshotTypePtrInput {
	return (*snapshotSnapshotTypePtr)(&v)
}

func (*snapshotSnapshotTypePtr) ElementType() reflect.Type {
	return snapshotSnapshotTypePtrType
}

func (in *snapshotSnapshotTypePtr) ToSnapshotSnapshotTypePtrOutput() SnapshotSnapshotTypePtrOutput {
	return pulumi.ToOutput(in).(SnapshotSnapshotTypePtrOutput)
}

func (in *snapshotSnapshotTypePtr) ToSnapshotSnapshotTypePtrOutputWithContext(ctx context.Context) SnapshotSnapshotTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SnapshotSnapshotTypePtrOutput)
}

// (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
type SslCertificateType string

const (
	// Google-managed SSLCertificate.
	SslCertificateTypeManaged = SslCertificateType("MANAGED")
	// Certificate uploaded by user.
	SslCertificateTypeSelfManaged     = SslCertificateType("SELF_MANAGED")
	SslCertificateTypeTypeUnspecified = SslCertificateType("TYPE_UNSPECIFIED")
)

func (SslCertificateType) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateType)(nil)).Elem()
}

func (e SslCertificateType) ToSslCertificateTypeOutput() SslCertificateTypeOutput {
	return pulumi.ToOutput(e).(SslCertificateTypeOutput)
}

func (e SslCertificateType) ToSslCertificateTypeOutputWithContext(ctx context.Context) SslCertificateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslCertificateTypeOutput)
}

func (e SslCertificateType) ToSslCertificateTypePtrOutput() SslCertificateTypePtrOutput {
	return e.ToSslCertificateTypePtrOutputWithContext(context.Background())
}

func (e SslCertificateType) ToSslCertificateTypePtrOutputWithContext(ctx context.Context) SslCertificateTypePtrOutput {
	return SslCertificateType(e).ToSslCertificateTypeOutputWithContext(ctx).ToSslCertificateTypePtrOutputWithContext(ctx)
}

func (e SslCertificateType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslCertificateType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslCertificateType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslCertificateType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslCertificateTypeOutput struct{ *pulumi.OutputState }

func (SslCertificateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateType)(nil)).Elem()
}

func (o SslCertificateTypeOutput) ToSslCertificateTypeOutput() SslCertificateTypeOutput {
	return o
}

func (o SslCertificateTypeOutput) ToSslCertificateTypeOutputWithContext(ctx context.Context) SslCertificateTypeOutput {
	return o
}

func (o SslCertificateTypeOutput) ToSslCertificateTypePtrOutput() SslCertificateTypePtrOutput {
	return o.ToSslCertificateTypePtrOutputWithContext(context.Background())
}

func (o SslCertificateTypeOutput) ToSslCertificateTypePtrOutputWithContext(ctx context.Context) SslCertificateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslCertificateType) *SslCertificateType {
		return &v
	}).(SslCertificateTypePtrOutput)
}

func (o SslCertificateTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslCertificateTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslCertificateType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslCertificateTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslCertificateTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslCertificateType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslCertificateTypePtrOutput struct{ *pulumi.OutputState }

func (SslCertificateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslCertificateType)(nil)).Elem()
}

func (o SslCertificateTypePtrOutput) ToSslCertificateTypePtrOutput() SslCertificateTypePtrOutput {
	return o
}

func (o SslCertificateTypePtrOutput) ToSslCertificateTypePtrOutputWithContext(ctx context.Context) SslCertificateTypePtrOutput {
	return o
}

func (o SslCertificateTypePtrOutput) Elem() SslCertificateTypeOutput {
	return o.ApplyT(func(v *SslCertificateType) SslCertificateType {
		if v != nil {
			return *v
		}
		var ret SslCertificateType
		return ret
	}).(SslCertificateTypeOutput)
}

func (o SslCertificateTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslCertificateTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslCertificateType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslCertificateTypeInput is an input type that accepts SslCertificateTypeArgs and SslCertificateTypeOutput values.
// You can construct a concrete instance of `SslCertificateTypeInput` via:
//
//          SslCertificateTypeArgs{...}
type SslCertificateTypeInput interface {
	pulumi.Input

	ToSslCertificateTypeOutput() SslCertificateTypeOutput
	ToSslCertificateTypeOutputWithContext(context.Context) SslCertificateTypeOutput
}

var sslCertificateTypePtrType = reflect.TypeOf((**SslCertificateType)(nil)).Elem()

type SslCertificateTypePtrInput interface {
	pulumi.Input

	ToSslCertificateTypePtrOutput() SslCertificateTypePtrOutput
	ToSslCertificateTypePtrOutputWithContext(context.Context) SslCertificateTypePtrOutput
}

type sslCertificateTypePtr string

func SslCertificateTypePtr(v string) SslCertificateTypePtrInput {
	return (*sslCertificateTypePtr)(&v)
}

func (*sslCertificateTypePtr) ElementType() reflect.Type {
	return sslCertificateTypePtrType
}

func (in *sslCertificateTypePtr) ToSslCertificateTypePtrOutput() SslCertificateTypePtrOutput {
	return pulumi.ToOutput(in).(SslCertificateTypePtrOutput)
}

func (in *sslCertificateTypePtr) ToSslCertificateTypePtrOutputWithContext(ctx context.Context) SslCertificateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslCertificateTypePtrOutput)
}

// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
type SslPolicyMinTlsVersion string

const (
	// TLS 1.0
	SslPolicyMinTlsVersionTls10 = SslPolicyMinTlsVersion("TLS_1_0")
	// TLS 1.1
	SslPolicyMinTlsVersionTls11 = SslPolicyMinTlsVersion("TLS_1_1")
	// TLS 1.2
	SslPolicyMinTlsVersionTls12 = SslPolicyMinTlsVersion("TLS_1_2")
)

func (SslPolicyMinTlsVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPolicyMinTlsVersion)(nil)).Elem()
}

func (e SslPolicyMinTlsVersion) ToSslPolicyMinTlsVersionOutput() SslPolicyMinTlsVersionOutput {
	return pulumi.ToOutput(e).(SslPolicyMinTlsVersionOutput)
}

func (e SslPolicyMinTlsVersion) ToSslPolicyMinTlsVersionOutputWithContext(ctx context.Context) SslPolicyMinTlsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslPolicyMinTlsVersionOutput)
}

func (e SslPolicyMinTlsVersion) ToSslPolicyMinTlsVersionPtrOutput() SslPolicyMinTlsVersionPtrOutput {
	return e.ToSslPolicyMinTlsVersionPtrOutputWithContext(context.Background())
}

func (e SslPolicyMinTlsVersion) ToSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) SslPolicyMinTlsVersionPtrOutput {
	return SslPolicyMinTlsVersion(e).ToSslPolicyMinTlsVersionOutputWithContext(ctx).ToSslPolicyMinTlsVersionPtrOutputWithContext(ctx)
}

func (e SslPolicyMinTlsVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslPolicyMinTlsVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslPolicyMinTlsVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslPolicyMinTlsVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslPolicyMinTlsVersionOutput struct{ *pulumi.OutputState }

func (SslPolicyMinTlsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPolicyMinTlsVersion)(nil)).Elem()
}

func (o SslPolicyMinTlsVersionOutput) ToSslPolicyMinTlsVersionOutput() SslPolicyMinTlsVersionOutput {
	return o
}

func (o SslPolicyMinTlsVersionOutput) ToSslPolicyMinTlsVersionOutputWithContext(ctx context.Context) SslPolicyMinTlsVersionOutput {
	return o
}

func (o SslPolicyMinTlsVersionOutput) ToSslPolicyMinTlsVersionPtrOutput() SslPolicyMinTlsVersionPtrOutput {
	return o.ToSslPolicyMinTlsVersionPtrOutputWithContext(context.Background())
}

func (o SslPolicyMinTlsVersionOutput) ToSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) SslPolicyMinTlsVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslPolicyMinTlsVersion) *SslPolicyMinTlsVersion {
		return &v
	}).(SslPolicyMinTlsVersionPtrOutput)
}

func (o SslPolicyMinTlsVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslPolicyMinTlsVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslPolicyMinTlsVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslPolicyMinTlsVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslPolicyMinTlsVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslPolicyMinTlsVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslPolicyMinTlsVersionPtrOutput struct{ *pulumi.OutputState }

func (SslPolicyMinTlsVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslPolicyMinTlsVersion)(nil)).Elem()
}

func (o SslPolicyMinTlsVersionPtrOutput) ToSslPolicyMinTlsVersionPtrOutput() SslPolicyMinTlsVersionPtrOutput {
	return o
}

func (o SslPolicyMinTlsVersionPtrOutput) ToSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) SslPolicyMinTlsVersionPtrOutput {
	return o
}

func (o SslPolicyMinTlsVersionPtrOutput) Elem() SslPolicyMinTlsVersionOutput {
	return o.ApplyT(func(v *SslPolicyMinTlsVersion) SslPolicyMinTlsVersion {
		if v != nil {
			return *v
		}
		var ret SslPolicyMinTlsVersion
		return ret
	}).(SslPolicyMinTlsVersionOutput)
}

func (o SslPolicyMinTlsVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslPolicyMinTlsVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslPolicyMinTlsVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslPolicyMinTlsVersionInput is an input type that accepts SslPolicyMinTlsVersionArgs and SslPolicyMinTlsVersionOutput values.
// You can construct a concrete instance of `SslPolicyMinTlsVersionInput` via:
//
//          SslPolicyMinTlsVersionArgs{...}
type SslPolicyMinTlsVersionInput interface {
	pulumi.Input

	ToSslPolicyMinTlsVersionOutput() SslPolicyMinTlsVersionOutput
	ToSslPolicyMinTlsVersionOutputWithContext(context.Context) SslPolicyMinTlsVersionOutput
}

var sslPolicyMinTlsVersionPtrType = reflect.TypeOf((**SslPolicyMinTlsVersion)(nil)).Elem()

type SslPolicyMinTlsVersionPtrInput interface {
	pulumi.Input

	ToSslPolicyMinTlsVersionPtrOutput() SslPolicyMinTlsVersionPtrOutput
	ToSslPolicyMinTlsVersionPtrOutputWithContext(context.Context) SslPolicyMinTlsVersionPtrOutput
}

type sslPolicyMinTlsVersionPtr string

func SslPolicyMinTlsVersionPtr(v string) SslPolicyMinTlsVersionPtrInput {
	return (*sslPolicyMinTlsVersionPtr)(&v)
}

func (*sslPolicyMinTlsVersionPtr) ElementType() reflect.Type {
	return sslPolicyMinTlsVersionPtrType
}

func (in *sslPolicyMinTlsVersionPtr) ToSslPolicyMinTlsVersionPtrOutput() SslPolicyMinTlsVersionPtrOutput {
	return pulumi.ToOutput(in).(SslPolicyMinTlsVersionPtrOutput)
}

func (in *sslPolicyMinTlsVersionPtr) ToSslPolicyMinTlsVersionPtrOutputWithContext(ctx context.Context) SslPolicyMinTlsVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslPolicyMinTlsVersionPtrOutput)
}

// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
type SslPolicyProfile string

const (
	// Compatible profile. Allows the broadset set of clients, even those which support only out-of-date SSL features to negotiate with the load balancer.
	SslPolicyProfileCompatible = SslPolicyProfile("COMPATIBLE")
	// Custom profile. Allow only the set of allowed SSL features specified in the customFeatures field.
	SslPolicyProfileCustom = SslPolicyProfile("CUSTOM")
	// Modern profile. Supports a wide set of SSL features, allowing modern clients to negotiate SSL with the load balancer.
	SslPolicyProfileModern = SslPolicyProfile("MODERN")
	// Restricted profile. Supports a reduced set of SSL features, intended to meet stricter compliance requirements.
	SslPolicyProfileRestricted = SslPolicyProfile("RESTRICTED")
)

func (SslPolicyProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPolicyProfile)(nil)).Elem()
}

func (e SslPolicyProfile) ToSslPolicyProfileOutput() SslPolicyProfileOutput {
	return pulumi.ToOutput(e).(SslPolicyProfileOutput)
}

func (e SslPolicyProfile) ToSslPolicyProfileOutputWithContext(ctx context.Context) SslPolicyProfileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslPolicyProfileOutput)
}

func (e SslPolicyProfile) ToSslPolicyProfilePtrOutput() SslPolicyProfilePtrOutput {
	return e.ToSslPolicyProfilePtrOutputWithContext(context.Background())
}

func (e SslPolicyProfile) ToSslPolicyProfilePtrOutputWithContext(ctx context.Context) SslPolicyProfilePtrOutput {
	return SslPolicyProfile(e).ToSslPolicyProfileOutputWithContext(ctx).ToSslPolicyProfilePtrOutputWithContext(ctx)
}

func (e SslPolicyProfile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslPolicyProfile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslPolicyProfile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslPolicyProfile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslPolicyProfileOutput struct{ *pulumi.OutputState }

func (SslPolicyProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPolicyProfile)(nil)).Elem()
}

func (o SslPolicyProfileOutput) ToSslPolicyProfileOutput() SslPolicyProfileOutput {
	return o
}

func (o SslPolicyProfileOutput) ToSslPolicyProfileOutputWithContext(ctx context.Context) SslPolicyProfileOutput {
	return o
}

func (o SslPolicyProfileOutput) ToSslPolicyProfilePtrOutput() SslPolicyProfilePtrOutput {
	return o.ToSslPolicyProfilePtrOutputWithContext(context.Background())
}

func (o SslPolicyProfileOutput) ToSslPolicyProfilePtrOutputWithContext(ctx context.Context) SslPolicyProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslPolicyProfile) *SslPolicyProfile {
		return &v
	}).(SslPolicyProfilePtrOutput)
}

func (o SslPolicyProfileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslPolicyProfileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslPolicyProfile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslPolicyProfileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslPolicyProfileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslPolicyProfile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslPolicyProfilePtrOutput struct{ *pulumi.OutputState }

func (SslPolicyProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslPolicyProfile)(nil)).Elem()
}

func (o SslPolicyProfilePtrOutput) ToSslPolicyProfilePtrOutput() SslPolicyProfilePtrOutput {
	return o
}

func (o SslPolicyProfilePtrOutput) ToSslPolicyProfilePtrOutputWithContext(ctx context.Context) SslPolicyProfilePtrOutput {
	return o
}

func (o SslPolicyProfilePtrOutput) Elem() SslPolicyProfileOutput {
	return o.ApplyT(func(v *SslPolicyProfile) SslPolicyProfile {
		if v != nil {
			return *v
		}
		var ret SslPolicyProfile
		return ret
	}).(SslPolicyProfileOutput)
}

func (o SslPolicyProfilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslPolicyProfilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslPolicyProfile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslPolicyProfileInput is an input type that accepts SslPolicyProfileArgs and SslPolicyProfileOutput values.
// You can construct a concrete instance of `SslPolicyProfileInput` via:
//
//          SslPolicyProfileArgs{...}
type SslPolicyProfileInput interface {
	pulumi.Input

	ToSslPolicyProfileOutput() SslPolicyProfileOutput
	ToSslPolicyProfileOutputWithContext(context.Context) SslPolicyProfileOutput
}

var sslPolicyProfilePtrType = reflect.TypeOf((**SslPolicyProfile)(nil)).Elem()

type SslPolicyProfilePtrInput interface {
	pulumi.Input

	ToSslPolicyProfilePtrOutput() SslPolicyProfilePtrOutput
	ToSslPolicyProfilePtrOutputWithContext(context.Context) SslPolicyProfilePtrOutput
}

type sslPolicyProfilePtr string

func SslPolicyProfilePtr(v string) SslPolicyProfilePtrInput {
	return (*sslPolicyProfilePtr)(&v)
}

func (*sslPolicyProfilePtr) ElementType() reflect.Type {
	return sslPolicyProfilePtrType
}

func (in *sslPolicyProfilePtr) ToSslPolicyProfilePtrOutput() SslPolicyProfilePtrOutput {
	return pulumi.ToOutput(in).(SslPolicyProfilePtrOutput)
}

func (in *sslPolicyProfilePtr) ToSslPolicyProfilePtrOutputWithContext(ctx context.Context) SslPolicyProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslPolicyProfilePtrOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. Sets the aggregation interval for collecting flow logs. Increasing the interval time reduces the amount of generated flow logs for long-lasting connections. Default is an interval of 5 seconds per connection. Valid values: INTERVAL_5_SEC, INTERVAL_30_SEC, INTERVAL_1_MIN, INTERVAL_5_MIN, INTERVAL_10_MIN, INTERVAL_15_MIN.
type SubnetworkAggregationInterval string

const (
	SubnetworkAggregationIntervalInterval10Min = SubnetworkAggregationInterval("INTERVAL_10_MIN")
	SubnetworkAggregationIntervalInterval15Min = SubnetworkAggregationInterval("INTERVAL_15_MIN")
	SubnetworkAggregationIntervalInterval1Min  = SubnetworkAggregationInterval("INTERVAL_1_MIN")
	SubnetworkAggregationIntervalInterval30Sec = SubnetworkAggregationInterval("INTERVAL_30_SEC")
	SubnetworkAggregationIntervalInterval5Min  = SubnetworkAggregationInterval("INTERVAL_5_MIN")
	SubnetworkAggregationIntervalInterval5Sec  = SubnetworkAggregationInterval("INTERVAL_5_SEC")
)

func (SubnetworkAggregationInterval) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkAggregationInterval)(nil)).Elem()
}

func (e SubnetworkAggregationInterval) ToSubnetworkAggregationIntervalOutput() SubnetworkAggregationIntervalOutput {
	return pulumi.ToOutput(e).(SubnetworkAggregationIntervalOutput)
}

func (e SubnetworkAggregationInterval) ToSubnetworkAggregationIntervalOutputWithContext(ctx context.Context) SubnetworkAggregationIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkAggregationIntervalOutput)
}

func (e SubnetworkAggregationInterval) ToSubnetworkAggregationIntervalPtrOutput() SubnetworkAggregationIntervalPtrOutput {
	return e.ToSubnetworkAggregationIntervalPtrOutputWithContext(context.Background())
}

func (e SubnetworkAggregationInterval) ToSubnetworkAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkAggregationIntervalPtrOutput {
	return SubnetworkAggregationInterval(e).ToSubnetworkAggregationIntervalOutputWithContext(ctx).ToSubnetworkAggregationIntervalPtrOutputWithContext(ctx)
}

func (e SubnetworkAggregationInterval) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkAggregationInterval) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkAggregationInterval) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkAggregationInterval) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkAggregationIntervalOutput struct{ *pulumi.OutputState }

func (SubnetworkAggregationIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkAggregationInterval)(nil)).Elem()
}

func (o SubnetworkAggregationIntervalOutput) ToSubnetworkAggregationIntervalOutput() SubnetworkAggregationIntervalOutput {
	return o
}

func (o SubnetworkAggregationIntervalOutput) ToSubnetworkAggregationIntervalOutputWithContext(ctx context.Context) SubnetworkAggregationIntervalOutput {
	return o
}

func (o SubnetworkAggregationIntervalOutput) ToSubnetworkAggregationIntervalPtrOutput() SubnetworkAggregationIntervalPtrOutput {
	return o.ToSubnetworkAggregationIntervalPtrOutputWithContext(context.Background())
}

func (o SubnetworkAggregationIntervalOutput) ToSubnetworkAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkAggregationIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkAggregationInterval) *SubnetworkAggregationInterval {
		return &v
	}).(SubnetworkAggregationIntervalPtrOutput)
}

func (o SubnetworkAggregationIntervalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkAggregationIntervalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkAggregationInterval) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkAggregationIntervalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkAggregationIntervalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkAggregationInterval) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkAggregationIntervalPtrOutput struct{ *pulumi.OutputState }

func (SubnetworkAggregationIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkAggregationInterval)(nil)).Elem()
}

func (o SubnetworkAggregationIntervalPtrOutput) ToSubnetworkAggregationIntervalPtrOutput() SubnetworkAggregationIntervalPtrOutput {
	return o
}

func (o SubnetworkAggregationIntervalPtrOutput) ToSubnetworkAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkAggregationIntervalPtrOutput {
	return o
}

func (o SubnetworkAggregationIntervalPtrOutput) Elem() SubnetworkAggregationIntervalOutput {
	return o.ApplyT(func(v *SubnetworkAggregationInterval) SubnetworkAggregationInterval {
		if v != nil {
			return *v
		}
		var ret SubnetworkAggregationInterval
		return ret
	}).(SubnetworkAggregationIntervalOutput)
}

func (o SubnetworkAggregationIntervalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkAggregationIntervalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkAggregationInterval) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkAggregationIntervalInput is an input type that accepts SubnetworkAggregationIntervalArgs and SubnetworkAggregationIntervalOutput values.
// You can construct a concrete instance of `SubnetworkAggregationIntervalInput` via:
//
//          SubnetworkAggregationIntervalArgs{...}
type SubnetworkAggregationIntervalInput interface {
	pulumi.Input

	ToSubnetworkAggregationIntervalOutput() SubnetworkAggregationIntervalOutput
	ToSubnetworkAggregationIntervalOutputWithContext(context.Context) SubnetworkAggregationIntervalOutput
}

var subnetworkAggregationIntervalPtrType = reflect.TypeOf((**SubnetworkAggregationInterval)(nil)).Elem()

type SubnetworkAggregationIntervalPtrInput interface {
	pulumi.Input

	ToSubnetworkAggregationIntervalPtrOutput() SubnetworkAggregationIntervalPtrOutput
	ToSubnetworkAggregationIntervalPtrOutputWithContext(context.Context) SubnetworkAggregationIntervalPtrOutput
}

type subnetworkAggregationIntervalPtr string

func SubnetworkAggregationIntervalPtr(v string) SubnetworkAggregationIntervalPtrInput {
	return (*subnetworkAggregationIntervalPtr)(&v)
}

func (*subnetworkAggregationIntervalPtr) ElementType() reflect.Type {
	return subnetworkAggregationIntervalPtrType
}

func (in *subnetworkAggregationIntervalPtr) ToSubnetworkAggregationIntervalPtrOutput() SubnetworkAggregationIntervalPtrOutput {
	return pulumi.ToOutput(in).(SubnetworkAggregationIntervalPtrOutput)
}

func (in *subnetworkAggregationIntervalPtr) ToSubnetworkAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkAggregationIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkAggregationIntervalPtrOutput)
}

// The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet cannot enable direct path.
type SubnetworkIpv6AccessType string

const (
	// VMs on this subnet will be assigned IPv6 addresses that are accesible via the Internet, as well as the VPC network.
	SubnetworkIpv6AccessTypeExternal = SubnetworkIpv6AccessType("EXTERNAL")
	// VMs on this subnet will be assigned IPv6 addresses that are only accessible over the VPC network.
	SubnetworkIpv6AccessTypeInternal = SubnetworkIpv6AccessType("INTERNAL")
)

func (SubnetworkIpv6AccessType) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkIpv6AccessType)(nil)).Elem()
}

func (e SubnetworkIpv6AccessType) ToSubnetworkIpv6AccessTypeOutput() SubnetworkIpv6AccessTypeOutput {
	return pulumi.ToOutput(e).(SubnetworkIpv6AccessTypeOutput)
}

func (e SubnetworkIpv6AccessType) ToSubnetworkIpv6AccessTypeOutputWithContext(ctx context.Context) SubnetworkIpv6AccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkIpv6AccessTypeOutput)
}

func (e SubnetworkIpv6AccessType) ToSubnetworkIpv6AccessTypePtrOutput() SubnetworkIpv6AccessTypePtrOutput {
	return e.ToSubnetworkIpv6AccessTypePtrOutputWithContext(context.Background())
}

func (e SubnetworkIpv6AccessType) ToSubnetworkIpv6AccessTypePtrOutputWithContext(ctx context.Context) SubnetworkIpv6AccessTypePtrOutput {
	return SubnetworkIpv6AccessType(e).ToSubnetworkIpv6AccessTypeOutputWithContext(ctx).ToSubnetworkIpv6AccessTypePtrOutputWithContext(ctx)
}

func (e SubnetworkIpv6AccessType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkIpv6AccessType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkIpv6AccessType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkIpv6AccessType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkIpv6AccessTypeOutput struct{ *pulumi.OutputState }

func (SubnetworkIpv6AccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkIpv6AccessType)(nil)).Elem()
}

func (o SubnetworkIpv6AccessTypeOutput) ToSubnetworkIpv6AccessTypeOutput() SubnetworkIpv6AccessTypeOutput {
	return o
}

func (o SubnetworkIpv6AccessTypeOutput) ToSubnetworkIpv6AccessTypeOutputWithContext(ctx context.Context) SubnetworkIpv6AccessTypeOutput {
	return o
}

func (o SubnetworkIpv6AccessTypeOutput) ToSubnetworkIpv6AccessTypePtrOutput() SubnetworkIpv6AccessTypePtrOutput {
	return o.ToSubnetworkIpv6AccessTypePtrOutputWithContext(context.Background())
}

func (o SubnetworkIpv6AccessTypeOutput) ToSubnetworkIpv6AccessTypePtrOutputWithContext(ctx context.Context) SubnetworkIpv6AccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkIpv6AccessType) *SubnetworkIpv6AccessType {
		return &v
	}).(SubnetworkIpv6AccessTypePtrOutput)
}

func (o SubnetworkIpv6AccessTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkIpv6AccessTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkIpv6AccessType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkIpv6AccessTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkIpv6AccessTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkIpv6AccessType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkIpv6AccessTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetworkIpv6AccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkIpv6AccessType)(nil)).Elem()
}

func (o SubnetworkIpv6AccessTypePtrOutput) ToSubnetworkIpv6AccessTypePtrOutput() SubnetworkIpv6AccessTypePtrOutput {
	return o
}

func (o SubnetworkIpv6AccessTypePtrOutput) ToSubnetworkIpv6AccessTypePtrOutputWithContext(ctx context.Context) SubnetworkIpv6AccessTypePtrOutput {
	return o
}

func (o SubnetworkIpv6AccessTypePtrOutput) Elem() SubnetworkIpv6AccessTypeOutput {
	return o.ApplyT(func(v *SubnetworkIpv6AccessType) SubnetworkIpv6AccessType {
		if v != nil {
			return *v
		}
		var ret SubnetworkIpv6AccessType
		return ret
	}).(SubnetworkIpv6AccessTypeOutput)
}

func (o SubnetworkIpv6AccessTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkIpv6AccessTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkIpv6AccessType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkIpv6AccessTypeInput is an input type that accepts SubnetworkIpv6AccessTypeArgs and SubnetworkIpv6AccessTypeOutput values.
// You can construct a concrete instance of `SubnetworkIpv6AccessTypeInput` via:
//
//          SubnetworkIpv6AccessTypeArgs{...}
type SubnetworkIpv6AccessTypeInput interface {
	pulumi.Input

	ToSubnetworkIpv6AccessTypeOutput() SubnetworkIpv6AccessTypeOutput
	ToSubnetworkIpv6AccessTypeOutputWithContext(context.Context) SubnetworkIpv6AccessTypeOutput
}

var subnetworkIpv6AccessTypePtrType = reflect.TypeOf((**SubnetworkIpv6AccessType)(nil)).Elem()

type SubnetworkIpv6AccessTypePtrInput interface {
	pulumi.Input

	ToSubnetworkIpv6AccessTypePtrOutput() SubnetworkIpv6AccessTypePtrOutput
	ToSubnetworkIpv6AccessTypePtrOutputWithContext(context.Context) SubnetworkIpv6AccessTypePtrOutput
}

type subnetworkIpv6AccessTypePtr string

func SubnetworkIpv6AccessTypePtr(v string) SubnetworkIpv6AccessTypePtrInput {
	return (*subnetworkIpv6AccessTypePtr)(&v)
}

func (*subnetworkIpv6AccessTypePtr) ElementType() reflect.Type {
	return subnetworkIpv6AccessTypePtrType
}

func (in *subnetworkIpv6AccessTypePtr) ToSubnetworkIpv6AccessTypePtrOutput() SubnetworkIpv6AccessTypePtrOutput {
	return pulumi.ToOutput(in).(SubnetworkIpv6AccessTypePtrOutput)
}

func (in *subnetworkIpv6AccessTypePtr) ToSubnetworkIpv6AccessTypePtrOutputWithContext(ctx context.Context) SubnetworkIpv6AccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkIpv6AccessTypePtrOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
type SubnetworkLogConfigAggregationInterval string

const (
	SubnetworkLogConfigAggregationIntervalInterval10Min = SubnetworkLogConfigAggregationInterval("INTERVAL_10_MIN")
	SubnetworkLogConfigAggregationIntervalInterval15Min = SubnetworkLogConfigAggregationInterval("INTERVAL_15_MIN")
	SubnetworkLogConfigAggregationIntervalInterval1Min  = SubnetworkLogConfigAggregationInterval("INTERVAL_1_MIN")
	SubnetworkLogConfigAggregationIntervalInterval30Sec = SubnetworkLogConfigAggregationInterval("INTERVAL_30_SEC")
	SubnetworkLogConfigAggregationIntervalInterval5Min  = SubnetworkLogConfigAggregationInterval("INTERVAL_5_MIN")
	SubnetworkLogConfigAggregationIntervalInterval5Sec  = SubnetworkLogConfigAggregationInterval("INTERVAL_5_SEC")
)

func (SubnetworkLogConfigAggregationInterval) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkLogConfigAggregationInterval)(nil)).Elem()
}

func (e SubnetworkLogConfigAggregationInterval) ToSubnetworkLogConfigAggregationIntervalOutput() SubnetworkLogConfigAggregationIntervalOutput {
	return pulumi.ToOutput(e).(SubnetworkLogConfigAggregationIntervalOutput)
}

func (e SubnetworkLogConfigAggregationInterval) ToSubnetworkLogConfigAggregationIntervalOutputWithContext(ctx context.Context) SubnetworkLogConfigAggregationIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkLogConfigAggregationIntervalOutput)
}

func (e SubnetworkLogConfigAggregationInterval) ToSubnetworkLogConfigAggregationIntervalPtrOutput() SubnetworkLogConfigAggregationIntervalPtrOutput {
	return e.ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(context.Background())
}

func (e SubnetworkLogConfigAggregationInterval) ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigAggregationIntervalPtrOutput {
	return SubnetworkLogConfigAggregationInterval(e).ToSubnetworkLogConfigAggregationIntervalOutputWithContext(ctx).ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(ctx)
}

func (e SubnetworkLogConfigAggregationInterval) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkLogConfigAggregationInterval) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkLogConfigAggregationInterval) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkLogConfigAggregationInterval) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkLogConfigAggregationIntervalOutput struct{ *pulumi.OutputState }

func (SubnetworkLogConfigAggregationIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkLogConfigAggregationInterval)(nil)).Elem()
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToSubnetworkLogConfigAggregationIntervalOutput() SubnetworkLogConfigAggregationIntervalOutput {
	return o
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToSubnetworkLogConfigAggregationIntervalOutputWithContext(ctx context.Context) SubnetworkLogConfigAggregationIntervalOutput {
	return o
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToSubnetworkLogConfigAggregationIntervalPtrOutput() SubnetworkLogConfigAggregationIntervalPtrOutput {
	return o.ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigAggregationIntervalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkLogConfigAggregationInterval) *SubnetworkLogConfigAggregationInterval {
		return &v
	}).(SubnetworkLogConfigAggregationIntervalPtrOutput)
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkLogConfigAggregationInterval) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigAggregationIntervalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkLogConfigAggregationInterval) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkLogConfigAggregationIntervalPtrOutput struct{ *pulumi.OutputState }

func (SubnetworkLogConfigAggregationIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkLogConfigAggregationInterval)(nil)).Elem()
}

func (o SubnetworkLogConfigAggregationIntervalPtrOutput) ToSubnetworkLogConfigAggregationIntervalPtrOutput() SubnetworkLogConfigAggregationIntervalPtrOutput {
	return o
}

func (o SubnetworkLogConfigAggregationIntervalPtrOutput) ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigAggregationIntervalPtrOutput {
	return o
}

func (o SubnetworkLogConfigAggregationIntervalPtrOutput) Elem() SubnetworkLogConfigAggregationIntervalOutput {
	return o.ApplyT(func(v *SubnetworkLogConfigAggregationInterval) SubnetworkLogConfigAggregationInterval {
		if v != nil {
			return *v
		}
		var ret SubnetworkLogConfigAggregationInterval
		return ret
	}).(SubnetworkLogConfigAggregationIntervalOutput)
}

func (o SubnetworkLogConfigAggregationIntervalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigAggregationIntervalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkLogConfigAggregationInterval) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkLogConfigAggregationIntervalInput is an input type that accepts SubnetworkLogConfigAggregationIntervalArgs and SubnetworkLogConfigAggregationIntervalOutput values.
// You can construct a concrete instance of `SubnetworkLogConfigAggregationIntervalInput` via:
//
//          SubnetworkLogConfigAggregationIntervalArgs{...}
type SubnetworkLogConfigAggregationIntervalInput interface {
	pulumi.Input

	ToSubnetworkLogConfigAggregationIntervalOutput() SubnetworkLogConfigAggregationIntervalOutput
	ToSubnetworkLogConfigAggregationIntervalOutputWithContext(context.Context) SubnetworkLogConfigAggregationIntervalOutput
}

var subnetworkLogConfigAggregationIntervalPtrType = reflect.TypeOf((**SubnetworkLogConfigAggregationInterval)(nil)).Elem()

type SubnetworkLogConfigAggregationIntervalPtrInput interface {
	pulumi.Input

	ToSubnetworkLogConfigAggregationIntervalPtrOutput() SubnetworkLogConfigAggregationIntervalPtrOutput
	ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(context.Context) SubnetworkLogConfigAggregationIntervalPtrOutput
}

type subnetworkLogConfigAggregationIntervalPtr string

func SubnetworkLogConfigAggregationIntervalPtr(v string) SubnetworkLogConfigAggregationIntervalPtrInput {
	return (*subnetworkLogConfigAggregationIntervalPtr)(&v)
}

func (*subnetworkLogConfigAggregationIntervalPtr) ElementType() reflect.Type {
	return subnetworkLogConfigAggregationIntervalPtrType
}

func (in *subnetworkLogConfigAggregationIntervalPtr) ToSubnetworkLogConfigAggregationIntervalPtrOutput() SubnetworkLogConfigAggregationIntervalPtrOutput {
	return pulumi.ToOutput(in).(SubnetworkLogConfigAggregationIntervalPtrOutput)
}

func (in *subnetworkLogConfigAggregationIntervalPtr) ToSubnetworkLogConfigAggregationIntervalPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigAggregationIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkLogConfigAggregationIntervalPtrOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
type SubnetworkLogConfigMetadata string

const (
	SubnetworkLogConfigMetadataCustomMetadata     = SubnetworkLogConfigMetadata("CUSTOM_METADATA")
	SubnetworkLogConfigMetadataExcludeAllMetadata = SubnetworkLogConfigMetadata("EXCLUDE_ALL_METADATA")
	SubnetworkLogConfigMetadataIncludeAllMetadata = SubnetworkLogConfigMetadata("INCLUDE_ALL_METADATA")
)

func (SubnetworkLogConfigMetadata) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkLogConfigMetadata)(nil)).Elem()
}

func (e SubnetworkLogConfigMetadata) ToSubnetworkLogConfigMetadataOutput() SubnetworkLogConfigMetadataOutput {
	return pulumi.ToOutput(e).(SubnetworkLogConfigMetadataOutput)
}

func (e SubnetworkLogConfigMetadata) ToSubnetworkLogConfigMetadataOutputWithContext(ctx context.Context) SubnetworkLogConfigMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkLogConfigMetadataOutput)
}

func (e SubnetworkLogConfigMetadata) ToSubnetworkLogConfigMetadataPtrOutput() SubnetworkLogConfigMetadataPtrOutput {
	return e.ToSubnetworkLogConfigMetadataPtrOutputWithContext(context.Background())
}

func (e SubnetworkLogConfigMetadata) ToSubnetworkLogConfigMetadataPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigMetadataPtrOutput {
	return SubnetworkLogConfigMetadata(e).ToSubnetworkLogConfigMetadataOutputWithContext(ctx).ToSubnetworkLogConfigMetadataPtrOutputWithContext(ctx)
}

func (e SubnetworkLogConfigMetadata) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkLogConfigMetadata) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkLogConfigMetadata) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkLogConfigMetadata) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkLogConfigMetadataOutput struct{ *pulumi.OutputState }

func (SubnetworkLogConfigMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkLogConfigMetadata)(nil)).Elem()
}

func (o SubnetworkLogConfigMetadataOutput) ToSubnetworkLogConfigMetadataOutput() SubnetworkLogConfigMetadataOutput {
	return o
}

func (o SubnetworkLogConfigMetadataOutput) ToSubnetworkLogConfigMetadataOutputWithContext(ctx context.Context) SubnetworkLogConfigMetadataOutput {
	return o
}

func (o SubnetworkLogConfigMetadataOutput) ToSubnetworkLogConfigMetadataPtrOutput() SubnetworkLogConfigMetadataPtrOutput {
	return o.ToSubnetworkLogConfigMetadataPtrOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigMetadataOutput) ToSubnetworkLogConfigMetadataPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkLogConfigMetadata) *SubnetworkLogConfigMetadata {
		return &v
	}).(SubnetworkLogConfigMetadataPtrOutput)
}

func (o SubnetworkLogConfigMetadataOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigMetadataOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkLogConfigMetadata) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkLogConfigMetadataOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigMetadataOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkLogConfigMetadata) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkLogConfigMetadataPtrOutput struct{ *pulumi.OutputState }

func (SubnetworkLogConfigMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkLogConfigMetadata)(nil)).Elem()
}

func (o SubnetworkLogConfigMetadataPtrOutput) ToSubnetworkLogConfigMetadataPtrOutput() SubnetworkLogConfigMetadataPtrOutput {
	return o
}

func (o SubnetworkLogConfigMetadataPtrOutput) ToSubnetworkLogConfigMetadataPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigMetadataPtrOutput {
	return o
}

func (o SubnetworkLogConfigMetadataPtrOutput) Elem() SubnetworkLogConfigMetadataOutput {
	return o.ApplyT(func(v *SubnetworkLogConfigMetadata) SubnetworkLogConfigMetadata {
		if v != nil {
			return *v
		}
		var ret SubnetworkLogConfigMetadata
		return ret
	}).(SubnetworkLogConfigMetadataOutput)
}

func (o SubnetworkLogConfigMetadataPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigMetadataPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkLogConfigMetadata) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkLogConfigMetadataInput is an input type that accepts SubnetworkLogConfigMetadataArgs and SubnetworkLogConfigMetadataOutput values.
// You can construct a concrete instance of `SubnetworkLogConfigMetadataInput` via:
//
//          SubnetworkLogConfigMetadataArgs{...}
type SubnetworkLogConfigMetadataInput interface {
	pulumi.Input

	ToSubnetworkLogConfigMetadataOutput() SubnetworkLogConfigMetadataOutput
	ToSubnetworkLogConfigMetadataOutputWithContext(context.Context) SubnetworkLogConfigMetadataOutput
}

var subnetworkLogConfigMetadataPtrType = reflect.TypeOf((**SubnetworkLogConfigMetadata)(nil)).Elem()

type SubnetworkLogConfigMetadataPtrInput interface {
	pulumi.Input

	ToSubnetworkLogConfigMetadataPtrOutput() SubnetworkLogConfigMetadataPtrOutput
	ToSubnetworkLogConfigMetadataPtrOutputWithContext(context.Context) SubnetworkLogConfigMetadataPtrOutput
}

type subnetworkLogConfigMetadataPtr string

func SubnetworkLogConfigMetadataPtr(v string) SubnetworkLogConfigMetadataPtrInput {
	return (*subnetworkLogConfigMetadataPtr)(&v)
}

func (*subnetworkLogConfigMetadataPtr) ElementType() reflect.Type {
	return subnetworkLogConfigMetadataPtrType
}

func (in *subnetworkLogConfigMetadataPtr) ToSubnetworkLogConfigMetadataPtrOutput() SubnetworkLogConfigMetadataPtrOutput {
	return pulumi.ToOutput(in).(SubnetworkLogConfigMetadataPtrOutput)
}

func (in *subnetworkLogConfigMetadataPtr) ToSubnetworkLogConfigMetadataPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkLogConfigMetadataPtrOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. Configures whether metadata fields should be added to the reported VPC flow logs. Options are INCLUDE_ALL_METADATA, EXCLUDE_ALL_METADATA, and CUSTOM_METADATA. Default is EXCLUDE_ALL_METADATA.
type SubnetworkMetadata string

const (
	SubnetworkMetadataExcludeAllMetadata = SubnetworkMetadata("EXCLUDE_ALL_METADATA")
	SubnetworkMetadataIncludeAllMetadata = SubnetworkMetadata("INCLUDE_ALL_METADATA")
)

func (SubnetworkMetadata) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkMetadata)(nil)).Elem()
}

func (e SubnetworkMetadata) ToSubnetworkMetadataOutput() SubnetworkMetadataOutput {
	return pulumi.ToOutput(e).(SubnetworkMetadataOutput)
}

func (e SubnetworkMetadata) ToSubnetworkMetadataOutputWithContext(ctx context.Context) SubnetworkMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkMetadataOutput)
}

func (e SubnetworkMetadata) ToSubnetworkMetadataPtrOutput() SubnetworkMetadataPtrOutput {
	return e.ToSubnetworkMetadataPtrOutputWithContext(context.Background())
}

func (e SubnetworkMetadata) ToSubnetworkMetadataPtrOutputWithContext(ctx context.Context) SubnetworkMetadataPtrOutput {
	return SubnetworkMetadata(e).ToSubnetworkMetadataOutputWithContext(ctx).ToSubnetworkMetadataPtrOutputWithContext(ctx)
}

func (e SubnetworkMetadata) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkMetadata) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkMetadata) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkMetadata) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkMetadataOutput struct{ *pulumi.OutputState }

func (SubnetworkMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkMetadata)(nil)).Elem()
}

func (o SubnetworkMetadataOutput) ToSubnetworkMetadataOutput() SubnetworkMetadataOutput {
	return o
}

func (o SubnetworkMetadataOutput) ToSubnetworkMetadataOutputWithContext(ctx context.Context) SubnetworkMetadataOutput {
	return o
}

func (o SubnetworkMetadataOutput) ToSubnetworkMetadataPtrOutput() SubnetworkMetadataPtrOutput {
	return o.ToSubnetworkMetadataPtrOutputWithContext(context.Background())
}

func (o SubnetworkMetadataOutput) ToSubnetworkMetadataPtrOutputWithContext(ctx context.Context) SubnetworkMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkMetadata) *SubnetworkMetadata {
		return &v
	}).(SubnetworkMetadataPtrOutput)
}

func (o SubnetworkMetadataOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkMetadataOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkMetadata) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkMetadataOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkMetadataOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkMetadata) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkMetadataPtrOutput struct{ *pulumi.OutputState }

func (SubnetworkMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkMetadata)(nil)).Elem()
}

func (o SubnetworkMetadataPtrOutput) ToSubnetworkMetadataPtrOutput() SubnetworkMetadataPtrOutput {
	return o
}

func (o SubnetworkMetadataPtrOutput) ToSubnetworkMetadataPtrOutputWithContext(ctx context.Context) SubnetworkMetadataPtrOutput {
	return o
}

func (o SubnetworkMetadataPtrOutput) Elem() SubnetworkMetadataOutput {
	return o.ApplyT(func(v *SubnetworkMetadata) SubnetworkMetadata {
		if v != nil {
			return *v
		}
		var ret SubnetworkMetadata
		return ret
	}).(SubnetworkMetadataOutput)
}

func (o SubnetworkMetadataPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkMetadataPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkMetadata) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkMetadataInput is an input type that accepts SubnetworkMetadataArgs and SubnetworkMetadataOutput values.
// You can construct a concrete instance of `SubnetworkMetadataInput` via:
//
//          SubnetworkMetadataArgs{...}
type SubnetworkMetadataInput interface {
	pulumi.Input

	ToSubnetworkMetadataOutput() SubnetworkMetadataOutput
	ToSubnetworkMetadataOutputWithContext(context.Context) SubnetworkMetadataOutput
}

var subnetworkMetadataPtrType = reflect.TypeOf((**SubnetworkMetadata)(nil)).Elem()

type SubnetworkMetadataPtrInput interface {
	pulumi.Input

	ToSubnetworkMetadataPtrOutput() SubnetworkMetadataPtrOutput
	ToSubnetworkMetadataPtrOutputWithContext(context.Context) SubnetworkMetadataPtrOutput
}

type subnetworkMetadataPtr string

func SubnetworkMetadataPtr(v string) SubnetworkMetadataPtrInput {
	return (*subnetworkMetadataPtr)(&v)
}

func (*subnetworkMetadataPtr) ElementType() reflect.Type {
	return subnetworkMetadataPtrType
}

func (in *subnetworkMetadataPtr) ToSubnetworkMetadataPtrOutput() SubnetworkMetadataPtrOutput {
	return pulumi.ToOutput(in).(SubnetworkMetadataPtrOutput)
}

func (in *subnetworkMetadataPtr) ToSubnetworkMetadataPtrOutputWithContext(ctx context.Context) SubnetworkMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkMetadataPtrOutput)
}

// The private IPv6 google access type for the VMs in this subnet. This is an expanded field of enablePrivateV6Access. If both fields are set, privateIpv6GoogleAccess will take priority. This field can be both set at resource creation time and updated using patch.
type SubnetworkPrivateIpv6GoogleAccess string

const (
	// Disable private IPv6 access to/from Google services.
	SubnetworkPrivateIpv6GoogleAccessDisableGoogleAccess = SubnetworkPrivateIpv6GoogleAccess("DISABLE_GOOGLE_ACCESS")
	// Bidirectional private IPv6 access to/from Google services.
	SubnetworkPrivateIpv6GoogleAccessEnableBidirectionalAccessToGoogle = SubnetworkPrivateIpv6GoogleAccess("ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE")
	// Outbound private IPv6 access from VMs in this subnet to Google services.
	SubnetworkPrivateIpv6GoogleAccessEnableOutboundVmAccessToGoogle = SubnetworkPrivateIpv6GoogleAccess("ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE")
	// Deprecated in favor of enable PrivateIpv6GoogleAccess on instance directly. Outbound private IPv6 access is enabled per VM based on Service Accounts. This applies only to VMs with primary service accounts as listed in private_ipv6_google_access_service_account.
	SubnetworkPrivateIpv6GoogleAccessEnableOutboundVmAccessToGoogleForServiceAccounts = SubnetworkPrivateIpv6GoogleAccess("ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE_FOR_SERVICE_ACCOUNTS")
)

func (SubnetworkPrivateIpv6GoogleAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToSubnetworkPrivateIpv6GoogleAccessOutput() SubnetworkPrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutput(e).(SubnetworkPrivateIpv6GoogleAccessOutput)
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToSubnetworkPrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) SubnetworkPrivateIpv6GoogleAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkPrivateIpv6GoogleAccessOutput)
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToSubnetworkPrivateIpv6GoogleAccessPtrOutput() SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return e.ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return SubnetworkPrivateIpv6GoogleAccess(e).ToSubnetworkPrivateIpv6GoogleAccessOutputWithContext(ctx).ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(ctx)
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkPrivateIpv6GoogleAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkPrivateIpv6GoogleAccessOutput struct{ *pulumi.OutputState }

func (SubnetworkPrivateIpv6GoogleAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToSubnetworkPrivateIpv6GoogleAccessOutput() SubnetworkPrivateIpv6GoogleAccessOutput {
	return o
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToSubnetworkPrivateIpv6GoogleAccessOutputWithContext(ctx context.Context) SubnetworkPrivateIpv6GoogleAccessOutput {
	return o
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToSubnetworkPrivateIpv6GoogleAccessPtrOutput() SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return o.ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(context.Background())
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkPrivateIpv6GoogleAccess) *SubnetworkPrivateIpv6GoogleAccess {
		return &v
	}).(SubnetworkPrivateIpv6GoogleAccessPtrOutput)
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkPrivateIpv6GoogleAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkPrivateIpv6GoogleAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkPrivateIpv6GoogleAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkPrivateIpv6GoogleAccessPtrOutput struct{ *pulumi.OutputState }

func (SubnetworkPrivateIpv6GoogleAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkPrivateIpv6GoogleAccess)(nil)).Elem()
}

func (o SubnetworkPrivateIpv6GoogleAccessPtrOutput) ToSubnetworkPrivateIpv6GoogleAccessPtrOutput() SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o SubnetworkPrivateIpv6GoogleAccessPtrOutput) ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return o
}

func (o SubnetworkPrivateIpv6GoogleAccessPtrOutput) Elem() SubnetworkPrivateIpv6GoogleAccessOutput {
	return o.ApplyT(func(v *SubnetworkPrivateIpv6GoogleAccess) SubnetworkPrivateIpv6GoogleAccess {
		if v != nil {
			return *v
		}
		var ret SubnetworkPrivateIpv6GoogleAccess
		return ret
	}).(SubnetworkPrivateIpv6GoogleAccessOutput)
}

func (o SubnetworkPrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkPrivateIpv6GoogleAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkPrivateIpv6GoogleAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkPrivateIpv6GoogleAccessInput is an input type that accepts SubnetworkPrivateIpv6GoogleAccessArgs and SubnetworkPrivateIpv6GoogleAccessOutput values.
// You can construct a concrete instance of `SubnetworkPrivateIpv6GoogleAccessInput` via:
//
//          SubnetworkPrivateIpv6GoogleAccessArgs{...}
type SubnetworkPrivateIpv6GoogleAccessInput interface {
	pulumi.Input

	ToSubnetworkPrivateIpv6GoogleAccessOutput() SubnetworkPrivateIpv6GoogleAccessOutput
	ToSubnetworkPrivateIpv6GoogleAccessOutputWithContext(context.Context) SubnetworkPrivateIpv6GoogleAccessOutput
}

var subnetworkPrivateIpv6GoogleAccessPtrType = reflect.TypeOf((**SubnetworkPrivateIpv6GoogleAccess)(nil)).Elem()

type SubnetworkPrivateIpv6GoogleAccessPtrInput interface {
	pulumi.Input

	ToSubnetworkPrivateIpv6GoogleAccessPtrOutput() SubnetworkPrivateIpv6GoogleAccessPtrOutput
	ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(context.Context) SubnetworkPrivateIpv6GoogleAccessPtrOutput
}

type subnetworkPrivateIpv6GoogleAccessPtr string

func SubnetworkPrivateIpv6GoogleAccessPtr(v string) SubnetworkPrivateIpv6GoogleAccessPtrInput {
	return (*subnetworkPrivateIpv6GoogleAccessPtr)(&v)
}

func (*subnetworkPrivateIpv6GoogleAccessPtr) ElementType() reflect.Type {
	return subnetworkPrivateIpv6GoogleAccessPtrType
}

func (in *subnetworkPrivateIpv6GoogleAccessPtr) ToSubnetworkPrivateIpv6GoogleAccessPtrOutput() SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutput(in).(SubnetworkPrivateIpv6GoogleAccessPtrOutput)
}

func (in *subnetworkPrivateIpv6GoogleAccessPtr) ToSubnetworkPrivateIpv6GoogleAccessPtrOutputWithContext(ctx context.Context) SubnetworkPrivateIpv6GoogleAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkPrivateIpv6GoogleAccessPtrOutput)
}

// The purpose of the resource. This field can be either PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
type SubnetworkPurpose string

const (
	// Subnetwork used to aggregate multiple private subnetworks.
	SubnetworkPurposeAggregate = SubnetworkPurpose("AGGREGATE")
	// Subnetworks created for Cloud Extension Machines.
	SubnetworkPurposeCloudExtension = SubnetworkPurpose("CLOUD_EXTENSION")
	// Subnet reserved for Global Internal HTTP(S) Load Balancing.
	SubnetworkPurposeGlobalManagedProxy = SubnetworkPurpose("GLOBAL_MANAGED_PROXY")
	// Subnet reserved for Internal HTTP(S) Load Balancing.
	SubnetworkPurposeInternalHttpsLoadBalancer = SubnetworkPurpose("INTERNAL_HTTPS_LOAD_BALANCER")
	// Regular user created or automatically created subnet.
	SubnetworkPurposePrivate = SubnetworkPurpose("PRIVATE")
	// Subnetwork used as source range for Private NAT Gateways.
	SubnetworkPurposePrivateNat = SubnetworkPurpose("PRIVATE_NAT")
	// Regular user created or automatically created subnet.
	SubnetworkPurposePrivateRfc1918 = SubnetworkPurpose("PRIVATE_RFC_1918")
	// Subnetworks created for Private Service Connect in the producer network.
	SubnetworkPurposePrivateServiceConnect = SubnetworkPurpose("PRIVATE_SERVICE_CONNECT")
	// Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
	SubnetworkPurposeRegionalManagedProxy = SubnetworkPurpose("REGIONAL_MANAGED_PROXY")
)

func (SubnetworkPurpose) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkPurpose)(nil)).Elem()
}

func (e SubnetworkPurpose) ToSubnetworkPurposeOutput() SubnetworkPurposeOutput {
	return pulumi.ToOutput(e).(SubnetworkPurposeOutput)
}

func (e SubnetworkPurpose) ToSubnetworkPurposeOutputWithContext(ctx context.Context) SubnetworkPurposeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkPurposeOutput)
}

func (e SubnetworkPurpose) ToSubnetworkPurposePtrOutput() SubnetworkPurposePtrOutput {
	return e.ToSubnetworkPurposePtrOutputWithContext(context.Background())
}

func (e SubnetworkPurpose) ToSubnetworkPurposePtrOutputWithContext(ctx context.Context) SubnetworkPurposePtrOutput {
	return SubnetworkPurpose(e).ToSubnetworkPurposeOutputWithContext(ctx).ToSubnetworkPurposePtrOutputWithContext(ctx)
}

func (e SubnetworkPurpose) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkPurpose) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkPurpose) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkPurpose) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkPurposeOutput struct{ *pulumi.OutputState }

func (SubnetworkPurposeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkPurpose)(nil)).Elem()
}

func (o SubnetworkPurposeOutput) ToSubnetworkPurposeOutput() SubnetworkPurposeOutput {
	return o
}

func (o SubnetworkPurposeOutput) ToSubnetworkPurposeOutputWithContext(ctx context.Context) SubnetworkPurposeOutput {
	return o
}

func (o SubnetworkPurposeOutput) ToSubnetworkPurposePtrOutput() SubnetworkPurposePtrOutput {
	return o.ToSubnetworkPurposePtrOutputWithContext(context.Background())
}

func (o SubnetworkPurposeOutput) ToSubnetworkPurposePtrOutputWithContext(ctx context.Context) SubnetworkPurposePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkPurpose) *SubnetworkPurpose {
		return &v
	}).(SubnetworkPurposePtrOutput)
}

func (o SubnetworkPurposeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkPurposeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkPurpose) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkPurposeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkPurposeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkPurpose) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkPurposePtrOutput struct{ *pulumi.OutputState }

func (SubnetworkPurposePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkPurpose)(nil)).Elem()
}

func (o SubnetworkPurposePtrOutput) ToSubnetworkPurposePtrOutput() SubnetworkPurposePtrOutput {
	return o
}

func (o SubnetworkPurposePtrOutput) ToSubnetworkPurposePtrOutputWithContext(ctx context.Context) SubnetworkPurposePtrOutput {
	return o
}

func (o SubnetworkPurposePtrOutput) Elem() SubnetworkPurposeOutput {
	return o.ApplyT(func(v *SubnetworkPurpose) SubnetworkPurpose {
		if v != nil {
			return *v
		}
		var ret SubnetworkPurpose
		return ret
	}).(SubnetworkPurposeOutput)
}

func (o SubnetworkPurposePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkPurposePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkPurpose) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkPurposeInput is an input type that accepts SubnetworkPurposeArgs and SubnetworkPurposeOutput values.
// You can construct a concrete instance of `SubnetworkPurposeInput` via:
//
//          SubnetworkPurposeArgs{...}
type SubnetworkPurposeInput interface {
	pulumi.Input

	ToSubnetworkPurposeOutput() SubnetworkPurposeOutput
	ToSubnetworkPurposeOutputWithContext(context.Context) SubnetworkPurposeOutput
}

var subnetworkPurposePtrType = reflect.TypeOf((**SubnetworkPurpose)(nil)).Elem()

type SubnetworkPurposePtrInput interface {
	pulumi.Input

	ToSubnetworkPurposePtrOutput() SubnetworkPurposePtrOutput
	ToSubnetworkPurposePtrOutputWithContext(context.Context) SubnetworkPurposePtrOutput
}

type subnetworkPurposePtr string

func SubnetworkPurposePtr(v string) SubnetworkPurposePtrInput {
	return (*subnetworkPurposePtr)(&v)
}

func (*subnetworkPurposePtr) ElementType() reflect.Type {
	return subnetworkPurposePtrType
}

func (in *subnetworkPurposePtr) ToSubnetworkPurposePtrOutput() SubnetworkPurposePtrOutput {
	return pulumi.ToOutput(in).(SubnetworkPurposePtrOutput)
}

func (in *subnetworkPurposePtr) ToSubnetworkPurposePtrOutputWithContext(ctx context.Context) SubnetworkPurposePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkPurposePtrOutput)
}

// The role of subnetwork. Currently, this field is only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request.
type SubnetworkRole string

const (
	// The ACTIVE subnet that is currently used.
	SubnetworkRoleActive = SubnetworkRole("ACTIVE")
	// The BACKUP subnet that could be promoted to ACTIVE.
	SubnetworkRoleBackup = SubnetworkRole("BACKUP")
)

func (SubnetworkRole) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkRole)(nil)).Elem()
}

func (e SubnetworkRole) ToSubnetworkRoleOutput() SubnetworkRoleOutput {
	return pulumi.ToOutput(e).(SubnetworkRoleOutput)
}

func (e SubnetworkRole) ToSubnetworkRoleOutputWithContext(ctx context.Context) SubnetworkRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkRoleOutput)
}

func (e SubnetworkRole) ToSubnetworkRolePtrOutput() SubnetworkRolePtrOutput {
	return e.ToSubnetworkRolePtrOutputWithContext(context.Background())
}

func (e SubnetworkRole) ToSubnetworkRolePtrOutputWithContext(ctx context.Context) SubnetworkRolePtrOutput {
	return SubnetworkRole(e).ToSubnetworkRoleOutputWithContext(ctx).ToSubnetworkRolePtrOutputWithContext(ctx)
}

func (e SubnetworkRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkRoleOutput struct{ *pulumi.OutputState }

func (SubnetworkRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkRole)(nil)).Elem()
}

func (o SubnetworkRoleOutput) ToSubnetworkRoleOutput() SubnetworkRoleOutput {
	return o
}

func (o SubnetworkRoleOutput) ToSubnetworkRoleOutputWithContext(ctx context.Context) SubnetworkRoleOutput {
	return o
}

func (o SubnetworkRoleOutput) ToSubnetworkRolePtrOutput() SubnetworkRolePtrOutput {
	return o.ToSubnetworkRolePtrOutputWithContext(context.Background())
}

func (o SubnetworkRoleOutput) ToSubnetworkRolePtrOutputWithContext(ctx context.Context) SubnetworkRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkRole) *SubnetworkRole {
		return &v
	}).(SubnetworkRolePtrOutput)
}

func (o SubnetworkRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkRolePtrOutput struct{ *pulumi.OutputState }

func (SubnetworkRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkRole)(nil)).Elem()
}

func (o SubnetworkRolePtrOutput) ToSubnetworkRolePtrOutput() SubnetworkRolePtrOutput {
	return o
}

func (o SubnetworkRolePtrOutput) ToSubnetworkRolePtrOutputWithContext(ctx context.Context) SubnetworkRolePtrOutput {
	return o
}

func (o SubnetworkRolePtrOutput) Elem() SubnetworkRoleOutput {
	return o.ApplyT(func(v *SubnetworkRole) SubnetworkRole {
		if v != nil {
			return *v
		}
		var ret SubnetworkRole
		return ret
	}).(SubnetworkRoleOutput)
}

func (o SubnetworkRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkRoleInput is an input type that accepts SubnetworkRoleArgs and SubnetworkRoleOutput values.
// You can construct a concrete instance of `SubnetworkRoleInput` via:
//
//          SubnetworkRoleArgs{...}
type SubnetworkRoleInput interface {
	pulumi.Input

	ToSubnetworkRoleOutput() SubnetworkRoleOutput
	ToSubnetworkRoleOutputWithContext(context.Context) SubnetworkRoleOutput
}

var subnetworkRolePtrType = reflect.TypeOf((**SubnetworkRole)(nil)).Elem()

type SubnetworkRolePtrInput interface {
	pulumi.Input

	ToSubnetworkRolePtrOutput() SubnetworkRolePtrOutput
	ToSubnetworkRolePtrOutputWithContext(context.Context) SubnetworkRolePtrOutput
}

type subnetworkRolePtr string

func SubnetworkRolePtr(v string) SubnetworkRolePtrInput {
	return (*subnetworkRolePtr)(&v)
}

func (*subnetworkRolePtr) ElementType() reflect.Type {
	return subnetworkRolePtrType
}

func (in *subnetworkRolePtr) ToSubnetworkRolePtrOutput() SubnetworkRolePtrOutput {
	return pulumi.ToOutput(in).(SubnetworkRolePtrOutput)
}

func (in *subnetworkRolePtr) ToSubnetworkRolePtrOutputWithContext(ctx context.Context) SubnetworkRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkRolePtrOutput)
}

// The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is used. This field can be both set at resource creation time and updated using patch.
type SubnetworkStackType string

const (
	// New VMs in this subnet can have both IPv4 and IPv6 addresses.
	SubnetworkStackTypeIpv4Ipv6 = SubnetworkStackType("IPV4_IPV6")
	// New VMs in this subnet will only be assigned IPv4 addresses.
	SubnetworkStackTypeIpv4Only = SubnetworkStackType("IPV4_ONLY")
)

func (SubnetworkStackType) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkStackType)(nil)).Elem()
}

func (e SubnetworkStackType) ToSubnetworkStackTypeOutput() SubnetworkStackTypeOutput {
	return pulumi.ToOutput(e).(SubnetworkStackTypeOutput)
}

func (e SubnetworkStackType) ToSubnetworkStackTypeOutputWithContext(ctx context.Context) SubnetworkStackTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubnetworkStackTypeOutput)
}

func (e SubnetworkStackType) ToSubnetworkStackTypePtrOutput() SubnetworkStackTypePtrOutput {
	return e.ToSubnetworkStackTypePtrOutputWithContext(context.Background())
}

func (e SubnetworkStackType) ToSubnetworkStackTypePtrOutputWithContext(ctx context.Context) SubnetworkStackTypePtrOutput {
	return SubnetworkStackType(e).ToSubnetworkStackTypeOutputWithContext(ctx).ToSubnetworkStackTypePtrOutputWithContext(ctx)
}

func (e SubnetworkStackType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkStackType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubnetworkStackType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubnetworkStackType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubnetworkStackTypeOutput struct{ *pulumi.OutputState }

func (SubnetworkStackTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkStackType)(nil)).Elem()
}

func (o SubnetworkStackTypeOutput) ToSubnetworkStackTypeOutput() SubnetworkStackTypeOutput {
	return o
}

func (o SubnetworkStackTypeOutput) ToSubnetworkStackTypeOutputWithContext(ctx context.Context) SubnetworkStackTypeOutput {
	return o
}

func (o SubnetworkStackTypeOutput) ToSubnetworkStackTypePtrOutput() SubnetworkStackTypePtrOutput {
	return o.ToSubnetworkStackTypePtrOutputWithContext(context.Background())
}

func (o SubnetworkStackTypeOutput) ToSubnetworkStackTypePtrOutputWithContext(ctx context.Context) SubnetworkStackTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkStackType) *SubnetworkStackType {
		return &v
	}).(SubnetworkStackTypePtrOutput)
}

func (o SubnetworkStackTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubnetworkStackTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkStackType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubnetworkStackTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkStackTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubnetworkStackType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubnetworkStackTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetworkStackTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkStackType)(nil)).Elem()
}

func (o SubnetworkStackTypePtrOutput) ToSubnetworkStackTypePtrOutput() SubnetworkStackTypePtrOutput {
	return o
}

func (o SubnetworkStackTypePtrOutput) ToSubnetworkStackTypePtrOutputWithContext(ctx context.Context) SubnetworkStackTypePtrOutput {
	return o
}

func (o SubnetworkStackTypePtrOutput) Elem() SubnetworkStackTypeOutput {
	return o.ApplyT(func(v *SubnetworkStackType) SubnetworkStackType {
		if v != nil {
			return *v
		}
		var ret SubnetworkStackType
		return ret
	}).(SubnetworkStackTypeOutput)
}

func (o SubnetworkStackTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubnetworkStackTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubnetworkStackType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubnetworkStackTypeInput is an input type that accepts SubnetworkStackTypeArgs and SubnetworkStackTypeOutput values.
// You can construct a concrete instance of `SubnetworkStackTypeInput` via:
//
//          SubnetworkStackTypeArgs{...}
type SubnetworkStackTypeInput interface {
	pulumi.Input

	ToSubnetworkStackTypeOutput() SubnetworkStackTypeOutput
	ToSubnetworkStackTypeOutputWithContext(context.Context) SubnetworkStackTypeOutput
}

var subnetworkStackTypePtrType = reflect.TypeOf((**SubnetworkStackType)(nil)).Elem()

type SubnetworkStackTypePtrInput interface {
	pulumi.Input

	ToSubnetworkStackTypePtrOutput() SubnetworkStackTypePtrOutput
	ToSubnetworkStackTypePtrOutputWithContext(context.Context) SubnetworkStackTypePtrOutput
}

type subnetworkStackTypePtr string

func SubnetworkStackTypePtr(v string) SubnetworkStackTypePtrInput {
	return (*subnetworkStackTypePtr)(&v)
}

func (*subnetworkStackTypePtr) ElementType() reflect.Type {
	return subnetworkStackTypePtrType
}

func (in *subnetworkStackTypePtr) ToSubnetworkStackTypePtrOutput() SubnetworkStackTypePtrOutput {
	return pulumi.ToOutput(in).(SubnetworkStackTypePtrOutput)
}

func (in *subnetworkStackTypePtr) ToSubnetworkStackTypePtrOutputWithContext(ctx context.Context) SubnetworkStackTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubnetworkStackTypePtrOutput)
}

type SubsettingPolicy string

const (
	// Subsetting based on consistent hashing. For Traffic Director, the number of backends per backend group (the subset size) is based on the `subset_size` parameter. For Internal HTTP(S) load balancing, the number of backends per backend group (the subset size) is dynamically adjusted in two cases: - As the number of proxy instances participating in Internal HTTP(S) load balancing increases, the subset size decreases. - When the total number of backends in a network exceeds the capacity of a single proxy instance, subset sizes are reduced automatically for each service that has backend subsetting enabled.
	SubsettingPolicyConsistentHashSubsetting = SubsettingPolicy("CONSISTENT_HASH_SUBSETTING")
	// No Subsetting. Clients may open connections and send traffic to all backends of this backend service. This can lead to performance issues if there is substantial imbalance in the count of clients and backends.
	SubsettingPolicyNone = SubsettingPolicy("NONE")
)

func (SubsettingPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*SubsettingPolicy)(nil)).Elem()
}

func (e SubsettingPolicy) ToSubsettingPolicyOutput() SubsettingPolicyOutput {
	return pulumi.ToOutput(e).(SubsettingPolicyOutput)
}

func (e SubsettingPolicy) ToSubsettingPolicyOutputWithContext(ctx context.Context) SubsettingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubsettingPolicyOutput)
}

func (e SubsettingPolicy) ToSubsettingPolicyPtrOutput() SubsettingPolicyPtrOutput {
	return e.ToSubsettingPolicyPtrOutputWithContext(context.Background())
}

func (e SubsettingPolicy) ToSubsettingPolicyPtrOutputWithContext(ctx context.Context) SubsettingPolicyPtrOutput {
	return SubsettingPolicy(e).ToSubsettingPolicyOutputWithContext(ctx).ToSubsettingPolicyPtrOutputWithContext(ctx)
}

func (e SubsettingPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubsettingPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubsettingPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubsettingPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubsettingPolicyOutput struct{ *pulumi.OutputState }

func (SubsettingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubsettingPolicy)(nil)).Elem()
}

func (o SubsettingPolicyOutput) ToSubsettingPolicyOutput() SubsettingPolicyOutput {
	return o
}

func (o SubsettingPolicyOutput) ToSubsettingPolicyOutputWithContext(ctx context.Context) SubsettingPolicyOutput {
	return o
}

func (o SubsettingPolicyOutput) ToSubsettingPolicyPtrOutput() SubsettingPolicyPtrOutput {
	return o.ToSubsettingPolicyPtrOutputWithContext(context.Background())
}

func (o SubsettingPolicyOutput) ToSubsettingPolicyPtrOutputWithContext(ctx context.Context) SubsettingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubsettingPolicy) *SubsettingPolicy {
		return &v
	}).(SubsettingPolicyPtrOutput)
}

func (o SubsettingPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubsettingPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubsettingPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubsettingPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubsettingPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubsettingPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubsettingPolicyPtrOutput struct{ *pulumi.OutputState }

func (SubsettingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubsettingPolicy)(nil)).Elem()
}

func (o SubsettingPolicyPtrOutput) ToSubsettingPolicyPtrOutput() SubsettingPolicyPtrOutput {
	return o
}

func (o SubsettingPolicyPtrOutput) ToSubsettingPolicyPtrOutputWithContext(ctx context.Context) SubsettingPolicyPtrOutput {
	return o
}

func (o SubsettingPolicyPtrOutput) Elem() SubsettingPolicyOutput {
	return o.ApplyT(func(v *SubsettingPolicy) SubsettingPolicy {
		if v != nil {
			return *v
		}
		var ret SubsettingPolicy
		return ret
	}).(SubsettingPolicyOutput)
}

func (o SubsettingPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubsettingPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubsettingPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubsettingPolicyInput is an input type that accepts SubsettingPolicyArgs and SubsettingPolicyOutput values.
// You can construct a concrete instance of `SubsettingPolicyInput` via:
//
//          SubsettingPolicyArgs{...}
type SubsettingPolicyInput interface {
	pulumi.Input

	ToSubsettingPolicyOutput() SubsettingPolicyOutput
	ToSubsettingPolicyOutputWithContext(context.Context) SubsettingPolicyOutput
}

var subsettingPolicyPtrType = reflect.TypeOf((**SubsettingPolicy)(nil)).Elem()

type SubsettingPolicyPtrInput interface {
	pulumi.Input

	ToSubsettingPolicyPtrOutput() SubsettingPolicyPtrOutput
	ToSubsettingPolicyPtrOutputWithContext(context.Context) SubsettingPolicyPtrOutput
}

type subsettingPolicyPtr string

func SubsettingPolicyPtr(v string) SubsettingPolicyPtrInput {
	return (*subsettingPolicyPtr)(&v)
}

func (*subsettingPolicyPtr) ElementType() reflect.Type {
	return subsettingPolicyPtrType
}

func (in *subsettingPolicyPtr) ToSubsettingPolicyPtrOutput() SubsettingPolicyPtrOutput {
	return pulumi.ToOutput(in).(SubsettingPolicyPtrOutput)
}

func (in *subsettingPolicyPtr) ToSubsettingPolicyPtrOutputWithContext(ctx context.Context) SubsettingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubsettingPolicyPtrOutput)
}

// Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, TCP health check follows behavior specified in port and portName fields.
type TCPHealthCheckPortSpecification string

const (
	// The port number in port is used for health checking.
	TCPHealthCheckPortSpecificationUseFixedPort = TCPHealthCheckPortSpecification("USE_FIXED_PORT")
	// The portName is used for health checking.
	TCPHealthCheckPortSpecificationUseNamedPort = TCPHealthCheckPortSpecification("USE_NAMED_PORT")
	// For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.
	TCPHealthCheckPortSpecificationUseServingPort = TCPHealthCheckPortSpecification("USE_SERVING_PORT")
)

func (TCPHealthCheckPortSpecification) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPHealthCheckPortSpecification)(nil)).Elem()
}

func (e TCPHealthCheckPortSpecification) ToTCPHealthCheckPortSpecificationOutput() TCPHealthCheckPortSpecificationOutput {
	return pulumi.ToOutput(e).(TCPHealthCheckPortSpecificationOutput)
}

func (e TCPHealthCheckPortSpecification) ToTCPHealthCheckPortSpecificationOutputWithContext(ctx context.Context) TCPHealthCheckPortSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TCPHealthCheckPortSpecificationOutput)
}

func (e TCPHealthCheckPortSpecification) ToTCPHealthCheckPortSpecificationPtrOutput() TCPHealthCheckPortSpecificationPtrOutput {
	return e.ToTCPHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (e TCPHealthCheckPortSpecification) ToTCPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) TCPHealthCheckPortSpecificationPtrOutput {
	return TCPHealthCheckPortSpecification(e).ToTCPHealthCheckPortSpecificationOutputWithContext(ctx).ToTCPHealthCheckPortSpecificationPtrOutputWithContext(ctx)
}

func (e TCPHealthCheckPortSpecification) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TCPHealthCheckPortSpecification) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TCPHealthCheckPortSpecification) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TCPHealthCheckPortSpecification) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TCPHealthCheckPortSpecificationOutput struct{ *pulumi.OutputState }

func (TCPHealthCheckPortSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPHealthCheckPortSpecification)(nil)).Elem()
}

func (o TCPHealthCheckPortSpecificationOutput) ToTCPHealthCheckPortSpecificationOutput() TCPHealthCheckPortSpecificationOutput {
	return o
}

func (o TCPHealthCheckPortSpecificationOutput) ToTCPHealthCheckPortSpecificationOutputWithContext(ctx context.Context) TCPHealthCheckPortSpecificationOutput {
	return o
}

func (o TCPHealthCheckPortSpecificationOutput) ToTCPHealthCheckPortSpecificationPtrOutput() TCPHealthCheckPortSpecificationPtrOutput {
	return o.ToTCPHealthCheckPortSpecificationPtrOutputWithContext(context.Background())
}

func (o TCPHealthCheckPortSpecificationOutput) ToTCPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) TCPHealthCheckPortSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TCPHealthCheckPortSpecification) *TCPHealthCheckPortSpecification {
		return &v
	}).(TCPHealthCheckPortSpecificationPtrOutput)
}

func (o TCPHealthCheckPortSpecificationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TCPHealthCheckPortSpecificationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TCPHealthCheckPortSpecification) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TCPHealthCheckPortSpecificationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TCPHealthCheckPortSpecificationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TCPHealthCheckPortSpecification) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TCPHealthCheckPortSpecificationPtrOutput struct{ *pulumi.OutputState }

func (TCPHealthCheckPortSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPHealthCheckPortSpecification)(nil)).Elem()
}

func (o TCPHealthCheckPortSpecificationPtrOutput) ToTCPHealthCheckPortSpecificationPtrOutput() TCPHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o TCPHealthCheckPortSpecificationPtrOutput) ToTCPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) TCPHealthCheckPortSpecificationPtrOutput {
	return o
}

func (o TCPHealthCheckPortSpecificationPtrOutput) Elem() TCPHealthCheckPortSpecificationOutput {
	return o.ApplyT(func(v *TCPHealthCheckPortSpecification) TCPHealthCheckPortSpecification {
		if v != nil {
			return *v
		}
		var ret TCPHealthCheckPortSpecification
		return ret
	}).(TCPHealthCheckPortSpecificationOutput)
}

func (o TCPHealthCheckPortSpecificationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TCPHealthCheckPortSpecificationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TCPHealthCheckPortSpecification) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TCPHealthCheckPortSpecificationInput is an input type that accepts TCPHealthCheckPortSpecificationArgs and TCPHealthCheckPortSpecificationOutput values.
// You can construct a concrete instance of `TCPHealthCheckPortSpecificationInput` via:
//
//          TCPHealthCheckPortSpecificationArgs{...}
type TCPHealthCheckPortSpecificationInput interface {
	pulumi.Input

	ToTCPHealthCheckPortSpecificationOutput() TCPHealthCheckPortSpecificationOutput
	ToTCPHealthCheckPortSpecificationOutputWithContext(context.Context) TCPHealthCheckPortSpecificationOutput
}

var tcphealthCheckPortSpecificationPtrType = reflect.TypeOf((**TCPHealthCheckPortSpecification)(nil)).Elem()

type TCPHealthCheckPortSpecificationPtrInput interface {
	pulumi.Input

	ToTCPHealthCheckPortSpecificationPtrOutput() TCPHealthCheckPortSpecificationPtrOutput
	ToTCPHealthCheckPortSpecificationPtrOutputWithContext(context.Context) TCPHealthCheckPortSpecificationPtrOutput
}

type tcphealthCheckPortSpecificationPtr string

func TCPHealthCheckPortSpecificationPtr(v string) TCPHealthCheckPortSpecificationPtrInput {
	return (*tcphealthCheckPortSpecificationPtr)(&v)
}

func (*tcphealthCheckPortSpecificationPtr) ElementType() reflect.Type {
	return tcphealthCheckPortSpecificationPtrType
}

func (in *tcphealthCheckPortSpecificationPtr) ToTCPHealthCheckPortSpecificationPtrOutput() TCPHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutput(in).(TCPHealthCheckPortSpecificationPtrOutput)
}

func (in *tcphealthCheckPortSpecificationPtr) ToTCPHealthCheckPortSpecificationPtrOutputWithContext(ctx context.Context) TCPHealthCheckPortSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TCPHealthCheckPortSpecificationPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type TCPHealthCheckProxyHeader string

const (
	TCPHealthCheckProxyHeaderNone    = TCPHealthCheckProxyHeader("NONE")
	TCPHealthCheckProxyHeaderProxyV1 = TCPHealthCheckProxyHeader("PROXY_V1")
)

func (TCPHealthCheckProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPHealthCheckProxyHeader)(nil)).Elem()
}

func (e TCPHealthCheckProxyHeader) ToTCPHealthCheckProxyHeaderOutput() TCPHealthCheckProxyHeaderOutput {
	return pulumi.ToOutput(e).(TCPHealthCheckProxyHeaderOutput)
}

func (e TCPHealthCheckProxyHeader) ToTCPHealthCheckProxyHeaderOutputWithContext(ctx context.Context) TCPHealthCheckProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TCPHealthCheckProxyHeaderOutput)
}

func (e TCPHealthCheckProxyHeader) ToTCPHealthCheckProxyHeaderPtrOutput() TCPHealthCheckProxyHeaderPtrOutput {
	return e.ToTCPHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (e TCPHealthCheckProxyHeader) ToTCPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) TCPHealthCheckProxyHeaderPtrOutput {
	return TCPHealthCheckProxyHeader(e).ToTCPHealthCheckProxyHeaderOutputWithContext(ctx).ToTCPHealthCheckProxyHeaderPtrOutputWithContext(ctx)
}

func (e TCPHealthCheckProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TCPHealthCheckProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TCPHealthCheckProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TCPHealthCheckProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TCPHealthCheckProxyHeaderOutput struct{ *pulumi.OutputState }

func (TCPHealthCheckProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPHealthCheckProxyHeader)(nil)).Elem()
}

func (o TCPHealthCheckProxyHeaderOutput) ToTCPHealthCheckProxyHeaderOutput() TCPHealthCheckProxyHeaderOutput {
	return o
}

func (o TCPHealthCheckProxyHeaderOutput) ToTCPHealthCheckProxyHeaderOutputWithContext(ctx context.Context) TCPHealthCheckProxyHeaderOutput {
	return o
}

func (o TCPHealthCheckProxyHeaderOutput) ToTCPHealthCheckProxyHeaderPtrOutput() TCPHealthCheckProxyHeaderPtrOutput {
	return o.ToTCPHealthCheckProxyHeaderPtrOutputWithContext(context.Background())
}

func (o TCPHealthCheckProxyHeaderOutput) ToTCPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) TCPHealthCheckProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TCPHealthCheckProxyHeader) *TCPHealthCheckProxyHeader {
		return &v
	}).(TCPHealthCheckProxyHeaderPtrOutput)
}

func (o TCPHealthCheckProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TCPHealthCheckProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TCPHealthCheckProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TCPHealthCheckProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TCPHealthCheckProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TCPHealthCheckProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TCPHealthCheckProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (TCPHealthCheckProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPHealthCheckProxyHeader)(nil)).Elem()
}

func (o TCPHealthCheckProxyHeaderPtrOutput) ToTCPHealthCheckProxyHeaderPtrOutput() TCPHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o TCPHealthCheckProxyHeaderPtrOutput) ToTCPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) TCPHealthCheckProxyHeaderPtrOutput {
	return o
}

func (o TCPHealthCheckProxyHeaderPtrOutput) Elem() TCPHealthCheckProxyHeaderOutput {
	return o.ApplyT(func(v *TCPHealthCheckProxyHeader) TCPHealthCheckProxyHeader {
		if v != nil {
			return *v
		}
		var ret TCPHealthCheckProxyHeader
		return ret
	}).(TCPHealthCheckProxyHeaderOutput)
}

func (o TCPHealthCheckProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TCPHealthCheckProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TCPHealthCheckProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TCPHealthCheckProxyHeaderInput is an input type that accepts TCPHealthCheckProxyHeaderArgs and TCPHealthCheckProxyHeaderOutput values.
// You can construct a concrete instance of `TCPHealthCheckProxyHeaderInput` via:
//
//          TCPHealthCheckProxyHeaderArgs{...}
type TCPHealthCheckProxyHeaderInput interface {
	pulumi.Input

	ToTCPHealthCheckProxyHeaderOutput() TCPHealthCheckProxyHeaderOutput
	ToTCPHealthCheckProxyHeaderOutputWithContext(context.Context) TCPHealthCheckProxyHeaderOutput
}

var tcphealthCheckProxyHeaderPtrType = reflect.TypeOf((**TCPHealthCheckProxyHeader)(nil)).Elem()

type TCPHealthCheckProxyHeaderPtrInput interface {
	pulumi.Input

	ToTCPHealthCheckProxyHeaderPtrOutput() TCPHealthCheckProxyHeaderPtrOutput
	ToTCPHealthCheckProxyHeaderPtrOutputWithContext(context.Context) TCPHealthCheckProxyHeaderPtrOutput
}

type tcphealthCheckProxyHeaderPtr string

func TCPHealthCheckProxyHeaderPtr(v string) TCPHealthCheckProxyHeaderPtrInput {
	return (*tcphealthCheckProxyHeaderPtr)(&v)
}

func (*tcphealthCheckProxyHeaderPtr) ElementType() reflect.Type {
	return tcphealthCheckProxyHeaderPtrType
}

func (in *tcphealthCheckProxyHeaderPtr) ToTCPHealthCheckProxyHeaderPtrOutput() TCPHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(TCPHealthCheckProxyHeaderPtrOutput)
}

func (in *tcphealthCheckProxyHeaderPtr) ToTCPHealthCheckProxyHeaderPtrOutputWithContext(ctx context.Context) TCPHealthCheckProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TCPHealthCheckProxyHeaderPtrOutput)
}

// Specifies the QUIC override policy for this TargetHttpsProxy resource. This setting determines whether the load balancer attempts to negotiate QUIC with clients. You can specify NONE, ENABLE, or DISABLE. - When quic-override is set to NONE, Google manages whether QUIC is used. - When quic-override is set to ENABLE, the load balancer uses QUIC when possible. - When quic-override is set to DISABLE, the load balancer doesn't use QUIC. - If the quic-override flag is not specified, NONE is implied.
type TargetHttpsProxyQuicOverride string

const (
	// The load balancer will not attempt to negotiate QUIC with clients.
	TargetHttpsProxyQuicOverrideDisable = TargetHttpsProxyQuicOverride("DISABLE")
	// The load balancer will attempt to negotiate QUIC with clients.
	TargetHttpsProxyQuicOverrideEnable = TargetHttpsProxyQuicOverride("ENABLE")
	// No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request.
	TargetHttpsProxyQuicOverrideNone = TargetHttpsProxyQuicOverride("NONE")
)

func (TargetHttpsProxyQuicOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHttpsProxyQuicOverride)(nil)).Elem()
}

func (e TargetHttpsProxyQuicOverride) ToTargetHttpsProxyQuicOverrideOutput() TargetHttpsProxyQuicOverrideOutput {
	return pulumi.ToOutput(e).(TargetHttpsProxyQuicOverrideOutput)
}

func (e TargetHttpsProxyQuicOverride) ToTargetHttpsProxyQuicOverrideOutputWithContext(ctx context.Context) TargetHttpsProxyQuicOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetHttpsProxyQuicOverrideOutput)
}

func (e TargetHttpsProxyQuicOverride) ToTargetHttpsProxyQuicOverridePtrOutput() TargetHttpsProxyQuicOverridePtrOutput {
	return e.ToTargetHttpsProxyQuicOverridePtrOutputWithContext(context.Background())
}

func (e TargetHttpsProxyQuicOverride) ToTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) TargetHttpsProxyQuicOverridePtrOutput {
	return TargetHttpsProxyQuicOverride(e).ToTargetHttpsProxyQuicOverrideOutputWithContext(ctx).ToTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx)
}

func (e TargetHttpsProxyQuicOverride) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetHttpsProxyQuicOverride) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetHttpsProxyQuicOverride) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetHttpsProxyQuicOverride) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetHttpsProxyQuicOverrideOutput struct{ *pulumi.OutputState }

func (TargetHttpsProxyQuicOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetHttpsProxyQuicOverride)(nil)).Elem()
}

func (o TargetHttpsProxyQuicOverrideOutput) ToTargetHttpsProxyQuicOverrideOutput() TargetHttpsProxyQuicOverrideOutput {
	return o
}

func (o TargetHttpsProxyQuicOverrideOutput) ToTargetHttpsProxyQuicOverrideOutputWithContext(ctx context.Context) TargetHttpsProxyQuicOverrideOutput {
	return o
}

func (o TargetHttpsProxyQuicOverrideOutput) ToTargetHttpsProxyQuicOverridePtrOutput() TargetHttpsProxyQuicOverridePtrOutput {
	return o.ToTargetHttpsProxyQuicOverridePtrOutputWithContext(context.Background())
}

func (o TargetHttpsProxyQuicOverrideOutput) ToTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) TargetHttpsProxyQuicOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetHttpsProxyQuicOverride) *TargetHttpsProxyQuicOverride {
		return &v
	}).(TargetHttpsProxyQuicOverridePtrOutput)
}

func (o TargetHttpsProxyQuicOverrideOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetHttpsProxyQuicOverrideOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetHttpsProxyQuicOverride) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetHttpsProxyQuicOverrideOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetHttpsProxyQuicOverrideOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetHttpsProxyQuicOverride) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetHttpsProxyQuicOverridePtrOutput struct{ *pulumi.OutputState }

func (TargetHttpsProxyQuicOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetHttpsProxyQuicOverride)(nil)).Elem()
}

func (o TargetHttpsProxyQuicOverridePtrOutput) ToTargetHttpsProxyQuicOverridePtrOutput() TargetHttpsProxyQuicOverridePtrOutput {
	return o
}

func (o TargetHttpsProxyQuicOverridePtrOutput) ToTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) TargetHttpsProxyQuicOverridePtrOutput {
	return o
}

func (o TargetHttpsProxyQuicOverridePtrOutput) Elem() TargetHttpsProxyQuicOverrideOutput {
	return o.ApplyT(func(v *TargetHttpsProxyQuicOverride) TargetHttpsProxyQuicOverride {
		if v != nil {
			return *v
		}
		var ret TargetHttpsProxyQuicOverride
		return ret
	}).(TargetHttpsProxyQuicOverrideOutput)
}

func (o TargetHttpsProxyQuicOverridePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetHttpsProxyQuicOverridePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetHttpsProxyQuicOverride) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetHttpsProxyQuicOverrideInput is an input type that accepts TargetHttpsProxyQuicOverrideArgs and TargetHttpsProxyQuicOverrideOutput values.
// You can construct a concrete instance of `TargetHttpsProxyQuicOverrideInput` via:
//
//          TargetHttpsProxyQuicOverrideArgs{...}
type TargetHttpsProxyQuicOverrideInput interface {
	pulumi.Input

	ToTargetHttpsProxyQuicOverrideOutput() TargetHttpsProxyQuicOverrideOutput
	ToTargetHttpsProxyQuicOverrideOutputWithContext(context.Context) TargetHttpsProxyQuicOverrideOutput
}

var targetHttpsProxyQuicOverridePtrType = reflect.TypeOf((**TargetHttpsProxyQuicOverride)(nil)).Elem()

type TargetHttpsProxyQuicOverridePtrInput interface {
	pulumi.Input

	ToTargetHttpsProxyQuicOverridePtrOutput() TargetHttpsProxyQuicOverridePtrOutput
	ToTargetHttpsProxyQuicOverridePtrOutputWithContext(context.Context) TargetHttpsProxyQuicOverridePtrOutput
}

type targetHttpsProxyQuicOverridePtr string

func TargetHttpsProxyQuicOverridePtr(v string) TargetHttpsProxyQuicOverridePtrInput {
	return (*targetHttpsProxyQuicOverridePtr)(&v)
}

func (*targetHttpsProxyQuicOverridePtr) ElementType() reflect.Type {
	return targetHttpsProxyQuicOverridePtrType
}

func (in *targetHttpsProxyQuicOverridePtr) ToTargetHttpsProxyQuicOverridePtrOutput() TargetHttpsProxyQuicOverridePtrOutput {
	return pulumi.ToOutput(in).(TargetHttpsProxyQuicOverridePtrOutput)
}

func (in *targetHttpsProxyQuicOverridePtr) ToTargetHttpsProxyQuicOverridePtrOutputWithContext(ctx context.Context) TargetHttpsProxyQuicOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetHttpsProxyQuicOverridePtrOutput)
}

// NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported.
type TargetInstanceNatPolicy string

const (
	// No NAT performed.
	TargetInstanceNatPolicyNoNat = TargetInstanceNatPolicy("NO_NAT")
)

func (TargetInstanceNatPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetInstanceNatPolicy)(nil)).Elem()
}

func (e TargetInstanceNatPolicy) ToTargetInstanceNatPolicyOutput() TargetInstanceNatPolicyOutput {
	return pulumi.ToOutput(e).(TargetInstanceNatPolicyOutput)
}

func (e TargetInstanceNatPolicy) ToTargetInstanceNatPolicyOutputWithContext(ctx context.Context) TargetInstanceNatPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetInstanceNatPolicyOutput)
}

func (e TargetInstanceNatPolicy) ToTargetInstanceNatPolicyPtrOutput() TargetInstanceNatPolicyPtrOutput {
	return e.ToTargetInstanceNatPolicyPtrOutputWithContext(context.Background())
}

func (e TargetInstanceNatPolicy) ToTargetInstanceNatPolicyPtrOutputWithContext(ctx context.Context) TargetInstanceNatPolicyPtrOutput {
	return TargetInstanceNatPolicy(e).ToTargetInstanceNatPolicyOutputWithContext(ctx).ToTargetInstanceNatPolicyPtrOutputWithContext(ctx)
}

func (e TargetInstanceNatPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetInstanceNatPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetInstanceNatPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetInstanceNatPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetInstanceNatPolicyOutput struct{ *pulumi.OutputState }

func (TargetInstanceNatPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetInstanceNatPolicy)(nil)).Elem()
}

func (o TargetInstanceNatPolicyOutput) ToTargetInstanceNatPolicyOutput() TargetInstanceNatPolicyOutput {
	return o
}

func (o TargetInstanceNatPolicyOutput) ToTargetInstanceNatPolicyOutputWithContext(ctx context.Context) TargetInstanceNatPolicyOutput {
	return o
}

func (o TargetInstanceNatPolicyOutput) ToTargetInstanceNatPolicyPtrOutput() TargetInstanceNatPolicyPtrOutput {
	return o.ToTargetInstanceNatPolicyPtrOutputWithContext(context.Background())
}

func (o TargetInstanceNatPolicyOutput) ToTargetInstanceNatPolicyPtrOutputWithContext(ctx context.Context) TargetInstanceNatPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetInstanceNatPolicy) *TargetInstanceNatPolicy {
		return &v
	}).(TargetInstanceNatPolicyPtrOutput)
}

func (o TargetInstanceNatPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetInstanceNatPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetInstanceNatPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetInstanceNatPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetInstanceNatPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetInstanceNatPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetInstanceNatPolicyPtrOutput struct{ *pulumi.OutputState }

func (TargetInstanceNatPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetInstanceNatPolicy)(nil)).Elem()
}

func (o TargetInstanceNatPolicyPtrOutput) ToTargetInstanceNatPolicyPtrOutput() TargetInstanceNatPolicyPtrOutput {
	return o
}

func (o TargetInstanceNatPolicyPtrOutput) ToTargetInstanceNatPolicyPtrOutputWithContext(ctx context.Context) TargetInstanceNatPolicyPtrOutput {
	return o
}

func (o TargetInstanceNatPolicyPtrOutput) Elem() TargetInstanceNatPolicyOutput {
	return o.ApplyT(func(v *TargetInstanceNatPolicy) TargetInstanceNatPolicy {
		if v != nil {
			return *v
		}
		var ret TargetInstanceNatPolicy
		return ret
	}).(TargetInstanceNatPolicyOutput)
}

func (o TargetInstanceNatPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetInstanceNatPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetInstanceNatPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetInstanceNatPolicyInput is an input type that accepts TargetInstanceNatPolicyArgs and TargetInstanceNatPolicyOutput values.
// You can construct a concrete instance of `TargetInstanceNatPolicyInput` via:
//
//          TargetInstanceNatPolicyArgs{...}
type TargetInstanceNatPolicyInput interface {
	pulumi.Input

	ToTargetInstanceNatPolicyOutput() TargetInstanceNatPolicyOutput
	ToTargetInstanceNatPolicyOutputWithContext(context.Context) TargetInstanceNatPolicyOutput
}

var targetInstanceNatPolicyPtrType = reflect.TypeOf((**TargetInstanceNatPolicy)(nil)).Elem()

type TargetInstanceNatPolicyPtrInput interface {
	pulumi.Input

	ToTargetInstanceNatPolicyPtrOutput() TargetInstanceNatPolicyPtrOutput
	ToTargetInstanceNatPolicyPtrOutputWithContext(context.Context) TargetInstanceNatPolicyPtrOutput
}

type targetInstanceNatPolicyPtr string

func TargetInstanceNatPolicyPtr(v string) TargetInstanceNatPolicyPtrInput {
	return (*targetInstanceNatPolicyPtr)(&v)
}

func (*targetInstanceNatPolicyPtr) ElementType() reflect.Type {
	return targetInstanceNatPolicyPtrType
}

func (in *targetInstanceNatPolicyPtr) ToTargetInstanceNatPolicyPtrOutput() TargetInstanceNatPolicyPtrOutput {
	return pulumi.ToOutput(in).(TargetInstanceNatPolicyPtrOutput)
}

func (in *targetInstanceNatPolicyPtr) ToTargetInstanceNatPolicyPtrOutputWithContext(ctx context.Context) TargetInstanceNatPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetInstanceNatPolicyPtrOutput)
}

// Session affinity option, must be one of the following values: NONE: Connections from the same client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
type TargetPoolSessionAffinity string

const (
	// 2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy.
	TargetPoolSessionAffinityClientIp = TargetPoolSessionAffinity("CLIENT_IP")
	// 1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing.
	TargetPoolSessionAffinityClientIpNoDestination = TargetPoolSessionAffinity("CLIENT_IP_NO_DESTINATION")
	// 5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
	TargetPoolSessionAffinityClientIpPortProto = TargetPoolSessionAffinity("CLIENT_IP_PORT_PROTO")
	// 3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing.
	TargetPoolSessionAffinityClientIpProto = TargetPoolSessionAffinity("CLIENT_IP_PROTO")
	// Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing.
	TargetPoolSessionAffinityGeneratedCookie = TargetPoolSessionAffinity("GENERATED_COOKIE")
	// The hash is based on a user specified header field.
	TargetPoolSessionAffinityHeaderField = TargetPoolSessionAffinity("HEADER_FIELD")
	// The hash is based on a user provided cookie.
	TargetPoolSessionAffinityHttpCookie = TargetPoolSessionAffinity("HTTP_COOKIE")
	// No session affinity. Connections from the same client IP may go to any instance in the pool.
	TargetPoolSessionAffinityNone = TargetPoolSessionAffinity("NONE")
)

func (TargetPoolSessionAffinity) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetPoolSessionAffinity)(nil)).Elem()
}

func (e TargetPoolSessionAffinity) ToTargetPoolSessionAffinityOutput() TargetPoolSessionAffinityOutput {
	return pulumi.ToOutput(e).(TargetPoolSessionAffinityOutput)
}

func (e TargetPoolSessionAffinity) ToTargetPoolSessionAffinityOutputWithContext(ctx context.Context) TargetPoolSessionAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetPoolSessionAffinityOutput)
}

func (e TargetPoolSessionAffinity) ToTargetPoolSessionAffinityPtrOutput() TargetPoolSessionAffinityPtrOutput {
	return e.ToTargetPoolSessionAffinityPtrOutputWithContext(context.Background())
}

func (e TargetPoolSessionAffinity) ToTargetPoolSessionAffinityPtrOutputWithContext(ctx context.Context) TargetPoolSessionAffinityPtrOutput {
	return TargetPoolSessionAffinity(e).ToTargetPoolSessionAffinityOutputWithContext(ctx).ToTargetPoolSessionAffinityPtrOutputWithContext(ctx)
}

func (e TargetPoolSessionAffinity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetPoolSessionAffinity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetPoolSessionAffinity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetPoolSessionAffinity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetPoolSessionAffinityOutput struct{ *pulumi.OutputState }

func (TargetPoolSessionAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetPoolSessionAffinity)(nil)).Elem()
}

func (o TargetPoolSessionAffinityOutput) ToTargetPoolSessionAffinityOutput() TargetPoolSessionAffinityOutput {
	return o
}

func (o TargetPoolSessionAffinityOutput) ToTargetPoolSessionAffinityOutputWithContext(ctx context.Context) TargetPoolSessionAffinityOutput {
	return o
}

func (o TargetPoolSessionAffinityOutput) ToTargetPoolSessionAffinityPtrOutput() TargetPoolSessionAffinityPtrOutput {
	return o.ToTargetPoolSessionAffinityPtrOutputWithContext(context.Background())
}

func (o TargetPoolSessionAffinityOutput) ToTargetPoolSessionAffinityPtrOutputWithContext(ctx context.Context) TargetPoolSessionAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetPoolSessionAffinity) *TargetPoolSessionAffinity {
		return &v
	}).(TargetPoolSessionAffinityPtrOutput)
}

func (o TargetPoolSessionAffinityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetPoolSessionAffinityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetPoolSessionAffinity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetPoolSessionAffinityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetPoolSessionAffinityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetPoolSessionAffinity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetPoolSessionAffinityPtrOutput struct{ *pulumi.OutputState }

func (TargetPoolSessionAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetPoolSessionAffinity)(nil)).Elem()
}

func (o TargetPoolSessionAffinityPtrOutput) ToTargetPoolSessionAffinityPtrOutput() TargetPoolSessionAffinityPtrOutput {
	return o
}

func (o TargetPoolSessionAffinityPtrOutput) ToTargetPoolSessionAffinityPtrOutputWithContext(ctx context.Context) TargetPoolSessionAffinityPtrOutput {
	return o
}

func (o TargetPoolSessionAffinityPtrOutput) Elem() TargetPoolSessionAffinityOutput {
	return o.ApplyT(func(v *TargetPoolSessionAffinity) TargetPoolSessionAffinity {
		if v != nil {
			return *v
		}
		var ret TargetPoolSessionAffinity
		return ret
	}).(TargetPoolSessionAffinityOutput)
}

func (o TargetPoolSessionAffinityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetPoolSessionAffinityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetPoolSessionAffinity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetPoolSessionAffinityInput is an input type that accepts TargetPoolSessionAffinityArgs and TargetPoolSessionAffinityOutput values.
// You can construct a concrete instance of `TargetPoolSessionAffinityInput` via:
//
//          TargetPoolSessionAffinityArgs{...}
type TargetPoolSessionAffinityInput interface {
	pulumi.Input

	ToTargetPoolSessionAffinityOutput() TargetPoolSessionAffinityOutput
	ToTargetPoolSessionAffinityOutputWithContext(context.Context) TargetPoolSessionAffinityOutput
}

var targetPoolSessionAffinityPtrType = reflect.TypeOf((**TargetPoolSessionAffinity)(nil)).Elem()

type TargetPoolSessionAffinityPtrInput interface {
	pulumi.Input

	ToTargetPoolSessionAffinityPtrOutput() TargetPoolSessionAffinityPtrOutput
	ToTargetPoolSessionAffinityPtrOutputWithContext(context.Context) TargetPoolSessionAffinityPtrOutput
}

type targetPoolSessionAffinityPtr string

func TargetPoolSessionAffinityPtr(v string) TargetPoolSessionAffinityPtrInput {
	return (*targetPoolSessionAffinityPtr)(&v)
}

func (*targetPoolSessionAffinityPtr) ElementType() reflect.Type {
	return targetPoolSessionAffinityPtrType
}

func (in *targetPoolSessionAffinityPtr) ToTargetPoolSessionAffinityPtrOutput() TargetPoolSessionAffinityPtrOutput {
	return pulumi.ToOutput(in).(TargetPoolSessionAffinityPtrOutput)
}

func (in *targetPoolSessionAffinityPtr) ToTargetPoolSessionAffinityPtrOutputWithContext(ctx context.Context) TargetPoolSessionAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetPoolSessionAffinityPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type TargetSslProxyProxyHeader string

const (
	TargetSslProxyProxyHeaderNone    = TargetSslProxyProxyHeader("NONE")
	TargetSslProxyProxyHeaderProxyV1 = TargetSslProxyProxyHeader("PROXY_V1")
)

func (TargetSslProxyProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetSslProxyProxyHeader)(nil)).Elem()
}

func (e TargetSslProxyProxyHeader) ToTargetSslProxyProxyHeaderOutput() TargetSslProxyProxyHeaderOutput {
	return pulumi.ToOutput(e).(TargetSslProxyProxyHeaderOutput)
}

func (e TargetSslProxyProxyHeader) ToTargetSslProxyProxyHeaderOutputWithContext(ctx context.Context) TargetSslProxyProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetSslProxyProxyHeaderOutput)
}

func (e TargetSslProxyProxyHeader) ToTargetSslProxyProxyHeaderPtrOutput() TargetSslProxyProxyHeaderPtrOutput {
	return e.ToTargetSslProxyProxyHeaderPtrOutputWithContext(context.Background())
}

func (e TargetSslProxyProxyHeader) ToTargetSslProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetSslProxyProxyHeaderPtrOutput {
	return TargetSslProxyProxyHeader(e).ToTargetSslProxyProxyHeaderOutputWithContext(ctx).ToTargetSslProxyProxyHeaderPtrOutputWithContext(ctx)
}

func (e TargetSslProxyProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetSslProxyProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetSslProxyProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetSslProxyProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetSslProxyProxyHeaderOutput struct{ *pulumi.OutputState }

func (TargetSslProxyProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetSslProxyProxyHeader)(nil)).Elem()
}

func (o TargetSslProxyProxyHeaderOutput) ToTargetSslProxyProxyHeaderOutput() TargetSslProxyProxyHeaderOutput {
	return o
}

func (o TargetSslProxyProxyHeaderOutput) ToTargetSslProxyProxyHeaderOutputWithContext(ctx context.Context) TargetSslProxyProxyHeaderOutput {
	return o
}

func (o TargetSslProxyProxyHeaderOutput) ToTargetSslProxyProxyHeaderPtrOutput() TargetSslProxyProxyHeaderPtrOutput {
	return o.ToTargetSslProxyProxyHeaderPtrOutputWithContext(context.Background())
}

func (o TargetSslProxyProxyHeaderOutput) ToTargetSslProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetSslProxyProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetSslProxyProxyHeader) *TargetSslProxyProxyHeader {
		return &v
	}).(TargetSslProxyProxyHeaderPtrOutput)
}

func (o TargetSslProxyProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetSslProxyProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetSslProxyProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetSslProxyProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetSslProxyProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetSslProxyProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetSslProxyProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (TargetSslProxyProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetSslProxyProxyHeader)(nil)).Elem()
}

func (o TargetSslProxyProxyHeaderPtrOutput) ToTargetSslProxyProxyHeaderPtrOutput() TargetSslProxyProxyHeaderPtrOutput {
	return o
}

func (o TargetSslProxyProxyHeaderPtrOutput) ToTargetSslProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetSslProxyProxyHeaderPtrOutput {
	return o
}

func (o TargetSslProxyProxyHeaderPtrOutput) Elem() TargetSslProxyProxyHeaderOutput {
	return o.ApplyT(func(v *TargetSslProxyProxyHeader) TargetSslProxyProxyHeader {
		if v != nil {
			return *v
		}
		var ret TargetSslProxyProxyHeader
		return ret
	}).(TargetSslProxyProxyHeaderOutput)
}

func (o TargetSslProxyProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetSslProxyProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetSslProxyProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetSslProxyProxyHeaderInput is an input type that accepts TargetSslProxyProxyHeaderArgs and TargetSslProxyProxyHeaderOutput values.
// You can construct a concrete instance of `TargetSslProxyProxyHeaderInput` via:
//
//          TargetSslProxyProxyHeaderArgs{...}
type TargetSslProxyProxyHeaderInput interface {
	pulumi.Input

	ToTargetSslProxyProxyHeaderOutput() TargetSslProxyProxyHeaderOutput
	ToTargetSslProxyProxyHeaderOutputWithContext(context.Context) TargetSslProxyProxyHeaderOutput
}

var targetSslProxyProxyHeaderPtrType = reflect.TypeOf((**TargetSslProxyProxyHeader)(nil)).Elem()

type TargetSslProxyProxyHeaderPtrInput interface {
	pulumi.Input

	ToTargetSslProxyProxyHeaderPtrOutput() TargetSslProxyProxyHeaderPtrOutput
	ToTargetSslProxyProxyHeaderPtrOutputWithContext(context.Context) TargetSslProxyProxyHeaderPtrOutput
}

type targetSslProxyProxyHeaderPtr string

func TargetSslProxyProxyHeaderPtr(v string) TargetSslProxyProxyHeaderPtrInput {
	return (*targetSslProxyProxyHeaderPtr)(&v)
}

func (*targetSslProxyProxyHeaderPtr) ElementType() reflect.Type {
	return targetSslProxyProxyHeaderPtrType
}

func (in *targetSslProxyProxyHeaderPtr) ToTargetSslProxyProxyHeaderPtrOutput() TargetSslProxyProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(TargetSslProxyProxyHeaderPtrOutput)
}

func (in *targetSslProxyProxyHeaderPtr) ToTargetSslProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetSslProxyProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetSslProxyProxyHeaderPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
type TargetTcpProxyProxyHeader string

const (
	TargetTcpProxyProxyHeaderNone    = TargetTcpProxyProxyHeader("NONE")
	TargetTcpProxyProxyHeaderProxyV1 = TargetTcpProxyProxyHeader("PROXY_V1")
)

func (TargetTcpProxyProxyHeader) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTcpProxyProxyHeader)(nil)).Elem()
}

func (e TargetTcpProxyProxyHeader) ToTargetTcpProxyProxyHeaderOutput() TargetTcpProxyProxyHeaderOutput {
	return pulumi.ToOutput(e).(TargetTcpProxyProxyHeaderOutput)
}

func (e TargetTcpProxyProxyHeader) ToTargetTcpProxyProxyHeaderOutputWithContext(ctx context.Context) TargetTcpProxyProxyHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TargetTcpProxyProxyHeaderOutput)
}

func (e TargetTcpProxyProxyHeader) ToTargetTcpProxyProxyHeaderPtrOutput() TargetTcpProxyProxyHeaderPtrOutput {
	return e.ToTargetTcpProxyProxyHeaderPtrOutputWithContext(context.Background())
}

func (e TargetTcpProxyProxyHeader) ToTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetTcpProxyProxyHeaderPtrOutput {
	return TargetTcpProxyProxyHeader(e).ToTargetTcpProxyProxyHeaderOutputWithContext(ctx).ToTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx)
}

func (e TargetTcpProxyProxyHeader) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetTcpProxyProxyHeader) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TargetTcpProxyProxyHeader) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TargetTcpProxyProxyHeader) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TargetTcpProxyProxyHeaderOutput struct{ *pulumi.OutputState }

func (TargetTcpProxyProxyHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetTcpProxyProxyHeader)(nil)).Elem()
}

func (o TargetTcpProxyProxyHeaderOutput) ToTargetTcpProxyProxyHeaderOutput() TargetTcpProxyProxyHeaderOutput {
	return o
}

func (o TargetTcpProxyProxyHeaderOutput) ToTargetTcpProxyProxyHeaderOutputWithContext(ctx context.Context) TargetTcpProxyProxyHeaderOutput {
	return o
}

func (o TargetTcpProxyProxyHeaderOutput) ToTargetTcpProxyProxyHeaderPtrOutput() TargetTcpProxyProxyHeaderPtrOutput {
	return o.ToTargetTcpProxyProxyHeaderPtrOutputWithContext(context.Background())
}

func (o TargetTcpProxyProxyHeaderOutput) ToTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetTcpProxyProxyHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetTcpProxyProxyHeader) *TargetTcpProxyProxyHeader {
		return &v
	}).(TargetTcpProxyProxyHeaderPtrOutput)
}

func (o TargetTcpProxyProxyHeaderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TargetTcpProxyProxyHeaderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetTcpProxyProxyHeader) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TargetTcpProxyProxyHeaderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetTcpProxyProxyHeaderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TargetTcpProxyProxyHeader) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TargetTcpProxyProxyHeaderPtrOutput struct{ *pulumi.OutputState }

func (TargetTcpProxyProxyHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetTcpProxyProxyHeader)(nil)).Elem()
}

func (o TargetTcpProxyProxyHeaderPtrOutput) ToTargetTcpProxyProxyHeaderPtrOutput() TargetTcpProxyProxyHeaderPtrOutput {
	return o
}

func (o TargetTcpProxyProxyHeaderPtrOutput) ToTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetTcpProxyProxyHeaderPtrOutput {
	return o
}

func (o TargetTcpProxyProxyHeaderPtrOutput) Elem() TargetTcpProxyProxyHeaderOutput {
	return o.ApplyT(func(v *TargetTcpProxyProxyHeader) TargetTcpProxyProxyHeader {
		if v != nil {
			return *v
		}
		var ret TargetTcpProxyProxyHeader
		return ret
	}).(TargetTcpProxyProxyHeaderOutput)
}

func (o TargetTcpProxyProxyHeaderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TargetTcpProxyProxyHeaderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TargetTcpProxyProxyHeader) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TargetTcpProxyProxyHeaderInput is an input type that accepts TargetTcpProxyProxyHeaderArgs and TargetTcpProxyProxyHeaderOutput values.
// You can construct a concrete instance of `TargetTcpProxyProxyHeaderInput` via:
//
//          TargetTcpProxyProxyHeaderArgs{...}
type TargetTcpProxyProxyHeaderInput interface {
	pulumi.Input

	ToTargetTcpProxyProxyHeaderOutput() TargetTcpProxyProxyHeaderOutput
	ToTargetTcpProxyProxyHeaderOutputWithContext(context.Context) TargetTcpProxyProxyHeaderOutput
}

var targetTcpProxyProxyHeaderPtrType = reflect.TypeOf((**TargetTcpProxyProxyHeader)(nil)).Elem()

type TargetTcpProxyProxyHeaderPtrInput interface {
	pulumi.Input

	ToTargetTcpProxyProxyHeaderPtrOutput() TargetTcpProxyProxyHeaderPtrOutput
	ToTargetTcpProxyProxyHeaderPtrOutputWithContext(context.Context) TargetTcpProxyProxyHeaderPtrOutput
}

type targetTcpProxyProxyHeaderPtr string

func TargetTcpProxyProxyHeaderPtr(v string) TargetTcpProxyProxyHeaderPtrInput {
	return (*targetTcpProxyProxyHeaderPtr)(&v)
}

func (*targetTcpProxyProxyHeaderPtr) ElementType() reflect.Type {
	return targetTcpProxyProxyHeaderPtrType
}

func (in *targetTcpProxyProxyHeaderPtr) ToTargetTcpProxyProxyHeaderPtrOutput() TargetTcpProxyProxyHeaderPtrOutput {
	return pulumi.ToOutput(in).(TargetTcpProxyProxyHeaderPtrOutput)
}

func (in *targetTcpProxyProxyHeaderPtr) ToTargetTcpProxyProxyHeaderPtrOutputWithContext(ctx context.Context) TargetTcpProxyProxyHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TargetTcpProxyProxyHeaderPtrOutput)
}

// Defines how TLS certificates are obtained.
type TlsCertificateContextCertificateSource string

const (
	TlsCertificateContextCertificateSourceInvalid = TlsCertificateContextCertificateSource("INVALID")
	// USE_PATH specifies that the certificates and private key are obtained from a locally mounted filesystem path.
	TlsCertificateContextCertificateSourceUsePath = TlsCertificateContextCertificateSource("USE_PATH")
	// USE_SDS specifies that the certificates and private key are obtained from a SDS server.
	TlsCertificateContextCertificateSourceUseSds = TlsCertificateContextCertificateSource("USE_SDS")
)

func (TlsCertificateContextCertificateSource) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateContextCertificateSource)(nil)).Elem()
}

func (e TlsCertificateContextCertificateSource) ToTlsCertificateContextCertificateSourceOutput() TlsCertificateContextCertificateSourceOutput {
	return pulumi.ToOutput(e).(TlsCertificateContextCertificateSourceOutput)
}

func (e TlsCertificateContextCertificateSource) ToTlsCertificateContextCertificateSourceOutputWithContext(ctx context.Context) TlsCertificateContextCertificateSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TlsCertificateContextCertificateSourceOutput)
}

func (e TlsCertificateContextCertificateSource) ToTlsCertificateContextCertificateSourcePtrOutput() TlsCertificateContextCertificateSourcePtrOutput {
	return e.ToTlsCertificateContextCertificateSourcePtrOutputWithContext(context.Background())
}

func (e TlsCertificateContextCertificateSource) ToTlsCertificateContextCertificateSourcePtrOutputWithContext(ctx context.Context) TlsCertificateContextCertificateSourcePtrOutput {
	return TlsCertificateContextCertificateSource(e).ToTlsCertificateContextCertificateSourceOutputWithContext(ctx).ToTlsCertificateContextCertificateSourcePtrOutputWithContext(ctx)
}

func (e TlsCertificateContextCertificateSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TlsCertificateContextCertificateSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TlsCertificateContextCertificateSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TlsCertificateContextCertificateSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TlsCertificateContextCertificateSourceOutput struct{ *pulumi.OutputState }

func (TlsCertificateContextCertificateSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateContextCertificateSource)(nil)).Elem()
}

func (o TlsCertificateContextCertificateSourceOutput) ToTlsCertificateContextCertificateSourceOutput() TlsCertificateContextCertificateSourceOutput {
	return o
}

func (o TlsCertificateContextCertificateSourceOutput) ToTlsCertificateContextCertificateSourceOutputWithContext(ctx context.Context) TlsCertificateContextCertificateSourceOutput {
	return o
}

func (o TlsCertificateContextCertificateSourceOutput) ToTlsCertificateContextCertificateSourcePtrOutput() TlsCertificateContextCertificateSourcePtrOutput {
	return o.ToTlsCertificateContextCertificateSourcePtrOutputWithContext(context.Background())
}

func (o TlsCertificateContextCertificateSourceOutput) ToTlsCertificateContextCertificateSourcePtrOutputWithContext(ctx context.Context) TlsCertificateContextCertificateSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsCertificateContextCertificateSource) *TlsCertificateContextCertificateSource {
		return &v
	}).(TlsCertificateContextCertificateSourcePtrOutput)
}

func (o TlsCertificateContextCertificateSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TlsCertificateContextCertificateSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TlsCertificateContextCertificateSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TlsCertificateContextCertificateSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TlsCertificateContextCertificateSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TlsCertificateContextCertificateSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TlsCertificateContextCertificateSourcePtrOutput struct{ *pulumi.OutputState }

func (TlsCertificateContextCertificateSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertificateContextCertificateSource)(nil)).Elem()
}

func (o TlsCertificateContextCertificateSourcePtrOutput) ToTlsCertificateContextCertificateSourcePtrOutput() TlsCertificateContextCertificateSourcePtrOutput {
	return o
}

func (o TlsCertificateContextCertificateSourcePtrOutput) ToTlsCertificateContextCertificateSourcePtrOutputWithContext(ctx context.Context) TlsCertificateContextCertificateSourcePtrOutput {
	return o
}

func (o TlsCertificateContextCertificateSourcePtrOutput) Elem() TlsCertificateContextCertificateSourceOutput {
	return o.ApplyT(func(v *TlsCertificateContextCertificateSource) TlsCertificateContextCertificateSource {
		if v != nil {
			return *v
		}
		var ret TlsCertificateContextCertificateSource
		return ret
	}).(TlsCertificateContextCertificateSourceOutput)
}

func (o TlsCertificateContextCertificateSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TlsCertificateContextCertificateSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TlsCertificateContextCertificateSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TlsCertificateContextCertificateSourceInput is an input type that accepts TlsCertificateContextCertificateSourceArgs and TlsCertificateContextCertificateSourceOutput values.
// You can construct a concrete instance of `TlsCertificateContextCertificateSourceInput` via:
//
//          TlsCertificateContextCertificateSourceArgs{...}
type TlsCertificateContextCertificateSourceInput interface {
	pulumi.Input

	ToTlsCertificateContextCertificateSourceOutput() TlsCertificateContextCertificateSourceOutput
	ToTlsCertificateContextCertificateSourceOutputWithContext(context.Context) TlsCertificateContextCertificateSourceOutput
}

var tlsCertificateContextCertificateSourcePtrType = reflect.TypeOf((**TlsCertificateContextCertificateSource)(nil)).Elem()

type TlsCertificateContextCertificateSourcePtrInput interface {
	pulumi.Input

	ToTlsCertificateContextCertificateSourcePtrOutput() TlsCertificateContextCertificateSourcePtrOutput
	ToTlsCertificateContextCertificateSourcePtrOutputWithContext(context.Context) TlsCertificateContextCertificateSourcePtrOutput
}

type tlsCertificateContextCertificateSourcePtr string

func TlsCertificateContextCertificateSourcePtr(v string) TlsCertificateContextCertificateSourcePtrInput {
	return (*tlsCertificateContextCertificateSourcePtr)(&v)
}

func (*tlsCertificateContextCertificateSourcePtr) ElementType() reflect.Type {
	return tlsCertificateContextCertificateSourcePtrType
}

func (in *tlsCertificateContextCertificateSourcePtr) ToTlsCertificateContextCertificateSourcePtrOutput() TlsCertificateContextCertificateSourcePtrOutput {
	return pulumi.ToOutput(in).(TlsCertificateContextCertificateSourcePtrOutput)
}

func (in *tlsCertificateContextCertificateSourcePtr) ToTlsCertificateContextCertificateSourcePtrOutputWithContext(ctx context.Context) TlsCertificateContextCertificateSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TlsCertificateContextCertificateSourcePtrOutput)
}

// Defines how TLS certificates are obtained.
type TlsValidationContextValidationSource string

const (
	TlsValidationContextValidationSourceInvalid = TlsValidationContextValidationSource("INVALID")
	// USE_PATH specifies that the certificates and private key are obtained from a locally mounted filesystem path.
	TlsValidationContextValidationSourceUsePath = TlsValidationContextValidationSource("USE_PATH")
	// USE_SDS specifies that the certificates and private key are obtained from a SDS server.
	TlsValidationContextValidationSourceUseSds = TlsValidationContextValidationSource("USE_SDS")
)

func (TlsValidationContextValidationSource) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsValidationContextValidationSource)(nil)).Elem()
}

func (e TlsValidationContextValidationSource) ToTlsValidationContextValidationSourceOutput() TlsValidationContextValidationSourceOutput {
	return pulumi.ToOutput(e).(TlsValidationContextValidationSourceOutput)
}

func (e TlsValidationContextValidationSource) ToTlsValidationContextValidationSourceOutputWithContext(ctx context.Context) TlsValidationContextValidationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TlsValidationContextValidationSourceOutput)
}

func (e TlsValidationContextValidationSource) ToTlsValidationContextValidationSourcePtrOutput() TlsValidationContextValidationSourcePtrOutput {
	return e.ToTlsValidationContextValidationSourcePtrOutputWithContext(context.Background())
}

func (e TlsValidationContextValidationSource) ToTlsValidationContextValidationSourcePtrOutputWithContext(ctx context.Context) TlsValidationContextValidationSourcePtrOutput {
	return TlsValidationContextValidationSource(e).ToTlsValidationContextValidationSourceOutputWithContext(ctx).ToTlsValidationContextValidationSourcePtrOutputWithContext(ctx)
}

func (e TlsValidationContextValidationSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TlsValidationContextValidationSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TlsValidationContextValidationSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TlsValidationContextValidationSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TlsValidationContextValidationSourceOutput struct{ *pulumi.OutputState }

func (TlsValidationContextValidationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsValidationContextValidationSource)(nil)).Elem()
}

func (o TlsValidationContextValidationSourceOutput) ToTlsValidationContextValidationSourceOutput() TlsValidationContextValidationSourceOutput {
	return o
}

func (o TlsValidationContextValidationSourceOutput) ToTlsValidationContextValidationSourceOutputWithContext(ctx context.Context) TlsValidationContextValidationSourceOutput {
	return o
}

func (o TlsValidationContextValidationSourceOutput) ToTlsValidationContextValidationSourcePtrOutput() TlsValidationContextValidationSourcePtrOutput {
	return o.ToTlsValidationContextValidationSourcePtrOutputWithContext(context.Background())
}

func (o TlsValidationContextValidationSourceOutput) ToTlsValidationContextValidationSourcePtrOutputWithContext(ctx context.Context) TlsValidationContextValidationSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsValidationContextValidationSource) *TlsValidationContextValidationSource {
		return &v
	}).(TlsValidationContextValidationSourcePtrOutput)
}

func (o TlsValidationContextValidationSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TlsValidationContextValidationSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TlsValidationContextValidationSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TlsValidationContextValidationSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TlsValidationContextValidationSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TlsValidationContextValidationSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TlsValidationContextValidationSourcePtrOutput struct{ *pulumi.OutputState }

func (TlsValidationContextValidationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsValidationContextValidationSource)(nil)).Elem()
}

func (o TlsValidationContextValidationSourcePtrOutput) ToTlsValidationContextValidationSourcePtrOutput() TlsValidationContextValidationSourcePtrOutput {
	return o
}

func (o TlsValidationContextValidationSourcePtrOutput) ToTlsValidationContextValidationSourcePtrOutputWithContext(ctx context.Context) TlsValidationContextValidationSourcePtrOutput {
	return o
}

func (o TlsValidationContextValidationSourcePtrOutput) Elem() TlsValidationContextValidationSourceOutput {
	return o.ApplyT(func(v *TlsValidationContextValidationSource) TlsValidationContextValidationSource {
		if v != nil {
			return *v
		}
		var ret TlsValidationContextValidationSource
		return ret
	}).(TlsValidationContextValidationSourceOutput)
}

func (o TlsValidationContextValidationSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TlsValidationContextValidationSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TlsValidationContextValidationSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TlsValidationContextValidationSourceInput is an input type that accepts TlsValidationContextValidationSourceArgs and TlsValidationContextValidationSourceOutput values.
// You can construct a concrete instance of `TlsValidationContextValidationSourceInput` via:
//
//          TlsValidationContextValidationSourceArgs{...}
type TlsValidationContextValidationSourceInput interface {
	pulumi.Input

	ToTlsValidationContextValidationSourceOutput() TlsValidationContextValidationSourceOutput
	ToTlsValidationContextValidationSourceOutputWithContext(context.Context) TlsValidationContextValidationSourceOutput
}

var tlsValidationContextValidationSourcePtrType = reflect.TypeOf((**TlsValidationContextValidationSource)(nil)).Elem()

type TlsValidationContextValidationSourcePtrInput interface {
	pulumi.Input

	ToTlsValidationContextValidationSourcePtrOutput() TlsValidationContextValidationSourcePtrOutput
	ToTlsValidationContextValidationSourcePtrOutputWithContext(context.Context) TlsValidationContextValidationSourcePtrOutput
}

type tlsValidationContextValidationSourcePtr string

func TlsValidationContextValidationSourcePtr(v string) TlsValidationContextValidationSourcePtrInput {
	return (*tlsValidationContextValidationSourcePtr)(&v)
}

func (*tlsValidationContextValidationSourcePtr) ElementType() reflect.Type {
	return tlsValidationContextValidationSourcePtrType
}

func (in *tlsValidationContextValidationSourcePtr) ToTlsValidationContextValidationSourcePtrOutput() TlsValidationContextValidationSourcePtrOutput {
	return pulumi.ToOutput(in).(TlsValidationContextValidationSourcePtrOutput)
}

func (in *tlsValidationContextValidationSourcePtr) ToTlsValidationContextValidationSourcePtrOutputWithContext(ctx context.Context) TlsValidationContextValidationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TlsValidationContextValidationSourcePtrOutput)
}

// The stack type for this VPN gateway to identify the IP protocols that are enabled. If not specified, IPV4_ONLY will be used.
type VpnGatewayStackType string

const (
	// Enable VPN gateway with both IPv4 and IPv6 protocols.
	VpnGatewayStackTypeIpv4Ipv6 = VpnGatewayStackType("IPV4_IPV6")
	// Enable VPN gateway with only IPv4 protocol.
	VpnGatewayStackTypeIpv4Only = VpnGatewayStackType("IPV4_ONLY")
)

func (VpnGatewayStackType) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayStackType)(nil)).Elem()
}

func (e VpnGatewayStackType) ToVpnGatewayStackTypeOutput() VpnGatewayStackTypeOutput {
	return pulumi.ToOutput(e).(VpnGatewayStackTypeOutput)
}

func (e VpnGatewayStackType) ToVpnGatewayStackTypeOutputWithContext(ctx context.Context) VpnGatewayStackTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VpnGatewayStackTypeOutput)
}

func (e VpnGatewayStackType) ToVpnGatewayStackTypePtrOutput() VpnGatewayStackTypePtrOutput {
	return e.ToVpnGatewayStackTypePtrOutputWithContext(context.Background())
}

func (e VpnGatewayStackType) ToVpnGatewayStackTypePtrOutputWithContext(ctx context.Context) VpnGatewayStackTypePtrOutput {
	return VpnGatewayStackType(e).ToVpnGatewayStackTypeOutputWithContext(ctx).ToVpnGatewayStackTypePtrOutputWithContext(ctx)
}

func (e VpnGatewayStackType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VpnGatewayStackType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VpnGatewayStackType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VpnGatewayStackType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VpnGatewayStackTypeOutput struct{ *pulumi.OutputState }

func (VpnGatewayStackTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayStackType)(nil)).Elem()
}

func (o VpnGatewayStackTypeOutput) ToVpnGatewayStackTypeOutput() VpnGatewayStackTypeOutput {
	return o
}

func (o VpnGatewayStackTypeOutput) ToVpnGatewayStackTypeOutputWithContext(ctx context.Context) VpnGatewayStackTypeOutput {
	return o
}

func (o VpnGatewayStackTypeOutput) ToVpnGatewayStackTypePtrOutput() VpnGatewayStackTypePtrOutput {
	return o.ToVpnGatewayStackTypePtrOutputWithContext(context.Background())
}

func (o VpnGatewayStackTypeOutput) ToVpnGatewayStackTypePtrOutputWithContext(ctx context.Context) VpnGatewayStackTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayStackType) *VpnGatewayStackType {
		return &v
	}).(VpnGatewayStackTypePtrOutput)
}

func (o VpnGatewayStackTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VpnGatewayStackTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpnGatewayStackType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VpnGatewayStackTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpnGatewayStackTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VpnGatewayStackType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VpnGatewayStackTypePtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayStackTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayStackType)(nil)).Elem()
}

func (o VpnGatewayStackTypePtrOutput) ToVpnGatewayStackTypePtrOutput() VpnGatewayStackTypePtrOutput {
	return o
}

func (o VpnGatewayStackTypePtrOutput) ToVpnGatewayStackTypePtrOutputWithContext(ctx context.Context) VpnGatewayStackTypePtrOutput {
	return o
}

func (o VpnGatewayStackTypePtrOutput) Elem() VpnGatewayStackTypeOutput {
	return o.ApplyT(func(v *VpnGatewayStackType) VpnGatewayStackType {
		if v != nil {
			return *v
		}
		var ret VpnGatewayStackType
		return ret
	}).(VpnGatewayStackTypeOutput)
}

func (o VpnGatewayStackTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VpnGatewayStackTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VpnGatewayStackType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VpnGatewayStackTypeInput is an input type that accepts VpnGatewayStackTypeArgs and VpnGatewayStackTypeOutput values.
// You can construct a concrete instance of `VpnGatewayStackTypeInput` via:
//
//          VpnGatewayStackTypeArgs{...}
type VpnGatewayStackTypeInput interface {
	pulumi.Input

	ToVpnGatewayStackTypeOutput() VpnGatewayStackTypeOutput
	ToVpnGatewayStackTypeOutputWithContext(context.Context) VpnGatewayStackTypeOutput
}

var vpnGatewayStackTypePtrType = reflect.TypeOf((**VpnGatewayStackType)(nil)).Elem()

type VpnGatewayStackTypePtrInput interface {
	pulumi.Input

	ToVpnGatewayStackTypePtrOutput() VpnGatewayStackTypePtrOutput
	ToVpnGatewayStackTypePtrOutputWithContext(context.Context) VpnGatewayStackTypePtrOutput
}

type vpnGatewayStackTypePtr string

func VpnGatewayStackTypePtr(v string) VpnGatewayStackTypePtrInput {
	return (*vpnGatewayStackTypePtr)(&v)
}

func (*vpnGatewayStackTypePtr) ElementType() reflect.Type {
	return vpnGatewayStackTypePtrType
}

func (in *vpnGatewayStackTypePtr) ToVpnGatewayStackTypePtrOutput() VpnGatewayStackTypePtrOutput {
	return pulumi.ToOutput(in).(VpnGatewayStackTypePtrOutput)
}

func (in *vpnGatewayStackTypePtr) ToVpnGatewayStackTypePtrOutputWithContext(ctx context.Context) VpnGatewayStackTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VpnGatewayStackTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessConfigNetworkTierInput)(nil)).Elem(), AccessConfigNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*AccessConfigNetworkTierPtrInput)(nil)).Elem(), AccessConfigNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*AccessConfigTypeInput)(nil)).Elem(), AccessConfigType("DIRECT_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*AccessConfigTypePtrInput)(nil)).Elem(), AccessConfigType("DIRECT_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressAddressTypeInput)(nil)).Elem(), AddressAddressType("DNS_FORWARDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressAddressTypePtrInput)(nil)).Elem(), AddressAddressType("DNS_FORWARDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressIpVersionInput)(nil)).Elem(), AddressIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressIpVersionPtrInput)(nil)).Elem(), AddressIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressIpv6EndpointTypeInput)(nil)).Elem(), AddressIpv6EndpointType("VM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressIpv6EndpointTypePtrInput)(nil)).Elem(), AddressIpv6EndpointType("VM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressNetworkTierInput)(nil)).Elem(), AddressNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressNetworkTierPtrInput)(nil)).Elem(), AddressNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressPurposeInput)(nil)).Elem(), AddressPurpose("DNS_RESOLVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*AddressPurposePtrInput)(nil)).Elem(), AddressPurpose("DNS_RESOLVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceInput)(nil)).Elem(), AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface("NVDIMM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrInput)(nil)).Elem(), AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterface("NVDIMM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalInput)(nil)).Elem(), AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval("PERIODIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrInput)(nil)).Elem(), AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceInterval("PERIODIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInitializeParamsArchitectureInput)(nil)).Elem(), AttachedDiskInitializeParamsArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInitializeParamsArchitecturePtrInput)(nil)).Elem(), AttachedDiskInitializeParamsArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInitializeParamsInterfaceInput)(nil)).Elem(), AttachedDiskInitializeParamsInterface("NVME"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInitializeParamsInterfacePtrInput)(nil)).Elem(), AttachedDiskInitializeParamsInterface("NVME"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInitializeParamsOnUpdateActionInput)(nil)).Elem(), AttachedDiskInitializeParamsOnUpdateAction("RECREATE_DISK"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInitializeParamsOnUpdateActionPtrInput)(nil)).Elem(), AttachedDiskInitializeParamsOnUpdateAction("RECREATE_DISK"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInterfaceInput)(nil)).Elem(), AttachedDiskInterface("NVDIMM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskInterfacePtrInput)(nil)).Elem(), AttachedDiskInterface("NVDIMM"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskModeInput)(nil)).Elem(), AttachedDiskMode("READ_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskModePtrInput)(nil)).Elem(), AttachedDiskMode("READ_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskSavedStateInput)(nil)).Elem(), AttachedDiskSavedState("DISK_SAVED_STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskSavedStatePtrInput)(nil)).Elem(), AttachedDiskSavedState("DISK_SAVED_STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskTypeInput)(nil)).Elem(), AttachedDiskType("PERSISTENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDiskTypePtrInput)(nil)).Elem(), AttachedDiskType("PERSISTENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("ADMIN_READ"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("ADMIN_READ"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationPolicyPrincipalBindingInput)(nil)).Elem(), AuthenticationPolicyPrincipalBinding("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationPolicyPrincipalBindingPtrInput)(nil)).Elem(), AuthenticationPolicyPrincipalBinding("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationLoggingOptionsPermissionTypeInput)(nil)).Elem(), AuthorizationLoggingOptionsPermissionType("ADMIN_READ"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationLoggingOptionsPermissionTypePtrInput)(nil)).Elem(), AuthorizationLoggingOptionsPermissionType("ADMIN_READ"))
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyCpuUtilizationPredictiveMethodInput)(nil)).Elem(), AutoscalingPolicyCpuUtilizationPredictiveMethod("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyCpuUtilizationPredictiveMethodPtrInput)(nil)).Elem(), AutoscalingPolicyCpuUtilizationPredictiveMethod("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeInput)(nil)).Elem(), AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType("DELTA_PER_MINUTE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrInput)(nil)).Elem(), AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType("DELTA_PER_MINUTE"))
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyModeInput)(nil)).Elem(), AutoscalingPolicyMode("OFF"))
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingPolicyModePtrInput)(nil)).Elem(), AutoscalingPolicyMode("OFF"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendBalancingModeInput)(nil)).Elem(), BackendBalancingMode("CONNECTION"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendBalancingModePtrInput)(nil)).Elem(), BackendBalancingMode("CONNECTION"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendBucketCdnPolicyCacheModeInput)(nil)).Elem(), BackendBucketCdnPolicyCacheMode("CACHE_ALL_STATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendBucketCdnPolicyCacheModePtrInput)(nil)).Elem(), BackendBucketCdnPolicyCacheMode("CACHE_ALL_STATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendBucketCompressionModeInput)(nil)).Elem(), BackendBucketCompressionMode("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendBucketCompressionModePtrInput)(nil)).Elem(), BackendBucketCompressionMode("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceCdnPolicyCacheModeInput)(nil)).Elem(), BackendServiceCdnPolicyCacheMode("CACHE_ALL_STATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceCdnPolicyCacheModePtrInput)(nil)).Elem(), BackendServiceCdnPolicyCacheMode("CACHE_ALL_STATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceCompressionModeInput)(nil)).Elem(), BackendServiceCompressionMode("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceCompressionModePtrInput)(nil)).Elem(), BackendServiceCompressionMode("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsInput)(nil)).Elem(), BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends("ALWAYS_PERSIST"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrInput)(nil)).Elem(), BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackends("ALWAYS_PERSIST"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceConnectionTrackingPolicyTrackingModeInput)(nil)).Elem(), BackendServiceConnectionTrackingPolicyTrackingMode("INVALID_TRACKING_MODE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceConnectionTrackingPolicyTrackingModePtrInput)(nil)).Elem(), BackendServiceConnectionTrackingPolicyTrackingMode("INVALID_TRACKING_MODE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceLoadBalancingSchemeInput)(nil)).Elem(), BackendServiceLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceLoadBalancingSchemePtrInput)(nil)).Elem(), BackendServiceLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceLocalityLbPolicyInput)(nil)).Elem(), BackendServiceLocalityLbPolicy("INVALID_LB_POLICY"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceLocalityLbPolicyPtrInput)(nil)).Elem(), BackendServiceLocalityLbPolicy("INVALID_LB_POLICY"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceProtocolInput)(nil)).Elem(), BackendServiceProtocol("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceProtocolPtrInput)(nil)).Elem(), BackendServiceProtocol("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceSessionAffinityInput)(nil)).Elem(), BackendServiceSessionAffinity("CLIENT_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceSessionAffinityPtrInput)(nil)).Elem(), BackendServiceSessionAffinity("CLIENT_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*CallCredentialsCallCredentialTypeInput)(nil)).Elem(), CallCredentialsCallCredentialType("FROM_PLUGIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*CallCredentialsCallCredentialTypePtrInput)(nil)).Elem(), CallCredentialsCallCredentialType("FROM_PLUGIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCredentialsChannelCredentialTypeInput)(nil)).Elem(), ChannelCredentialsChannelCredentialType("CERTIFICATES"))
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCredentialsChannelCredentialTypePtrInput)(nil)).Elem(), ChannelCredentialsChannelCredentialType("CERTIFICATES"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClientTlsSettingsModeInput)(nil)).Elem(), ClientTlsSettingsMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClientTlsSettingsModePtrInput)(nil)).Elem(), ClientTlsSettingsMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionIamInput)(nil)).Elem(), ConditionIam("APPROVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionIamPtrInput)(nil)).Elem(), ConditionIam("APPROVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionOpInput)(nil)).Elem(), ConditionOp("DISCHARGED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionOpPtrInput)(nil)).Elem(), ConditionOp("DISCHARGED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionSysInput)(nil)).Elem(), ConditionSys("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConditionSysPtrInput)(nil)).Elem(), ConditionSys("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*DeprecationStatusStateInput)(nil)).Elem(), DeprecationStatusState("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DeprecationStatusStatePtrInput)(nil)).Elem(), DeprecationStatusState("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskArchitectureInput)(nil)).Elem(), DiskArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskArchitecturePtrInput)(nil)).Elem(), DiskArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskInstantiationConfigInstantiateFromInput)(nil)).Elem(), DiskInstantiationConfigInstantiateFrom("ATTACH_READ_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskInstantiationConfigInstantiateFromPtrInput)(nil)).Elem(), DiskInstantiationConfigInstantiateFrom("ATTACH_READ_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskInterfaceInput)(nil)).Elem(), DiskInterface("NVME"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskInterfacePtrInput)(nil)).Elem(), DiskInterface("NVME"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskStorageTypeInput)(nil)).Elem(), DiskStorageType("HDD"))
	pulumi.RegisterInputType(reflect.TypeOf((*DiskStorageTypePtrInput)(nil)).Elem(), DiskStorageType("HDD"))
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionPolicyTargetShapeInput)(nil)).Elem(), DistributionPolicyTargetShape("ANY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionPolicyTargetShapePtrInput)(nil)).Elem(), DistributionPolicyTargetShape("ANY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalVpnGatewayRedundancyTypeInput)(nil)).Elem(), ExternalVpnGatewayRedundancyType("FOUR_IPS_REDUNDANCY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalVpnGatewayRedundancyTypePtrInput)(nil)).Elem(), ExternalVpnGatewayRedundancyType("FOUR_IPS_REDUNDANCY"))
	pulumi.RegisterInputType(reflect.TypeOf((*FileContentBufferFileTypeInput)(nil)).Elem(), FileContentBufferFileType("BIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*FileContentBufferFileTypePtrInput)(nil)).Elem(), FileContentBufferFileType("BIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDirectionInput)(nil)).Elem(), FirewallDirection("EGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallDirectionPtrInput)(nil)).Elem(), FirewallDirection("EGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLogConfigMetadataInput)(nil)).Elem(), FirewallLogConfigMetadata("EXCLUDE_ALL_METADATA"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallLogConfigMetadataPtrInput)(nil)).Elem(), FirewallLogConfigMetadata("EXCLUDE_ALL_METADATA"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleDirectionInput)(nil)).Elem(), FirewallPolicyRuleDirection("EGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleDirectionPtrInput)(nil)).Elem(), FirewallPolicyRuleDirection("EGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyVpcNetworkScopeInput)(nil)).Elem(), FirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK"))
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyVpcNetworkScopePtrInput)(nil)).Elem(), FirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleIpProtocolInput)(nil)).Elem(), ForwardingRuleIpProtocol("AH"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleIpProtocolPtrInput)(nil)).Elem(), ForwardingRuleIpProtocol("AH"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleIpVersionInput)(nil)).Elem(), ForwardingRuleIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleIpVersionPtrInput)(nil)).Elem(), ForwardingRuleIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleLoadBalancingSchemeInput)(nil)).Elem(), ForwardingRuleLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleLoadBalancingSchemePtrInput)(nil)).Elem(), ForwardingRuleLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleNetworkTierInput)(nil)).Elem(), ForwardingRuleNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleNetworkTierPtrInput)(nil)).Elem(), ForwardingRuleNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRulePscConnectionStatusInput)(nil)).Elem(), ForwardingRulePscConnectionStatus("ACCEPTED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRulePscConnectionStatusPtrInput)(nil)).Elem(), ForwardingRulePscConnectionStatus("ACCEPTED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GRPCHealthCheckPortSpecificationInput)(nil)).Elem(), GRPCHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*GRPCHealthCheckPortSpecificationPtrInput)(nil)).Elem(), GRPCHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressAddressTypeInput)(nil)).Elem(), GlobalAddressAddressType("DNS_FORWARDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressAddressTypePtrInput)(nil)).Elem(), GlobalAddressAddressType("DNS_FORWARDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressIpVersionInput)(nil)).Elem(), GlobalAddressIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressIpVersionPtrInput)(nil)).Elem(), GlobalAddressIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressIpv6EndpointTypeInput)(nil)).Elem(), GlobalAddressIpv6EndpointType("VM"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressIpv6EndpointTypePtrInput)(nil)).Elem(), GlobalAddressIpv6EndpointType("VM"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressNetworkTierInput)(nil)).Elem(), GlobalAddressNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressNetworkTierPtrInput)(nil)).Elem(), GlobalAddressNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressPurposeInput)(nil)).Elem(), GlobalAddressPurpose("DNS_RESOLVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalAddressPurposePtrInput)(nil)).Elem(), GlobalAddressPurpose("DNS_RESOLVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleIpProtocolInput)(nil)).Elem(), GlobalForwardingRuleIpProtocol("AH"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleIpProtocolPtrInput)(nil)).Elem(), GlobalForwardingRuleIpProtocol("AH"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleIpVersionInput)(nil)).Elem(), GlobalForwardingRuleIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleIpVersionPtrInput)(nil)).Elem(), GlobalForwardingRuleIpVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleLoadBalancingSchemeInput)(nil)).Elem(), GlobalForwardingRuleLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleLoadBalancingSchemePtrInput)(nil)).Elem(), GlobalForwardingRuleLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleNetworkTierInput)(nil)).Elem(), GlobalForwardingRuleNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRuleNetworkTierPtrInput)(nil)).Elem(), GlobalForwardingRuleNetworkTier("FIXED_STANDARD"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRulePscConnectionStatusInput)(nil)).Elem(), GlobalForwardingRulePscConnectionStatus("ACCEPTED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalForwardingRulePscConnectionStatusPtrInput)(nil)).Elem(), GlobalForwardingRulePscConnectionStatus("ACCEPTED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalNetworkEndpointGroupNetworkEndpointTypeInput)(nil)).Elem(), GlobalNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalNetworkEndpointGroupNetworkEndpointTypePtrInput)(nil)).Elem(), GlobalNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalNetworkEndpointGroupTypeInput)(nil)).Elem(), GlobalNetworkEndpointGroupType("LOAD_BALANCING"))
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalNetworkEndpointGroupTypePtrInput)(nil)).Elem(), GlobalNetworkEndpointGroupType("LOAD_BALANCING"))
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsFeatureTypeInput)(nil)).Elem(), GuestOsFeatureType("BARE_METAL_LINUX_COMPATIBLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsFeatureTypePtrInput)(nil)).Elem(), GuestOsFeatureType("BARE_METAL_LINUX_COMPATIBLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTP2HealthCheckPortSpecificationInput)(nil)).Elem(), HTTP2HealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTP2HealthCheckPortSpecificationPtrInput)(nil)).Elem(), HTTP2HealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTP2HealthCheckProxyHeaderInput)(nil)).Elem(), HTTP2HealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTP2HealthCheckProxyHeaderPtrInput)(nil)).Elem(), HTTP2HealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTP2HealthCheckWeightReportModeInput)(nil)).Elem(), HTTP2HealthCheckWeightReportMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTP2HealthCheckWeightReportModePtrInput)(nil)).Elem(), HTTP2HealthCheckWeightReportMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPHealthCheckPortSpecificationInput)(nil)).Elem(), HTTPHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPHealthCheckPortSpecificationPtrInput)(nil)).Elem(), HTTPHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPHealthCheckProxyHeaderInput)(nil)).Elem(), HTTPHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPHealthCheckProxyHeaderPtrInput)(nil)).Elem(), HTTPHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPHealthCheckWeightReportModeInput)(nil)).Elem(), HTTPHealthCheckWeightReportMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPHealthCheckWeightReportModePtrInput)(nil)).Elem(), HTTPHealthCheckWeightReportMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPSHealthCheckPortSpecificationInput)(nil)).Elem(), HTTPSHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPSHealthCheckPortSpecificationPtrInput)(nil)).Elem(), HTTPSHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPSHealthCheckProxyHeaderInput)(nil)).Elem(), HTTPSHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPSHealthCheckProxyHeaderPtrInput)(nil)).Elem(), HTTPSHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPSHealthCheckWeightReportModeInput)(nil)).Elem(), HTTPSHealthCheckWeightReportMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HTTPSHealthCheckWeightReportModePtrInput)(nil)).Elem(), HTTPSHealthCheckWeightReportMode("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckTypeInput)(nil)).Elem(), HealthCheckType("GRPC"))
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckTypePtrInput)(nil)).Elem(), HealthCheckType("GRPC"))
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRedirectActionRedirectResponseCodeInput)(nil)).Elem(), HttpRedirectActionRedirectResponseCode("FOUND"))
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRedirectActionRedirectResponseCodePtrInput)(nil)).Elem(), HttpRedirectActionRedirectResponseCode("FOUND"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageArchitectureInput)(nil)).Elem(), ImageArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageArchitecturePtrInput)(nil)).Elem(), ImageArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRawDiskContainerTypeInput)(nil)).Elem(), ImageRawDiskContainerType("TAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRawDiskContainerTypePtrInput)(nil)).Elem(), ImageRawDiskContainerType("TAR"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageSourceTypeInput)(nil)).Elem(), ImageSourceType("RAW"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageSourceTypePtrInput)(nil)).Elem(), ImageSourceType("RAW"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckInput)(nil)).Elem(), InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck("OFF"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrInput)(nil)).Elem(), InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheck("OFF"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyUpdateInstancesInput)(nil)).Elem(), InstanceGroupManagerAutoHealingPolicyUpdateInstances("ALWAYS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrInput)(nil)).Elem(), InstanceGroupManagerAutoHealingPolicyUpdateInstances("ALWAYS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerFailoverActionInput)(nil)).Elem(), InstanceGroupManagerFailoverAction("NO_FAILOVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerFailoverActionPtrInput)(nil)).Elem(), InstanceGroupManagerFailoverAction("NO_FAILOVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerListManagedInstancesResultsInput)(nil)).Elem(), InstanceGroupManagerListManagedInstancesResults("PAGELESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerListManagedInstancesResultsPtrInput)(nil)).Elem(), InstanceGroupManagerListManagedInstancesResults("PAGELESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyInstanceRedistributionType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyInstanceRedistributionType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMinimalActionInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyMinimalAction("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMinimalActionPtrInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyMinimalAction("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyReplacementMethodInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyReplacementMethod("RECREATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyReplacementMethodPtrInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyReplacementMethod("RECREATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyTypeInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyType("OPPORTUNISTIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupManagerUpdatePolicyTypePtrInput)(nil)).Elem(), InstanceGroupManagerUpdatePolicyType("OPPORTUNISTIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceKeyRevocationActionTypeInput)(nil)).Elem(), InstanceKeyRevocationActionType("KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceKeyRevocationActionTypePtrInput)(nil)).Elem(), InstanceKeyRevocationActionType("KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePostKeyRevocationActionTypeInput)(nil)).Elem(), InstancePostKeyRevocationActionType("NOOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePostKeyRevocationActionTypePtrInput)(nil)).Elem(), InstancePostKeyRevocationActionType("NOOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateIpv6GoogleAccessInput)(nil)).Elem(), InstancePrivateIpv6GoogleAccess("ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateIpv6GoogleAccessPtrInput)(nil)).Elem(), InstancePrivateIpv6GoogleAccess("ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePropertiesKeyRevocationActionTypeInput)(nil)).Elem(), InstancePropertiesKeyRevocationActionType("KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePropertiesKeyRevocationActionTypePtrInput)(nil)).Elem(), InstancePropertiesKeyRevocationActionType("KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePropertiesPostKeyRevocationActionTypeInput)(nil)).Elem(), InstancePropertiesPostKeyRevocationActionType("NOOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePropertiesPostKeyRevocationActionTypePtrInput)(nil)).Elem(), InstancePropertiesPostKeyRevocationActionType("NOOP"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePropertiesPrivateIpv6GoogleAccessInput)(nil)).Elem(), InstancePropertiesPrivateIpv6GoogleAccess("ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePropertiesPrivateIpv6GoogleAccessPtrInput)(nil)).Elem(), InstancePropertiesPrivateIpv6GoogleAccess("ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentBandwidthInput)(nil)).Elem(), InterconnectAttachmentBandwidth("BPS_100M"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentBandwidthPtrInput)(nil)).Elem(), InterconnectAttachmentBandwidth("BPS_100M"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentEdgeAvailabilityDomainInput)(nil)).Elem(), InterconnectAttachmentEdgeAvailabilityDomain("AVAILABILITY_DOMAIN_1"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentEdgeAvailabilityDomainPtrInput)(nil)).Elem(), InterconnectAttachmentEdgeAvailabilityDomain("AVAILABILITY_DOMAIN_1"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentEncryptionInput)(nil)).Elem(), InterconnectAttachmentEncryption("IPSEC"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentEncryptionPtrInput)(nil)).Elem(), InterconnectAttachmentEncryption("IPSEC"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentStackTypeInput)(nil)).Elem(), InterconnectAttachmentStackType("IPV4_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentStackTypePtrInput)(nil)).Elem(), InterconnectAttachmentStackType("IPV4_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentTypeInput)(nil)).Elem(), InterconnectAttachmentType("DEDICATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectAttachmentTypePtrInput)(nil)).Elem(), InterconnectAttachmentType("DEDICATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectInterconnectTypeInput)(nil)).Elem(), InterconnectInterconnectType("DEDICATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectInterconnectTypePtrInput)(nil)).Elem(), InterconnectInterconnectType("DEDICATED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectLinkTypeInput)(nil)).Elem(), InterconnectLinkType("LINK_TYPE_ETHERNET_100G_LR"))
	pulumi.RegisterInputType(reflect.TypeOf((*InterconnectLinkTypePtrInput)(nil)).Elem(), InterconnectLinkType("LINK_TYPE_ETHERNET_100G_LR"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigCloudAuditOptionsLogNameInput)(nil)).Elem(), LogConfigCloudAuditOptionsLogName("ADMIN_ACTIVITY"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigCloudAuditOptionsLogNamePtrInput)(nil)).Elem(), LogConfigCloudAuditOptionsLogName("ADMIN_ACTIVITY"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigDataAccessOptionsLogModeInput)(nil)).Elem(), LogConfigDataAccessOptionsLogMode("LOG_FAIL_CLOSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogConfigDataAccessOptionsLogModePtrInput)(nil)).Elem(), LogConfigDataAccessOptionsLogMode("LOG_FAIL_CLOSED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataFilterFilterMatchCriteriaInput)(nil)).Elem(), MetadataFilterFilterMatchCriteria("MATCH_ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataFilterFilterMatchCriteriaPtrInput)(nil)).Elem(), MetadataFilterFilterMatchCriteria("MATCH_ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*MutualTlsModeInput)(nil)).Elem(), MutualTlsMode("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*MutualTlsModePtrInput)(nil)).Elem(), MutualTlsMode("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEndpointGroupNetworkEndpointTypeInput)(nil)).Elem(), NetworkEndpointGroupNetworkEndpointType("GCE_VM_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEndpointGroupNetworkEndpointTypePtrInput)(nil)).Elem(), NetworkEndpointGroupNetworkEndpointType("GCE_VM_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEndpointGroupTypeInput)(nil)).Elem(), NetworkEndpointGroupType("LOAD_BALANCING"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEndpointGroupTypePtrInput)(nil)).Elem(), NetworkEndpointGroupType("LOAD_BALANCING"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyVpcNetworkScopeInput)(nil)).Elem(), NetworkFirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkFirewallPolicyVpcNetworkScopePtrInput)(nil)).Elem(), NetworkFirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceNicTypeInput)(nil)).Elem(), NetworkInterfaceNicType("GVNIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceNicTypePtrInput)(nil)).Elem(), NetworkInterfaceNicType("GVNIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceStackTypeInput)(nil)).Elem(), NetworkInterfaceStackType("IPV4_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceStackTypePtrInput)(nil)).Elem(), NetworkInterfaceStackType("IPV4_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceSubInterfaceIpAllocationModeInput)(nil)).Elem(), NetworkInterfaceSubInterfaceIpAllocationMode("ALLOCATE_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceSubInterfaceIpAllocationModePtrInput)(nil)).Elem(), NetworkInterfaceSubInterfaceIpAllocationMode("ALLOCATE_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkNetworkFirewallPolicyEnforcementOrderInput)(nil)).Elem(), NetworkNetworkFirewallPolicyEnforcementOrder("AFTER_CLASSIC_FIREWALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkNetworkFirewallPolicyEnforcementOrderPtrInput)(nil)).Elem(), NetworkNetworkFirewallPolicyEnforcementOrder("AFTER_CLASSIC_FIREWALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTierInput)(nil)).Elem(), NetworkPerformanceConfigExternalIpEgressBandwidthTier("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrInput)(nil)).Elem(), NetworkPerformanceConfigExternalIpEgressBandwidthTier("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTierInput)(nil)).Elem(), NetworkPerformanceConfigTotalEgressBandwidthTier("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPerformanceConfigTotalEgressBandwidthTierPtrInput)(nil)).Elem(), NetworkPerformanceConfigTotalEgressBandwidthTier("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutingConfigRoutingModeInput)(nil)).Elem(), NetworkRoutingConfigRoutingMode("GLOBAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutingConfigRoutingModePtrInput)(nil)).Elem(), NetworkRoutingConfigRoutingMode("GLOBAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupAutoscalingPolicyModeInput)(nil)).Elem(), NodeGroupAutoscalingPolicyMode("MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupAutoscalingPolicyModePtrInput)(nil)).Elem(), NodeGroupAutoscalingPolicyMode("MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupMaintenancePolicyInput)(nil)).Elem(), NodeGroupMaintenancePolicy("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupMaintenancePolicyPtrInput)(nil)).Elem(), NodeGroupMaintenancePolicy("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateCpuOvercommitTypeInput)(nil)).Elem(), NodeTemplateCpuOvercommitType("CPU_OVERCOMMIT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateCpuOvercommitTypePtrInput)(nil)).Elem(), NodeTemplateCpuOvercommitType("CPU_OVERCOMMIT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityPolicyTypeInput)(nil)).Elem(), OrganizationSecurityPolicyType("CLOUD_ARMOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationSecurityPolicyTypePtrInput)(nil)).Elem(), OrganizationSecurityPolicyType("CLOUD_ARMOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*PacketMirroringEnableInput)(nil)).Elem(), PacketMirroringEnable("FALSE"))
	pulumi.RegisterInputType(reflect.TypeOf((*PacketMirroringEnablePtrInput)(nil)).Elem(), PacketMirroringEnable("FALSE"))
	pulumi.RegisterInputType(reflect.TypeOf((*PacketMirroringFilterDirectionInput)(nil)).Elem(), PacketMirroringFilterDirection("BOTH"))
	pulumi.RegisterInputType(reflect.TypeOf((*PacketMirroringFilterDirectionPtrInput)(nil)).Elem(), PacketMirroringFilterDirection("BOTH"))
	pulumi.RegisterInputType(reflect.TypeOf((*PublicAdvertisedPrefixPdpScopeInput)(nil)).Elem(), PublicAdvertisedPrefixPdpScope("GLOBAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*PublicAdvertisedPrefixPdpScopePtrInput)(nil)).Elem(), PublicAdvertisedPrefixPdpScope("GLOBAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*PublicAdvertisedPrefixStatusInput)(nil)).Elem(), PublicAdvertisedPrefixStatus("ANNOUNCED_TO_INTERNET"))
	pulumi.RegisterInputType(reflect.TypeOf((*PublicAdvertisedPrefixStatusPtrInput)(nil)).Elem(), PublicAdvertisedPrefixStatus("ANNOUNCED_TO_INTERNET"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceCompressionModeInput)(nil)).Elem(), RegionBackendServiceCompressionMode("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceCompressionModePtrInput)(nil)).Elem(), RegionBackendServiceCompressionMode("AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceLoadBalancingSchemeInput)(nil)).Elem(), RegionBackendServiceLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceLoadBalancingSchemePtrInput)(nil)).Elem(), RegionBackendServiceLoadBalancingScheme("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceLocalityLbPolicyInput)(nil)).Elem(), RegionBackendServiceLocalityLbPolicy("INVALID_LB_POLICY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceLocalityLbPolicyPtrInput)(nil)).Elem(), RegionBackendServiceLocalityLbPolicy("INVALID_LB_POLICY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceProtocolInput)(nil)).Elem(), RegionBackendServiceProtocol("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceProtocolPtrInput)(nil)).Elem(), RegionBackendServiceProtocol("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceSessionAffinityInput)(nil)).Elem(), RegionBackendServiceSessionAffinity("CLIENT_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionBackendServiceSessionAffinityPtrInput)(nil)).Elem(), RegionBackendServiceSessionAffinity("CLIENT_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCommitmentCategoryInput)(nil)).Elem(), RegionCommitmentCategory("CATEGORY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCommitmentCategoryPtrInput)(nil)).Elem(), RegionCommitmentCategory("CATEGORY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCommitmentPlanInput)(nil)).Elem(), RegionCommitmentPlan("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCommitmentPlanPtrInput)(nil)).Elem(), RegionCommitmentPlan("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCommitmentTypeInput)(nil)).Elem(), RegionCommitmentType("ACCELERATOR_OPTIMIZED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionCommitmentTypePtrInput)(nil)).Elem(), RegionCommitmentType("ACCELERATOR_OPTIMIZED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionDiskArchitectureInput)(nil)).Elem(), RegionDiskArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionDiskArchitecturePtrInput)(nil)).Elem(), RegionDiskArchitecture("ARCHITECTURE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionDiskInterfaceInput)(nil)).Elem(), RegionDiskInterface("NVME"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionDiskInterfacePtrInput)(nil)).Elem(), RegionDiskInterface("NVME"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionDiskStorageTypeInput)(nil)).Elem(), RegionDiskStorageType("HDD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionDiskStorageTypePtrInput)(nil)).Elem(), RegionDiskStorageType("HDD"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationPolicyInput)(nil)).Elem(), RegionHealthCheckServiceHealthStatusAggregationPolicy("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationPolicyPtrInput)(nil)).Elem(), RegionHealthCheckServiceHealthStatusAggregationPolicy("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationStrategyInput)(nil)).Elem(), RegionHealthCheckServiceHealthStatusAggregationStrategy("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionHealthCheckServiceHealthStatusAggregationStrategyPtrInput)(nil)).Elem(), RegionHealthCheckServiceHealthStatusAggregationStrategy("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionHealthCheckTypeInput)(nil)).Elem(), RegionHealthCheckType("GRPC"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionHealthCheckTypePtrInput)(nil)).Elem(), RegionHealthCheckType("GRPC"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionInstanceGroupManagerFailoverActionInput)(nil)).Elem(), RegionInstanceGroupManagerFailoverAction("NO_FAILOVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionInstanceGroupManagerFailoverActionPtrInput)(nil)).Elem(), RegionInstanceGroupManagerFailoverAction("NO_FAILOVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionInstanceGroupManagerListManagedInstancesResultsInput)(nil)).Elem(), RegionInstanceGroupManagerListManagedInstancesResults("PAGELESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionInstanceGroupManagerListManagedInstancesResultsPtrInput)(nil)).Elem(), RegionInstanceGroupManagerListManagedInstancesResults("PAGELESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkEndpointGroupNetworkEndpointTypeInput)(nil)).Elem(), RegionNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkEndpointGroupNetworkEndpointTypePtrInput)(nil)).Elem(), RegionNetworkEndpointGroupNetworkEndpointType("GCE_VM_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkEndpointGroupTypeInput)(nil)).Elem(), RegionNetworkEndpointGroupType("LOAD_BALANCING"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkEndpointGroupTypePtrInput)(nil)).Elem(), RegionNetworkEndpointGroupType("LOAD_BALANCING"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkFirewallPolicyVpcNetworkScopeInput)(nil)).Elem(), RegionNetworkFirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkFirewallPolicyVpcNetworkScopePtrInput)(nil)).Elem(), RegionNetworkFirewallPolicyVpcNetworkScope("GLOBAL_VPC_NETWORK"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkNetworkFirewallPolicyEnforcementOrderInput)(nil)).Elem(), RegionNetworkNetworkFirewallPolicyEnforcementOrder("AFTER_CLASSIC_FIREWALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrInput)(nil)).Elem(), RegionNetworkNetworkFirewallPolicyEnforcementOrder("AFTER_CLASSIC_FIREWALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSecurityPolicyTypeInput)(nil)).Elem(), RegionSecurityPolicyType("CLOUD_ARMOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSecurityPolicyTypePtrInput)(nil)).Elem(), RegionSecurityPolicyType("CLOUD_ARMOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSslCertificateTypeInput)(nil)).Elem(), RegionSslCertificateType("MANAGED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSslCertificateTypePtrInput)(nil)).Elem(), RegionSslCertificateType("MANAGED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSslPolicyMinTlsVersionInput)(nil)).Elem(), RegionSslPolicyMinTlsVersion("TLS_1_0"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSslPolicyMinTlsVersionPtrInput)(nil)).Elem(), RegionSslPolicyMinTlsVersion("TLS_1_0"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSslPolicyProfileInput)(nil)).Elem(), RegionSslPolicyProfile("COMPATIBLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSslPolicyProfilePtrInput)(nil)).Elem(), RegionSslPolicyProfile("COMPATIBLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetHttpsProxyQuicOverrideInput)(nil)).Elem(), RegionTargetHttpsProxyQuicOverride("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetHttpsProxyQuicOverridePtrInput)(nil)).Elem(), RegionTargetHttpsProxyQuicOverride("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetTcpProxyProxyHeaderInput)(nil)).Elem(), RegionTargetTcpProxyProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegionTargetTcpProxyProxyHeaderPtrInput)(nil)).Elem(), RegionTargetTcpProxyProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationAffinityConsumeReservationTypeInput)(nil)).Elem(), ReservationAffinityConsumeReservationType("ANY_RESERVATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationAffinityConsumeReservationTypePtrInput)(nil)).Elem(), ReservationAffinityConsumeReservationType("ANY_RESERVATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCommitmentTypeInput)(nil)).Elem(), ResourceCommitmentType("ACCELERATOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCommitmentTypePtrInput)(nil)).Elem(), ResourceCommitmentType("ACCELERATOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyCollocationInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyCollocation("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyCollocationPtrInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyCollocation("CLUSTERED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyLocalityInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyLocality("BEST_EFFORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyLocalityPtrInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyLocality("BEST_EFFORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyScopeInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyScope("HOST"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyScopePtrInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyScope("HOST"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyStyleInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyStyle("COMPACT"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyGroupPlacementPolicyStylePtrInput)(nil)).Elem(), ResourcePolicyGroupPlacementPolicyStyle("COMPACT"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchInput)(nil)).Elem(), ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch("DO_NOT_RETROACTIVELY_APPLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrInput)(nil)).Elem(), ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitch("DO_NOT_RETROACTIVELY_APPLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteInput)(nil)).Elem(), ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete("APPLY_RETENTION_POLICY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrInput)(nil)).Elem(), ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDelete("APPLY_RETENTION_POLICY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyWeeklyCycleDayOfWeekDayInput)(nil)).Elem(), ResourcePolicyWeeklyCycleDayOfWeekDay("FRIDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePolicyWeeklyCycleDayOfWeekDayPtrInput)(nil)).Elem(), ResourcePolicyWeeklyCycleDayOfWeekDay("FRIDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteIlbRouteBehaviorOnUnhealthyInput)(nil)).Elem(), RouteIlbRouteBehaviorOnUnhealthy("DO_NOT_WITHDRAW_ROUTE_IF_ILB_UNHEALTHY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouteIlbRouteBehaviorOnUnhealthyPtrInput)(nil)).Elem(), RouteIlbRouteBehaviorOnUnhealthy("DO_NOT_WITHDRAW_ROUTE_IF_ILB_UNHEALTHY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdvertiseModeInput)(nil)).Elem(), RouterBgpAdvertiseMode("CUSTOM"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdvertiseModePtrInput)(nil)).Elem(), RouterBgpAdvertiseMode("CUSTOM"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdvertisedGroupsItemInput)(nil)).Elem(), RouterBgpAdvertisedGroupsItem("ALL_PEER_VPC_SUBNETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdvertisedGroupsItemPtrInput)(nil)).Elem(), RouterBgpAdvertisedGroupsItem("ALL_PEER_VPC_SUBNETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpAdvertisedGroupsItemArrayInput)(nil)).Elem(), RouterBgpAdvertisedGroupsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerAdvertiseModeInput)(nil)).Elem(), RouterBgpPeerAdvertiseMode("CUSTOM"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerAdvertiseModePtrInput)(nil)).Elem(), RouterBgpPeerAdvertiseMode("CUSTOM"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerAdvertisedGroupsItemInput)(nil)).Elem(), RouterBgpPeerAdvertisedGroupsItem("ALL_PEER_VPC_SUBNETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerAdvertisedGroupsItemPtrInput)(nil)).Elem(), RouterBgpPeerAdvertisedGroupsItem("ALL_PEER_VPC_SUBNETS"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerAdvertisedGroupsItemArrayInput)(nil)).Elem(), RouterBgpPeerAdvertisedGroupsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerBfdModeInput)(nil)).Elem(), RouterBgpPeerBfdMode("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerBfdModePtrInput)(nil)).Elem(), RouterBgpPeerBfdMode("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerBfdPacketModeInput)(nil)).Elem(), RouterBgpPeerBfdPacketMode("CONTROL_AND_ECHO"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerBfdPacketModePtrInput)(nil)).Elem(), RouterBgpPeerBfdPacketMode("CONTROL_AND_ECHO"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerBfdSessionInitializationModeInput)(nil)).Elem(), RouterBgpPeerBfdSessionInitializationMode("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerBfdSessionInitializationModePtrInput)(nil)).Elem(), RouterBgpPeerBfdSessionInitializationMode("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerEnableInput)(nil)).Elem(), RouterBgpPeerEnable("FALSE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterBgpPeerEnablePtrInput)(nil)).Elem(), RouterBgpPeerEnable("FALSE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatEndpointTypesItemInput)(nil)).Elem(), RouterNatEndpointTypesItem("ENDPOINT_TYPE_SWG"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatEndpointTypesItemPtrInput)(nil)).Elem(), RouterNatEndpointTypesItem("ENDPOINT_TYPE_SWG"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatEndpointTypesItemArrayInput)(nil)).Elem(), RouterNatEndpointTypesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatLogConfigFilterInput)(nil)).Elem(), RouterNatLogConfigFilter("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatLogConfigFilterPtrInput)(nil)).Elem(), RouterNatLogConfigFilter("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatNatIpAllocateOptionInput)(nil)).Elem(), RouterNatNatIpAllocateOption("AUTO_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatNatIpAllocateOptionPtrInput)(nil)).Elem(), RouterNatNatIpAllocateOption("AUTO_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatSourceSubnetworkIpRangesToNatInput)(nil)).Elem(), RouterNatSourceSubnetworkIpRangesToNat("ALL_SUBNETWORKS_ALL_IP_RANGES"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatSourceSubnetworkIpRangesToNatPtrInput)(nil)).Elem(), RouterNatSourceSubnetworkIpRangesToNat("ALL_SUBNETWORKS_ALL_IP_RANGES"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatSubnetworkToNatSourceIpRangesToNatItemInput)(nil)).Elem(), RouterNatSubnetworkToNatSourceIpRangesToNatItem("ALL_IP_RANGES"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrInput)(nil)).Elem(), RouterNatSubnetworkToNatSourceIpRangesToNatItem("ALL_IP_RANGES"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayInput)(nil)).Elem(), RouterNatSubnetworkToNatSourceIpRangesToNatItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatTypeInput)(nil)).Elem(), RouterNatType("PRIVATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RouterNatTypePtrInput)(nil)).Elem(), RouterNatType("PRIVATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleActionInput)(nil)).Elem(), RuleAction("ALLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleActionPtrInput)(nil)).Elem(), RuleAction("ALLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*SSLHealthCheckPortSpecificationInput)(nil)).Elem(), SSLHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*SSLHealthCheckPortSpecificationPtrInput)(nil)).Elem(), SSLHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*SSLHealthCheckProxyHeaderInput)(nil)).Elem(), SSLHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SSLHealthCheckProxyHeaderPtrInput)(nil)).Elem(), SSLHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingInstanceTerminationActionInput)(nil)).Elem(), SchedulingInstanceTerminationAction("DELETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingInstanceTerminationActionPtrInput)(nil)).Elem(), SchedulingInstanceTerminationAction("DELETE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingMaintenanceIntervalInput)(nil)).Elem(), SchedulingMaintenanceInterval("PERIODIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingMaintenanceIntervalPtrInput)(nil)).Elem(), SchedulingMaintenanceInterval("PERIODIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingNodeAffinityOperatorInput)(nil)).Elem(), SchedulingNodeAffinityOperator("IN"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingNodeAffinityOperatorPtrInput)(nil)).Elem(), SchedulingNodeAffinityOperator("IN"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingOnHostMaintenanceInput)(nil)).Elem(), SchedulingOnHostMaintenance("MIGRATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingOnHostMaintenancePtrInput)(nil)).Elem(), SchedulingOnHostMaintenance("MIGRATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingProvisioningModelInput)(nil)).Elem(), SchedulingProvisioningModel("SPOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulingProvisioningModelPtrInput)(nil)).Elem(), SchedulingProvisioningModel("SPOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityInput)(nil)).Elem(), SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility("PREMIUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrInput)(nil)).Elem(), SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibility("PREMIUM"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigJsonParsingInput)(nil)).Elem(), SecurityPolicyAdvancedOptionsConfigJsonParsing("DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigJsonParsingPtrInput)(nil)).Elem(), SecurityPolicyAdvancedOptionsConfigJsonParsing("DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigLogLevelInput)(nil)).Elem(), SecurityPolicyAdvancedOptionsConfigLogLevel("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyAdvancedOptionsConfigLogLevelPtrInput)(nil)).Elem(), SecurityPolicyAdvancedOptionsConfigLogLevel("NORMAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyDdosProtectionConfigDdosProtectionInput)(nil)).Elem(), SecurityPolicyDdosProtectionConfigDdosProtection("ADVANCED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyDdosProtectionConfigDdosProtectionPtrInput)(nil)).Elem(), SecurityPolicyDdosProtectionConfigDdosProtection("ADVANCED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleDirectionInput)(nil)).Elem(), SecurityPolicyRuleDirection("EGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleDirectionPtrInput)(nil)).Elem(), SecurityPolicyRuleDirection("EGRESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherVersionedExprInput)(nil)).Elem(), SecurityPolicyRuleMatcherVersionedExpr("FIREWALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherVersionedExprPtrInput)(nil)).Elem(), SecurityPolicyRuleMatcherVersionedExpr("FIREWALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKeyInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsEnforceOnKey("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsEnforceOnKey("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRedirectOptionsTypeInput)(nil)).Elem(), SecurityPolicyRuleRedirectOptionsType("EXTERNAL_302"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRedirectOptionsTypePtrInput)(nil)).Elem(), SecurityPolicyRuleRedirectOptionsType("EXTERNAL_302"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyTypeInput)(nil)).Elem(), SecurityPolicyType("CLOUD_ARMOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyTypePtrInput)(nil)).Elem(), SecurityPolicyType("CLOUD_ARMOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServerBindingTypeInput)(nil)).Elem(), ServerBindingType("RESTART_NODE_ON_ANY_SERVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServerBindingTypePtrInput)(nil)).Elem(), ServerBindingType("RESTART_NODE_ON_ANY_SERVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTlsSettingsTlsModeInput)(nil)).Elem(), ServerTlsSettingsTlsMode("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTlsSettingsTlsModePtrInput)(nil)).Elem(), ServerTlsSettingsTlsMode("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAttachmentConnectionPreferenceInput)(nil)).Elem(), ServiceAttachmentConnectionPreference("ACCEPT_AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAttachmentConnectionPreferencePtrInput)(nil)).Elem(), ServiceAttachmentConnectionPreference("ACCEPT_AUTOMATIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsShareTypeInput)(nil)).Elem(), ShareSettingsShareType("DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS"))
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsShareTypePtrInput)(nil)).Elem(), ShareSettingsShareType("DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotSnapshotTypeInput)(nil)).Elem(), SnapshotSnapshotType("ARCHIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotSnapshotTypePtrInput)(nil)).Elem(), SnapshotSnapshotType("ARCHIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslCertificateTypeInput)(nil)).Elem(), SslCertificateType("MANAGED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslCertificateTypePtrInput)(nil)).Elem(), SslCertificateType("MANAGED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslPolicyMinTlsVersionInput)(nil)).Elem(), SslPolicyMinTlsVersion("TLS_1_0"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslPolicyMinTlsVersionPtrInput)(nil)).Elem(), SslPolicyMinTlsVersion("TLS_1_0"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslPolicyProfileInput)(nil)).Elem(), SslPolicyProfile("COMPATIBLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslPolicyProfilePtrInput)(nil)).Elem(), SslPolicyProfile("COMPATIBLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkAggregationIntervalInput)(nil)).Elem(), SubnetworkAggregationInterval("INTERVAL_10_MIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkAggregationIntervalPtrInput)(nil)).Elem(), SubnetworkAggregationInterval("INTERVAL_10_MIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkIpv6AccessTypeInput)(nil)).Elem(), SubnetworkIpv6AccessType("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkIpv6AccessTypePtrInput)(nil)).Elem(), SubnetworkIpv6AccessType("EXTERNAL"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkLogConfigAggregationIntervalInput)(nil)).Elem(), SubnetworkLogConfigAggregationInterval("INTERVAL_10_MIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkLogConfigAggregationIntervalPtrInput)(nil)).Elem(), SubnetworkLogConfigAggregationInterval("INTERVAL_10_MIN"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkLogConfigMetadataInput)(nil)).Elem(), SubnetworkLogConfigMetadata("CUSTOM_METADATA"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkLogConfigMetadataPtrInput)(nil)).Elem(), SubnetworkLogConfigMetadata("CUSTOM_METADATA"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkMetadataInput)(nil)).Elem(), SubnetworkMetadata("EXCLUDE_ALL_METADATA"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkMetadataPtrInput)(nil)).Elem(), SubnetworkMetadata("EXCLUDE_ALL_METADATA"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkPrivateIpv6GoogleAccessInput)(nil)).Elem(), SubnetworkPrivateIpv6GoogleAccess("DISABLE_GOOGLE_ACCESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkPrivateIpv6GoogleAccessPtrInput)(nil)).Elem(), SubnetworkPrivateIpv6GoogleAccess("DISABLE_GOOGLE_ACCESS"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkPurposeInput)(nil)).Elem(), SubnetworkPurpose("AGGREGATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkPurposePtrInput)(nil)).Elem(), SubnetworkPurpose("AGGREGATE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkRoleInput)(nil)).Elem(), SubnetworkRole("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkRolePtrInput)(nil)).Elem(), SubnetworkRole("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkStackTypeInput)(nil)).Elem(), SubnetworkStackType("IPV4_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkStackTypePtrInput)(nil)).Elem(), SubnetworkStackType("IPV4_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubsettingPolicyInput)(nil)).Elem(), SubsettingPolicy("CONSISTENT_HASH_SUBSETTING"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubsettingPolicyPtrInput)(nil)).Elem(), SubsettingPolicy("CONSISTENT_HASH_SUBSETTING"))
	pulumi.RegisterInputType(reflect.TypeOf((*TCPHealthCheckPortSpecificationInput)(nil)).Elem(), TCPHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TCPHealthCheckPortSpecificationPtrInput)(nil)).Elem(), TCPHealthCheckPortSpecification("USE_FIXED_PORT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TCPHealthCheckProxyHeaderInput)(nil)).Elem(), TCPHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TCPHealthCheckProxyHeaderPtrInput)(nil)).Elem(), TCPHealthCheckProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetHttpsProxyQuicOverrideInput)(nil)).Elem(), TargetHttpsProxyQuicOverride("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetHttpsProxyQuicOverridePtrInput)(nil)).Elem(), TargetHttpsProxyQuicOverride("DISABLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetInstanceNatPolicyInput)(nil)).Elem(), TargetInstanceNatPolicy("NO_NAT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetInstanceNatPolicyPtrInput)(nil)).Elem(), TargetInstanceNatPolicy("NO_NAT"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetPoolSessionAffinityInput)(nil)).Elem(), TargetPoolSessionAffinity("CLIENT_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetPoolSessionAffinityPtrInput)(nil)).Elem(), TargetPoolSessionAffinity("CLIENT_IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetSslProxyProxyHeaderInput)(nil)).Elem(), TargetSslProxyProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetSslProxyProxyHeaderPtrInput)(nil)).Elem(), TargetSslProxyProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTcpProxyProxyHeaderInput)(nil)).Elem(), TargetTcpProxyProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TargetTcpProxyProxyHeaderPtrInput)(nil)).Elem(), TargetTcpProxyProxyHeader("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificateContextCertificateSourceInput)(nil)).Elem(), TlsCertificateContextCertificateSource("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificateContextCertificateSourcePtrInput)(nil)).Elem(), TlsCertificateContextCertificateSource("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TlsValidationContextValidationSourceInput)(nil)).Elem(), TlsValidationContextValidationSource("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*TlsValidationContextValidationSourcePtrInput)(nil)).Elem(), TlsValidationContextValidationSource("INVALID"))
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayStackTypeInput)(nil)).Elem(), VpnGatewayStackType("IPV4_IPV6"))
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayStackTypePtrInput)(nil)).Elem(), VpnGatewayStackType("IPV4_IPV6"))
	pulumi.RegisterOutputType(AccessConfigNetworkTierOutput{})
	pulumi.RegisterOutputType(AccessConfigNetworkTierPtrOutput{})
	pulumi.RegisterOutputType(AccessConfigTypeOutput{})
	pulumi.RegisterOutputType(AccessConfigTypePtrOutput{})
	pulumi.RegisterOutputType(AddressAddressTypeOutput{})
	pulumi.RegisterOutputType(AddressAddressTypePtrOutput{})
	pulumi.RegisterOutputType(AddressIpVersionOutput{})
	pulumi.RegisterOutputType(AddressIpVersionPtrOutput{})
	pulumi.RegisterOutputType(AddressIpv6EndpointTypeOutput{})
	pulumi.RegisterOutputType(AddressIpv6EndpointTypePtrOutput{})
	pulumi.RegisterOutputType(AddressNetworkTierOutput{})
	pulumi.RegisterOutputType(AddressNetworkTierPtrOutput{})
	pulumi.RegisterOutputType(AddressPurposeOutput{})
	pulumi.RegisterOutputType(AddressPurposePtrOutput{})
	pulumi.RegisterOutputType(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfaceOutput{})
	pulumi.RegisterOutputType(AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDiskInterfacePtrOutput{})
	pulumi.RegisterOutputType(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalOutput{})
	pulumi.RegisterOutputType(AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalPtrOutput{})
	pulumi.RegisterOutputType(AttachedDiskInitializeParamsArchitectureOutput{})
	pulumi.RegisterOutputType(AttachedDiskInitializeParamsArchitecturePtrOutput{})
	pulumi.RegisterOutputType(AttachedDiskInitializeParamsInterfaceOutput{})
	pulumi.RegisterOutputType(AttachedDiskInitializeParamsInterfacePtrOutput{})
	pulumi.RegisterOutputType(AttachedDiskInitializeParamsOnUpdateActionOutput{})
	pulumi.RegisterOutputType(AttachedDiskInitializeParamsOnUpdateActionPtrOutput{})
	pulumi.RegisterOutputType(AttachedDiskInterfaceOutput{})
	pulumi.RegisterOutputType(AttachedDiskInterfacePtrOutput{})
	pulumi.RegisterOutputType(AttachedDiskModeOutput{})
	pulumi.RegisterOutputType(AttachedDiskModePtrOutput{})
	pulumi.RegisterOutputType(AttachedDiskSavedStateOutput{})
	pulumi.RegisterOutputType(AttachedDiskSavedStatePtrOutput{})
	pulumi.RegisterOutputType(AttachedDiskTypeOutput{})
	pulumi.RegisterOutputType(AttachedDiskTypePtrOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationPolicyPrincipalBindingOutput{})
	pulumi.RegisterOutputType(AuthenticationPolicyPrincipalBindingPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationLoggingOptionsPermissionTypeOutput{})
	pulumi.RegisterOutputType(AuthorizationLoggingOptionsPermissionTypePtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyCpuUtilizationPredictiveMethodOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyCpuUtilizationPredictiveMethodPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypeOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyCustomMetricUtilizationUtilizationTargetTypePtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyModeOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyModePtrOutput{})
	pulumi.RegisterOutputType(BackendBalancingModeOutput{})
	pulumi.RegisterOutputType(BackendBalancingModePtrOutput{})
	pulumi.RegisterOutputType(BackendBucketCdnPolicyCacheModeOutput{})
	pulumi.RegisterOutputType(BackendBucketCdnPolicyCacheModePtrOutput{})
	pulumi.RegisterOutputType(BackendBucketCompressionModeOutput{})
	pulumi.RegisterOutputType(BackendBucketCompressionModePtrOutput{})
	pulumi.RegisterOutputType(BackendServiceCdnPolicyCacheModeOutput{})
	pulumi.RegisterOutputType(BackendServiceCdnPolicyCacheModePtrOutput{})
	pulumi.RegisterOutputType(BackendServiceCompressionModeOutput{})
	pulumi.RegisterOutputType(BackendServiceCompressionModePtrOutput{})
	pulumi.RegisterOutputType(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsOutput{})
	pulumi.RegisterOutputType(BackendServiceConnectionTrackingPolicyConnectionPersistenceOnUnhealthyBackendsPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceConnectionTrackingPolicyTrackingModeOutput{})
	pulumi.RegisterOutputType(BackendServiceConnectionTrackingPolicyTrackingModePtrOutput{})
	pulumi.RegisterOutputType(BackendServiceLoadBalancingSchemeOutput{})
	pulumi.RegisterOutputType(BackendServiceLoadBalancingSchemePtrOutput{})
	pulumi.RegisterOutputType(BackendServiceLocalityLbPolicyOutput{})
	pulumi.RegisterOutputType(BackendServiceLocalityLbPolicyPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceProtocolOutput{})
	pulumi.RegisterOutputType(BackendServiceProtocolPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceSessionAffinityOutput{})
	pulumi.RegisterOutputType(BackendServiceSessionAffinityPtrOutput{})
	pulumi.RegisterOutputType(CallCredentialsCallCredentialTypeOutput{})
	pulumi.RegisterOutputType(CallCredentialsCallCredentialTypePtrOutput{})
	pulumi.RegisterOutputType(ChannelCredentialsChannelCredentialTypeOutput{})
	pulumi.RegisterOutputType(ChannelCredentialsChannelCredentialTypePtrOutput{})
	pulumi.RegisterOutputType(ClientTlsSettingsModeOutput{})
	pulumi.RegisterOutputType(ClientTlsSettingsModePtrOutput{})
	pulumi.RegisterOutputType(ConditionIamOutput{})
	pulumi.RegisterOutputType(ConditionIamPtrOutput{})
	pulumi.RegisterOutputType(ConditionOpOutput{})
	pulumi.RegisterOutputType(ConditionOpPtrOutput{})
	pulumi.RegisterOutputType(ConditionSysOutput{})
	pulumi.RegisterOutputType(ConditionSysPtrOutput{})
	pulumi.RegisterOutputType(DeprecationStatusStateOutput{})
	pulumi.RegisterOutputType(DeprecationStatusStatePtrOutput{})
	pulumi.RegisterOutputType(DiskArchitectureOutput{})
	pulumi.RegisterOutputType(DiskArchitecturePtrOutput{})
	pulumi.RegisterOutputType(DiskInstantiationConfigInstantiateFromOutput{})
	pulumi.RegisterOutputType(DiskInstantiationConfigInstantiateFromPtrOutput{})
	pulumi.RegisterOutputType(DiskInterfaceOutput{})
	pulumi.RegisterOutputType(DiskInterfacePtrOutput{})
	pulumi.RegisterOutputType(DiskStorageTypeOutput{})
	pulumi.RegisterOutputType(DiskStorageTypePtrOutput{})
	pulumi.RegisterOutputType(DistributionPolicyTargetShapeOutput{})
	pulumi.RegisterOutputType(DistributionPolicyTargetShapePtrOutput{})
	pulumi.RegisterOutputType(ExternalVpnGatewayRedundancyTypeOutput{})
	pulumi.RegisterOutputType(ExternalVpnGatewayRedundancyTypePtrOutput{})
	pulumi.RegisterOutputType(FileContentBufferFileTypeOutput{})
	pulumi.RegisterOutputType(FileContentBufferFileTypePtrOutput{})
	pulumi.RegisterOutputType(FirewallDirectionOutput{})
	pulumi.RegisterOutputType(FirewallDirectionPtrOutput{})
	pulumi.RegisterOutputType(FirewallLogConfigMetadataOutput{})
	pulumi.RegisterOutputType(FirewallLogConfigMetadataPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleDirectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleDirectionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyVpcNetworkScopeOutput{})
	pulumi.RegisterOutputType(FirewallPolicyVpcNetworkScopePtrOutput{})
	pulumi.RegisterOutputType(ForwardingRuleIpProtocolOutput{})
	pulumi.RegisterOutputType(ForwardingRuleIpProtocolPtrOutput{})
	pulumi.RegisterOutputType(ForwardingRuleIpVersionOutput{})
	pulumi.RegisterOutputType(ForwardingRuleIpVersionPtrOutput{})
	pulumi.RegisterOutputType(ForwardingRuleLoadBalancingSchemeOutput{})
	pulumi.RegisterOutputType(ForwardingRuleLoadBalancingSchemePtrOutput{})
	pulumi.RegisterOutputType(ForwardingRuleNetworkTierOutput{})
	pulumi.RegisterOutputType(ForwardingRuleNetworkTierPtrOutput{})
	pulumi.RegisterOutputType(ForwardingRulePscConnectionStatusOutput{})
	pulumi.RegisterOutputType(ForwardingRulePscConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(GRPCHealthCheckPortSpecificationOutput{})
	pulumi.RegisterOutputType(GRPCHealthCheckPortSpecificationPtrOutput{})
	pulumi.RegisterOutputType(GlobalAddressAddressTypeOutput{})
	pulumi.RegisterOutputType(GlobalAddressAddressTypePtrOutput{})
	pulumi.RegisterOutputType(GlobalAddressIpVersionOutput{})
	pulumi.RegisterOutputType(GlobalAddressIpVersionPtrOutput{})
	pulumi.RegisterOutputType(GlobalAddressIpv6EndpointTypeOutput{})
	pulumi.RegisterOutputType(GlobalAddressIpv6EndpointTypePtrOutput{})
	pulumi.RegisterOutputType(GlobalAddressNetworkTierOutput{})
	pulumi.RegisterOutputType(GlobalAddressNetworkTierPtrOutput{})
	pulumi.RegisterOutputType(GlobalAddressPurposeOutput{})
	pulumi.RegisterOutputType(GlobalAddressPurposePtrOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleIpProtocolOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleIpProtocolPtrOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleIpVersionOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleIpVersionPtrOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleLoadBalancingSchemeOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleLoadBalancingSchemePtrOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleNetworkTierOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRuleNetworkTierPtrOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRulePscConnectionStatusOutput{})
	pulumi.RegisterOutputType(GlobalForwardingRulePscConnectionStatusPtrOutput{})
	pulumi.RegisterOutputType(GlobalNetworkEndpointGroupNetworkEndpointTypeOutput{})
	pulumi.RegisterOutputType(GlobalNetworkEndpointGroupNetworkEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(GlobalNetworkEndpointGroupTypeOutput{})
	pulumi.RegisterOutputType(GlobalNetworkEndpointGroupTypePtrOutput{})
	pulumi.RegisterOutputType(GuestOsFeatureTypeOutput{})
	pulumi.RegisterOutputType(GuestOsFeatureTypePtrOutput{})
	pulumi.RegisterOutputType(HTTP2HealthCheckPortSpecificationOutput{})
	pulumi.RegisterOutputType(HTTP2HealthCheckPortSpecificationPtrOutput{})
	pulumi.RegisterOutputType(HTTP2HealthCheckProxyHeaderOutput{})
	pulumi.RegisterOutputType(HTTP2HealthCheckProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(HTTP2HealthCheckWeightReportModeOutput{})
	pulumi.RegisterOutputType(HTTP2HealthCheckWeightReportModePtrOutput{})
	pulumi.RegisterOutputType(HTTPHealthCheckPortSpecificationOutput{})
	pulumi.RegisterOutputType(HTTPHealthCheckPortSpecificationPtrOutput{})
	pulumi.RegisterOutputType(HTTPHealthCheckProxyHeaderOutput{})
	pulumi.RegisterOutputType(HTTPHealthCheckProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(HTTPHealthCheckWeightReportModeOutput{})
	pulumi.RegisterOutputType(HTTPHealthCheckWeightReportModePtrOutput{})
	pulumi.RegisterOutputType(HTTPSHealthCheckPortSpecificationOutput{})
	pulumi.RegisterOutputType(HTTPSHealthCheckPortSpecificationPtrOutput{})
	pulumi.RegisterOutputType(HTTPSHealthCheckProxyHeaderOutput{})
	pulumi.RegisterOutputType(HTTPSHealthCheckProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(HTTPSHealthCheckWeightReportModeOutput{})
	pulumi.RegisterOutputType(HTTPSHealthCheckWeightReportModePtrOutput{})
	pulumi.RegisterOutputType(HealthCheckTypeOutput{})
	pulumi.RegisterOutputType(HealthCheckTypePtrOutput{})
	pulumi.RegisterOutputType(HttpRedirectActionRedirectResponseCodeOutput{})
	pulumi.RegisterOutputType(HttpRedirectActionRedirectResponseCodePtrOutput{})
	pulumi.RegisterOutputType(ImageArchitectureOutput{})
	pulumi.RegisterOutputType(ImageArchitecturePtrOutput{})
	pulumi.RegisterOutputType(ImageRawDiskContainerTypeOutput{})
	pulumi.RegisterOutputType(ImageRawDiskContainerTypePtrOutput{})
	pulumi.RegisterOutputType(ImageSourceTypeOutput{})
	pulumi.RegisterOutputType(ImageSourceTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersOnHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerAutoHealingPolicyUpdateInstancesOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerAutoHealingPolicyUpdateInstancesPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerFailoverActionOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerFailoverActionPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerListManagedInstancesResultsOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerListManagedInstancesResultsPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypeOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyInstanceRedistributionTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyMinimalActionOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyMinimalActionPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedActionPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyReplacementMethodOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyReplacementMethodPtrOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyTypeOutput{})
	pulumi.RegisterOutputType(InstanceGroupManagerUpdatePolicyTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceKeyRevocationActionTypeOutput{})
	pulumi.RegisterOutputType(InstanceKeyRevocationActionTypePtrOutput{})
	pulumi.RegisterOutputType(InstancePostKeyRevocationActionTypeOutput{})
	pulumi.RegisterOutputType(InstancePostKeyRevocationActionTypePtrOutput{})
	pulumi.RegisterOutputType(InstancePrivateIpv6GoogleAccessOutput{})
	pulumi.RegisterOutputType(InstancePrivateIpv6GoogleAccessPtrOutput{})
	pulumi.RegisterOutputType(InstancePropertiesKeyRevocationActionTypeOutput{})
	pulumi.RegisterOutputType(InstancePropertiesKeyRevocationActionTypePtrOutput{})
	pulumi.RegisterOutputType(InstancePropertiesPostKeyRevocationActionTypeOutput{})
	pulumi.RegisterOutputType(InstancePropertiesPostKeyRevocationActionTypePtrOutput{})
	pulumi.RegisterOutputType(InstancePropertiesPrivateIpv6GoogleAccessOutput{})
	pulumi.RegisterOutputType(InstancePropertiesPrivateIpv6GoogleAccessPtrOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentBandwidthOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentBandwidthPtrOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentEdgeAvailabilityDomainOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentEdgeAvailabilityDomainPtrOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentEncryptionOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentEncryptionPtrOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentStackTypeOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentStackTypePtrOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentTypeOutput{})
	pulumi.RegisterOutputType(InterconnectAttachmentTypePtrOutput{})
	pulumi.RegisterOutputType(InterconnectInterconnectTypeOutput{})
	pulumi.RegisterOutputType(InterconnectInterconnectTypePtrOutput{})
	pulumi.RegisterOutputType(InterconnectLinkTypeOutput{})
	pulumi.RegisterOutputType(InterconnectLinkTypePtrOutput{})
	pulumi.RegisterOutputType(LogConfigCloudAuditOptionsLogNameOutput{})
	pulumi.RegisterOutputType(LogConfigCloudAuditOptionsLogNamePtrOutput{})
	pulumi.RegisterOutputType(LogConfigDataAccessOptionsLogModeOutput{})
	pulumi.RegisterOutputType(LogConfigDataAccessOptionsLogModePtrOutput{})
	pulumi.RegisterOutputType(MetadataFilterFilterMatchCriteriaOutput{})
	pulumi.RegisterOutputType(MetadataFilterFilterMatchCriteriaPtrOutput{})
	pulumi.RegisterOutputType(MutualTlsModeOutput{})
	pulumi.RegisterOutputType(MutualTlsModePtrOutput{})
	pulumi.RegisterOutputType(NetworkEndpointGroupNetworkEndpointTypeOutput{})
	pulumi.RegisterOutputType(NetworkEndpointGroupNetworkEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkEndpointGroupTypeOutput{})
	pulumi.RegisterOutputType(NetworkEndpointGroupTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyVpcNetworkScopeOutput{})
	pulumi.RegisterOutputType(NetworkFirewallPolicyVpcNetworkScopePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceNicTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceNicTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStackTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceStackTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceSubInterfaceIpAllocationModeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceSubInterfaceIpAllocationModePtrOutput{})
	pulumi.RegisterOutputType(NetworkNetworkFirewallPolicyEnforcementOrderOutput{})
	pulumi.RegisterOutputType(NetworkNetworkFirewallPolicyEnforcementOrderPtrOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigExternalIpEgressBandwidthTierOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigExternalIpEgressBandwidthTierPtrOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigTotalEgressBandwidthTierOutput{})
	pulumi.RegisterOutputType(NetworkPerformanceConfigTotalEgressBandwidthTierPtrOutput{})
	pulumi.RegisterOutputType(NetworkRoutingConfigRoutingModeOutput{})
	pulumi.RegisterOutputType(NetworkRoutingConfigRoutingModePtrOutput{})
	pulumi.RegisterOutputType(NodeGroupAutoscalingPolicyModeOutput{})
	pulumi.RegisterOutputType(NodeGroupAutoscalingPolicyModePtrOutput{})
	pulumi.RegisterOutputType(NodeGroupMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(NodeGroupMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateCpuOvercommitTypeOutput{})
	pulumi.RegisterOutputType(NodeTemplateCpuOvercommitTypePtrOutput{})
	pulumi.RegisterOutputType(OrganizationSecurityPolicyTypeOutput{})
	pulumi.RegisterOutputType(OrganizationSecurityPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(PacketMirroringEnableOutput{})
	pulumi.RegisterOutputType(PacketMirroringEnablePtrOutput{})
	pulumi.RegisterOutputType(PacketMirroringFilterDirectionOutput{})
	pulumi.RegisterOutputType(PacketMirroringFilterDirectionPtrOutput{})
	pulumi.RegisterOutputType(PublicAdvertisedPrefixPdpScopeOutput{})
	pulumi.RegisterOutputType(PublicAdvertisedPrefixPdpScopePtrOutput{})
	pulumi.RegisterOutputType(PublicAdvertisedPrefixStatusOutput{})
	pulumi.RegisterOutputType(PublicAdvertisedPrefixStatusPtrOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceCompressionModeOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceCompressionModePtrOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceLoadBalancingSchemeOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceLoadBalancingSchemePtrOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceLocalityLbPolicyOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceLocalityLbPolicyPtrOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceProtocolOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceProtocolPtrOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceSessionAffinityOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceSessionAffinityPtrOutput{})
	pulumi.RegisterOutputType(RegionCommitmentCategoryOutput{})
	pulumi.RegisterOutputType(RegionCommitmentCategoryPtrOutput{})
	pulumi.RegisterOutputType(RegionCommitmentPlanOutput{})
	pulumi.RegisterOutputType(RegionCommitmentPlanPtrOutput{})
	pulumi.RegisterOutputType(RegionCommitmentTypeOutput{})
	pulumi.RegisterOutputType(RegionCommitmentTypePtrOutput{})
	pulumi.RegisterOutputType(RegionDiskArchitectureOutput{})
	pulumi.RegisterOutputType(RegionDiskArchitecturePtrOutput{})
	pulumi.RegisterOutputType(RegionDiskInterfaceOutput{})
	pulumi.RegisterOutputType(RegionDiskInterfacePtrOutput{})
	pulumi.RegisterOutputType(RegionDiskStorageTypeOutput{})
	pulumi.RegisterOutputType(RegionDiskStorageTypePtrOutput{})
	pulumi.RegisterOutputType(RegionHealthCheckServiceHealthStatusAggregationPolicyOutput{})
	pulumi.RegisterOutputType(RegionHealthCheckServiceHealthStatusAggregationPolicyPtrOutput{})
	pulumi.RegisterOutputType(RegionHealthCheckServiceHealthStatusAggregationStrategyOutput{})
	pulumi.RegisterOutputType(RegionHealthCheckServiceHealthStatusAggregationStrategyPtrOutput{})
	pulumi.RegisterOutputType(RegionHealthCheckTypeOutput{})
	pulumi.RegisterOutputType(RegionHealthCheckTypePtrOutput{})
	pulumi.RegisterOutputType(RegionInstanceGroupManagerFailoverActionOutput{})
	pulumi.RegisterOutputType(RegionInstanceGroupManagerFailoverActionPtrOutput{})
	pulumi.RegisterOutputType(RegionInstanceGroupManagerListManagedInstancesResultsOutput{})
	pulumi.RegisterOutputType(RegionInstanceGroupManagerListManagedInstancesResultsPtrOutput{})
	pulumi.RegisterOutputType(RegionNetworkEndpointGroupNetworkEndpointTypeOutput{})
	pulumi.RegisterOutputType(RegionNetworkEndpointGroupNetworkEndpointTypePtrOutput{})
	pulumi.RegisterOutputType(RegionNetworkEndpointGroupTypeOutput{})
	pulumi.RegisterOutputType(RegionNetworkEndpointGroupTypePtrOutput{})
	pulumi.RegisterOutputType(RegionNetworkFirewallPolicyVpcNetworkScopeOutput{})
	pulumi.RegisterOutputType(RegionNetworkFirewallPolicyVpcNetworkScopePtrOutput{})
	pulumi.RegisterOutputType(RegionNetworkNetworkFirewallPolicyEnforcementOrderOutput{})
	pulumi.RegisterOutputType(RegionNetworkNetworkFirewallPolicyEnforcementOrderPtrOutput{})
	pulumi.RegisterOutputType(RegionSecurityPolicyTypeOutput{})
	pulumi.RegisterOutputType(RegionSecurityPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(RegionSslCertificateTypeOutput{})
	pulumi.RegisterOutputType(RegionSslCertificateTypePtrOutput{})
	pulumi.RegisterOutputType(RegionSslPolicyMinTlsVersionOutput{})
	pulumi.RegisterOutputType(RegionSslPolicyMinTlsVersionPtrOutput{})
	pulumi.RegisterOutputType(RegionSslPolicyProfileOutput{})
	pulumi.RegisterOutputType(RegionSslPolicyProfilePtrOutput{})
	pulumi.RegisterOutputType(RegionTargetHttpsProxyQuicOverrideOutput{})
	pulumi.RegisterOutputType(RegionTargetHttpsProxyQuicOverridePtrOutput{})
	pulumi.RegisterOutputType(RegionTargetTcpProxyProxyHeaderOutput{})
	pulumi.RegisterOutputType(RegionTargetTcpProxyProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(ReservationAffinityConsumeReservationTypeOutput{})
	pulumi.RegisterOutputType(ReservationAffinityConsumeReservationTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceCommitmentTypeOutput{})
	pulumi.RegisterOutputType(ResourceCommitmentTypePtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyCollocationOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyCollocationPtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyLocalityOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyLocalityPtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyScopeOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyScopePtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyStyleOutput{})
	pulumi.RegisterOutputType(ResourcePolicyGroupPlacementPolicyStylePtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchOutput{})
	pulumi.RegisterOutputType(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnPolicySwitchPtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteOutput{})
	pulumi.RegisterOutputType(ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeletePtrOutput{})
	pulumi.RegisterOutputType(ResourcePolicyWeeklyCycleDayOfWeekDayOutput{})
	pulumi.RegisterOutputType(ResourcePolicyWeeklyCycleDayOfWeekDayPtrOutput{})
	pulumi.RegisterOutputType(RouteIlbRouteBehaviorOnUnhealthyOutput{})
	pulumi.RegisterOutputType(RouteIlbRouteBehaviorOnUnhealthyPtrOutput{})
	pulumi.RegisterOutputType(RouterBgpAdvertiseModeOutput{})
	pulumi.RegisterOutputType(RouterBgpAdvertiseModePtrOutput{})
	pulumi.RegisterOutputType(RouterBgpAdvertisedGroupsItemOutput{})
	pulumi.RegisterOutputType(RouterBgpAdvertisedGroupsItemPtrOutput{})
	pulumi.RegisterOutputType(RouterBgpAdvertisedGroupsItemArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerAdvertiseModeOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerAdvertiseModePtrOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerAdvertisedGroupsItemOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerAdvertisedGroupsItemPtrOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerAdvertisedGroupsItemArrayOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerBfdModeOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerBfdModePtrOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerBfdPacketModeOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerBfdPacketModePtrOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerBfdSessionInitializationModeOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerBfdSessionInitializationModePtrOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerEnableOutput{})
	pulumi.RegisterOutputType(RouterBgpPeerEnablePtrOutput{})
	pulumi.RegisterOutputType(RouterNatEndpointTypesItemOutput{})
	pulumi.RegisterOutputType(RouterNatEndpointTypesItemPtrOutput{})
	pulumi.RegisterOutputType(RouterNatEndpointTypesItemArrayOutput{})
	pulumi.RegisterOutputType(RouterNatLogConfigFilterOutput{})
	pulumi.RegisterOutputType(RouterNatLogConfigFilterPtrOutput{})
	pulumi.RegisterOutputType(RouterNatNatIpAllocateOptionOutput{})
	pulumi.RegisterOutputType(RouterNatNatIpAllocateOptionPtrOutput{})
	pulumi.RegisterOutputType(RouterNatSourceSubnetworkIpRangesToNatOutput{})
	pulumi.RegisterOutputType(RouterNatSourceSubnetworkIpRangesToNatPtrOutput{})
	pulumi.RegisterOutputType(RouterNatSubnetworkToNatSourceIpRangesToNatItemOutput{})
	pulumi.RegisterOutputType(RouterNatSubnetworkToNatSourceIpRangesToNatItemPtrOutput{})
	pulumi.RegisterOutputType(RouterNatSubnetworkToNatSourceIpRangesToNatItemArrayOutput{})
	pulumi.RegisterOutputType(RouterNatTypeOutput{})
	pulumi.RegisterOutputType(RouterNatTypePtrOutput{})
	pulumi.RegisterOutputType(RuleActionOutput{})
	pulumi.RegisterOutputType(RuleActionPtrOutput{})
	pulumi.RegisterOutputType(SSLHealthCheckPortSpecificationOutput{})
	pulumi.RegisterOutputType(SSLHealthCheckPortSpecificationPtrOutput{})
	pulumi.RegisterOutputType(SSLHealthCheckProxyHeaderOutput{})
	pulumi.RegisterOutputType(SSLHealthCheckProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(SchedulingInstanceTerminationActionOutput{})
	pulumi.RegisterOutputType(SchedulingInstanceTerminationActionPtrOutput{})
	pulumi.RegisterOutputType(SchedulingMaintenanceIntervalOutput{})
	pulumi.RegisterOutputType(SchedulingMaintenanceIntervalPtrOutput{})
	pulumi.RegisterOutputType(SchedulingNodeAffinityOperatorOutput{})
	pulumi.RegisterOutputType(SchedulingNodeAffinityOperatorPtrOutput{})
	pulumi.RegisterOutputType(SchedulingOnHostMaintenanceOutput{})
	pulumi.RegisterOutputType(SchedulingOnHostMaintenancePtrOutput{})
	pulumi.RegisterOutputType(SchedulingProvisioningModelOutput{})
	pulumi.RegisterOutputType(SchedulingProvisioningModelPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityOutput{})
	pulumi.RegisterOutputType(SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigRuleVisibilityPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyAdvancedOptionsConfigJsonParsingOutput{})
	pulumi.RegisterOutputType(SecurityPolicyAdvancedOptionsConfigJsonParsingPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyAdvancedOptionsConfigLogLevelOutput{})
	pulumi.RegisterOutputType(SecurityPolicyAdvancedOptionsConfigLogLevelPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyDdosProtectionConfigDdosProtectionOutput{})
	pulumi.RegisterOutputType(SecurityPolicyDdosProtectionConfigDdosProtectionPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleDirectionOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleDirectionPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherVersionedExprOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherVersionedExprPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRedirectOptionsTypeOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRedirectOptionsTypePtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyTypeOutput{})
	pulumi.RegisterOutputType(SecurityPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(ServerBindingTypeOutput{})
	pulumi.RegisterOutputType(ServerBindingTypePtrOutput{})
	pulumi.RegisterOutputType(ServerTlsSettingsTlsModeOutput{})
	pulumi.RegisterOutputType(ServerTlsSettingsTlsModePtrOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConnectionPreferenceOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConnectionPreferencePtrOutput{})
	pulumi.RegisterOutputType(ShareSettingsShareTypeOutput{})
	pulumi.RegisterOutputType(ShareSettingsShareTypePtrOutput{})
	pulumi.RegisterOutputType(SnapshotSnapshotTypeOutput{})
	pulumi.RegisterOutputType(SnapshotSnapshotTypePtrOutput{})
	pulumi.RegisterOutputType(SslCertificateTypeOutput{})
	pulumi.RegisterOutputType(SslCertificateTypePtrOutput{})
	pulumi.RegisterOutputType(SslPolicyMinTlsVersionOutput{})
	pulumi.RegisterOutputType(SslPolicyMinTlsVersionPtrOutput{})
	pulumi.RegisterOutputType(SslPolicyProfileOutput{})
	pulumi.RegisterOutputType(SslPolicyProfilePtrOutput{})
	pulumi.RegisterOutputType(SubnetworkAggregationIntervalOutput{})
	pulumi.RegisterOutputType(SubnetworkAggregationIntervalPtrOutput{})
	pulumi.RegisterOutputType(SubnetworkIpv6AccessTypeOutput{})
	pulumi.RegisterOutputType(SubnetworkIpv6AccessTypePtrOutput{})
	pulumi.RegisterOutputType(SubnetworkLogConfigAggregationIntervalOutput{})
	pulumi.RegisterOutputType(SubnetworkLogConfigAggregationIntervalPtrOutput{})
	pulumi.RegisterOutputType(SubnetworkLogConfigMetadataOutput{})
	pulumi.RegisterOutputType(SubnetworkLogConfigMetadataPtrOutput{})
	pulumi.RegisterOutputType(SubnetworkMetadataOutput{})
	pulumi.RegisterOutputType(SubnetworkMetadataPtrOutput{})
	pulumi.RegisterOutputType(SubnetworkPrivateIpv6GoogleAccessOutput{})
	pulumi.RegisterOutputType(SubnetworkPrivateIpv6GoogleAccessPtrOutput{})
	pulumi.RegisterOutputType(SubnetworkPurposeOutput{})
	pulumi.RegisterOutputType(SubnetworkPurposePtrOutput{})
	pulumi.RegisterOutputType(SubnetworkRoleOutput{})
	pulumi.RegisterOutputType(SubnetworkRolePtrOutput{})
	pulumi.RegisterOutputType(SubnetworkStackTypeOutput{})
	pulumi.RegisterOutputType(SubnetworkStackTypePtrOutput{})
	pulumi.RegisterOutputType(SubsettingPolicyOutput{})
	pulumi.RegisterOutputType(SubsettingPolicyPtrOutput{})
	pulumi.RegisterOutputType(TCPHealthCheckPortSpecificationOutput{})
	pulumi.RegisterOutputType(TCPHealthCheckPortSpecificationPtrOutput{})
	pulumi.RegisterOutputType(TCPHealthCheckProxyHeaderOutput{})
	pulumi.RegisterOutputType(TCPHealthCheckProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(TargetHttpsProxyQuicOverrideOutput{})
	pulumi.RegisterOutputType(TargetHttpsProxyQuicOverridePtrOutput{})
	pulumi.RegisterOutputType(TargetInstanceNatPolicyOutput{})
	pulumi.RegisterOutputType(TargetInstanceNatPolicyPtrOutput{})
	pulumi.RegisterOutputType(TargetPoolSessionAffinityOutput{})
	pulumi.RegisterOutputType(TargetPoolSessionAffinityPtrOutput{})
	pulumi.RegisterOutputType(TargetSslProxyProxyHeaderOutput{})
	pulumi.RegisterOutputType(TargetSslProxyProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(TargetTcpProxyProxyHeaderOutput{})
	pulumi.RegisterOutputType(TargetTcpProxyProxyHeaderPtrOutput{})
	pulumi.RegisterOutputType(TlsCertificateContextCertificateSourceOutput{})
	pulumi.RegisterOutputType(TlsCertificateContextCertificateSourcePtrOutput{})
	pulumi.RegisterOutputType(TlsValidationContextValidationSourceOutput{})
	pulumi.RegisterOutputType(TlsValidationContextValidationSourcePtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayStackTypeOutput{})
	pulumi.RegisterOutputType(VpnGatewayStackTypePtrOutput{})
}
